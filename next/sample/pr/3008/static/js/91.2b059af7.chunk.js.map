{"version":3,"file":"static/js/91.2b059af7.chunk.js","mappings":"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","sources":["../../../packages/mgt-react/src/generated/search-box.ts","../../../packages/mgt-react/src/generated/login.ts","components/SimpleLogin.tsx","hooks/useIsSignedIn.ts","components/ThemeSwitcher.tsx","components/Header.tsx","components/SideNavigation.tsx","services/Navigation.tsx","../../../packages/mgt-components/dist/es6/styles/src/styles/theme-manager.ts","Layout.tsx","App.tsx","AppContext.ts","../../../packages/mgt-components/dist/es6/components/src/components/PersonCardInteraction.ts","../../../packages/mgt-components/dist/es6/components/mgt-file-list/src/components/mgt-file-list/mgt-file-list-css.ts","../../../packages/mgt-components/dist/es6/components/mgt-file-list/src/components/mgt-file-list/strings.ts","../../../packages/mgt-components/dist/es6/components/mgt-file-list/mgt-file-upload/src/components/mgt-file-list/mgt-file-upload/mgt-file-upload-css.ts","../../../packages/mgt-components/dist/es6/components/mgt-file-list/mgt-file-upload/src/components/mgt-file-list/mgt-file-upload/strings.ts","../../../packages/mgt-components/dist/es6/components/mgt-file-list/mgt-file-upload/src/components/mgt-file-list/mgt-file-upload/mgt-file-upload.ts","../../../packages/mgt-components/dist/es6/components/mgt-file-list/src/components/mgt-file-list/mgt-file-list.ts","../../../packages/mgt-components/dist/es6/components/mgt-file/src/components/mgt-file/mgt-file-css.ts","../../../packages/mgt-components/dist/es6/styles/src/styles/fluent-icons.ts","../../../packages/mgt-components/dist/es6/components/mgt-file/src/components/mgt-file/strings.ts","../../../packages/mgt-components/dist/es6/components/mgt-file/src/components/mgt-file/mgt-file.ts","../../../packages/mgt-components/dist/es6/components/mgt-person/src/components/mgt-person/mgt-person-css.ts","../../../packages/mgt-components/dist/es6/components/mgt-person/src/components/mgt-person/mgt-person-types.ts","../../../packages/mgt-components/dist/es6/components/mgt-person/src/components/mgt-person/strings.ts","../../../packages/mgt-components/dist/es6/components/mgt-person/src/components/mgt-person/mgt-person.ts","../../../packages/mgt-components/dist/es6/utils/src/utils/WindowSegmentHelpers.ts","../../../packages/mgt-components/dist/es6/components/sub-components/mgt-flyout/src/components/sub-components/mgt-flyout/mgt-flyout-css.ts","../../../packages/mgt-components/dist/es6/components/sub-components/mgt-flyout/src/components/sub-components/mgt-flyout/mgt-flyout.ts","../../../packages/mgt-components/dist/es6/components/sub-components/mgt-spinner/src/components/sub-components/mgt-spinner/mgt-spinner-css.ts","../../../packages/mgt-components/dist/es6/components/sub-components/mgt-spinner/src/components/sub-components/mgt-spinner/mgt-spinner.ts","../../../packages/mgt-components/dist/es6/graph/src/graph/cacheStores.ts","../../../packages/mgt-components/dist/es6/graph/src/graph/entityType.ts","../../../packages/mgt-components/dist/es6/graph/src/graph/graph.files.ts","../../../packages/mgt-components/dist/es6/graph/src/graph/graph.people.ts","../../../packages/mgt-components/dist/es6/graph/src/graph/graph.photos.ts","../../../packages/mgt-components/dist/es6/graph/src/graph/graph.presence.ts","../../../packages/mgt-components/dist/es6/graph/src/graph/graph.user.ts","../../../packages/mgt-components/dist/es6/graph/src/graph/isGraphError.ts","../../../packages/mgt-components/dist/es6/graph/src/graph/graph.userWithPhoto.ts","../../../packages/mgt-components/dist/es6/graph/src/graph/types.ts","../../../packages/mgt-components/dist/es6/components/mgt-agenda/src/components/mgt-agenda/mgt-agenda-css.ts","../../../packages/mgt-components/dist/es6/components/mgt-agenda/src/components/mgt-agenda/mgt-agenda.graph.ts","../../../packages/mgt-components/dist/es6/components/mgt-people/src/components/mgt-people/mgt-people-css.ts","../../../packages/mgt-components/dist/es6/components/mgt-people/src/components/mgt-people/mgt-people.ts","../../../packages/mgt-components/dist/es6/components/mgt-agenda/src/components/mgt-agenda/mgt-agenda.ts","../../../packages/mgt-components/dist/es6/components/mgt-picker/src/components/mgt-picker/strings.ts","../../../packages/mgt-components/dist/es6/components/mgt-get/src/components/mgt-get/mgt-get.ts","../../../packages/mgt-components/dist/es6/components/mgt-picker/src/components/mgt-picker/mgt-picker-css.ts","../../../packages/mgt-components/dist/es6/components/mgt-picker/src/components/mgt-picker/mgt-picker.ts","../../../packages/mgt-components/dist/es6/components/mgt-taxonomy-picker/src/components/mgt-taxonomy-picker/strings.ts","../../../packages/mgt-components/dist/es6/components/mgt-taxonomy-picker/src/components/mgt-taxonomy-picker/mgt-taxonomy-picker-css.ts","../../../packages/mgt-components/dist/es6/components/mgt-taxonomy-picker/src/components/mgt-taxonomy-picker/mgt-taxonomy-picker.ts","../../../packages/mgt-components/dist/es6/components/mgt-login/src/components/mgt-login/mgt-login-css.ts","../../../packages/mgt-components/dist/es6/components/mgt-login/src/components/mgt-login/strings.ts","../../../packages/mgt-components/dist/es6/components/mgt-login/src/components/mgt-login/mgt-login.ts","../../../packages/mgt-components/dist/es6/components/mgt-teams-channel-picker/src/components/mgt-teams-channel-picker/mgt-teams-channel-picker-css.ts","../../../packages/mgt-components/dist/es6/components/mgt-teams-channel-picker/src/components/mgt-teams-channel-picker/mgt-teams-channel-picker.graph.ts","../../../packages/mgt-components/dist/es6/components/mgt-teams-channel-picker/src/components/mgt-teams-channel-picker/strings.ts","../../../packages/mgt-components/dist/es6/components/mgt-teams-channel-picker/src/components/mgt-teams-channel-picker/mgt-teams-channel-picker.ts","../../../packages/mgt-components/dist/es6/components/mgt-todo/src/components/mgt-todo/graph.todo.ts","../../../packages/mgt-components/dist/es6/components/mgt-todo/src/components/mgt-todo/mgt-todo-css.ts","../../../packages/mgt-components/dist/es6/components/mgt-todo/src/components/mgt-todo/strings.ts","../../../packages/mgt-components/dist/es6/components/mgt-tasks-base/src/components/mgt-tasks-base/strings.ts","../../../packages/mgt-components/dist/es6/components/mgt-tasks-base/src/components/mgt-tasks-base/mgt-tasks-base.ts","../../../packages/mgt-components/dist/es6/components/mgt-todo/src/components/mgt-todo/mgt-todo.ts","../../../packages/mgt-components/dist/es6/utils/src/utils/isDark.ts","../../../packages/mgt-components/dist/es6/components/mgt-search-box/src/components/mgt-search-box/strings.ts","../../../packages/mgt-components/dist/es6/components/mgt-search-box/src/components/mgt-search-box/mgt-search-box-css.ts","../../../packages/mgt-components/dist/es6/components/mgt-search-box/src/components/mgt-search-box/mgt-search-box.ts","../../../packages/mgt-element/dist/es6/src/BetaGraph.ts","../../../packages/mgt-components/dist/es6/components/mgt-search-results/src/components/mgt-search-results/strings.ts","../../../packages/mgt-components/dist/es6/components/mgt-search-results/src/components/mgt-search-results/mgt-search-results-css.ts","../../../packages/mgt-components/dist/es6/components/mgt-search-results/src/components/mgt-search-results/mgt-search-results.ts","../../../packages/mgt-components/dist/es6/utils/src/utils/FluentComponents.ts","../../../packages/mgt-components/dist/es6/utils/src/utils/SvgHelper.ts","../../../packages/mgt-components/dist/es6/utils/src/utils/Utils.ts","../../../packages/mgt-element/dist/es6/components/src/components/baseComponent.ts","../../../packages/mgt-element/dist/es6/components/src/components/baseTaskComponent.ts","../../../packages/mgt-element/dist/es6/utils/src/utils/TemplateHelper.ts","../../../packages/mgt-element/dist/es6/components/src/components/templatedTaskComponent.ts","../../../packages/mgt-element/dist/es6/utils/src/utils/dbListKey.ts","../../../packages/mgt-element/dist/es6/utils/src/utils/CacheStore.ts","../../../packages/mgt-element/dist/es6/utils/src/utils/CacheService.ts","../../../packages/mgt-element/dist/es6/utils/src/utils/GraphPageIterator.ts","../../../packages/mgt-element/dist/es6/utils/src/utils/LocalizationHelper.ts","../../../packages/mgt-element/dist/es6/utils/src/utils/equals.ts","../../../packages/mgt-element/dist/es6/utils/src/utils/mgtHtml.ts","../../../packages/mgt-element/dist/es6/utils/src/utils/registerComponent.ts","../../../packages/mgt-react/src/Mgt.ts","../../../packages/mgt-react/src/generated/person.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/consistent-type-definitions */\nimport { registerMgtSearchBoxComponent } from '@microsoft/mgt-components';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraph from '@microsoft/microsoft-graph-types';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraphBeta from '@microsoft/microsoft-graph-types-beta';\nimport {wrapMgt} from '../Mgt';\n\nexport type SearchBoxProps = {\n\tplaceholder?: string;\n\tsearchTerm?: string;\n\tdebounceDelay?: number;\n\tsearchTermChanged?: (e: CustomEvent<string>) => void;\n}\n\nexport const SearchBox = wrapMgt<SearchBoxProps>('search-box', registerMgtSearchBoxComponent);\n\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/consistent-type-definitions */\nimport { IDynamicPerson,LoginViewType } from '@microsoft/mgt-components';\nimport { registerMgtLoginComponent } from '@microsoft/mgt-components';\nimport { TemplateContext,TemplateRenderedData } from '@microsoft/mgt-element';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraph from '@microsoft/microsoft-graph-types';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraphBeta from '@microsoft/microsoft-graph-types-beta';\nimport {wrapMgt} from '../Mgt';\n\nexport type LoginProps = {\n\tuserDetails?: IDynamicPerson;\n\tshowPresence?: boolean;\n\tloginView?: LoginViewType;\n\ttemplateContext?: TemplateContext;\n\tloginInitiated?: (e: CustomEvent<undefined>) => void;\n\tloginCompleted?: (e: CustomEvent<undefined>) => void;\n\tloginFailed?: (e: CustomEvent<undefined>) => void;\n\tlogoutInitiated?: (e: CustomEvent<undefined>) => void;\n\tlogoutCompleted?: (e: CustomEvent<undefined>) => void;\n\ttemplateRendered?: (e: CustomEvent<TemplateRenderedData>) => void;\n}\n\nexport const Login = wrapMgt<LoginProps>('login', registerMgtLoginComponent);\n\n","import * as React from 'react';\nimport { Person } from '@microsoft/mgt-react';\nimport { MgtTemplateProps } from '@microsoft/mgt-react';\nimport { makeStyles } from '@fluentui/react-components';\n\nconst useStyles = makeStyles({\n  simpleLogin: {\n    '--person-avatar-size-small': '32px'\n  }\n});\nexport const SimpleLogin: React.FunctionComponent<MgtTemplateProps> = (props: MgtTemplateProps) => {\n  const styles = useStyles();\n  const { personDetails } = props.dataContext;\n  return <Person userId={personDetails.id} avatarSize={'auto'} className={styles.simpleLogin} />;\n};\n","import { useState, useEffect } from 'react';\nimport { Providers, ProvidersChangedState, ProviderState } from '@microsoft/mgt-element';\n\nexport function useIsSignedIn(): [boolean] {\n  const [isSignedIn, setIsSignedIn] = useState(false);\n\n  useEffect(() => {\n    const updateState = (stateEvent: ProvidersChangedState) => {\n      if (stateEvent === ProvidersChangedState.ProviderStateChanged) {\n        setIsSignedIn(Providers.globalProvider.state === ProviderState.SignedIn);\n      }\n    };\n\n    setIsSignedIn(Providers.globalProvider.state === ProviderState.SignedIn);\n    Providers.onProviderUpdated(updateState);\n\n    return () => {\n      Providers.removeProviderUpdatedListener(updateState);\n    };\n  }, []);\n\n  return [isSignedIn];\n}\n","import * as React from 'react';\nimport {\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  MenuPopover,\n  MenuTrigger,\n  webDarkTheme,\n  webLightTheme,\n  teamsLightTheme,\n  teamsDarkTheme\n} from '@fluentui/react-components';\nimport { BrightnessHighRegular, WeatherMoonFilled, PeopleTeamRegular, PeopleTeamFilled } from '@fluentui/react-icons';\nimport { useAppContext } from '../AppContext';\n\nconst availableThemes = [\n  {\n    key: 'light',\n    displayName: 'Web Light',\n    icon: <BrightnessHighRegular />\n  },\n  {\n    key: 'dark',\n    displayName: 'Web Dark',\n    icon: <WeatherMoonFilled />\n  },\n  {\n    key: 'teamsLight',\n    displayName: 'Teams Light',\n    icon: <PeopleTeamRegular />\n  },\n  {\n    key: 'teamsDark',\n    displayName: 'Teams Dark',\n    icon: <PeopleTeamFilled />\n  }\n];\n\nexport const ThemeSwitcher = () => {\n  const [selectedTheme, setSelectedTheme] = React.useState<any>(availableThemes[0]);\n  const appContext = useAppContext();\n\n  const onThemeChanged = (theme: any) => {\n    setSelectedTheme(theme);\n    // Applies the theme to the Fluent UI components\n    switch (theme.key) {\n      case 'teamsLight':\n        appContext.setState({\n          ...appContext.state,\n          theme: { key: 'light', fluentTheme: teamsLightTheme }\n        });\n        break;\n      case 'teamsDark':\n        appContext.setState({\n          ...appContext.state,\n          theme: { key: 'dark', fluentTheme: teamsDarkTheme }\n        });\n        break;\n      case 'light':\n        appContext.setState({\n          ...appContext.state,\n          theme: { key: theme.key, fluentTheme: webLightTheme }\n        });\n        break;\n      case 'dark':\n        appContext.setState({\n          ...appContext.state,\n          theme: { key: theme.key, fluentTheme: webDarkTheme }\n        });\n        break;\n    }\n  };\n\n  return (\n    <Menu>\n      <MenuTrigger>\n        <MenuButton icon={selectedTheme.icon}>{selectedTheme.displayName}</MenuButton>\n      </MenuTrigger>\n\n      <MenuPopover>\n        <MenuList>\n          {availableThemes.map(theme => (\n            <MenuItem icon={theme.icon} key={theme.key} onClick={() => onThemeChanged(theme)}>\n              {theme.displayName}\n            </MenuItem>\n          ))}\n        </MenuList>\n      </MenuPopover>\n    </Menu>\n  );\n};\n","import * as React from 'react';\nimport { Login, SearchBox } from '@microsoft/mgt-react';\nimport { PACKAGE_VERSION } from '@microsoft/mgt-element';\nimport { InfoButton } from '@fluentui/react-components/unstable';\nimport { SimpleLogin } from './SimpleLogin';\nimport { useIsSignedIn } from '../hooks/useIsSignedIn';\nimport { useNavigate } from 'react-router-dom';\nimport { ThemeSwitcher } from './ThemeSwitcher';\nimport { useAppContext } from '../AppContext';\nimport { Label, makeStyles, mergeClasses, shorthands, tokens } from '@fluentui/react-components';\nimport { GridDotsRegular } from '@fluentui/react-icons';\nimport { useLocation } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n  root: {\n    '--login-signed-in-hover-background': 'transparent'\n  },\n\n  header: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'nowrap',\n    width: '100%',\n    height: 'auto',\n    boxSizing: 'border-box',\n    alignItems: 'center',\n    backgroundColor: tokens.colorNeutralForeground1Static,\n    zIndex: '1',\n    minHeight: '50px'\n  },\n\n  name: {\n    color: tokens.colorNeutralForegroundOnBrand,\n    fontWeight: tokens.fontWeightSemibold,\n    fontSize: tokens.fontSizeBase400,\n    paddingLeft: '12px'\n  },\n\n  wafffleIcon: {\n    fontSize: tokens.fontSizeBase600,\n    paddingTop: '5px',\n    color: tokens.colorNeutralForegroundOnBrand\n  },\n\n  waffle: {\n    display: 'flex',\n    width: 'auto',\n    height: 'auto',\n    boxSizing: 'border-box',\n    flexGrow: '1',\n    alignItems: 'center',\n    minWidth: 'max-content',\n    paddingLeft: '8px'\n  },\n\n  waffleLogo: {\n    ...shorthands.flex('none')\n  },\n\n  waffleTitle: {\n    ...shorthands.flex('auto'),\n    display: 'flex',\n    alignItems: 'center'\n  },\n\n  search: {\n    display: 'flex',\n    width: '100%',\n    height: 'auto',\n    boxSizing: 'border-box',\n    flexGrow: '1',\n    justifyContent: 'center'\n  },\n\n  searchBox: {\n    minWidth: '320px',\n    maxWidth: '468px',\n    paddingRight: '1em',\n    paddingLeft: '1em',\n    width: '100%'\n  },\n\n  infoIcon: {\n    color: tokens.colorNeutralForegroundOnBrand,\n    ':hover': {\n      color: tokens.colorNeutralForegroundOnBrand,\n      ':active': {\n        color: tokens.colorNeutralForegroundOnBrand\n      }\n    }\n  },\n\n  login: {\n    display: 'flex',\n    width: 'auto',\n    height: 'auto',\n    boxSizing: 'border-box',\n    flexGrow: '1',\n    alignItems: 'center',\n    minWidth: 'max-content'\n  },\n\n  signedOut: {\n    ...shorthands.padding('4px', '8px')\n  },\n\n  signedIn: {\n    ...shorthands.padding('0px', '10px')\n  }\n});\n\nconst HeaderComponent: React.FunctionComponent = () => {\n  const styles = useStyles();\n  const [isSignedIn] = useIsSignedIn();\n  const appContext = useAppContext();\n  const setAppContext = appContext.setState;\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const onSearchTermChanged = (e: CustomEvent) => {\n    if (!(e.detail === '' && appContext.state.searchTerm === '*') && e.detail !== appContext.state.searchTerm) {\n      appContext.setState({ ...appContext.state, searchTerm: e.detail === '' ? '*' : e.detail });\n\n      if (e.detail === '') {\n        navigate('/search');\n      } else {\n        navigate('/search?q=' + e.detail);\n      }\n    }\n  };\n\n  React.useLayoutEffect(() => {\n    if (location.pathname === '/search') {\n      const searchTerm = decodeURI(location.search.replace('?q=', ''));\n      setAppContext(previous => {\n        return { ...previous, searchTerm: searchTerm === '' ? '*' : searchTerm };\n      });\n    }\n  }, [location, setAppContext]);\n\n  return (\n    <div className={styles.header}>\n      <div className={styles.waffle}>\n        <div className={styles.waffleLogo}>\n          <a href={'https://www.office.com/apps?auth=2'} target=\"_blank\" rel=\"noreferrer\">\n            <GridDotsRegular className={styles.wafffleIcon} />\n          </a>\n        </div>\n\n        <div className={styles.waffleTitle}>\n          <Label className={styles.name}>{process.env.REACT_APP_SITE_NAME} </Label>\n          <InfoButton\n            className={styles.infoIcon}\n            size=\"medium\"\n            info={<>Using the Graph Toolkit v{PACKAGE_VERSION}</>}\n          />\n        </div>\n      </div>\n      <div className={styles.search}>\n        <SearchBox\n          className={styles.searchBox}\n          searchTermChanged={onSearchTermChanged}\n          searchTerm={appContext.state.searchTerm !== '*' ? appContext.state.searchTerm : ''}\n        ></SearchBox>\n      </div>\n\n      <div className={styles.login}>\n        <ThemeSwitcher />\n        <div className={mergeClasses(!isSignedIn ? styles.signedOut : styles.signedIn, styles.root)}>\n          <Login>\n            <SimpleLogin template=\"signed-in-button-content\" />\n          </Login>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport const Header = React.memo(HeaderComponent);\n","import { Tab, TabList, makeStyles, mergeClasses, tokens } from '@fluentui/react-components';\nimport * as React from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { NavigationRegular } from '@fluentui/react-icons';\nimport { useAppContext } from '../AppContext';\nimport { NavigationItem } from '../models/NavigationItem';\n\nexport interface ISideNavigationProps {\n  items: any[];\n}\n\nconst useStyles = makeStyles({\n  tab: {\n    paddingTop: '12px',\n    paddingBottom: '12px'\n  },\n  activeTab: {\n    backgroundColor: tokens.colorSubtleBackgroundHover\n  }\n});\n\nexport const SideNavigation: React.FunctionComponent<ISideNavigationProps> = props => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { items } = props;\n  const [selectedTab, setSelectedTab] = React.useState<any>('');\n  const [isMinimized, setIsMinimized] = React.useState<boolean>(false);\n  const styles = useStyles();\n  const appContext = useAppContext();\n\n  const performNavigation = (event: any, data: any) => {\n    if (data.value === 'navigation') {\n      const futureIsMinimized = !isMinimized;\n      setIsMinimized(futureIsMinimized);\n      appContext.setState({\n        ...appContext.state,\n        sidebar: { ...appContext.state.sidebar, isMinimized: futureIsMinimized }\n      });\n    } else {\n      navigate(data.value, { relative: 'route' });\n    }\n  };\n\n  React.useLayoutEffect(() => {\n    setSelectedTab(location.pathname.substring(1));\n  }, [location]);\n\n  return (\n    <>\n      <TabList size=\"medium\" appearance=\"subtle\" vertical onTabSelect={performNavigation} selectedValue={selectedTab}>\n        <Tab icon={<NavigationRegular />} value={'navigation'} className={styles.tab}></Tab>\n        {items.map((item: NavigationItem, index) => (\n          <Tab\n            icon={item.icon}\n            value={item.url}\n            key={index}\n            className={mergeClasses(styles.tab, item.url === selectedTab && styles.activeTab)}\n          >\n            {!isMinimized ? item.name : ''}\n          </Tab>\n        ))}\n      </TabList>\n    </>\n  );\n};\n","import { lazy, Suspense } from 'react';\nimport { NavigationItem } from '../models/NavigationItem';\nimport {\n  HomeRegular,\n  SearchRegular,\n  TextBulletListSquareRegular,\n  CalendarMailRegular,\n  DocumentRegular,\n  TagMultipleRegular\n} from '@fluentui/react-icons';\nconst DashboardPage = lazy(() => import('../pages/DashboardPage'));\nconst OutlookPage = lazy(() => import('../pages/OutlookPage'));\nconst SearchPage = lazy(() => import('../pages/SearchPage'));\nconst HomePage = lazy(() => import('../pages/HomePage'));\nconst FilesPage = lazy(() => import('../pages/FilesPage'));\nconst TaxonomyPage = lazy(() => import('../pages/TaxonomyPage'));\n\nexport const getNavigation = (isSignedIn: boolean) => {\n  let navItems: NavigationItem[] = [];\n\n  navItems.push({\n    name: 'Home',\n    url: '',\n    icon: <HomeRegular />,\n    key: 'home',\n    requiresLogin: false,\n    component: (\n      <Suspense fallback=\"Loading...\">\n        <HomePage />\n      </Suspense>\n    ),\n    exact: true\n  });\n\n  if (isSignedIn) {\n    navItems.push({\n      name: 'Dashboard',\n      url: 'dashboard',\n      icon: <TextBulletListSquareRegular />,\n      key: 'dashboard',\n      requiresLogin: true,\n      component: (\n        <Suspense fallback=\"Loading...\">\n          <DashboardPage />\n        </Suspense>\n      ),\n      exact: true\n    });\n\n    navItems.push({\n      name: 'Mail and Calendar',\n      url: 'outlook',\n      icon: <CalendarMailRegular />,\n      key: 'outlook',\n      requiresLogin: true,\n      component: (\n        <Suspense fallback=\"Loading...\">\n          <OutlookPage />\n        </Suspense>\n      ),\n      exact: true\n    });\n\n    navItems.push({\n      name: 'Files',\n      url: 'files',\n      icon: <DocumentRegular />,\n      key: 'files',\n      requiresLogin: true,\n      component: (\n        <Suspense fallback=\"Loading...\">\n          <FilesPage />\n        </Suspense>\n      ),\n      exact: true\n    });\n\n    navItems.push({\n      name: 'Taxonomy',\n      url: 'taxonomy',\n      icon: <TagMultipleRegular />,\n      key: 'files',\n      requiresLogin: true,\n      component: (\n        <Suspense fallback=\"Loading...\">\n          <TaxonomyPage />\n        </Suspense>\n      ),\n      exact: true\n    });\n\n    navItems.push({\n      name: 'Search',\n      url: 'search',\n      pattern: '/search/:query',\n      icon: <SearchRegular />,\n      key: 'search',\n      requiresLogin: true,\n      component: (\n        <Suspense fallback=\"Loading...\">\n          <SearchPage />\n        </Suspense>\n      ),\n      exact: false\n    });\n  }\n  return navItems;\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport {\n  accentBaseColor,\n  accentFillActive,\n  accentFillFocus,\n  accentFillHover,\n  accentFillRest,\n  accentForegroundActive,\n  accentForegroundFocus,\n  accentForegroundHover,\n  accentForegroundRest,\n  accentStrokeControlActive,\n  accentStrokeControlFocus,\n  accentStrokeControlHover,\n  accentStrokeControlRest,\n  baseLayerLuminance,\n  foregroundOnAccentActive,\n  foregroundOnAccentFocus,\n  foregroundOnAccentHover,\n  foregroundOnAccentRest,\n  neutralBaseColor,\n  StandardLuminance,\n  SwatchRGB\n} from '@fluentui/web-components';\nimport { DesignToken } from '@microsoft/fast-foundation';\n// @microsoft/fast-colors is a transitive dependency of @fluentui/web-components, no need to explicitly add it to package.json\nimport { parseColorHexRGB } from '@microsoft/fast-colors';\n\n/**\n * Available predefined themes\n */\ntype Theme = 'light' | 'dark' | 'default' | 'contrast';\n\nconst secondaryTextDefault = '#717171';\nconst secondaryTextColor = DesignToken.create<string>('secondary-text-color').withDefault(secondaryTextDefault);\nconst secondaryTextHoverDefault = '#1a1a1a';\nconst secondaryTextHoverColor =\n  DesignToken.create<string>('secondary-text-hover-color').withDefault(secondaryTextHoverDefault);\n\n/**\n * Helper function to apply fluent ui theme to an element\n *\n * @export\n * @param {Theme} theme - theme name, if an unknown theme is provided, the light theme will be applied\n * @param {HTMLElement} [element=document.body]\n */\nexport const applyTheme = (theme: Theme, element: HTMLElement = document.body): void => {\n  const settings = getThemeSettings(theme);\n  applyColorScheme(settings, element);\n};\n\n/**\n * Simple data holder for theme settings\n */\ninterface ColorScheme {\n  /**\n   * Hex color string for accent base color\n   *\n   * @type {string}\n   */\n  accentBaseColor: string;\n  /**\n   * Hex color string for neutral base color\n   *\n   * @type {string}\n   */\n  neutralBaseColor: string;\n  /**\n   * Base layer luminance for the theme\n   * in the range of 0 to 1\n   *\n   * @type {number}\n   */\n  baseLayerLuminance: number;\n\n  /**\n   * Optional function to override design tokens\n   */\n  designTokenOverrides?: (element: HTMLElement) => void;\n}\n\n/**\n * Helper function to apply fluent ui color scheme to an element\n *\n * @param {ColorScheme} settings\n * @param {HTMLElement} [element=document.body]\n */\nconst applyColorScheme = (settings: ColorScheme, element: HTMLElement = document.body): void => {\n  accentBaseColor.setValueFor(element, SwatchRGB.from(parseColorHexRGB(settings.accentBaseColor)));\n  neutralBaseColor.setValueFor(element, SwatchRGB.from(parseColorHexRGB(settings.neutralBaseColor)));\n  baseLayerLuminance.setValueFor(element, settings.baseLayerLuminance);\n  settings.designTokenOverrides?.(element);\n};\n\n/**\n * Helper function to translate theme name to theme settings\n *\n * @param {Theme} theme\n * @return {*}  {ThemeSettings}\n */\nconst getThemeSettings = (theme: Theme): ColorScheme => {\n  switch (theme) {\n    case 'contrast':\n      return {\n        accentBaseColor: '#7f85f5',\n        neutralBaseColor: '#adadad',\n        baseLayerLuminance: StandardLuminance.DarkMode\n      };\n    case 'default': // this is the Teams light theme\n      return {\n        accentBaseColor: '#5b5fc7',\n        neutralBaseColor: '#616161',\n        baseLayerLuminance: StandardLuminance.LightMode\n      };\n    case 'dark': // Both MGT default dark and Teams Dark theme\n      return {\n        accentBaseColor: '#479ef5',\n        neutralBaseColor: '#adadad',\n        baseLayerLuminance: StandardLuminance.DarkMode,\n        designTokenOverrides: element => {\n          accentFillRest.setValueFor(element, SwatchRGB.from(parseColorHexRGB('#115ea3')));\n          accentFillHover.setValueFor(element, SwatchRGB.from(parseColorHexRGB('#0f6cbd')));\n          accentFillActive.setValueFor(element, SwatchRGB.from(parseColorHexRGB('#0c3b5e')));\n          accentFillFocus.setValueFor(element, SwatchRGB.from(parseColorHexRGB('#0f548c')));\n          accentForegroundRest.setValueFor(element, SwatchRGB.from(parseColorHexRGB('#479EF5')));\n          accentForegroundHover.setValueFor(element, SwatchRGB.from(parseColorHexRGB('#62abf5')));\n          accentForegroundActive.setValueFor(element, SwatchRGB.from(parseColorHexRGB('#2886de')));\n          accentForegroundFocus.setValueFor(element, SwatchRGB.from(parseColorHexRGB('#479ef5')));\n          accentStrokeControlRest.setValueFor(element, SwatchRGB.from(parseColorHexRGB('#115ea3')));\n          accentStrokeControlHover.setValueFor(element, SwatchRGB.from(parseColorHexRGB('#0f6cbd')));\n          accentStrokeControlActive.setValueFor(element, SwatchRGB.from(parseColorHexRGB('#0c3b5e')));\n          accentStrokeControlFocus.setValueFor(element, SwatchRGB.from(parseColorHexRGB('#0f548c')));\n          foregroundOnAccentActive.setValueFor(element, SwatchRGB.from(parseColorHexRGB('#ffffff')));\n          foregroundOnAccentRest.setValueFor(element, SwatchRGB.from(parseColorHexRGB('#ffffff')));\n          foregroundOnAccentHover.setValueFor(element, SwatchRGB.from(parseColorHexRGB('#ffffff')));\n          foregroundOnAccentFocus.setValueFor(element, SwatchRGB.from(parseColorHexRGB('#ffffff')));\n          secondaryTextColor.setValueFor(element, '#8e8e8e');\n          secondaryTextHoverColor.setValueFor(element, '#ffffff');\n        }\n      };\n    case 'light':\n    default:\n      return {\n        accentBaseColor: '#0f6cbd',\n        neutralBaseColor: '#616161',\n        baseLayerLuminance: StandardLuminance.LightMode,\n        designTokenOverrides: element => {\n          secondaryTextColor.setValueFor(element, secondaryTextDefault);\n          secondaryTextHoverColor.setValueFor(element, secondaryTextHoverDefault);\n        }\n      };\n  }\n};\n","import React, { Suspense, lazy } from 'react';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport { Header } from './components/Header';\nimport { SideNavigation } from './components/SideNavigation';\nimport { useIsSignedIn } from './hooks/useIsSignedIn';\nimport { NavigationItem } from './models/NavigationItem';\nimport { getNavigation } from './services/Navigation';\nimport { FluentProvider, makeStyles, mergeClasses, shorthands } from '@fluentui/react-components';\nimport { tokens } from '@fluentui/react-theme';\nimport { applyTheme } from '@microsoft/mgt-react';\nimport { useAppContext } from './AppContext';\nconst HomePage = lazy(() => import('./pages/HomePage'));\n\nconst useStyles = makeStyles({\n  sidebar: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'nowrap',\n    height: '100%',\n    minWidth: '295px',\n    boxSizing: 'border-box',\n    backgroundColor: tokens.colorNeutralBackground6\n  },\n  main: {\n    backgroundColor: tokens.colorNeutralBackground1,\n    display: 'flex',\n    flexDirection: 'row',\n    width: 'auto',\n    height: 'calc(100vh - 50px)',\n    boxSizing: 'border-box'\n  },\n  minimized: {\n    minWidth: 'auto'\n  },\n  page: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'nowrap'\n  },\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'nowrap',\n    width: '100%',\n    height: 'auto',\n    boxSizing: 'border-box',\n    ...shorthands.margin('10px'),\n    ...shorthands.overflow('auto')\n  }\n});\n\nexport const Layout: React.FunctionComponent = theme => {\n  const styles = useStyles();\n  const [navigationItems, setNavigationItems] = React.useState<NavigationItem[]>([]);\n  const [isSignedIn] = useIsSignedIn();\n  const appContext = useAppContext();\n\n  React.useEffect(() => {\n    setNavigationItems(getNavigation(isSignedIn));\n  }, [isSignedIn]);\n\n  React.useEffect(() => {\n    // Applies the theme to the MGT components\n    applyTheme(appContext.state.theme.key as any);\n  }, [appContext]);\n\n  return (\n    <FluentProvider theme={appContext.state.theme.fluentTheme}>\n      <div className={styles.page}>\n        <BrowserRouter basename={process.env.REACT_APP_BASE_DIR ?? '/'}>\n          <Header></Header>\n          <div className={styles.main}>\n            <div\n              className={mergeClasses(\n                styles.sidebar,\n                `${appContext.state.sidebar.isMinimized ? styles.minimized : ''}`\n              )}\n            >\n              <SideNavigation items={navigationItems}></SideNavigation>\n            </div>\n            <div className={styles.content}>\n              <Routes>\n                {navigationItems.map(\n                  item =>\n                    ((item.requiresLogin && isSignedIn) || !item.requiresLogin) && (\n                      <Route path={item.url} element={item.component} key={item.key} />\n                    )\n                )}\n                <Route\n                  path=\"*\"\n                  element={\n                    <Suspense fallback=\"Loading...\">\n                      <HomePage />\n                    </Suspense>\n                  }\n                />\n              </Routes>\n            </div>\n          </div>\n        </BrowserRouter>\n      </div>\n    </FluentProvider>\n  );\n};\n","import React from 'react';\nimport { AppContext } from './AppContext';\nimport { Layout } from './Layout';\nimport { webLightTheme } from '@fluentui/react-components';\n\nconst App: React.FunctionComponent = theme => {\n  const [state, setState] = React.useState({\n    searchTerm: '*',\n    sidebar: {\n      isMinimized: false\n    },\n    theme: { key: 'light', fluentTheme: webLightTheme }\n  });\n\n  return (\n    <AppContext.Provider value={{ state, setState }}>\n      <Layout />\n    </AppContext.Provider>\n  );\n};\n\nexport default App;\n","import { Theme } from '@fluentui/react-components';\nimport React from 'react';\nimport { Dispatch, SetStateAction } from 'react';\n\ntype AppContextState = {\n  searchTerm: string;\n  sidebar: { isMinimized: boolean };\n  theme: { key: string; fluentTheme: Theme };\n};\n\ntype AppContextValue = {\n  state: AppContextState;\n  setState: Dispatch<SetStateAction<AppContextState>>;\n};\n\nexport const AppContext = React.createContext<AppContextValue | undefined>(undefined);\n\nexport function useAppContext() {\n  const value = React.useContext(AppContext);\n  if (value === undefined) throw new Error('Expected an AppProvider somewhere in the react tree to set context value');\n  return value; // now has type AppContextValue\n  // or even provide domain methods for better encapsulation\n}\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nconst interactions = ['none', 'hover', 'click'] as const;\n\n/**\n * Defines how a person card is shown when a user interacts with\n * a person component\n *\n */\nexport type PersonCardInteraction = (typeof interactions)[number];\n\nexport const isPersonCardInteraction = (value: unknown): value is PersonCardInteraction =>\n  typeof value === 'string' && interactions.includes(value as PersonCardInteraction);\n\nexport const personCardConverter = (\n  value: string,\n  defaultValue: PersonCardInteraction = 'none'\n): PersonCardInteraction => {\n  if (isPersonCardInteraction(value)) {\n    return value;\n  }\n  return defaultValue;\n};\n","// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\n\nimport { css, CSSResult } from 'lit';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles: CSSResult[] = [\n  css`\n:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host{font-size:var(--default-font-size)}:host .title{font-size:14px;font-weight:600;padding:20px 0 12px;line-height:19px}:host .file-list-wrapper{background-color:var(--file-list-background-color,var(--neutral-layer-floating));border:var(--file-list-border,none);position:relative;display:flex;flex-direction:column;border-radius:8px}:host .file-list-wrapper .title{font-size:14px;font-weight:600;margin:0 20px -15px}:host .file-list-wrapper .file-list{display:flex;padding:var(--file-list-padding,0);margin:var(--file-list-margin,0);flex-direction:column;list-style:none}:host .file-list-wrapper .file-list .file-item{cursor:pointer;border-radius:var(--file-border-radius)}:host .file-list-wrapper .file-list .file-item:focus,:host .file-list-wrapper .file-list .file-item:focus-within{--file-background-color:var(--file-background-color-focus, var(--neutral-layer-2))}:host .file-list-wrapper .file-list .file-item.selected{--file-background-color:var(--file-background-color-active, var(--neutral-layer-3))}:host .file-list-wrapper .file-list .file-item .mgt-file-item{--file-padding:10px 20px 10px 20px;--file-padding-inline-start:24px;--file-border-radius:2px;--file-background-color:var(--file-item-background-color, var(--neutral-layer-1))}:host .file-list-wrapper .progress-ring{margin:4px auto;width:var(--progress-ring-size,24px);height:var(--progress-ring-size,24px)}:host .file-list-wrapper .show-more{text-align:center;font-size:var(--show-more-button-font-size,12px);padding:var(--show-more-button-padding,0);border-radius:0 0 var(--show-more-button-border-bottom-right-radius,var(--file-list-border-radius,8px)) var(--show-more-button-border-bottom-left-radius,var(--file-list-border-radius,8px));background-color:var(--show-more-button-background-color,var(--neutral-stroke-divider-rest))}:host .file-list-wrapper .show-more:hover{background-color:var(--show-more-button-background-color-hover,var(--neutral-fill-input-alt-active))}:host .file-list-wrapper .show-more-text{font-size:var(--show-more-button-font-size,12px)}\n`];","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nexport const strings = {\n  showMoreSubtitle: 'Show more items',\n  filesSectionTitle: 'Files',\n  sharedTextSubtitle: 'Shared'\n};\n","// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\n\nimport { css, CSSResult } from 'lit';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles: CSSResult[] = [\n  css`\n:host .file-upload-area-button{width:auto;display:flex;align-items:end;justify-content:end;margin-inline-end:36px;margin-top:30px}:host fluent-button .upload-icon path{fill:var(--file-upload-button-text-color,var(--foreground-on-accent-rest))}:host fluent-button.file-upload-button::part(control){border:var(--file-upload-button-border,none);background:var(--file-upload-button-background-color,var(--accent-fill-rest))}:host fluent-button.file-upload-button::part(control):hover{background:var(--file-upload-button-background-color-hover,var(--accent-fill-hover))}:host fluent-button.file-upload-button .upload-text{color:var(--file-upload-button-text-color,var(--foreground-on-accent-rest));font-weight:400;line-height:20px}:host input{display:none}:host fluent-progress.file-upload-bar{width:180px;margin-top:10px}:host fluent-dialog::part(overlay){opacity:.5}:host fluent-dialog::part(control){--dialog-width:$file-upload-dialog-width;--dialog-height:$file-upload-dialog-height;padding:var(--file-upload-dialog-padding,24px);border:var(--file-upload-dialog-border,1px solid var(--neutral-fill-rest))}:host fluent-dialog .file-upload-dialog-ok{background:var(--file-upload-dialog-keep-both-button-background-color,var(--accent-fill-rest));border:var(--file-upload-dialog-keep-both-button-border,none);color:var(--file-upload-dialog-keep-both-button-text-color,var(--foreground-on-accent-rest))}:host fluent-dialog .file-upload-dialog-ok:hover{background:var(--file-upload-dialog-keep-both-button-background-color-hover,var(--accent-fill-hover))}:host fluent-dialog .file-upload-dialog-cancel{background:var(--file-upload-dialog-replace-button-background-color,var(--accent-fill-rest));border:var(--file-upload-dialog-replace-button-border,1px solid var(--neutral-foreground-rest));color:var(--file-upload-dialog-replace-button-text-color,var(--neutral-foreground-rest))}:host fluent-dialog .file-upload-dialog-cancel:hover{background:var(--file-upload-dialog-replace-button-background-color-hover,var(--accent-fill-hover))}:host fluent-checkbox{margin-top:12px}:host fluent-checkbox .file-upload-dialog-check{color:var(--file-upload-dialog-text-color,--foreground-on-accent-rest)}:host .file-upload-table{display:flex}:host .file-upload-table.upload{display:flex}:host .file-upload-table .file-upload-cell{padding:1px 0 1px 1px;display:table-cell;vertical-align:middle;position:relative}:host .file-upload-table .file-upload-cell.percent-indicator{padding-inline-start:10px}:host .file-upload-table .file-upload-cell .description{opacity:.5;position:relative}:host .file-upload-table .file-upload-cell .file-upload-filename{max-width:250px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}:host .file-upload-table .file-upload-cell .file-upload-status{position:absolute;left:28px}:host .file-upload-table .file-upload-cell .file-upload-cancel{cursor:pointer;margin-inline-start:20px}:host .file-upload-table .file-upload-cell .file-upload-name{width:auto}:host .file-upload-table .file-upload-cell .cancel-icon{fill:var(--file-upload-dialog-text-color,var(--neutral-foreground-rest))}:host .mgt-file-item{--file-background-color:transparent;--file-padding:0 12px;--file-padding-inline-start:24px}:host .file-upload-template{clear:both}:host .file-upload-template .file-upload-folder-tab{padding-inline-start:20px}:host .file-upload-dialog{display:none}:host .file-upload-dialog .file-upload-dialog-content{background-color:var(--file-upload-dialog-background-color,var(--accent-fill-rest));color:var(--file-upload-dialog-text-color,var(--neutral-foreground-rest))}:host .file-upload-dialog .file-upload-dialog-content-text{margin-bottom:36px}:host .file-upload-dialog .file-upload-dialog-title{margin-top:0}:host .file-upload-dialog .file-upload-dialog-editor{display:flex;align-items:end;justify-content:end;gap:5px}:host .file-upload-dialog .file-upload-dialog-close{float:right;cursor:pointer}:host .file-upload-dialog .file-upload-dialog-close svg{fill:var(--file-upload-dialog-text-color,var(--neutral-foreground-rest));padding-right:5px}:host .file-upload-dialog.visible{display:block}:host fluent-checkbox.file-upload-dialog-check.hide{display:none}:host .file-upload-dialog-success{cursor:pointer;opacity:.5}:host #file-upload-border{display:none}:host #file-upload-border.visible{border:var(--file-upload-border-drag,1px dashed #0078d4);background-color:var(--file-upload-background-color-drag,rgba(0,120,212,.1));position:absolute;inset:0;z-index:1;display:inline-block}[dir=rtl] :host .file-upload-status{left:0;right:28px}\n`];","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nexport const strings = {\n  failUploadFile: 'File upload fail.',\n  cancelUploadFile: 'File cancel.',\n  buttonUploadFile: 'Upload Files',\n  maximumFilesTitle: 'Maximum files',\n  maximumFiles:\n    'Sorry, the maximum number of files you can upload at once is {MaxNumber}. Do you want to upload the first {MaxNumber} files or reselect?',\n  maximumFileSizeTitle: 'Maximum files size',\n  maximumFileSize: 'Sorry, the maximum file size to upload is {FileSize}. The file \"{FileName}\" has ',\n  fileTypeTitle: 'File type',\n  fileType: 'Sorry, the format of following file \"{FileName}\" cannot be uploaded.',\n  checkAgain: \"Don't show again\",\n  checkApplyAll: 'Apply to all',\n  buttonOk: 'OK',\n  buttonCancel: 'Cancel',\n  buttonUpload: 'Upload',\n  buttonKeep: 'Keep both',\n  buttonReplace: 'Replace',\n  buttonReselect: 'Reselect',\n  fileReplaceTitle: 'Replace file',\n  fileReplace: 'Do you want to replace the file \"{FileName}\" or keep both files?',\n  uploadButtonLabel: 'File upload button'\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { fluentButton, fluentCheckbox, fluentDialog, fluentProgress } from '@fluentui/web-components';\nimport { IGraph, MgtBaseComponent, mgtHtml } from '@microsoft/mgt-element';\nimport { html, TemplateResult } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { DriveItem } from '@microsoft/microsoft-graph-types';\nimport { classMap } from 'lit/directives/class-map.js';\nimport {\n  clearFilesCache,\n  getGraphfile,\n  getUploadSession,\n  sendFileContent,\n  sendFileChunk,\n  deleteSessionFile,\n  isUploadSession\n} from '../../../graph/graph.files';\nimport { ViewType } from '../../../graph/types';\nimport { registerFluentComponents } from '../../../utils/FluentComponents';\nimport { getSvg, SvgIcon } from '../../../utils/SvgHelper';\nimport { formatBytes } from '../../../utils/Utils';\nimport { styles } from './mgt-file-upload-css';\nimport { strings } from './strings';\nimport { registerComponent } from '@microsoft/mgt-element';\nimport { registerMgtFileComponent } from '../../mgt-file/mgt-file';\n\n/**\n * Simple union type for file system entry and directory entry types\n */\ntype FileEntry = (FileSystemDirectoryEntry | FileSystemFileEntry | FileSystemEntry) & {\n  /**\n   * This is a hack to get around the fact that the FileSystemEntry filePath is not writable\n   */\n  fullPath: string;\n};\n\n/**\n * Type guard for FileSystemDirectoryEntry\n *\n * @param {FileEntry} entry\n * @return {*}  {entry is FileSystemDirectoryEntry}\n */\nconst isFileSystemDirectoryEntry = (entry: FileEntry): entry is FileSystemDirectoryEntry => {\n  return entry.isDirectory;\n};\n\n/**\n * Type guard for FileSystemDirectoryEntry\n *\n * @param {FileEntry} entry\n * @return {*}  {entry is FileSystemDirectoryEntry}\n */\nconst isFileSystemFileEntry = (entry: FileEntry): entry is FileSystemFileEntry => {\n  return entry.isFile;\n};\n\ninterface FutureDataTransferItem extends DataTransferItem {\n  /**\n   * Possible future implementation of webkitGetAsEntry\n   */\n  getAsEntry: typeof DataTransferItem.prototype.webkitGetAsEntry;\n}\n\nconst isFutureDataTransferItem = (item: DataTransferItem): item is FutureDataTransferItem =>\n  'getAsEntry' in item && typeof item.getAsEntry === 'function';\n\nconst isDataTransferItem = (item: DataTransferItem | File): item is DataTransferItem =>\n  ('getAsFile' in item && typeof item.getAsFile === 'function') ||\n  ('webkitGetAsEntry' in item && typeof item.webkitGetAsEntry === 'function');\n\nconst conflictBehaviors = ['rename', 'replace'] as const;\n/**\n * Upload conflict behavior status\n */\nexport type MgtFileUploadConflictBehavior = (typeof conflictBehaviors)[number];\n\n/**\n * MgtFileUpload upload item lifecycle object.\n *\n * @export\n * @interface MgtFileUploadItem\n */\nexport interface MgtFileUploadItem {\n  /**\n   * Session url to keep upload progress open untill all chuncks are sent\n   */\n  uploadUrl?: string;\n\n  /**\n   * Upload file progress value\n   */\n  percent?: number;\n\n  /**\n   * Validate if File has any conflict Behavior\n   */\n  conflictBehavior?: MgtFileUploadConflictBehavior;\n\n  /**\n   * Output \"Success\" or \"Fail\" icon base on upload response\n   */\n  iconStatus?: TemplateResult;\n\n  /**\n   * File object to be upload.\n   */\n  file?: File;\n\n  /**\n   * Full file Path to be upload.\n   */\n  fullPath?: string;\n\n  /**\n   * Mgt-File View state change on upload response\n   */\n  view?: ViewType;\n\n  /**\n   * Manipulate fileDetails on upload lifecycle\n   */\n  driveItem?: DriveItem;\n\n  /**\n   * Mgt-File line2Property output field message\n   */\n  fieldUploadResponse?: string;\n\n  /**\n   * Validates state of upload progress\n   */\n  completed?: boolean;\n\n  /**\n   * Load large Files into ArrayBuffer to send by chuncks\n   */\n  mimeStreamString?: ArrayBuffer;\n\n  /**\n   * Max chunck size to upload file by slice\n   */\n  maxSize?: number;\n\n  /**\n   * Minimal chunck size to upload file by slice\n   */\n  minSize?: number;\n}\n\n/**\n * MgtFileUpload configuration object with MgtFileList Properties.\n *\n * @export\n * @interface MgtFileUploadConfig\n */\nexport interface MgtFileUploadConfig {\n  /**\n   * MS Graph APIs connector\n   *\n   * @type {IGraph}\n   */\n  graph: IGraph;\n\n  /**\n   * allows developer to provide site id for a file\n   *\n   * @type {string}\n   */\n  siteId?: string;\n\n  /**\n   * DriveId to upload Files\n   *\n   * @type {string}\n   */\n  driveId?: string;\n\n  /**\n   * GroupId to upload Files\n   *\n   * @type {string}\n   */\n  groupId?: string;\n\n  /**\n   * allows developer to provide item id for a file\n   *\n   * @type {string}\n   */\n  itemId?: string;\n\n  /**\n   * allows developer to provide item path for a file\n   *\n   * @type {string}\n   */\n  itemPath?: string;\n\n  /**\n   * allows developer to provide user id for a file\n   *\n   * @type {string}\n   */\n  userId?: string;\n\n  /**\n   * A number value indication for file size upload (KB)\n   *\n   * @type {Number}\n   */\n  maxFileSize?: number;\n\n  /**\n   * A number value to indicate the number of files to upload.\n   *\n   * @type {Number}\n   */\n  maxUploadFile?: number;\n\n  /**\n   * A Array of file extensions to be excluded from file upload.\n   *\n   * @type {string[]}\n   */\n  excludedFileExtensions?: string[];\n}\n\ninterface FileWithPath extends File {\n  fullPath: string;\n}\n\nexport const registerMgtFileUploadComponent = () => {\n  registerFluentComponents(fluentProgress, fluentButton, fluentCheckbox, fluentDialog);\n\n  registerMgtFileComponent();\n  registerComponent('file-upload', MgtFileUpload);\n};\n\nconst calculateConflictBehavior = (behavior: (number | true | MgtFileUploadConflictBehavior)[]) => {\n  if (behavior?.length > 1) {\n    return behavior[1] === 'replace' ? 'replace' : 'rename';\n  }\n  return null;\n};\n\n/**\n * A component to upload files to OneDrive or SharePoint Sites\n *\n * @export\n * @class MgtFileUpload\n * @extends {MgtBaseComponent}\n *\n * @cssprop --file-upload-background-color-drag - {Color} background color of the file list when you upload by drag and drop.\n * @cssprop --file-upload-button-background-color - {Color} background color of the file upload button.\n * @cssprop --file-upload-button-background-color-hover - {Color} background color of the file upload button on hover.\n * @cssprop --file-upload-button-text-color - {Color} text color of the file upload button.\n * @cssprop --file-upload-dialog-background-color - {Color} background color of the file upload dialog box (appears when uploaded files exist).\n * @cssprop --file-upload-dialog-text-color - {Color} text color of the file upload dialog box content.\n * @cssprop --file-upload-dialog-replace-button-background-color - {Color} background color of the replace button in the dialog box.\n * @cssprop --file-upload-dialog-replace-button-background-color-hover - {Color} background color of the replace button in the dialog box when you hover on it.\n * @cssprop --file-upload-dialog-replace-button-text-color - {Color} text color of the replace button in the dialog box.\n * @cssprop --file-upload-dialog-keep-both-button-background-color - {Color} background color of the keep-both button in the dialog box.\n * @cssprop --file-upload-dialog-keep-both-button-background-color-hover - {Color} background color of the keep-both button in the dialog box when you hover on it.\n * @cssprop --file-upload-dialog-keep-both-button-text-color - {Color} text color of the keep-both button in the dialog box.\n * @cssprop --file-upload-border-drag - {String} the border of the file list when you upload files via drag and drop. Default value is 1px dashed #0078d4.\n * @cssprop --file-upload-button-border - {String} the border of the file upload button. Default value is none.\n * @cssprop --file-upload-dialog-replace-button-border - {String} the border of the file upload replace button in the dialog box. Default value is\n * @cssprop --file-upload-dialog-keep-both-button-border - {String} the border of the file upload keep both button in the dialog box. Default value is none.\n * @cssprop --file-upload-dialog-border - {String} the border of the file upload dialog box. Default value is \"1px solid var(--neutral-fill-rest)\".\n * @cssprop --file-upload-dialog-width - {String} the width of the file upload dialog box. Default value is auto.\n * @cssprop --file-upload-dialog-height - {String} the height of the file upload dialog box. Default value is auto.\n * @cssprop --file-upload-dialog-padding - {String} the padding of the file upload dialog box. Default value is 24px;\n */\nexport class MgtFileUpload extends MgtBaseComponent {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  protected get strings() {\n    return strings;\n  }\n\n  /**\n   * Allows developer to provide an array of MgtFileUploadItem to upload\n   *\n   * @type {MgtFileUploadItem[]}\n   * @memberof MgtFileUpload\n   */\n  @property({ type: Object })\n  public filesToUpload: MgtFileUploadItem[];\n\n  /**\n   * List of mgt-file-list properties used to upload files.\n   *\n   * @type {MgtFileUploadConfig}\n   * @memberof MgtFileUpload\n   */\n  @property({ type: Object })\n  public fileUploadList: MgtFileUploadConfig;\n\n  /**\n   * Get the scopes required for file upload\n   *\n   * @static\n   * @return {*}  {string[]}\n   * @memberof MgtFileUpload\n   */\n  public static get requiredScopes(): string[] {\n    return [...new Set(['files.readwrite', 'files.readwrite.all', 'sites.readwrite.all'])];\n  }\n\n  // variable manage drag style when mouse over\n  private _dragCounter = 0;\n  // variable avoids removal of files after drag and drop, https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/dropEffect\n  private get _dropEffect(): DataTransfer['dropEffect'] {\n    return 'copy';\n  }\n  // variable defined max chuck size \"4MB\" for large files .\n  private readonly _maxChunkSize: number = 4 * 1024 * 1024;\n  private _dialogTitle = '';\n  private _dialogContent = '';\n  private _dialogPrimaryButton = '';\n  private _dialogSecondaryButton = '';\n  private _dialogCheckBox = '';\n  private _applyAll = false;\n  private _applyAllConflictBehavior: number = null;\n  private _maximumFileSize = false;\n  private _excludedFileType = false;\n\n  constructor() {\n    super();\n    this.filesToUpload = [];\n  }\n\n  /**\n   * Render the file upload component\n   *\n   * @returns\n   */\n  public render(): TemplateResult {\n    if (this.parentElement !== null) {\n      const root = this.parentElement;\n      root.addEventListener('dragenter', this.handleonDragEnter);\n      root.addEventListener('dragleave', this.handleonDragLeave);\n      root.addEventListener('dragover', this.handleonDragOver);\n      root.addEventListener('drop', this.handleonDrop);\n    }\n\n    return html`\n        <div id=\"file-upload-dialog\" class=\"file-upload-dialog\">\n          <!-- Modal content -->\n          <fluent-dialog modal=\"true\" class=\"file-upload-dialog-content\">\n            <span\n              class=\"file-upload-dialog-close\"\n              id=\"file-upload-dialog-close\">\n                ${getSvg(SvgIcon.Cancel)}\n            </span>\n            <div class=\"file-upload-dialog-content-text\">\n              <h2 class=\"file-upload-dialog-title\">${this._dialogTitle}</h2>\n              <div>${this._dialogContent}</div>\n                <fluent-checkbox\n                  id=\"file-upload-dialog-check\"\n                  class=\"file-upload-dialog-check\">\n                    ${this._dialogCheckBox}\n                </fluent-checkbox>\n            </div>\n            <div class=\"file-upload-dialog-editor\">\n              <fluent-button\n                appearance=\"accent\"\n                class=\"file-upload-dialog-ok\">\n                ${this._dialogPrimaryButton}\n              </fluent-button>\n              <fluent-button\n                appearance=\"outline\"\n                class=\"file-upload-dialog-cancel\">\n                ${this._dialogSecondaryButton}\n              </fluent-button>\n            </div>\n          </fluent-dialog>\n        </div>\n        <div id=\"file-upload-border\"></div>\n        <div class=\"file-upload-area-button\">\n          <input\n            id=\"file-upload-input\"\n            title=\"${this.strings.uploadButtonLabel}\"\n            tabindex=\"-1\"\n            aria-label=\"file upload input\"\n            type=\"file\"\n            multiple\n            @change=\"${this.onFileUploadChange}\"\n          />\n          <fluent-button\n            appearance=\"accent\"\n            class=\"file-upload-button\"\n            @click=${this.onFileUploadClick}\n            label=${this.strings.uploadButtonLabel}>\n              <span slot=\"start\">${getSvg(SvgIcon.Upload)}</span>\n              <span class=\"upload-text\">${this.strings.buttonUploadFile}</span>\n          </fluent-button>\n        </div>\n        <div class=\"file-upload-template\">\n          ${this.renderFolderTemplate(this.filesToUpload)}\n        </div>\n       `;\n  }\n\n  /**\n   * Render Folder structure of files to upload\n   *\n   * @param fileItems\n   * @returns\n   */\n  protected renderFolderTemplate(fileItems: MgtFileUploadItem[]) {\n    const folderStructure: string[] = [];\n    if (fileItems.length > 0) {\n      const templateFileItems = fileItems.map(fileItem => {\n        if (folderStructure.indexOf(fileItem.fullPath.substring(0, fileItem.fullPath.lastIndexOf('/'))) === -1) {\n          if (!fileItem.fullPath.endsWith('/')) {\n            folderStructure.push(fileItem.fullPath.substring(0, fileItem.fullPath.lastIndexOf('/')));\n            return mgtHtml`\n            <div class='file-upload-table'>\n              <div class='file-upload-cell'>\n                <mgt-file\n                  .fileDetails=${{\n                    name: fileItem.fullPath.substring(1, fileItem.fullPath.lastIndexOf('/')),\n                    folder: 'Folder'\n                  }}\n                  view=\"oneline\"\n                  class=\"mgt-file-item\">\n                </mgt-file>\n              </div>\n            </div>\n            ${this.renderFileTemplate(fileItem, 'file-upload-folder-tab')}`;\n          } else {\n            return html`${this.renderFileTemplate(fileItem, '')}`;\n          }\n        } else {\n          return html`${this.renderFileTemplate(fileItem, 'file-upload-folder-tab')}`;\n        }\n      });\n      return html`${templateFileItems}`;\n    }\n    return html``;\n  }\n\n  /**\n   * Render file upload area\n   *\n   * @param fileItem\n   * @returns\n   */\n  protected renderFileTemplate(fileItem: MgtFileUploadItem, folderTabStyle: string) {\n    const completed = classMap({\n      'file-upload-table': true,\n      upload: fileItem.completed\n    });\n    const folder =\n      folderTabStyle + (fileItem.fieldUploadResponse === 'lastModifiedDateTime' ? ' file-upload-dialog-success' : '');\n\n    const description = classMap({\n      description: fileItem.fieldUploadResponse === 'description'\n    });\n\n    const completedTemplate = !fileItem.completed ? this.renderFileUploadTemplate(fileItem) : html``;\n\n    return mgtHtml`\n        <div class=\"${completed}\">\n          <div class=\"${folder}\">\n            <div class='file-upload-cell'>\n              <div class=\"${description}\">\n                <div class=\"file-upload-status\">\n                  ${fileItem.iconStatus}\n                </div>\n                <mgt-file\n                  .fileDetails=${fileItem.driveItem}\n                  .view=${fileItem.view}\n                  .line2Property=${fileItem.fieldUploadResponse}\n                  part=\"upload\"\n                  class=\"mgt-file-item\">\n                </mgt-file>\n              </div>\n            </div>\n              ${completedTemplate}\n            </div>\n          </div>\n        </div>`;\n  }\n\n  /**\n   * Render file upload progress\n   *\n   * @param fileItem\n   * @returns\n   */\n  protected renderFileUploadTemplate(fileItem: MgtFileUploadItem) {\n    const completed = classMap({\n      'file-upload-table': true,\n      upload: fileItem.completed\n    });\n    return html`\n    <div class='file-upload-cell'>\n      <div class='file-upload-table file-upload-name'>\n        <div class='file-upload-cell'>\n          <div\n            title=\"${fileItem.file.name}\"\n            class='file-upload-filename'>\n            ${fileItem.file.name}\n          </div>\n        </div>\n      </div>\n      <div class='file-upload-table'>\n        <div class='file-upload-cell'>\n          <div class=\"${completed}\">\n            <fluent-progress class=\"file-upload-bar\" value=\"${fileItem.percent}\"></fluent-progress>\n            <div class='file-upload-cell percent-indicator'>\n              <span>${fileItem.percent}%</span>\n              <span\n                class=\"file-upload-cancel\"\n                @click=${() => this.deleteFileUploadSession(fileItem)}>\n                ${getSvg(SvgIcon.Cancel)}\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    `;\n  }\n\n  /**\n   * Handle the \"Upload Files\" button click event to open dialog and select files.\n   *\n   * @param event\n   * @returns\n   */\n  protected onFileUploadChange = (event: UIEvent) => {\n    const inputElement = event.target as HTMLInputElement;\n    if (!event || inputElement.files.length < 1) {\n      return;\n    } else {\n      void this.readUploadedFiles(inputElement.files, () => (inputElement.value = null));\n    }\n  };\n\n  /**\n   * Handle the click event on upload file button that open select files dialog to upload.\n   *\n   */\n  protected onFileUploadClick = () => {\n    const uploadInput: HTMLElement = this.renderRoot.querySelector('#file-upload-input');\n    uploadInput.click();\n  };\n\n  /**\n   * Function delete existing file upload sessions\n   *\n   * @param fileItem\n   */\n  protected async deleteFileUploadSession(fileItem: MgtFileUploadItem) {\n    try {\n      if (fileItem.uploadUrl !== undefined) {\n        // Responses that confirm cancelation of session.\n        // 404 means (The upload session was not found/The resource could not be found/)\n        // 409 means The resource has changed since the caller last read it; usually an eTag mismatch\n        await deleteSessionFile(this.fileUploadList.graph, fileItem.uploadUrl);\n        fileItem.uploadUrl = undefined;\n        fileItem.completed = true;\n        this.setUploadFail(fileItem, strings.cancelUploadFile);\n      } else {\n        fileItem.uploadUrl = undefined;\n        fileItem.completed = true;\n        this.setUploadFail(fileItem, strings.cancelUploadFile);\n      }\n    } catch {\n      fileItem.uploadUrl = undefined;\n      fileItem.completed = true;\n      this.setUploadFail(fileItem, strings.cancelUploadFile);\n    }\n  }\n\n  /**\n   * Stop listeners from onDragOver event.\n   *\n   * @param event\n   */\n  protected handleonDragOver = (event: DragEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    if (event.dataTransfer.items && event.dataTransfer.items.length > 0) {\n      event.dataTransfer.dropEffect = event.dataTransfer.dropEffect = this._dropEffect;\n    }\n  };\n\n  /**\n   * Stop listeners from onDragEnter event, enable drag and drop view.\n   *\n   * @param event\n   */\n  protected handleonDragEnter = (event: DragEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this._dragCounter++;\n    if (event.dataTransfer.items && event.dataTransfer.items.length > 0) {\n      event.dataTransfer.dropEffect = this._dropEffect;\n      const dragFileBorder: HTMLElement = this.renderRoot.querySelector('#file-upload-border');\n      dragFileBorder.classList.add('visible');\n    }\n  };\n\n  /**\n   * Stop listeners from ondragenter event, disable drag and drop view.\n   *\n   * @param event\n   */\n  protected handleonDragLeave = (event: DragEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this._dragCounter--;\n    if (this._dragCounter === 0) {\n      const dragFileBorder: HTMLElement = this.renderRoot.querySelector('#file-upload-border');\n      dragFileBorder.classList.remove('visible');\n    }\n  };\n\n  /**\n   * Stop listeners from onDrop event and process files.\n   *\n   * @param event\n   */\n  protected handleonDrop = (event: DragEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    const done = (): void => {\n      event.dataTransfer.clearData();\n    };\n    const dragFileBorder: HTMLElement = this.renderRoot.querySelector('#file-upload-border');\n    dragFileBorder.classList.remove('visible');\n    if (event.dataTransfer?.items) {\n      void this.readUploadedFiles(event.dataTransfer.items, done);\n    }\n    this._dragCounter = 0;\n  };\n\n  private async readUploadedFiles(uploaded: DataTransferItemList | FileList, onCompleteCallback: () => void) {\n    const files = await this.getFilesFromUploadArea(uploaded);\n    await this.getSelectedFiles(files);\n    onCompleteCallback();\n  }\n\n  /**\n   * Get Files and initalize MgtFileUploadItem object life cycle to be uploaded\n   *\n   * @param inputFiles\n   */\n  protected async getSelectedFiles(files: File[]) {\n    let fileItems: MgtFileUploadItem[] = [];\n    const fileItemsCompleted: MgtFileUploadItem[] = [];\n    this._applyAll = false;\n    this._applyAllConflictBehavior = null;\n    this._maximumFileSize = false;\n    this._excludedFileType = false;\n\n    // Collect ongoing upload files\n    this.filesToUpload.forEach(fileItem => {\n      if (!fileItem.completed) {\n        fileItems.push(fileItem);\n      } else {\n        fileItemsCompleted.push(fileItem);\n      }\n    });\n\n    for (const file of files as FileWithPath[]) {\n      const fullPath = file.fullPath === '' ? '/' + file.name : file.fullPath;\n      if (fileItems.filter(item => item.fullPath === fullPath).length === 0) {\n        // Initialize variable for File validation\n        let acceptFile = true;\n\n        // Exclude file based on max file size allowed\n        if (this.fileUploadList.maxFileSize !== undefined && acceptFile) {\n          if (file.size > this.fileUploadList.maxFileSize * 1024) {\n            acceptFile = false;\n            if (this._maximumFileSize === false) {\n              const maximumFileSize: (number | true | string)[] = await this.getFileUploadStatus(\n                file,\n                fullPath,\n                'MaxFileSize',\n                this.fileUploadList\n              );\n              if (maximumFileSize !== null) {\n                if (maximumFileSize[0] === 1) {\n                  this._maximumFileSize = true;\n                }\n              }\n            }\n          }\n        }\n\n        // Exclude file based on File extensions\n        if (this.fileUploadList.excludedFileExtensions !== undefined) {\n          if (this.fileUploadList.excludedFileExtensions.length > 0 && acceptFile) {\n            if (\n              this.fileUploadList.excludedFileExtensions.filter(fileExtension => {\n                return file.name.toLowerCase().indexOf(fileExtension.toLowerCase()) > -1;\n              }).length > 0\n            ) {\n              acceptFile = false;\n              if (this._excludedFileType === false) {\n                const excludedFileType: (number | true | string)[] = await this.getFileUploadStatus(\n                  file,\n                  fullPath,\n                  'ExcludedFileType',\n                  this.fileUploadList\n                );\n                if (excludedFileType !== null) {\n                  if (excludedFileType[0] === 1) {\n                    this._excludedFileType = true;\n                  }\n                }\n              }\n            }\n          }\n        }\n\n        // Collect accepted files\n        if (acceptFile) {\n          const conflictBehavior: (number | true | MgtFileUploadConflictBehavior)[] = await this.getFileUploadStatus(\n            file,\n            fullPath,\n            'Upload',\n            this.fileUploadList\n          );\n          let completed = false;\n          if (conflictBehavior !== null) {\n            if (conflictBehavior[0] === -1) {\n              completed = true;\n            } else {\n              this._applyAll = Boolean(conflictBehavior[0]);\n              this._applyAllConflictBehavior = conflictBehavior[1] ? 1 : 0;\n            }\n          }\n\n          // Initialize MgtFileUploadItem Life cycle\n          fileItems.push({\n            file,\n            driveItem: {\n              name: file.name\n            },\n            fullPath,\n            conflictBehavior: calculateConflictBehavior(conflictBehavior),\n            iconStatus: null,\n            percent: 1,\n            view: 'image',\n            completed,\n            maxSize: this._maxChunkSize,\n            minSize: 0\n          });\n        }\n      }\n    }\n    fileItems = fileItems.sort((firstFile, secondFile) => {\n      return firstFile.fullPath\n        .substring(0, firstFile.fullPath.lastIndexOf('/'))\n        .localeCompare(secondFile.fullPath.substring(0, secondFile.fullPath.lastIndexOf('/')));\n    });\n    // remove completed file report image to be reuploaded.\n    fileItems.forEach(fileItem => {\n      if (fileItemsCompleted.filter(item => item.fullPath === fileItem.fullPath).length !== 0) {\n        const index = fileItemsCompleted.findIndex(item => item.fullPath === fileItem.fullPath);\n        fileItemsCompleted.splice(index, 1);\n      }\n    });\n    fileItems.push(...fileItemsCompleted);\n    this.filesToUpload = fileItems;\n    // Send multiple Files to upload\n    const promises = this.filesToUpload.map(fileItem => this.sendFileItemGraph(fileItem));\n    await Promise.all(promises);\n  }\n\n  /**\n   * Call modal dialog to replace or keep file.\n   *\n   * @param file\n   * @returns\n   */\n  protected async getFileUploadStatus(\n    file: File,\n    fullPath: string,\n    DialogStatus: string,\n    fileUploadList: MgtFileUploadConfig\n  ): Promise<(number | true | MgtFileUploadConflictBehavior)[]> {\n    const fileUploadDialog: HTMLElement = this.renderRoot.querySelector('#file-upload-dialog');\n\n    switch (DialogStatus) {\n      case 'Upload': {\n        const driveItem = await getGraphfile(this.fileUploadList.graph, `${this.getGrapQuery(fullPath)}?$select=id`);\n        if (driveItem !== null) {\n          if (this._applyAll === true) {\n            return [this._applyAll, this._applyAllConflictBehavior];\n          }\n          fileUploadDialog.classList.add('visible');\n          this._dialogTitle = strings.fileReplaceTitle;\n          this._dialogContent = strings.fileReplace.replace('{FileName}', file.name);\n          this._dialogCheckBox = strings.checkApplyAll;\n          this._dialogPrimaryButton = strings.buttonReplace;\n          this._dialogSecondaryButton = strings.buttonKeep;\n          await super.requestStateUpdate(true);\n\n          return new Promise<(number | MgtFileUploadConflictBehavior)[]>(resolve => {\n            const fileUploadDialogClose: HTMLElement = this.renderRoot.querySelector('.file-upload-dialog-close');\n            const fileUploadDialogOk: HTMLElement = this.renderRoot.querySelector('.file-upload-dialog-ok');\n            const fileUploadDialogCancel: HTMLElement = this.renderRoot.querySelector('.file-upload-dialog-cancel');\n            const fileUploadDialogCheck: HTMLInputElement = this.renderRoot.querySelector('#file-upload-dialog-check');\n            fileUploadDialogCheck.checked = false;\n            fileUploadDialogCheck.classList.remove('hide');\n\n            // Replace File\n            const onOkDialogClick = () => {\n              fileUploadDialog.classList.remove('visible');\n              resolve([fileUploadDialogCheck.checked ? 1 : 0, 'replace']);\n            };\n\n            // Rename File\n            const onCancelDialogClick = () => {\n              fileUploadDialog.classList.remove('visible');\n              resolve([fileUploadDialogCheck.checked ? 1 : 0, 'rename']);\n            };\n\n            // Cancel File\n            const onCloseDialogClick = () => {\n              fileUploadDialog.classList.remove('visible');\n              resolve([-1]);\n            };\n\n            // Remove and include event listener to validate options.\n            fileUploadDialogOk.removeEventListener('click', onOkDialogClick);\n            fileUploadDialogCancel.removeEventListener('click', onCancelDialogClick);\n            fileUploadDialogClose.removeEventListener('click', onCloseDialogClick);\n            fileUploadDialogOk.addEventListener('click', onOkDialogClick);\n            fileUploadDialogCancel.addEventListener('click', onCancelDialogClick);\n            fileUploadDialogClose.addEventListener('click', onCloseDialogClick);\n          });\n        } else {\n          return null;\n        }\n        break;\n      }\n      case 'ExcludedFileType':\n        fileUploadDialog.classList.add('visible');\n        this._dialogTitle = strings.fileTypeTitle;\n        this._dialogContent =\n          strings.fileType.replace('{FileName}', file.name) +\n          ' (' +\n          fileUploadList.excludedFileExtensions.join(',') +\n          ')';\n        this._dialogCheckBox = strings.checkAgain;\n        this._dialogPrimaryButton = strings.buttonOk;\n        this._dialogSecondaryButton = strings.buttonCancel;\n        await super.requestStateUpdate(true);\n\n        return new Promise<number[]>(resolve => {\n          const fileUploadDialogOk: HTMLElement = this.renderRoot.querySelector('.file-upload-dialog-ok');\n          const fileUploadDialogCancel: HTMLElement = this.renderRoot.querySelector('.file-upload-dialog-cancel');\n          const fileUploadDialogClose: HTMLElement = this.renderRoot.querySelector('.file-upload-dialog-close');\n          const fileUploadDialogCheck: HTMLInputElement = this.renderRoot.querySelector('#file-upload-dialog-check');\n          fileUploadDialogCheck.checked = false;\n          fileUploadDialogCheck.classList.remove('hide');\n\n          const onOkDialogClick = () => {\n            fileUploadDialog.classList.remove('visible');\n            // Confirm info\n            resolve([fileUploadDialogCheck.checked ? 1 : 0]);\n          };\n\n          const onCancelDialogClick = () => {\n            fileUploadDialog.classList.remove('visible');\n            // Cancel all\n            resolve([0]);\n          };\n\n          // Remove and include event listener to validate options.\n          fileUploadDialogOk.removeEventListener('click', onOkDialogClick);\n          fileUploadDialogCancel.removeEventListener('click', onCancelDialogClick);\n          fileUploadDialogClose.removeEventListener('click', onCancelDialogClick);\n          fileUploadDialogOk.addEventListener('click', onOkDialogClick);\n          fileUploadDialogCancel.addEventListener('click', onCancelDialogClick);\n          fileUploadDialogClose.addEventListener('click', onCancelDialogClick);\n        });\n      case 'MaxFileSize':\n        fileUploadDialog.classList.add('visible');\n        this._dialogTitle = strings.maximumFileSizeTitle;\n        this._dialogContent =\n          strings.maximumFileSize\n            .replace('{FileSize}', formatBytes(fileUploadList.maxFileSize * 1024))\n            .replace('{FileName}', file.name) +\n          formatBytes(file.size) +\n          '.';\n        this._dialogCheckBox = strings.checkAgain;\n        this._dialogPrimaryButton = strings.buttonOk;\n        this._dialogSecondaryButton = strings.buttonCancel;\n        await super.requestStateUpdate(true);\n\n        return new Promise<number[]>(resolve => {\n          const fileUploadDialogOk: HTMLElement = this.renderRoot.querySelector('.file-upload-dialog-ok');\n          const fileUploadDialogCancel: HTMLElement = this.renderRoot.querySelector('.file-upload-dialog-cancel');\n          const fileUploadDialogClose: HTMLElement = this.renderRoot.querySelector('.file-upload-dialog-close');\n          const fileUploadDialogCheck: HTMLInputElement = this.renderRoot.querySelector('#file-upload-dialog-check');\n          fileUploadDialogCheck.checked = false;\n          fileUploadDialogCheck.classList.remove('hide');\n\n          const onOkDialogClick = () => {\n            fileUploadDialog.classList.remove('visible');\n            // Confirm info\n            resolve([fileUploadDialogCheck.checked ? 1 : 0]);\n          };\n\n          const onCancelDialogClick = () => {\n            fileUploadDialog.classList.remove('visible');\n            // Cancel all\n            resolve([0]);\n          };\n          // Remove and include event listener to validate options.\n          fileUploadDialogOk.removeEventListener('click', onOkDialogClick);\n          fileUploadDialogCancel.removeEventListener('click', onCancelDialogClick);\n          fileUploadDialogClose.removeEventListener('click', onCancelDialogClick);\n          fileUploadDialogOk.addEventListener('click', onOkDialogClick);\n          fileUploadDialogCancel.addEventListener('click', onCancelDialogClick);\n          fileUploadDialogClose.addEventListener('click', onCancelDialogClick);\n        });\n\n      default:\n        break;\n    }\n  }\n\n  /**\n   * Get GraphQuery based on pre defined parameters.\n   *\n   * @param fileItem\n   * @returns\n   */\n  protected getGrapQuery(fullPath: string) {\n    let itemPath = '';\n    if (this.fileUploadList.itemPath) {\n      if (this.fileUploadList.itemPath.length > 0) {\n        itemPath = this.fileUploadList.itemPath.startsWith('/')\n          ? this.fileUploadList.itemPath\n          : '/' + this.fileUploadList.itemPath;\n      }\n    }\n\n    // {userId} {itemId}\n    if (this.fileUploadList.userId && this.fileUploadList.itemId) {\n      return `/users/${this.fileUploadList.userId}/drive/items/${this.fileUploadList.itemId}:${fullPath}`;\n    }\n    // {userId} {itemPath}\n    if (this.fileUploadList.userId && this.fileUploadList.itemPath) {\n      return `/users/${this.fileUploadList.userId}/drive/root:${itemPath}${fullPath}`;\n    }\n    // {groupId} {itemId}\n    if (this.fileUploadList.groupId && this.fileUploadList.itemId) {\n      return `/groups/${this.fileUploadList.groupId}/drive/items/${this.fileUploadList.itemId}:${fullPath}`;\n    }\n    // {groupId} {itemPath}\n    if (this.fileUploadList.groupId && this.fileUploadList.itemPath) {\n      return `/groups/${this.fileUploadList.groupId}/drive/root:${itemPath}${fullPath}`;\n    }\n    // {driveId} {itemId}\n    if (this.fileUploadList.driveId && this.fileUploadList.itemId) {\n      return `/drives/${this.fileUploadList.driveId}/items/${this.fileUploadList.itemId}:${fullPath}`;\n    }\n    // {driveId} {itemPath}\n    if (this.fileUploadList.driveId && this.fileUploadList.itemPath) {\n      return `/drives/${this.fileUploadList.driveId}/root:${itemPath}${fullPath}`;\n    }\n    // {siteId} {itemId}\n    if (this.fileUploadList.siteId && this.fileUploadList.itemId) {\n      return `/sites/${this.fileUploadList.siteId}/drive/items/${this.fileUploadList.itemId}:${fullPath}`;\n    }\n    // {siteId} {itemPath}\n    if (this.fileUploadList.siteId && this.fileUploadList.itemPath) {\n      return `/sites/${this.fileUploadList.siteId}/drive/root:${itemPath}${fullPath}`;\n    }\n    // default OneDrive {itemId}\n    if (this.fileUploadList.itemId) {\n      return `/me/drive/items/${this.fileUploadList.itemId}:${fullPath}`;\n    }\n    // default OneDrive {itemPath}\n    if (this.fileUploadList.itemPath) {\n      return `/me/drive/root:${itemPath}${fullPath}`;\n    }\n    // default OneDrive root\n    return `/me/drive/root:${fullPath}`;\n  }\n\n  /**\n   * Send file using Upload using Graph based on length\n   *\n   * @param fileUpload\n   * @returns\n   */\n  protected async sendFileItemGraph(fileItem: MgtFileUploadItem) {\n    const graph: IGraph = this.fileUploadList.graph;\n    let graphQuery = '';\n    if (fileItem.file.size < this._maxChunkSize) {\n      try {\n        if (!fileItem.completed) {\n          if (fileItem.conflictBehavior === null || fileItem.conflictBehavior === 'replace') {\n            graphQuery = `${this.getGrapQuery(fileItem.fullPath)}:/content`;\n          }\n          if (fileItem.conflictBehavior === 'rename') {\n            graphQuery = `${this.getGrapQuery(fileItem.fullPath)}:/content?@microsoft.graph.conflictBehavior=rename`;\n          }\n          fileItem.driveItem = await sendFileContent(graph, graphQuery, fileItem.file);\n          if (fileItem.driveItem !== null) {\n            this.setUploadSuccess(fileItem);\n          } else {\n            fileItem.driveItem = {\n              name: fileItem.file.name\n            };\n            this.setUploadFail(fileItem, strings.failUploadFile);\n          }\n        }\n      } catch (error) {\n        this.setUploadFail(fileItem, strings.failUploadFile);\n      }\n    } else {\n      if (!fileItem.completed) {\n        if (fileItem.uploadUrl === undefined) {\n          const response = await getUploadSession(\n            graph,\n            `${this.getGrapQuery(fileItem.fullPath)}:/createUploadSession`,\n            fileItem.conflictBehavior\n          );\n          try {\n            if (response !== null) {\n              // uploadSession url used to send chunks of file\n              fileItem.uploadUrl = response.uploadUrl;\n              const driveItem = await this.sendSessionUrlGraph(graph, fileItem);\n              if (driveItem !== null) {\n                fileItem.driveItem = driveItem;\n                this.setUploadSuccess(fileItem);\n              } else {\n                this.setUploadFail(fileItem, strings.failUploadFile);\n              }\n            } else {\n              this.setUploadFail(fileItem, strings.failUploadFile);\n            }\n            // eslint-disable-next-line no-empty\n          } catch {}\n        }\n      }\n    }\n  }\n\n  /**\n   * Manage slices of File to upload file by chunks using Graph and Session Url\n   *\n   * @param Graph\n   * @param fileItem\n   * @returns\n   */\n  protected async sendSessionUrlGraph(graph: IGraph, fileItem: MgtFileUploadItem) {\n    while (fileItem.file.size > fileItem.minSize) {\n      if (fileItem.mimeStreamString === undefined) {\n        fileItem.mimeStreamString = (await this.readFileContent(fileItem.file)) as ArrayBuffer;\n      }\n      // Graph client API uses Buffer package to manage ArrayBuffer, change to Blob avoids external package dependency\n      const fileSlice: Blob = new Blob([fileItem.mimeStreamString.slice(fileItem.minSize, fileItem.maxSize)]);\n      fileItem.percent = Math.round((fileItem.maxSize / fileItem.file.size) * 100);\n      await super.requestStateUpdate(true);\n\n      if (fileItem.uploadUrl !== undefined) {\n        const response = await sendFileChunk(\n          graph,\n          fileItem.uploadUrl,\n          `${fileItem.maxSize - fileItem.minSize}`,\n          `bytes ${fileItem.minSize}-${fileItem.maxSize - 1}/${fileItem.file.size}`,\n          fileSlice\n        );\n        if (response === null) {\n          return null;\n        } else if (isUploadSession(response)) {\n          // Define next Chunk\n          fileItem.minSize = parseInt(response.nextExpectedRanges[0].split('-')[0], 10);\n          fileItem.maxSize = fileItem.minSize + this._maxChunkSize;\n          if (fileItem.maxSize > fileItem.file.size) {\n            fileItem.maxSize = fileItem.file.size;\n          }\n        } else if (response.id !== undefined) {\n          return response;\n        }\n      } else {\n        return null;\n      }\n    }\n  }\n\n  /**\n   * Change the state of Mgt-File icon upload to Success\n   *\n   * @param fileUpload\n   */\n  protected setUploadSuccess(fileUpload: MgtFileUploadItem) {\n    fileUpload.percent = 100;\n    void super.requestStateUpdate(true);\n    setTimeout(() => {\n      fileUpload.iconStatus = getSvg(SvgIcon.Success);\n      fileUpload.view = 'twolines';\n      fileUpload.fieldUploadResponse = 'lastModifiedDateTime';\n      fileUpload.completed = true;\n      void super.requestStateUpdate(true);\n      void clearFilesCache();\n    }, 500);\n  }\n\n  /**\n   * Change the state of Mgt-File icon upload to Fail\n   *\n   * @param fileUpload\n   */\n  protected setUploadFail(fileUpload: MgtFileUploadItem, errorMessage: string) {\n    setTimeout(() => {\n      fileUpload.iconStatus = getSvg(SvgIcon.Fail);\n      fileUpload.view = 'twolines';\n      fileUpload.driveItem.description = errorMessage;\n      fileUpload.fieldUploadResponse = 'description';\n      fileUpload.completed = true;\n      void super.requestStateUpdate(true);\n    }, 500);\n  }\n\n  /**\n   * Retrieve File content as ArrayBuffer\n   *\n   * @param file\n   * @returns\n   */\n  protected readFileContent(file: File): Promise<string | ArrayBuffer> {\n    return new Promise<string | ArrayBuffer>((resolve, reject) => {\n      const myReader: FileReader = new FileReader();\n\n      myReader.onloadend = () => {\n        resolve(myReader.result);\n      };\n\n      myReader.onerror = e => {\n        reject(e);\n      };\n\n      myReader.readAsArrayBuffer(file);\n    });\n  }\n\n  /**\n   * Collect Files from Upload Area based on maxUploadFile\n   *\n   * @param uploadFilesItems\n   * @returns\n   */\n  protected async getFilesFromUploadArea(filesItems: DataTransferItemList | FileList): Promise<File[]> {\n    const folders: FileSystemDirectoryEntry[] = [];\n    let entry: FileSystemEntry;\n    const collectFilesItems: File[] = [];\n\n    for (const uploadFileItem of filesItems) {\n      if (isDataTransferItem(uploadFileItem)) {\n        if (isFutureDataTransferItem(uploadFileItem)) {\n          entry = uploadFileItem.getAsEntry();\n          if (isFileSystemDirectoryEntry(entry)) {\n            folders.push(entry);\n          } else {\n            const file = uploadFileItem.getAsFile();\n            if (file) {\n              this.writeFilePath(file, '');\n              collectFilesItems.push(file);\n            }\n          }\n        } else if (uploadFileItem.webkitGetAsEntry) {\n          entry = uploadFileItem.webkitGetAsEntry();\n          if (isFileSystemDirectoryEntry(entry)) {\n            folders.push(entry);\n          } else {\n            const file = uploadFileItem.getAsFile();\n            if (file) {\n              this.writeFilePath(file, '');\n              collectFilesItems.push(file);\n            }\n          }\n        } else {\n          const file = uploadFileItem.getAsFile();\n          if (file) {\n            this.writeFilePath(file, '');\n            collectFilesItems.push(file);\n          }\n        }\n      } else {\n        this.writeFilePath(uploadFileItem, '');\n        collectFilesItems.push(uploadFileItem);\n      }\n    }\n\n    // Collect Files from folder\n    if (folders.length > 0) {\n      const folderFiles = await this.getFolderFiles(folders);\n      collectFilesItems.push(...folderFiles);\n    }\n    return collectFilesItems;\n  }\n\n  /**\n   * Retrieve files from folder and subfolders to array.\n   *\n   * @param folders\n   * @returns\n   */\n  protected getFolderFiles(folders: FileSystemDirectoryEntry[]) {\n    return new Promise<File[]>(resolve => {\n      let reading = 0;\n      const contents: File[] = [];\n      folders.forEach(entry => {\n        readEntry(entry, '');\n      });\n\n      const readEntry = (entry: FileEntry, path: string) => {\n        if (isFileSystemDirectoryEntry(entry)) {\n          readReaderContent(entry.createReader());\n        } else if (isFileSystemFileEntry(entry)) {\n          reading++;\n          entry.file(file => {\n            reading--;\n            // Include Folder path where File is located\n            this.writeFilePath(file, path);\n            contents.push(file);\n\n            if (reading === 0) {\n              resolve(contents);\n            }\n          });\n        }\n      };\n\n      const readReaderContent = (reader: FileSystemDirectoryReader) => {\n        reading++;\n\n        reader.readEntries(entries => {\n          reading--;\n          for (const entry of entries) {\n            readEntry(entry, entry.fullPath);\n          }\n\n          if (reading === 0) {\n            resolve(contents);\n          }\n        });\n      };\n    });\n  }\n  private writeFilePath(file: File | FileSystemEntry, path: string) {\n    (file as unknown as FileEntry).fullPath = path;\n  }\n}\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport {\n  GraphPageIterator,\n  Providers,\n  ProviderState,\n  mgtHtml,\n  MgtTemplatedTaskComponent\n} from '@microsoft/mgt-element';\nimport { DriveItem } from '@microsoft/microsoft-graph-types';\nimport { html, TemplateResult } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport { repeat } from 'lit/directives/repeat.js';\nimport {\n  clearFilesCache,\n  fetchNextAndCacheForFilesPageIterator,\n  getDriveFilesByIdIterator,\n  getDriveFilesByPathIterator,\n  getFilesByIdIterator,\n  getFilesByListQueryIterator,\n  getFilesByPathIterator,\n  getFilesByQueries,\n  getFilesIterator,\n  getGroupFilesByIdIterator,\n  getGroupFilesByPathIterator,\n  getMyInsightsFiles,\n  getSiteFilesByIdIterator,\n  getSiteFilesByPathIterator,\n  getUserFilesByIdIterator,\n  getUserFilesByPathIterator,\n  getUserInsightsFiles\n} from '../../graph/graph.files';\nimport './mgt-file-upload/mgt-file-upload';\nimport { getSvg, SvgIcon } from '../../utils/SvgHelper';\nimport { OfficeGraphInsightString, ViewType, viewTypeConverter } from '../../graph/types';\nimport { styles } from './mgt-file-list-css';\nimport { strings } from './strings';\nimport { MgtFile, registerMgtFileComponent } from '../mgt-file/mgt-file';\nimport { MgtFileUploadConfig, registerMgtFileUploadComponent } from './mgt-file-upload/mgt-file-upload';\n\nimport { fluentProgressRing } from '@fluentui/web-components';\nimport { registerFluentComponents } from '../../utils/FluentComponents';\nimport { CardSection } from '../BasePersonCardSection';\nimport { registerComponent } from '@microsoft/mgt-element';\n\nexport const registerMgtFileListComponent = () => {\n  registerFluentComponents(fluentProgressRing);\n\n  registerMgtFileComponent();\n  registerMgtFileUploadComponent();\n  registerComponent('file-list', MgtFileList);\n};\n\n/**\n * The File List component displays a list of multiple folders and files by\n * using the file/folder name, an icon, and other properties specified by the developer.\n * This component uses the mgt-file component.\n *\n * @export\n * @class MgtFileList\n *\n * @fires {CustomEvent<MicrosoftGraph.DriveItem>} itemClick - Fired when a user clicks on a file.\n * it returns the file (DriveItem) details.\n *\n * NOTE: This component also allows customizing the tokens from mgt-file and mgt-file-upload components.\n * @cssprop --file-list-background-color - {Color} the background color of the component.\n * @cssprop --file-list-box-shadow - {String} the box-shadow syle of the component. Default value is --elevation-shadow-card-rest.\n * @cssprop --file-list-border-radius - {Length} the file list box border radius. Default value is 8px.\n * @cssprop --file-list-border - {String} the file list border style. Default value is none.\n * @cssprop --file-list-padding -{String} the file list padding.  Default value is 0px.\n * @cssprop --file-list-margin -{String} the file list margin. Default value is 0px.\n * @cssprop --show-more-button-background-color - {Color} the \"show more\" button background color.\n * @cssprop --show-more-button-background-color--hover - {Color} the \"show more\" button background color on hover.\n * @cssprop --show-more-button-font-size - {String} the \"show more\" text font size. Default value is 12px.\n * @cssprop --show-more-button-padding - {String} the \"show more\" button padding. Default value is 0px.\n * @cssprop --show-more-button-border-bottom-right-radius - {String} the \"show more\" button bottom right border radius. Default value is 8px.\n * @cssprop --show-more-button-border-bottom-left-radius - {String} the \"show more\" button bottom left border radius. Default value is 8px;\n * @cssprop --progress-ring-size -{String} Progress ring height and width. Default value is 24px.\n */\nexport class MgtFileList extends MgtTemplatedTaskComponent implements CardSection {\n  @state() private _isCompact = false;\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  protected get strings(): Record<string, string> {\n    return strings;\n  }\n\n  /**\n   * allows developer to provide query for a file list\n   *\n   * @type {string}\n   * @memberof MgtFileList\n   */\n  @property({\n    attribute: 'file-list-query'\n  })\n  public fileListQuery: string;\n\n  /**\n   * The name for display in the overview section.\n   *\n   * @readonly\n   * @type {string}\n   * @memberof MgtFileList\n   */\n  public get displayName(): string {\n    return this.strings.filesSectionTitle;\n  }\n\n  /**\n   * The title for the card when rendered as a card full.\n   *\n   * @readonly\n   * @type {string}\n   * @memberof MgtFileList\n   */\n  public get cardTitle(): string {\n    return this.strings.filesSectionTitle;\n  }\n\n  /**\n   * Render the icon for display in the navigation ribbon.\n   *\n   * @returns {TemplateResult}\n   * @memberof MgtFileList\n   */\n  public renderIcon(): TemplateResult {\n    return getSvg(SvgIcon.Files);\n  }\n\n  /**\n   * allows developer to provide an array of file queries\n   *\n   * @type {string[]}\n   * @memberof MgtFileList\n   */\n  @property({\n    attribute: 'file-queries',\n    converter: (value, _type) => {\n      if (value) {\n        return value.split(',').map(v => v.trim());\n      } else {\n        return null;\n      }\n    }\n  })\n  public fileQueries: string[] | null = null;\n\n  /**\n   * allows developer to provide an array of files\n   *\n   * @type {MicrosoftGraph.DriveItem[]}\n   * @memberof MgtFileList\n   */\n  @property({ type: Object })\n  public files: DriveItem[] | null = null;\n\n  /**\n   * allows developer to provide site id for a file\n   *\n   * @type {string}\n   * @memberof MgtFileList\n   */\n  @property({\n    attribute: 'site-id'\n  })\n  public siteId: string;\n\n  /**\n   * allows developer to provide drive id for a file\n   *\n   * @type {string}\n   * @memberof MgtFileList\n   */\n  @property({\n    attribute: 'drive-id'\n  })\n  public driveId: string;\n\n  /**\n   * allows developer to provide group id for a file\n   *\n   * @type {string}\n   * @memberof MgtFileList\n   */\n  @property({\n    attribute: 'group-id'\n  })\n  public groupId: string;\n\n  /**\n   * allows developer to provide item id for a file\n   *\n   * @type {string}\n   * @memberof MgtFileList\n   */\n  @property({\n    attribute: 'item-id'\n  })\n  public itemId: string;\n\n  /**\n   * allows developer to provide item path for a file\n   *\n   * @type {string}\n   * @memberof MgtFileList\n   */\n  @property({\n    attribute: 'item-path'\n  })\n  public itemPath: string;\n\n  /**\n   * allows developer to provide user id for a file\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'user-id'\n  })\n  public userId: string;\n\n  /**\n   * allows developer to provide insight type for a file\n   * can be trending, used, or shared\n   *\n   * @type {OfficeGraphInsightString}\n   * @memberof MgtFileList\n   */\n  @property({\n    attribute: 'insight-type'\n  })\n  public insightType: OfficeGraphInsightString;\n\n  /**\n   * Sets what data to be rendered (file icon only, oneline, twolines threelines).\n   * Default is 'threelines'.\n   *\n   * @type {ViewType}\n   * @memberof MgtFileList\n   */\n  @property({\n    attribute: 'item-view',\n    converter: value => viewTypeConverter(value, 'threelines')\n  })\n  public itemView: ViewType = 'threelines';\n\n  /**\n   * allows developer to provide file type to filter the list\n   * can be docx\n   *\n   * @type {string[]}\n   * @memberof MgtFileList\n   */\n  @property({\n    attribute: 'file-extensions',\n    converter: (value, _type) => {\n      return value.split(',').map(v => v.trim());\n    }\n  })\n  public fileExtensions: string[] = [];\n\n  /**\n   * A number value to indicate the number of more files to load when show more button is clicked\n   *\n   * @type {number}\n   * @memberof MgtFileList\n   */\n  @property({\n    attribute: 'page-size',\n    type: Number\n  })\n  public pageSize = 10;\n\n  @property({\n    attribute: 'disable-open-on-click',\n    type: Boolean\n  })\n  public disableOpenOnClick = false;\n  /**\n   * A boolean value indication if 'show-more' button should be disabled\n   *\n   * @type {boolean}\n   * @memberof MgtFileList\n   */\n  @property({\n    attribute: 'hide-more-files-button',\n    type: Boolean\n  })\n  public hideMoreFilesButton = false;\n\n  /**\n   * A number value indication for file size upload (KB)\n   *\n   * @type {number}\n   * @memberof MgtFileList\n   */\n  @property({\n    attribute: 'max-file-size',\n    type: Number\n  })\n  public maxFileSize: number;\n\n  /**\n   * A boolean value indication if file upload extension should be enable or disabled\n   *\n   * @type {boolean}\n   * @memberof MgtFileList\n   */\n  @property({\n    attribute: 'enable-file-upload',\n    type: Boolean\n  })\n  public enableFileUpload = false;\n\n  /**\n   * A number value to indicate the max number allowed of files to upload.\n   *\n   * @type {number}\n   * @memberof MgtFileList\n   */\n  @property({\n    attribute: 'max-upload-file',\n    type: Number\n  })\n  public maxUploadFile = 10;\n\n  /**\n   * A Array of file extensions to be excluded from file upload.\n   *\n   * @type {string[]}\n   * @memberof MgtFileList\n   */\n  @property({\n    attribute: 'excluded-file-extensions',\n    converter: (value, _type) => {\n      return value.split(',').map(v => v.trim());\n    }\n  })\n  public excludedFileExtensions: string[] = [];\n\n  /**\n   * Get the scopes required for file list\n   *\n   * @static\n   * @return {*}  {string[]}\n   * @memberof MgtFileList\n   */\n  public static get requiredScopes(): string[] {\n    return [...new Set([...MgtFile.requiredScopes])];\n  }\n\n  private _preloadedFiles: DriveItem[] = [];\n  private pageIterator: GraphPageIterator<DriveItem>;\n  // tracking user arrow key input of selection for accessibility purpose\n  private _focusedItemIndex = -1;\n\n  @state() private _isLoadingMore: boolean;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Reset state\n   *\n   * @memberof MgtFileList\n   */\n  protected clearState(): void {\n    super.clearState();\n    this.files = null;\n  }\n\n  /**\n   * Set the section to compact view mode\n   *\n   * @returns\n   * @memberof BasePersonCardSection\n   */\n  public asCompactView() {\n    this._isCompact = true;\n    return this;\n  }\n\n  /**\n   * Set the section to full view mode\n   *\n   * @returns\n   * @memberof BasePersonCardSection\n   */\n  public asFullView() {\n    this._isCompact = false;\n    return this;\n  }\n\n  protected args(): unknown[] {\n    return [\n      this.providerState,\n      this.fileListQuery,\n      this.fileQueries,\n      this.siteId,\n      this.driveId,\n      this.groupId,\n      this.itemId,\n      this.itemPath,\n      this.userId,\n      this.insightType,\n      this.fileExtensions,\n      this.pageSize,\n      this.maxFileSize\n    ];\n  }\n\n  protected renderLoading = () => {\n    if (!this.files) {\n      return this.renderTemplate('loading', null) || html``;\n    }\n    return this.renderContent();\n  };\n\n  /**\n   * Render the file list\n   *\n   * @return {*}\n   * @memberof MgtFileList\n   */\n  protected renderContent = () => {\n    if (!this.files || this.files.length === 0) {\n      return this.renderNoData();\n    }\n    return this._isCompact ? this.renderCompactView() : this.renderFullView();\n  };\n\n  /**\n   * Render the compact view\n   *\n   * @returns {TemplateResult}\n   * @memberof MgtFileList\n   */\n  public renderCompactView(): TemplateResult {\n    const files = this.files.slice(0, 3);\n\n    return this.renderFiles(files);\n  }\n\n  /**\n   * Render the full view\n   *\n   * @returns {TemplateResult}\n   * @memberof MgtFileList\n   */\n  public renderFullView(): TemplateResult {\n    return this.renderTemplate('default', { files: this.files }) || this.renderFiles(this.files);\n  }\n\n  /**\n   * Render the state when no data is available\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtFileList\n   */\n  protected renderNoData(): TemplateResult {\n    return (\n      this.renderTemplate('no-data', null) ||\n      (this.enableFileUpload === true && Providers.globalProvider !== undefined\n        ? html`\n            <div class=\"file-list-wrapper\" dir=${this.direction}>\n              ${this.renderFileUpload()}\n            </div>`\n        : html``)\n    );\n  }\n\n  /**\n   * Render the list of files.\n   *\n   * @protected\n   * @param {*} files\n   * @returns {TemplateResult}\n   * @memberof mgtFileList\n   */\n  protected renderFiles(files: DriveItem[]): TemplateResult {\n    return html`\n      <div id=\"file-list-wrapper\" class=\"file-list-wrapper\" dir=${this.direction}>\n        ${this.enableFileUpload ? this.renderFileUpload() : null}\n        <ul\n          id=\"file-list\"\n          class=\"file-list\"\n        >\n          <li\n            tabindex=\"0\"\n            class=\"file-item\"\n            @keydown=\"${this.onFileListKeyDown}\"\n            @focus=\"${this.onFocusFirstItem}\"\n            @click=${(e: UIEvent) => this.handleItemSelect(files[0], e)}>\n            ${this.renderFile(files[0])}\n          </li>\n          ${repeat(\n            files.slice(1),\n            f => f.id,\n            f => html`\n              <li\n                class=\"file-item\"\n                @keydown=\"${this.onFileListKeyDown}\"\n                @click=${(e: UIEvent) => this.handleItemSelect(f, e)}>\n                ${this.renderFile(f)}\n              </li>\n            `\n          )}\n        </ul>\n        ${\n          !this.hideMoreFilesButton &&\n          this.pageIterator &&\n          (this.pageIterator.hasNext || this._preloadedFiles.length) &&\n          !this._isCompact\n            ? this.renderMoreFileButton()\n            : null\n        }\n      </div>\n    `;\n  }\n\n  /**\n   * Render an individual file.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof mgtFileList\n   */\n  protected renderFile(file: DriveItem): TemplateResult {\n    const view = this.itemView;\n    return (\n      this.renderTemplate('file', { file }, file.id) ||\n      mgtHtml`\n        <mgt-file class=\"mgt-file-item\" .fileDetails=${file} .view=${view}></mgt-file>\n      `\n    );\n  }\n\n  /**\n   * Render the button when clicked will show more files.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtFileList\n   */\n  protected renderMoreFileButton(): TemplateResult {\n    if (this._isLoadingMore) {\n      return html`\n        <fluent-progress-ring role=\"progressbar\" viewBox=\"0 0 8 8\" class=\"progress-ring\"></fluent-progress-ring>\n      `;\n    } else {\n      return html`\n        <fluent-button\n          appearance=\"stealth\"\n          id=\"show-more\"\n          class=\"show-more\"\n          @click=${() => this.renderNextPage()}\n        >\n          <span class=\"show-more-text\">${this.strings.showMoreSubtitle}</span>\n        </fluent-button>`;\n    }\n  }\n\n  /**\n   * Render MgtFileUpload sub component\n   *\n   * @returns\n   */\n  protected renderFileUpload(): TemplateResult {\n    const fileUploadConfig: MgtFileUploadConfig = {\n      graph: Providers.globalProvider.graph.forComponent(this),\n      driveId: this.driveId,\n      excludedFileExtensions: this.excludedFileExtensions,\n      groupId: this.groupId,\n      itemId: this.itemId,\n      itemPath: this.itemPath,\n      userId: this.userId,\n      siteId: this.siteId,\n      maxFileSize: this.maxFileSize,\n      maxUploadFile: this.maxUploadFile\n    };\n    return mgtHtml`\n        <mgt-file-upload .fileUploadList=${fileUploadConfig} ></mgt-file-upload>\n      `;\n  }\n\n  /**\n   * Handles setting the focusedItemIndex to 0 when you focus on the first item\n   * in the file list.\n   *\n   * @returns void\n   */\n  private readonly onFocusFirstItem = () => (this._focusedItemIndex = 0);\n\n  /**\n   * Handle accessibility keyboard keydown events (arrow up, arrow down, enter, tab) on file list\n   *\n   * @param event\n   */\n  private readonly onFileListKeyDown = (event: KeyboardEvent): void => {\n    const fileList = this.renderRoot.querySelector('.file-list');\n    let focusedItem: HTMLElement;\n\n    if (!fileList?.children.length) {\n      return;\n    }\n\n    if (event.code === 'ArrowUp' || event.code === 'ArrowDown') {\n      if (event.code === 'ArrowUp') {\n        if (this._focusedItemIndex === -1) {\n          this._focusedItemIndex = fileList.children.length;\n        }\n        this._focusedItemIndex = (this._focusedItemIndex - 1 + fileList.children.length) % fileList.children.length;\n      }\n      if (event.code === 'ArrowDown') {\n        this._focusedItemIndex = (this._focusedItemIndex + 1) % fileList.children.length;\n      }\n\n      focusedItem = fileList.children[this._focusedItemIndex] as HTMLElement;\n      this.updateItemBackgroundColor(fileList, focusedItem, 'focused');\n    }\n\n    if (event.code === 'Enter' || event.code === 'Space') {\n      focusedItem = fileList.children[this._focusedItemIndex] as HTMLElement;\n\n      const file = focusedItem.children[0] as MgtFile;\n      event.preventDefault();\n      this.fireCustomEvent('itemClick', file.fileDetails);\n      this.handleFileClick(file.fileDetails);\n\n      this.updateItemBackgroundColor(fileList, focusedItem, 'selected');\n    }\n\n    if (event.code === 'Tab') {\n      focusedItem = fileList.children[this._focusedItemIndex] as HTMLElement;\n    }\n  };\n\n  /**\n   * load state into the component.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtFileList\n   */\n  protected async loadState() {\n    const provider = Providers.globalProvider;\n    if (!provider || provider.state === ProviderState.Loading) {\n      return;\n    }\n\n    if (provider.state === ProviderState.SignedOut) {\n      this.files = null;\n      return;\n    }\n    const graph = provider.graph.forComponent(this);\n    let files: DriveItem[];\n    let pageIterator: GraphPageIterator<DriveItem>;\n\n    const getFromMyDrive = !this.driveId && !this.siteId && !this.groupId && !this.userId;\n\n    // combinations of these attributes must be provided in order for the component to know which endpoint to call to request files\n    // not supplying enough for these combinations will get a null file result\n    if (\n      (this.driveId && !this.itemId && !this.itemPath) ||\n      (this.groupId && !this.itemId && !this.itemPath) ||\n      (this.siteId && !this.itemId && !this.itemPath) ||\n      (this.userId && !this.insightType && !this.itemId && !this.itemPath)\n    ) {\n      this.files = null;\n    }\n\n    if (!this.files) {\n      if (this.fileListQuery) {\n        pageIterator = await getFilesByListQueryIterator(graph, this.fileListQuery, this.pageSize);\n      } else if (this.fileQueries) {\n        files = await getFilesByQueries(graph, this.fileQueries);\n      } else if (getFromMyDrive) {\n        if (this.itemId) {\n          pageIterator = await getFilesByIdIterator(graph, this.itemId, this.pageSize);\n        } else if (this.itemPath) {\n          pageIterator = await getFilesByPathIterator(graph, this.itemPath, this.pageSize);\n        } else if (this.insightType) {\n          files = await getMyInsightsFiles(graph, this.insightType);\n        } else {\n          pageIterator = await getFilesIterator(graph, this.pageSize);\n        }\n      } else if (this.driveId) {\n        if (this.itemId) {\n          pageIterator = await getDriveFilesByIdIterator(graph, this.driveId, this.itemId, this.pageSize);\n        } else if (this.itemPath) {\n          pageIterator = await getDriveFilesByPathIterator(graph, this.driveId, this.itemPath, this.pageSize);\n        }\n      } else if (this.groupId) {\n        if (this.itemId) {\n          pageIterator = await getGroupFilesByIdIterator(graph, this.groupId, this.itemId, this.pageSize);\n        } else if (this.itemPath) {\n          pageIterator = await getGroupFilesByPathIterator(graph, this.groupId, this.itemPath, this.pageSize);\n        }\n      } else if (this.siteId) {\n        if (this.itemId) {\n          pageIterator = await getSiteFilesByIdIterator(graph, this.siteId, this.itemId, this.pageSize);\n        } else if (this.itemPath) {\n          pageIterator = await getSiteFilesByPathIterator(graph, this.siteId, this.itemPath, this.pageSize);\n        }\n      } else if (this.userId) {\n        if (this.itemId) {\n          pageIterator = await getUserFilesByIdIterator(graph, this.userId, this.itemId, this.pageSize);\n        } else if (this.itemPath) {\n          pageIterator = await getUserFilesByPathIterator(graph, this.userId, this.itemPath, this.pageSize);\n        } else if (this.insightType) {\n          files = await getUserInsightsFiles(graph, this.userId, this.insightType);\n        }\n      }\n\n      if (pageIterator) {\n        this.pageIterator = pageIterator;\n        this._preloadedFiles = [...this.pageIterator.value];\n\n        // handle when cached file length is greater than page size\n        if (this._preloadedFiles.length >= this.pageSize) {\n          files = this._preloadedFiles.splice(0, this.pageSize);\n        } else {\n          files = this._preloadedFiles.splice(0, this._preloadedFiles.length);\n        }\n      }\n\n      // filter files when extensions are provided\n      let filteredByFileExtension: DriveItem[];\n      if (this.fileExtensions?.length > 0) {\n        // retrive all pages before filtering\n        if (this.pageIterator?.value) {\n          while (this.pageIterator.hasNext) {\n            await fetchNextAndCacheForFilesPageIterator(this.pageIterator);\n          }\n          files = this.pageIterator.value;\n          this._preloadedFiles = [];\n        }\n        filteredByFileExtension = files.filter(file => {\n          for (const e of this.fileExtensions) {\n            if (e === this.getFileExtension(file.name)) {\n              return file;\n            }\n          }\n        });\n      }\n\n      if (filteredByFileExtension?.length >= 0) {\n        this.files = filteredByFileExtension;\n        if (this.pageSize) {\n          files = this.files.splice(0, this.pageSize);\n          this.files = files;\n        }\n      } else {\n        this.files = files;\n      }\n    }\n  }\n\n  /**\n   * Handle the click event on an item.\n   *\n   * @protected\n   * @memberof MgtFileList\n   */\n  protected handleItemSelect(item: DriveItem, event: UIEvent): void {\n    this.handleFileClick(item);\n    this.fireCustomEvent('itemClick', item);\n\n    // handle accessibility updates when item clicked\n    if (event) {\n      const fileList = this.renderRoot.querySelector('.file-list');\n\n      // get index of the focused item\n      const nodes = Array.from(fileList.children);\n      const li = (event.target as HTMLElement).closest('li');\n      const index = nodes.indexOf(li);\n      this._focusedItemIndex = index;\n      const clickedItem = fileList.children[this._focusedItemIndex] as HTMLElement;\n      this.updateItemBackgroundColor(fileList, clickedItem, 'selected');\n    }\n  }\n\n  /**\n   * Handle the click event on button to show next page.\n   *\n   * @protected\n   * @memberof MgtFileList\n   */\n  protected async renderNextPage() {\n    // render next page from cache if exists, or else use iterator\n    if (this._preloadedFiles.length > 0) {\n      this.files = [\n        ...this.files,\n        ...this._preloadedFiles.splice(0, Math.min(this.pageSize, this._preloadedFiles.length))\n      ];\n    } else {\n      if (this.pageIterator.hasNext) {\n        this._isLoadingMore = true;\n        const root = this.renderRoot.querySelector('#file-list-wrapper');\n        if (root?.animate) {\n          // play back\n          root.animate(\n            [\n              {\n                height: 'auto',\n                transformOrigin: 'top left'\n              },\n              {\n                height: 'auto',\n                transformOrigin: 'top left'\n              }\n            ],\n            {\n              duration: 1000,\n              easing: 'ease-in-out',\n              fill: 'both'\n            }\n          );\n        }\n        await fetchNextAndCacheForFilesPageIterator(this.pageIterator);\n        this._isLoadingMore = false;\n        this.files = this.pageIterator.value;\n      }\n    }\n\n    this.requestUpdate();\n  }\n\n  private handleFileClick(file: DriveItem) {\n    if (file?.webUrl && !this.disableOpenOnClick) {\n      window.open(file.webUrl, '_blank', 'noreferrer');\n    }\n  }\n\n  /**\n   * Get file extension string from file name\n   *\n   * @param name file name\n   * @returns {string} file extension\n   */\n  private getFileExtension(name: string) {\n    const re = /(?:\\.([^.]+))?$/;\n    const fileExtension = re.exec(name)[1] || '';\n\n    return fileExtension;\n  }\n\n  /**\n   * Handle remove and add css class on accessibility keyboard select and focus\n   *\n   * @param fileList HTML element\n   * @param focusedItem HTML element\n   * @param className background class to be applied\n   */\n  private updateItemBackgroundColor(fileList: Element, focusedItem: HTMLElement, className: string) {\n    // reset background color and remove tabindex\n    for (const node of fileList.children) {\n      node.classList.remove(className);\n      node.removeAttribute('tabindex');\n    }\n\n    // set focused item background color\n    if (focusedItem) {\n      focusedItem.classList.add(className);\n      focusedItem.scrollIntoView({ behavior: 'smooth', block: 'nearest', inline: 'start' });\n      focusedItem.setAttribute('tabindex', '0');\n      focusedItem.focus();\n    }\n\n    // remove selected classes\n    for (const node of fileList.children) {\n      node.classList.remove('selected');\n    }\n  }\n\n  /**\n   * Handle reload of File List and condition to clear cache\n   *\n   * @param clearCache boolean, if true clear cache\n   */\n  public reload(clearCache = false) {\n    if (clearCache) {\n      // clear cache File List\n      void clearFilesCache();\n    }\n    // explicitly run the task to reload data\n    void this._task.run();\n  }\n}\n","// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\n\nimport { css, CSSResult } from 'lit';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles: CSSResult[] = [\n  css`\n:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host{font-size:var(--default-font-size);font-weight:var(--default-font-weight,400);border:var(--file-border,1px solid transparent);border-radius:var(--file-border-radius,4px);background-color:var(--file-background-color)}:host .item{display:flex;flex-flow:row nowrap;align-items:center;background-color:var(--file-background-color);padding:var(--file-padding,0);margin:var(--file-margin,0)}:host .item:hover{background-color:var(--file-background-color-hover,var(--neutral-fill-hover));border-radius:var(--file-border-radius,4px);cursor:pointer;--secondary-text-color:var(--secondary-text-hover-color)}:host .item:focus,:host .item:focus-visible{background-color:var(--file-background-color-focus,var(--neutral-fill-hover));border-radius:var(--file-border-radius,4px)}:host .item__file-type-icon{height:var(--file-type-icon-height,28px);display:flex;align-items:center;justify-content:center}:host .item__file-type-icon img{height:var(--file-type-icon-height,28px)}:host .item__details{padding-inline-start:var(--file-padding-inline-start,14px)}:host .item__details .line1{font-size:var(--default-font-size);font-weight:var(--file-line1-font-weight,var(--default-font-weight,400));text-transform:var(--file-line1-text-transform,initial);line-height:20px;color:var(--file-line1-color,var(--neutral-foreground-rest))}:host .item__details .line2{color:var(--file-line2-color,var(--secondary-text-color));font-size:var(--file-line2-font-size,var(--last-modified-font-size,12px));font-weight:var(--file-line2-font-weight,var(--default-font-weight,400));text-transform:var(--file-line2-text-transform,initial);line-height:16px}:host .item__details .line3{color:var(--file-line3-color,var(--secondary-text-color));font-size:var(--file-line3-font-size,var(--size-font-size,12px));font-weight:var(--file-line3-font-weight,var(--default-font-weight,400));text-transform:var(--file-line3-text-transform,initial);line-height:16px}[dir=rtl] .item{direction:rtl}[dir=rtl] .item__details{direction:rtl}\n`];","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nconst fileTypeMap: Record<string, string> = {\n  PowerPoint: 'pptx',\n  Word: 'docx',\n  Excel: 'xlsx',\n  Pdf: 'pdf',\n  OneNote: 'onetoc',\n  OneNotePage: 'one',\n  InfoPath: 'xsn',\n  Visio: 'vstx',\n  Publisher: 'pub',\n  Project: 'mpp',\n  Access: 'accdb',\n  Mail: 'email',\n  Csv: 'csv',\n  Archive: 'archive',\n  Xps: 'vector',\n  Audio: 'audio',\n  Video: 'video',\n  Image: 'photo',\n  Web: 'html',\n  Text: 'txt',\n  Xml: 'xml',\n  Story: 'genericfile',\n  ExternalContent: 'genericfile',\n  Folder: 'folder',\n  Spsite: 'spo',\n  Other: 'genericfile'\n};\n\nconst baseUri = 'https://spoprod-a.akamaihd.net/files/fabric-cdn-prod_20201008.001/assets/item-types';\n\n/**\n * Available icon sizes\n */\nexport type IconSize = 16 | 20 | 24 | 32 | 40 | 48 | 64 | 96;\n\n/**\n * Helper to provide fluent icon image urls\n *\n * @param type\n * @param size\n * @param extension\n * @returns\n */\nexport const getFileTypeIconUri = (type: string, size: IconSize, extension: 'png' | 'svg') => {\n  const fileType: string = fileTypeMap[type] || 'genericfile';\n  return `${baseUri}/${size.toString()}/${fileType}.${extension}`;\n};\n\n/**\n * Helper to provide fluent icon image urls with the correct size\n *\n * @param type\n * @param size\n * @param extension\n * @returns\n */\nexport const getFileTypeIconUriByExtension = (type: string, size: IconSize, extension: 'png' | 'svg') => {\n  const found = Object.keys(fileTypeMap).find(key => fileTypeMap[key] === type);\n  if (found) {\n    return `${baseUri}/${size.toString()}/${type}.${extension}`;\n  } else if (type === 'jpg' || type === 'png') {\n    type = 'photo';\n    return `${baseUri}/${size.toString()}/${type}.${extension}`;\n  } else {\n    return null;\n  }\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nexport const strings = {\n  modifiedSubtitle: 'Modified',\n  sizeSubtitle: 'Size'\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { DriveItem } from '@microsoft/microsoft-graph-types';\nimport { html, TemplateResult } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { styles } from './mgt-file-css';\nimport { MgtTemplatedTaskComponent, Providers, ProviderState } from '@microsoft/mgt-element';\nimport {\n  getDriveItemById,\n  getDriveItemByPath,\n  getDriveItemByQuery,\n  getGroupDriveItemById,\n  getGroupDriveItemByPath,\n  getListDriveItemById,\n  getMyDriveItemById,\n  getMyDriveItemByPath,\n  getMyInsightsDriveItemById,\n  getSiteDriveItemById,\n  getSiteDriveItemByPath,\n  getUserDriveItemById,\n  getUserDriveItemByPath,\n  getUserInsightsDriveItemById\n} from '../../graph/graph.files';\nimport { formatBytes, getRelativeDisplayDate } from '../../utils/Utils';\nimport { OfficeGraphInsightString, ViewType, viewTypeConverter } from '../../graph/types';\nimport { getFileTypeIconUriByExtension } from '../../styles/fluent-icons';\nimport { getSvg, SvgIcon } from '../../utils/SvgHelper';\nimport { strings } from './strings';\nimport { registerComponent } from '@microsoft/mgt-element';\n\nexport const registerMgtFileComponent = () => registerComponent('file', MgtFile);\n\n/**\n * The File component is used to represent an individual file/folder from OneDrive or SharePoint by displaying information such as the file/folder name, an icon indicating the file type, and other properties such as the author, last modified date, or other details selected by the developer.\n *\n * @export\n * @class MgtFile\n * @extends {MgtTemplatedComponent}\n *\n * @cssprop --file-type-icon-height - {Length} file type icon height. Default value is 28px.\n * @cssprop --file-border - {String} file item border style. Default value is \"1px solid transparent\".\n * @cssprop --file-border-radius - {String} the border radius of the file component. Default value is 4px.\n * @cssprop --file-box-shadow - {String} the box-shadow of the component. Default value is none.\n * @cssprop --file-background-color - {Color} the background-color of the component.\n * @cssprop --file-background-color-focus - {Color} the background-color of the component on focus.\n * @cssprop --file-background-color-hover - {Color} the background-color of the component on hover.\n * @cssprop --file-padding - {String} the padding around the file component. Default value is 0px.\n * @cssprop --file-padding-inline-start - {Length} the padding between file icon and file details. Default value is 14px.\n * @cssprop --file-margin - {String} the margin around the file component. Default value is 0px.\n * @cssprop --file-line1-font-size - {Length} the first line text font size. Default value is 12px.\n * @cssprop --file-line1-font-weight - {Length} the first line text font weight. Default value is 400.\n * @cssprop --file-line1-color - {Color} the first line text color.\n * @cssprop --file-line1-text-transform - {String} the first line text text transform. Default value is initial.\n * @cssprop --file-line2-font-size - {Length} the second line text font size. Default value is 12px.\n * @cssprop --file-line2-font-weight - {Length} the second line text font weight. Default value is 400.\n * @cssprop --file-line2-color - {Color} the second line text color.\n * @cssprop --file-line2-text-transform - {String} the second line text text transform. Default value is initial.\n * @cssprop --file-line3-font-size - {Length} the third line text font size. Default value is 12px.\n * @cssprop --file-line3-font-weight - {Length} the third line text font weight. Default value is 400.\n * @cssprop --file-line3-color - {Color} the third line text color.\n * @cssprop --file-line3-text-transform - {String} the third line text text transform. Default value is 400.\n */\nexport class MgtFile extends MgtTemplatedTaskComponent {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n  protected get strings() {\n    return strings;\n  }\n\n  /**\n   * allows developer to provide query for a file\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'file-query'\n  })\n  public fileQuery: string;\n\n  /**\n   * allows developer to provide site id for a file\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'site-id'\n  })\n  public siteId: string;\n\n  /**\n   * allows developer to provide drive id for a file\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'drive-id'\n  })\n  public driveId: string;\n\n  /**\n   * allows developer to provide group id for a file\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'group-id'\n  })\n  public groupId: string;\n\n  /**\n   * allows developer to provide list id for a file\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'list-id'\n  })\n  public listId: string;\n\n  /**\n   * allows developer to provide user id for a file\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'user-id'\n  })\n  public userId: string;\n  /**\n   * allows developer to provide item id for a file\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'item-id'\n  })\n  public itemId: string;\n\n  /**\n   * allows developer to provide item path for a file\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'item-path'\n  })\n  public itemPath: string;\n\n  /**\n   * allows developer to provide insight type for a file\n   * can be trending, used, or shared\n   *\n   * @type {OfficeGraphInsightString}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'insight-type'\n  })\n  public insightType: OfficeGraphInsightString;\n\n  /**\n   * allows developer to provide insight id for a file\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'insight-id'\n  })\n  public insightId: string;\n\n  /**\n   * allows developer to provide DriveItem object\n   *\n   * @type {MicrosoftGraph.DriveItem}\n   * @memberof MgtFile\n   */\n  @property({\n    type: Object\n  })\n  public fileDetails: DriveItem;\n\n  /**\n   * allows developer to provide file type icon url\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'file-icon'\n  })\n  public fileIcon: string;\n\n  /**\n   * object containing Graph details on item\n   *\n   * @type {MicrosoftGraph.DriveItem}\n   * @memberof MgtFile\n   */\n  @property({ type: Object })\n  public driveItem: DriveItem;\n\n  /**\n   * Sets the property of the file to use for the first line of text.\n   * Default is file name\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({ attribute: 'line1-property' }) public line1Property: string;\n\n  /**\n   * Sets the property of the file to use for the second line of text.\n   * Default is last modified date time\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({ attribute: 'line2-property' }) public line2Property: string;\n\n  /**\n   * Sets the property of the file to use for the second line of text.\n   * Default is file size\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({ attribute: 'line3-property' }) public line3Property: string;\n\n  /**\n   * Sets what data will be rendered.\n   * Valid options are 'image', 'oneline', 'twolines', 'threelines', or 'fourlines'\n   * Default is 'threelines'.\n   *\n   * @type {ViewType}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'view',\n    converter: value => viewTypeConverter(value, 'threelines')\n  })\n  public view: ViewType;\n\n  /**\n   * Get the scopes required for file\n   *\n   * @static\n   * @return {*}  {string[]}\n   * @memberof MgtFile\n   */\n  public static get requiredScopes(): string[] {\n    return [...new Set(['files.read', 'files.read.all', 'sites.read.all'])];\n  }\n\n  protected args(): unknown[] {\n    return [\n      this.providerState,\n      this.fileQuery,\n      this.siteId,\n      this.itemId,\n      this.driveId,\n      this.itemPath,\n      this.listId,\n      this.groupId,\n      this.userId,\n      this.insightType,\n      this.insightId,\n      this.fileDetails,\n      this.fileIcon\n    ];\n  }\n\n  constructor() {\n    super();\n    this.line1Property = 'name';\n    this.line2Property = 'lastModifiedDateTime';\n    this.line3Property = 'size';\n    this.view = 'threelines';\n  }\n\n  public renderContent = () => {\n    if (!this.driveItem) {\n      return this.renderNoData();\n    }\n\n    const file = this.driveItem;\n    let fileTemplate: TemplateResult;\n\n    fileTemplate = this.renderTemplate('default', { file });\n    if (!fileTemplate) {\n      const fileDetailsTemplate: TemplateResult = this.renderDetails(file);\n      const fileTypeIconTemplate: TemplateResult = this.renderFileTypeIcon();\n\n      fileTemplate = html`\n        <div class=\"item\">\n          ${fileTypeIconTemplate} ${fileDetailsTemplate}\n        </div>`;\n    }\n\n    return fileTemplate;\n  };\n\n  /**\n   * Render the state when no data is available\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtFile\n   */\n  protected renderNoData(): TemplateResult {\n    return this.renderTemplate('no-data', null) || html``;\n  }\n\n  /**\n   * Render the file type icon\n   *\n   * @protected\n   * @param {string} [iconSrc]\n   * @memberof MgtFile\n   */\n  protected renderFileTypeIcon(): TemplateResult {\n    if (!this.fileIcon && !this.driveItem.name) {\n      return html``;\n    }\n\n    let fileIconSrc;\n\n    if (this.fileIcon) {\n      fileIconSrc = this.fileIcon;\n    } else {\n      // get file type extension from file name\n      const re = /(?:\\.([^.]+))?$/;\n      const fileType =\n        this.driveItem.package === undefined && this.driveItem.folder === undefined\n          ? re.exec(this.driveItem.name)[1]\n            ? re.exec(this.driveItem.name)[1].toLowerCase()\n            : this.driveItem.size\n            ? 'null'\n            : 'folder'\n          : this.driveItem.package !== undefined\n          ? this.driveItem.package.type === 'oneNote'\n            ? 'onetoc'\n            : 'folder'\n          : 'folder';\n      fileIconSrc = getFileTypeIconUriByExtension(fileType, 48, 'svg');\n    }\n\n    return html`\n      <div class=\"item__file-type-icon\">\n        ${\n          fileIconSrc\n            ? html`\n              <img src=${fileIconSrc} alt=\"File icon\" />\n            `\n            : html`\n              ${getSvg(SvgIcon.File)}\n            `\n        }\n      </div>\n    `;\n  }\n\n  /**\n   * Render the file details\n   *\n   * @protected\n   * @param {MicrosoftGraph.DriveItem} [driveItem]\n   * @memberof MgtFile\n   */\n  protected renderDetails(driveItem: DriveItem): TemplateResult {\n    if (!driveItem || this.view === 'image') {\n      return html``;\n    }\n\n    const details: TemplateResult[] = [];\n\n    if (this.view > 'image') {\n      const text = this.getTextFromProperty(driveItem, this.line1Property);\n      if (text) {\n        details.push(html`\n          <div class=\"line1\" aria-label=\"${text}\">${text}</div>\n        `);\n      }\n    }\n\n    if (this.view > 'oneline') {\n      const text = this.getTextFromProperty(driveItem, this.line2Property);\n      if (text) {\n        details.push(html`\n          <div class=\"line2\" aria-label=\"${text}\">${text}</div>\n        `);\n      }\n    }\n\n    if (this.view > 'twolines') {\n      const text = this.getTextFromProperty(driveItem, this.line3Property);\n      if (text) {\n        details.push(html`\n          <div class=\"line3\" aria-label=\"${text}\">${text}</div>\n        `);\n      }\n    }\n\n    return html`\n      <div class=\"item__details\">\n        ${details}\n      </div>\n    `;\n  }\n\n  /**\n   * load state into the component.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtFile\n   */\n  protected async loadState() {\n    if (this.fileDetails) {\n      this.driveItem = this.fileDetails;\n      return;\n    }\n\n    const provider = Providers.globalProvider;\n    if (!provider || provider.state === ProviderState.Loading) {\n      return;\n    }\n\n    if (provider.state === ProviderState.SignedOut) {\n      this.driveItem = null;\n      return;\n    }\n\n    const graph = provider.graph.forComponent(this);\n    let driveItem: DriveItem;\n\n    // evaluate to true when only item-id or item-path is provided\n    const getFromMyDrive = !this.driveId && !this.siteId && !this.groupId && !this.listId && !this.userId;\n\n    if (\n      // return null when a combination of provided properties are required\n      (this.driveId && !this.itemId && !this.itemPath) ||\n      (this.siteId && !this.itemId && !this.itemPath) ||\n      (this.groupId && !this.itemId && !this.itemPath) ||\n      (this.listId && !this.siteId && !this.itemId) ||\n      (this.insightType && !this.insightId) ||\n      (this.userId && !this.itemId && !this.itemPath && !this.insightType && !this.insightId)\n    ) {\n      driveItem = null;\n    } else if (this.fileQuery) {\n      driveItem = await getDriveItemByQuery(graph, this.fileQuery);\n    } else if (this.itemId && getFromMyDrive) {\n      driveItem = await getMyDriveItemById(graph, this.itemId);\n    } else if (this.itemPath && getFromMyDrive) {\n      driveItem = await getMyDriveItemByPath(graph, this.itemPath);\n    } else if (this.userId) {\n      if (this.itemId) {\n        driveItem = await getUserDriveItemById(graph, this.userId, this.itemId);\n      } else if (this.itemPath) {\n        driveItem = await getUserDriveItemByPath(graph, this.userId, this.itemPath);\n      } else if (this.insightType && this.insightId) {\n        driveItem = await getUserInsightsDriveItemById(graph, this.userId, this.insightType, this.insightId);\n      }\n    } else if (this.driveId) {\n      if (this.itemId) {\n        driveItem = await getDriveItemById(graph, this.driveId, this.itemId);\n      } else if (this.itemPath) {\n        driveItem = await getDriveItemByPath(graph, this.driveId, this.itemPath);\n      }\n    } else if (this.siteId && !this.listId) {\n      if (this.itemId) {\n        driveItem = await getSiteDriveItemById(graph, this.siteId, this.itemId);\n      } else if (this.itemPath) {\n        driveItem = await getSiteDriveItemByPath(graph, this.siteId, this.itemPath);\n      }\n    } else if (this.listId) {\n      driveItem = await getListDriveItemById(graph, this.siteId, this.listId, this.itemId);\n    } else if (this.groupId) {\n      if (this.itemId) {\n        driveItem = await getGroupDriveItemById(graph, this.groupId, this.itemId);\n      } else if (this.itemPath) {\n        driveItem = await getGroupDriveItemByPath(graph, this.groupId, this.itemPath);\n      }\n    } else if (this.insightType && !this.userId) {\n      driveItem = await getMyInsightsDriveItemById(graph, this.insightType, this.insightId);\n    }\n\n    this.driveItem = driveItem;\n  }\n\n  private getTextFromProperty(driveItem: DriveItem, properties: string): string {\n    if (!properties || properties.length === 0) {\n      return null;\n    }\n\n    const propertyList = properties.trim().split(',');\n    let text: string;\n    let i = 0;\n\n    while (!text && i < propertyList.length) {\n      const current = propertyList[i].trim();\n      switch (current) {\n        case 'size': {\n          // convert size to kb, mb, gb\n          let size = '0';\n          if (driveItem.size) {\n            size = formatBytes(driveItem.size);\n          }\n          text = `${this.strings.sizeSubtitle}: ${size}`;\n          break;\n        }\n        case 'lastModifiedDateTime': {\n          // convert date time\n          let relativeDateString: string;\n          let lastModifiedString: string;\n          if (driveItem.lastModifiedDateTime) {\n            const lastModifiedDateTime = new Date(driveItem.lastModifiedDateTime);\n            relativeDateString = getRelativeDisplayDate(lastModifiedDateTime);\n            lastModifiedString = `${this.strings.modifiedSubtitle} ${relativeDateString}`;\n          } else {\n            lastModifiedString = '';\n          }\n          text = lastModifiedString;\n          break;\n        }\n        default:\n          text = driveItem[current] as string;\n      }\n      i++;\n    }\n\n    return text;\n  }\n}\n","// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\n\nimport { css, CSSResult } from 'lit';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles: CSSResult[] = [\n  css`\n:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host{font-size:var(--default-font-size)}:host .flyout [slot=anchor]{display:flex;cursor:pointer}:host .flyout [slot=anchor].vertical{flex-direction:column;justify-content:center;align-items:center;margin-inline-start:0}:host .person-root{display:flex;flex-direction:row;align-items:center;background-color:var(--person-background-color,transparent);border-radius:var(--person-border-radius,4px)}:host .person-root.small .avatar-wrapper{min-width:var(--person-avatar-size,24px);width:var(--person-avatar-size,24px);height:var(--person-avatar-size,24px)}:host .person-root.small .contact-icon,:host .person-root.small .initials{font-size:calc(var(--person-avatar-size,24px) * .4)}:host .person-root.small .presence-wrapper svg{width:calc(var(--person-avatar-size,24px) * .28);height:calc(var(--person-avatar-size,24px) * .28)}:host .person-root.noline .avatar-wrapper,:host .person-root.oneline .avatar-wrapper{min-width:var(--person-avatar-size,24px);width:var(--person-avatar-size,24px);height:var(--person-avatar-size,24px)}:host .person-root.noline .avatar-wrapper .contact-icon,:host .person-root.noline .avatar-wrapper .initials,:host .person-root.oneline .avatar-wrapper .contact-icon,:host .person-root.oneline .avatar-wrapper .initials{font-size:calc(var(--person-avatar-size,24px) * .4)}:host .person-root.noline .avatar-wrapper .presence-wrapper svg,:host .person-root.oneline .avatar-wrapper .presence-wrapper svg{width:calc(var(--person-avatar-size,24px) * .28);height:calc(var(--person-avatar-size,24px) * .28)}:host .person-root.noline .presence-basic,:host .person-root.oneline .presence-basic{border-width:1px;position:relative;bottom:calc(var(--person-avatar-size,24px) * .12 - 4px)}:host .person-root.twolines .avatar-wrapper{min-width:var(--person-avatar-size,40px);width:var(--person-avatar-size,40px);height:var(--person-avatar-size,40px)}:host .person-root.twolines .avatar-wrapper .contact-icon,:host .person-root.twolines .avatar-wrapper .initials{font-size:calc(var(--person-avatar-size,40px) * .4)}:host .person-root.twolines .avatar-wrapper .presence-wrapper svg{width:calc(var(--person-avatar-size,40px) * .28);height:calc(var(--person-avatar-size,40px) * .28)}:host .person-root.large .avatar-wrapper,:host .person-root.threelines .avatar-wrapper{min-width:var(--person-avatar-size,56px);width:var(--person-avatar-size,56px);height:var(--person-avatar-size,56px)}:host .person-root.large .avatar-wrapper .contact-icon,:host .person-root.large .avatar-wrapper .initials,:host .person-root.threelines .avatar-wrapper .contact-icon,:host .person-root.threelines .avatar-wrapper .initials{font-size:calc(var(--person-avatar-size,56px) * .4)}:host .person-root.large .avatar-wrapper .presence-wrapper svg,:host .person-root.threelines .avatar-wrapper .presence-wrapper svg{width:calc(var(--person-avatar-size,56px) * .28);height:calc(var(--person-avatar-size,56px) * .28)}:host .person-root.fourlines .avatar-wrapper,:host .person-root.vertical .avatar-wrapper{min-width:var(--person-avatar-size,72px);width:var(--person-avatar-size,72px);height:var(--person-avatar-size,72px)}:host .person-root.fourlines .avatar-wrapper .contact-icon,:host .person-root.fourlines .avatar-wrapper .initials,:host .person-root.vertical .avatar-wrapper .contact-icon,:host .person-root.vertical .avatar-wrapper .initials{font-size:calc(var(--person-avatar-size,72px) * .4)}:host .person-root.fourlines .avatar-wrapper .presence-wrapper svg,:host .person-root.vertical .avatar-wrapper .presence-wrapper svg{width:calc(var(--person-avatar-size,72px) * .28);height:calc(var(--person-avatar-size,72px) * .28)}:host .person-root.vertical{flex-direction:column;justify-content:center;align-items:center}:host .person-root .avatar-wrapper{min-width:var(--person-avatar-size,24px);width:var(--person-avatar-size,24px);height:var(--person-avatar-size,24px);position:relative;box-sizing:border-box}:host .person-root .avatar-wrapper .contact-icon,:host .person-root .avatar-wrapper .initials,:host .person-root .avatar-wrapper img{height:100%;width:100%;border:var(--person-avatar-border,none);border-radius:var(--person-avatar-border-radius,50%);margin-block-start:var(--person-avatar-top-spacing,0);object-fit:cover;object-position:center top}:host .person-root .avatar-wrapper .contact-icon,:host .person-root .avatar-wrapper .initials{display:flex;justify-content:center;align-items:center;font-size:calc(var(--person-avatar-size,24px) * .4);font-weight:400;background:var(--person-initials-background-color,var(--neutral-fill-secondary-rest));color:var(--person-initials-text-color,var(--neutral-fill-strong-hover))}:host .person-root .avatar-wrapper .presence-wrapper{bottom:var(--person-presence-wrapper-bottom,0);right:0;position:absolute;border-radius:50%;background-color:var(--neutral-layer-1);border:1px solid var(--neutral-layer-1)}:host .person-root .avatar-wrapper .presence-wrapper svg{display:flex;width:calc(var(--person-avatar-size,24px) * .28);height:calc(var(--person-avatar-size,24px) * .28)}:host .person-root .details-wrapper{display:flex;flex-direction:column;align-items:flex-start;justify-content:center;min-width:var(--person-details-wrapper-width,168px);margin-inline-start:var(--person-details-left-spacing,12px);margin-block-end:var(--person-details-bottom-spacing,0)}:host .person-root .details-wrapper.vertical{display:inline-flex;flex-direction:column;justify-content:center;align-items:center;margin-inline-start:0}:host .person-root .details-wrapper .line1{font-size:var(--person-line1-font-size,ms-font-size-14);font-weight:var(--person-line1-font-weight,600);color:var(--person-line1-text-color,var(--neutral-foreground-rest));text-transform:var(--person-line1-text-transform,inherit);line-height:var(--person-line1-text-line-height,20px)}:host .person-root .details-wrapper .line2{font-size:var(--person-line2-font-size,var(--email-font-size,ms-font-size-12));font-weight:var(--person-line2-font-weight,400);color:var(--person-line2-text-color,var(--secondary-text-color));text-transform:var(--person-line2-text-transform,inherit);line-height:var(--person-line2-text-line-height,16px)}:host .person-root .details-wrapper .line3{font-size:var(--person-line3-font-size,var(--email-font-size,ms-font-size-12));font-weight:var(--person-line3-font-weight,400);color:var(--person-line3-text-color,var(--secondary-text-color));text-transform:var(--person-line3-text-transform,inherit);line-height:var(--person-line3-text-line-height,16px)}:host .person-root .details-wrapper .line4{font-size:var(--person-line4-font-size,var(--email-font-size,ms-font-size-12));font-weight:var(--person-line4-font-weight,400);color:var(--person-line4-text-color,var(--secondary-text-color));text-transform:var(--person-line4-text-transform,inherit);line-height:var(--person-line4-text-line-height,16px)}@media (forced-colors:active) and (prefers-color-scheme:dark){:host svg,:host svg>path{fill:#fff;fill-rule:nonzero;clip-rule:nonzero}}[dir=rtl] .presence-wrapper{right:unset!important;left:0}\n`];","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nconst avatarTypes = ['photo', 'initials'] as const;\n\nexport type AvatarType = (typeof avatarTypes)[number];\nexport const isAvatarType = (value: unknown): value is AvatarType =>\n  typeof value === 'string' && avatarTypes.includes(value as AvatarType);\nexport const avatarTypeConverter = (value: string, defaultValue: AvatarType = 'photo'): AvatarType =>\n  isAvatarType(value) ? value : defaultValue;\n\n/**\n * Configuration object for the Person component\n *\n * @export\n * @interface MgtPersonConfig\n */\nexport interface MgtPersonConfig {\n  /**\n   * Sets or gets whether the person component can use Contacts APIs to\n   * find contacts and their images\n   *\n   * @type {boolean}\n   */\n  useContactApis: boolean;\n}\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nconst activityMap = {\n  Available: 'Available',\n  Away: 'Away',\n  BeRightBack: 'Be right back',\n  Busy: 'Busy',\n  DoNotDisturb: 'Do not disturb',\n  InACall: 'In a call',\n  InAConferenceCall: 'In a conference call',\n  Inactive: 'Inactive',\n  InAMeeting: 'In a meeting',\n  Offline: 'Offline',\n  OffWork: 'Off work',\n  OutOfOffice: 'Out of office',\n  PresenceUnknown: 'Presence unknown',\n  Presenting: 'Presenting',\n  UrgentInterruptionsOnly: 'Urgent interruptions only'\n};\n\nexport const strings = {\n  ...activityMap,\n  photoFor: 'Photo for',\n  emailAddress: 'Email address',\n  initials: 'Initials'\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport {\n  MgtTemplatedTaskComponent,\n  ProviderState,\n  Providers,\n  customElementHelper,\n  mgtHtml\n} from '@microsoft/mgt-element';\nimport { Presence } from '@microsoft/microsoft-graph-types';\nimport { html, TemplateResult, nothing } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { findPeople, getEmailFromGraphEntity } from '../../graph/graph.people';\nimport { getGroupImage, getPersonImage } from '../../graph/graph.photos';\nimport { getUserPresence } from '../../graph/graph.presence';\nimport { findUsers, getMe, getUser } from '../../graph/graph.user';\nimport { getUserWithPhoto } from '../../graph/graph.userWithPhoto';\nimport { AvatarSize, IDynamicPerson, ViewType, viewTypeConverter } from '../../graph/types';\nimport '../../styles/style-helper';\nimport { SvgIcon, getSvg } from '../../utils/SvgHelper';\nimport '../sub-components/mgt-flyout/mgt-flyout';\nimport { MgtFlyout, registerMgtFlyoutComponent } from '../sub-components/mgt-flyout/mgt-flyout';\nimport { type PersonCardInteraction, personCardConverter } from './../PersonCardInteraction';\nimport { styles } from './mgt-person-css';\nimport { MgtPersonConfig, AvatarType, avatarTypeConverter } from './mgt-person-types';\nimport { strings } from './strings';\nimport { isUser, isContact } from '../../graph/entityType';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { buildComponentName, registerComponent } from '@microsoft/mgt-element';\nimport { IExpandable, IHistoryClearer } from '../mgt-person-card/types';\n\n/**\n * Person properties part of original set provided by graph by default\n */\nexport const defaultPersonProperties = [\n  'businessPhones',\n  'displayName',\n  'givenName',\n  'jobTitle',\n  'department',\n  'mail',\n  'mobilePhone',\n  'officeLocation',\n  'preferredLanguage',\n  'surname',\n  'userPrincipalName',\n  'id',\n  'userType'\n];\n\nexport const registerMgtPersonComponent = () => {\n  // register self first to avoid infinte loop due to circular ref between person and person card\n  registerComponent('person', MgtPerson);\n\n  registerMgtFlyoutComponent();\n};\n\n/**\n * The person component is used to display a person or contact by using their photo, name, and/or email address.\n *\n * @export\n * @class MgtPerson\n * @extends {MgtTemplatedComponent}\n *\n * @fires {CustomEvent<IDynamicPerson>} line1clicked - Fired when line1 is clicked\n * @fires {CustomEvent<IDynamicPerson>} line2clicked - Fired when line2 is clicked\n * @fires {CustomEvent<IDynamicPerson>} line3clicked - Fired when line3 is clicked\n * @fires {CustomEvent<IDynamicPerson>} line4clicked - Fired when line4 is clicked\n *\n * @cssprop --person-background-color - {Color} the color of the person component background.\n * @cssprop --person-background-border-radius - {Length} the border radius of the person component. Default is 4px.\n *\n * @cssprop --person-avatar-size - {Length} the width and height of the avatar. Default is 24px.\n * @cssprop --person-avatar-border - {String} the border around an avatar. Default is none.\n * @cssprop --person-avatar-border-radius - {String} the radius around the border of an avatar. Default is 50%.\n *\n * @cssprop --person-initials-text-color - {Color} the color of initials in an avatar.\n * @cssprop --person-initials-background-color - {Color} the color of the background in an avatar with initials.\n *\n * @cssprop --person-details-spacing - {Length} the space between the avatar and the person details. Default is 12px.\n *\n * @cssprop --person-line1-font-size - {String} the font-size of the line 1 text. Default is 14px.\n * @cssprop --person-line1-font-weight - {Length} the font weight of the line 1 text. Default is 600.\n * @cssprop --person-line1-text-color - {Color} the color of the line 1 text.\n * @cssprop --person-line1-text-transform - {String} the tex transform of the line 1 text. Default is inherit.\n * @cssprop --person-line1-text-line-height - {Length} the line height of the line 1 text. Default is 20px.\n *\n * @cssprop --person-line2-font-size - {Length} the font-size of the line 2 text. Default is 12px.\n * @cssprop --person-line2-font-weight - {Length} the font weight of the line 2 text. Default is 400.\n * @cssprop --person-line2-text-color - {Color} the color of the line 2 text.\n * @cssprop --person-line2-text-transform - {String} the tex transform of the line 2 text. Default is inherit.\n * @cssprop --person-line2-text-line-height - {Length} the line height of the line 2 text. Default is 16px.\n *\n * @cssprop --person-line3-font-size - {Length} the font-size of the line 3 text. Default is 12px.\n * @cssprop --person-line3-font-weight - {Length} the font weight of the line 3 text. Default is 400.\n * @cssprop --person-line3-text-color - {Color} the color of the line 3 text.\n * @cssprop --person-line3-text-transform - {String} the tex transform of the line 3 text. Default is inherit.\n * @cssprop --person-line3-text-line-height - {Length} the line height of the line 3 text. Default is 16px.\n *\n * @cssprop --person-line4-font-size - {Length} the font-size of the line 4 text. Default is 12px.\n * @cssprop --person-line4-font-weight - {Length} the font weight of the line 4 text. Default is 400.\n * @cssprop --person-line4-text-color - {Color} the color of the line 4 text.\n * @cssprop --person-line4-text-transform - {String} the tex transform of the line 4 text. Default is inherit.\n * @cssprop --person-line4-text-line-height - {Length} the line height of the line 4 text. Default is 16px.\n *\n * @cssprop --person-details-wrapper-width - {Length} the minimum width of the details section. Default is 168px.\n */\nexport class MgtPerson extends MgtTemplatedTaskComponent {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  /**\n   * Strings to use for localization\n   *\n   * @readonly\n   * @protected\n   * @memberof MgtPerson\n   */\n  protected get strings() {\n    return strings;\n  }\n\n  /**\n   * Global Configuration object for all\n   * person components\n   *\n   * @static\n   * @type {MgtPersonConfig}\n   * @memberof MgtPerson\n   */\n  public static config: MgtPersonConfig = {\n    useContactApis: true\n  };\n\n  /**\n   * allows developer to define name of person for component\n   *\n   * @type {string}\n   */\n  public get personQuery(): string {\n    return this._personQuery;\n  }\n  @property({\n    attribute: 'person-query'\n  })\n  public set personQuery(value: string) {\n    if (value === this._personQuery) {\n      return;\n    }\n\n    this._personQuery = value;\n    this._personDetails = null;\n    this.personDetailsInternal = null;\n  }\n\n  /**\n   * Fallback when no user is found\n   *\n   * @type {IDynamicPerson}\n   */\n  public get fallbackDetails(): IDynamicPerson {\n    return this._fallbackDetails;\n  }\n  @property({\n    attribute: 'fallback-details',\n    type: Object\n  })\n  public set fallbackDetails(value: IDynamicPerson) {\n    if (value === this._fallbackDetails) {\n      return;\n    }\n\n    this._fallbackDetails = value;\n\n    if (this.personDetailsInternal) {\n      return;\n    }\n  }\n\n  /**\n   * user-id property allows developer to use id value to determine person\n   *\n   * @type {string}\n   */\n  public get userId(): string {\n    return this._userId;\n  }\n  @property({\n    attribute: 'user-id'\n  })\n  public set userId(value: string) {\n    if (value === this._userId) {\n      return;\n    }\n\n    this._userId = value;\n    this.personDetailsInternal = null;\n    this._personDetails = null;\n  }\n\n  /**\n   * usage property allows you to specify where the component is being used to add\n   * customized personalization for it. Currently only supports \"people\" and \"people-picker\" as used in\n   * the people component.\n   *\n   * @type {string}\n   */\n  public get usage(): string {\n    return this._usage;\n  }\n  @property({\n    attribute: 'usage'\n  })\n  public set usage(value: string) {\n    if (value === this._usage) {\n      return;\n    }\n\n    this._usage = value;\n  }\n\n  /**\n   * determines if person component renders presence\n   *\n   * @type {boolean}\n   */\n  @property({\n    attribute: 'show-presence',\n    type: Boolean\n  })\n  public showPresence: boolean;\n\n  /**\n   * determines person component avatar size and apply presence badge accordingly.\n   * Valid options are 'small', 'large', and 'auto'\n   * Default is \"auto\". When you set the view more than oneline, it will default to \"auto\".\n   *\n   * @type {AvatarSize}\n   */\n  @property({\n    attribute: 'avatar-size',\n    type: String\n  })\n  public avatarSize: AvatarSize;\n\n  /**\n   * object containing Graph details on person\n   * a copy of person-details attribute\n   *\n   * @type {IDynamicPerson}\n   */\n  private get personDetailsInternal(): IDynamicPerson {\n    return this._personDetailsInternal;\n  }\n\n  @state()\n  private set personDetailsInternal(value: IDynamicPerson) {\n    if (this._personDetailsInternal === value) {\n      return;\n    }\n\n    this._personDetailsInternal = value;\n    this._fetchedImage = null;\n    this._fetchedPresence = null;\n  }\n\n  /**\n   * object containing Graph details on person\n   *\n   * @type {IDynamicPerson}\n   */\n  public get personDetails(): IDynamicPerson {\n    return this._personDetails;\n  }\n\n  @property({\n    attribute: 'person-details',\n    type: Object\n  })\n  public set personDetails(value: IDynamicPerson) {\n    if (this._personDetails === value) {\n      return;\n    }\n\n    this._personDetails = value;\n    this._fetchedImage = null;\n    this._fetchedPresence = null;\n  }\n\n  /**\n   * Set the image of the person\n   *\n   * @type {string}\n   * @memberof MgtPersonCard\n   */\n  public get personImage(): string {\n    return this._personImage || this._fetchedImage;\n  }\n  @property({\n    attribute: 'person-image',\n    type: String\n  })\n  public set personImage(value: string) {\n    if (value === this._personImage) {\n      return;\n    }\n\n    this._isInvalidImageSrc = !value;\n    this._personImage = value;\n  }\n\n  /**\n   * Sets whether the person image should be fetched\n   * from the Microsoft Graph based on the personDetailsInternal\n   * provided by the user\n   *\n   * @type {boolean}\n   * @memberof MgtPerson\n   */\n  @property({\n    attribute: 'fetch-image',\n    type: Boolean\n  })\n  public fetchImage: boolean;\n\n  /**\n   * Sets whether to disable the person image fetch\n   * from the Microsoft Graph\n   *\n   * @type {boolean}\n   * @memberof MgtPerson\n   */\n  @property({\n    attribute: 'disable-image-fetch',\n    type: Boolean\n  })\n  public disableImageFetch: boolean;\n\n  /**\n   * Sets the vertical layout of\n   * the Person Card\n   *\n   * @type {boolean}\n   * @memberof MgtPerson\n   */\n  @property({\n    attribute: 'vertical-layout',\n    type: Boolean\n  })\n  public verticalLayout: boolean;\n\n  /**\n   * Determines and sets person avatar view\n   * Valid options are 'photo' or 'initials'\n   *\n   * @type {AvatarType}\n   * @memberof MgtPerson\n   */\n  @property({\n    attribute: 'avatar-type',\n    converter: (value): AvatarType => avatarTypeConverter(value, 'photo')\n  })\n  public avatarType: AvatarType = 'photo';\n\n  /**\n   * Gets or sets presence of person\n   *\n   * @type {MicrosoftGraph.Presence}\n   * @memberof MgtPerson\n   */\n  public get personPresence(): Presence {\n    return this._personPresence || this._fetchedPresence;\n  }\n  @property({\n    attribute: 'person-presence',\n    type: Object\n  })\n  public set personPresence(value: Presence) {\n    if (value === this._personPresence) {\n      return;\n    }\n    this._personPresence = value;\n  }\n\n  /**\n   * Sets how the person-card is invoked\n   * Valid options are: 'none', 'hover', or 'click'\n   * Set to 'none' to not show the card\n   *\n   * @type {PersonCardInteraction}\n   * @memberof MgtPerson\n   */\n  @property({\n    attribute: 'person-card',\n    converter: value => personCardConverter(value)\n  })\n  public personCardInteraction: PersonCardInteraction = 'none';\n\n  /**\n   * Get the scopes required for person\n   *\n   * @static\n   * @return {*}  {string[]}\n   * @memberof MgtPerson\n   */\n  public static get requiredScopes(): string[] {\n    const scopes = ['user.readbasic.all', 'user.read', 'people.read', 'presence.read.all', 'presence.read'];\n\n    if (MgtPerson.config.useContactApis) {\n      scopes.push('contacts.read');\n    }\n\n    return scopes;\n  }\n\n  /**\n   * Gets the flyout element\n   *\n   * @protected\n   * @type {MgtFlyout}\n   * @memberof MgtPerson\n   */\n  protected get flyout(): MgtFlyout {\n    return this.renderRoot.querySelector('.flyout');\n  }\n\n  /**\n   * Sets the property of the personDetailsInternal to use for the first line of text.\n   * Default is displayName.\n   *\n   * @type {string}\n   * @memberof MgtPerson\n   */\n  @property({ attribute: 'line1-property' }) public line1Property: string;\n\n  /**\n   * Sets the property of the personDetailsInternal to use for the second line of text.\n   * Default is mail.\n   *\n   * @type {string}\n   * @memberof MgtPerson\n   */\n  @property({ attribute: 'line2-property' }) public line2Property: string;\n\n  /**\n   * Sets the property of the personDetailsInternal to use for the third line of text.\n   * Default is mail.\n   *\n   * @type {string}\n   * @memberof MgtPerson\n   */\n  @property({ attribute: 'line3-property' }) public line3Property: string;\n\n  /**\n   * Sets the property of the personDetailsInternal to use for the fourth line of text.\n   * Default is mail.\n   *\n   * @type {string}\n   * @memberof MgtPerson\n   */\n  @property({ attribute: 'line4-property' }) public line4Property: string;\n\n  /**\n   * Sets what data to be rendered.\n   * Valid options are 'image', 'oneline', 'twolines', 'threelines', or 'fourlines'\n   * Default is 'image'.\n   *\n   * @type {ViewType}\n   * @memberof MgtPerson\n   */\n  @property({\n    converter: value => viewTypeConverter(value, 'image')\n  })\n  public view: ViewType = 'image';\n\n  @state() private _fetchedImage: string;\n  @state() private _fetchedPresence: Presence;\n  @state() private _isInvalidImageSrc: boolean;\n  @state() private _personCardShouldRender: boolean;\n  @state() private _hasLoadedPersonCard = false;\n\n  private _personDetailsInternal: IDynamicPerson;\n  private _personDetails: IDynamicPerson;\n  private _fallbackDetails: IDynamicPerson;\n  private _personImage: string;\n  private _personPresence: Presence;\n  private _personQuery: string;\n  private _userId: string;\n  private _usage: string;\n\n  private _mouseLeaveTimeout = -1;\n  private _mouseEnterTimeout = -1;\n\n  constructor() {\n    super();\n\n    // defaults\n    this.personCardInteraction = 'none';\n    this.line1Property = 'displayName';\n    this.line2Property = 'jobTitle';\n    this.line3Property = 'department';\n    this.line4Property = 'email';\n    this.view = 'image';\n    this.avatarSize = 'auto';\n    this.disableImageFetch = false;\n    this._isInvalidImageSrc = false;\n    this.avatarType = 'photo';\n    this.verticalLayout = false;\n  }\n\n  protected readonly renderContent = () => {\n    // Prep data\n    const person = this.personDetails || this.personDetailsInternal || this.fallbackDetails;\n    const image = this.getImage();\n    const presence = this.personPresence || this._fetchedPresence;\n\n    if (!person && !image) {\n      return this.renderNoData();\n    }\n    if (!person?.personImage && image) {\n      person.personImage = image;\n    }\n\n    // Default template\n    let personTemplate = this.renderTemplate('default', { person, personImage: image, personPresence: presence });\n\n    if (!personTemplate) {\n      const detailsTemplate: TemplateResult = this.renderDetails(person, presence);\n      const imageWithPresenceTemplate: TemplateResult = this.renderAvatar(person, image, presence);\n\n      personTemplate = html`\n        ${imageWithPresenceTemplate}\n        ${detailsTemplate}\n      `;\n    }\n\n    const showPersonCard = this.personCardInteraction !== 'none';\n    if (showPersonCard) {\n      personTemplate = this.renderFlyout(personTemplate, person, image, presence);\n    }\n\n    const rootClasses = classMap({\n      'person-root': true,\n      small: !this.isThreeLines() && !this.isFourLines() && !this.isLargeAvatar(),\n      large: this.avatarSize !== 'auto' && this.isLargeAvatar(),\n      noline: this.isNoLine(),\n      oneline: this.isOneLine(),\n      twolines: this.isTwoLines(),\n      threelines: this.isThreeLines(),\n      fourlines: this.isFourLines(),\n      vertical: this.isVertical()\n    });\n\n    return html`\n      <div\n        class=\"${rootClasses}\"\n        dir=${this.direction}\n        @click=${this.handleMouseClick}\n        @mouseenter=${this.handleMouseEnter}\n        @mouseleave=${this.handleMouseLeave}\n        @keydown=${this.handleKeyDown}\n        tabindex=\"${ifDefined(this.personCardInteraction !== 'none' ? '0' : undefined)}\"\n      >\n        ${personTemplate}\n      </div>\n    `;\n  };\n\n  /**\n   * Render the loading state\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPerson\n   */\n  protected renderLoading = (): TemplateResult => {\n    return this.renderTemplate('loading', null) || html``;\n  };\n\n  /**\n   * Clears state of the component\n   *\n   * @protected\n   * @memberof MgtPerson\n   */\n  protected clearState(): void {\n    this._personImage = '';\n    this._personDetailsInternal = null;\n    this._fetchedImage = null;\n    this._fetchedPresence = null;\n  }\n\n  /**\n   * Render the state when no data is available\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPerson\n   */\n  protected renderNoData(): TemplateResult {\n    const noDataTemplate = this.renderTemplate('no-data', null);\n    if (noDataTemplate) {\n      return noDataTemplate;\n    }\n\n    const avatarClasses = {\n      'avatar-icon': true,\n      vertical: this.isVertical(),\n      small: !this.isLargeAvatar(),\n      noline: this.isNoLine(),\n      oneline: this.isOneLine(),\n      twolines: this.isTwoLines(),\n      threelines: this.isThreeLines(),\n      fourlines: this.isFourLines()\n    };\n\n    return html`\n       <i class=${classMap(avatarClasses)}></i>\n     `;\n  }\n\n  /**\n   * Render a person icon.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtPerson\n   */\n  protected renderPersonIcon() {\n    return getSvg(SvgIcon.Person);\n  }\n\n  /**\n   * Render the image part of the person template.\n   * If the image is unavailable, the person's initials will be used instead.\n   *\n   * @protected\n   * @param {string} [imageSrc]\n   * @param {IDynamicPerson} [personDetailsInternal]\n   * @returns\n   * @memberof MgtPerson\n   */\n  protected renderImage(personDetailsInternal: IDynamicPerson, imageSrc: string) {\n    const altText = `${this.strings.photoFor} ${personDetailsInternal.displayName}`;\n    const hasImage = imageSrc && !this._isInvalidImageSrc && this.avatarType === 'photo';\n    const imageOnly = this.avatarType === 'photo' && this.view === 'image';\n    const titleText =\n      (personDetailsInternal?.displayName || getEmailFromGraphEntity(personDetailsInternal)) ?? undefined;\n    const imageTemplate = html`<img\n      title=\"${ifDefined(imageOnly ? titleText : undefined)}\"\n      alt=${altText}\n      src=${imageSrc}\n      @error=${() => (this._isInvalidImageSrc = true)} />`;\n\n    const initials = personDetailsInternal ? this.getInitials(personDetailsInternal) : '';\n    const hasInitials = initials?.length;\n    const textClasses = classMap({\n      initials: hasInitials && !hasImage,\n      'contact-icon': !hasInitials\n    });\n    const contactIconTemplate = html`<i>${this.renderPersonIcon()}</i>`;\n    // consider the image to presentational if the view is anything other than image.\n    // this reduces the redundant announcement of the user's name.\n    const textTemplate = html`\n      <span \n        title=\"${ifDefined(this.view === 'image' ? titleText : undefined)}\"\n        role=\"${ifDefined(this.view === 'image' ? undefined : 'presentation')}\"\n        class=\"${textClasses}\"\n      >\n        ${hasInitials ? initials : contactIconTemplate}\n      </span>\n`;\n    if (hasImage) {\n      this.fireCustomEvent('person-image-rendered');\n    } else {\n      this.fireCustomEvent('person-icon-rendered');\n    }\n\n    return hasImage ? imageTemplate : textTemplate;\n  }\n\n  /**\n   * Render presence for the person.\n   *\n   * @param presence\n   * @memberof MgtPerson\n   * @returns\n   */\n  protected renderPresence(presence: Presence): TemplateResult {\n    if (!this.showPresence || !presence) {\n      return html``;\n    }\n    let presenceIcon: TemplateResult;\n\n    const { activity, availability } = presence;\n    switch (availability) {\n      case 'Available':\n      case 'AvailableIdle':\n        switch (activity) {\n          case 'OutOfOffice':\n            presenceIcon = getSvg(SvgIcon.PresenceOofAvailable);\n            break;\n          // OutOfOffice and Uknowns\n          case 'Available':\n          default:\n            presenceIcon = getSvg(SvgIcon.PresenceAvailable);\n            break;\n        }\n        break;\n      case 'Busy':\n      case 'BusyIdle':\n        switch (activity) {\n          case 'OutOfOffice':\n          case 'OnACall':\n            presenceIcon = getSvg(SvgIcon.PresenceOofBusy);\n            break;\n          // Busy,InACall,InAConferenceCall,InAMeeting, Unknown\n          case 'Busy':\n          case 'InACall':\n          case 'InAMeeting':\n          case 'InAConferenceCall':\n          default:\n            presenceIcon = getSvg(SvgIcon.PresenceBusy);\n            break;\n        }\n        break;\n      case 'DoNotDisturb':\n        switch (activity) {\n          case 'OutOfOffice':\n            presenceIcon = getSvg(SvgIcon.PresenceOofDnd);\n            break;\n          case 'Presenting':\n          case 'Focusing':\n          case 'UrgentInterruptionsOnly':\n          default:\n            presenceIcon = getSvg(SvgIcon.PresenceDnd);\n            break;\n        }\n        break;\n\n      case 'Away':\n        switch (activity) {\n          case 'OutOfOffice':\n            presenceIcon = getSvg(SvgIcon.PresenceOofAway);\n            break;\n          case 'AwayLastSeenTime':\n          default:\n            presenceIcon = getSvg(SvgIcon.PresenceAway);\n            break;\n        }\n        break;\n      case 'BeRightBack':\n        switch (activity) {\n          default:\n            presenceIcon = getSvg(SvgIcon.PresenceAway);\n            break;\n        }\n        break;\n      case 'Offline':\n        switch (activity) {\n          case 'Offline':\n            presenceIcon = getSvg(SvgIcon.PresenceOffline);\n            break;\n          case 'OutOfOffice':\n          case 'OffWork':\n            presenceIcon = getSvg(SvgIcon.PresenceOofAway);\n            break;\n          default:\n            presenceIcon = getSvg(SvgIcon.PresenceStatusUnknown);\n            break;\n        }\n        break;\n      default:\n        presenceIcon = getSvg(SvgIcon.PresenceStatusUnknown);\n        break;\n    }\n\n    const presenceWrapperClasses = classMap({\n      'presence-wrapper': true,\n      noline: this.isNoLine(),\n      oneline: this.isOneLine()\n    });\n\n    const formattedActivity = (this.strings[activity] as string) ?? nothing;\n\n    return html`\n      <span\n        class=\"${presenceWrapperClasses}\"\n        title=\"${formattedActivity}\"\n        aria-label=\"${formattedActivity}\"\n        role=\"img\">\n          ${presenceIcon}\n      </span>\n    `;\n  }\n\n  /**\n   * Render image with presence for the person.\n   *\n   * @protected\n   * @param\n   * @memberof MgtPersonCard\n   */\n  protected renderAvatar(personDetailsInternal: IDynamicPerson, image: string, presence: Presence): TemplateResult {\n    const hasInitials = !image || this._isInvalidImageSrc || this.avatarType === 'initials';\n\n    let title = '';\n\n    if (hasInitials && personDetailsInternal) {\n      title = `${this.strings.initials} ${this.getInitials(personDetailsInternal)}`;\n    } else {\n      title = personDetailsInternal ? personDetailsInternal.displayName || '' : '';\n      if (title !== '') {\n        title = `${this.strings.photoFor} ${title}`;\n      }\n    }\n\n    if (title === '') {\n      const emailAddress = getEmailFromGraphEntity(personDetailsInternal);\n      if (emailAddress !== null) {\n        title = `${this.strings.emailAddress} ${emailAddress}`;\n      }\n    }\n\n    const imageTemplate: TemplateResult = this.renderImage(personDetailsInternal, image);\n    const presenceTemplate: TemplateResult = this.renderPresence(presence);\n\n    return html`\n      <div class=\"avatar-wrapper\">\n        ${imageTemplate}\n        ${presenceTemplate}\n      </div>\n    `;\n  }\n\n  private handleLine1Clicked() {\n    this.fireCustomEvent('line1clicked', this.personDetailsInternal);\n  }\n\n  private handleLine2Clicked() {\n    this.fireCustomEvent('line2clicked', this.personDetailsInternal);\n  }\n\n  private handleLine3Clicked() {\n    this.fireCustomEvent('line3clicked', this.personDetailsInternal);\n  }\n\n  private handleLine4Clicked() {\n    this.fireCustomEvent('line4clicked', this.personDetailsInternal);\n  }\n\n  /**\n   * Render the details part of the person template.\n   *\n   * @param personProps\n   * @param presence\n   * @memberof MgtPerson\n   * @returns\n   */\n  protected renderDetails(personProps: IDynamicPerson, presence?: Presence): TemplateResult {\n    if (!personProps || this.view === 'image') {\n      return html``;\n    }\n\n    const person: IDynamicPerson & { presenceActivity?: string; presenceAvailability?: string } = personProps;\n    if (presence) {\n      person.presenceActivity = presence?.activity;\n      person.presenceAvailability = presence?.availability;\n    }\n\n    const details: TemplateResult[] = [];\n\n    // we already returned on image, so we must have a first line\n    const line1text = this.getTextFromProperty(person, this.line1Property);\n    if (this.hasTemplate('line1')) {\n      // Render the line1 template\n      const template = this.renderTemplate('line1', { person });\n      details.push(html`\n           <div class=\"line1\" @click=${() =>\n             this.handleLine1Clicked()} role=\"presentation\" aria-label=\"${line1text}\">${template}</div>\n         `);\n    } else {\n      // Render the line1 property value\n      if (line1text) {\n        details.push(html`\n             <div class=\"line1\" @click=${() =>\n               this.handleLine1Clicked()} role=\"presentation\" aria-label=\"${line1text}\">${line1text}</div>\n           `);\n      }\n    }\n\n    // if we have more than one line we add the second line\n    if (this.view !== 'oneline') {\n      const text = this.getTextFromProperty(person, this.line2Property);\n      if (this.hasTemplate('line2')) {\n        // Render the line2 template\n        const template = this.renderTemplate('line2', { person });\n        details.push(html`\n           <div class=\"line2\" @click=${() =>\n             this.handleLine2Clicked()} role=\"presentation\" aria-label=\"${text}\">${template}</div>\n         `);\n      } else {\n        // Render the line2 property value\n        if (text) {\n          details.push(html`\n             <div class=\"line2\" @click=${() =>\n               this.handleLine2Clicked()} role=\"presentation\" aria-label=\"${text}\">${text}</div>\n           `);\n        }\n      }\n    }\n\n    // if we have a third or fourth line we add the third line\n    if (this.view === 'threelines' || this.view === 'fourlines') {\n      const text = this.getTextFromProperty(person, this.line3Property);\n      if (this.hasTemplate('line3')) {\n        // Render the line3 template\n        const template = this.renderTemplate('line3', { person });\n        details.push(html`\n           <div class=\"line3\" @click=${() =>\n             this.handleLine3Clicked()} role=\"presentation\" aria-label=\"${text}\">${template}</div>\n         `);\n      } else {\n        // Render the line3 property value\n        if (text) {\n          details.push(html`\n             <div class=\"line3\" @click=${() =>\n               this.handleLine3Clicked()} role=\"presentation\" aria-label=\"${text}\">${text}</div>\n           `);\n        }\n      }\n    }\n\n    // add the fourth line if necessary\n    if (this.view === 'fourlines') {\n      const text = this.getTextFromProperty(person, this.line4Property);\n      if (this.hasTemplate('line4')) {\n        // Render the line4 template\n        const template = this.renderTemplate('line4', { person });\n        details.push(html`\n          <div class=\"line4\" @click=${() =>\n            this.handleLine4Clicked()} role=\"presentation\" aria-label=\"${text}\">${template}</div>\n        `);\n      } else {\n        // Render the line4 property value\n        if (text) {\n          details.push(html`\n            <div class=\"line4\" @click=${() =>\n              this.handleLine4Clicked()} role=\"presentation\" aria-label=\"${text}\">${text}</div>\n          `);\n        }\n      }\n    }\n\n    const detailsClasses = classMap({\n      'details-wrapper': true,\n      vertical: this.isVertical()\n    });\n\n    return html`\n      <div class=\"${detailsClasses}\">\n        ${details}\n      </div>\n    `;\n  }\n\n  /**\n   * Render the details flyout.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPerson\n   */\n  protected renderFlyout(\n    anchor: TemplateResult,\n    personDetails: IDynamicPerson,\n    image: string,\n    presence: Presence\n  ): TemplateResult {\n    const flyoutContent =\n      this._personCardShouldRender && this._hasLoadedPersonCard\n        ? html`\n           <div slot=\"flyout\" data-testid=\"flyout-slot\">\n             ${this.renderFlyoutContent(personDetails, image, presence)}\n           </div>`\n        : html``;\n\n    const slotClasses = classMap({\n      small: !this.isThreeLines() && !this.isFourLines() && !this.isLargeAvatar(),\n      large: this.avatarSize !== 'auto' && this.isLargeAvatar(),\n      noline: this.isNoLine(),\n      oneline: this.isOneLine(),\n      twolines: this.isTwoLines(),\n      threelines: this.isThreeLines(),\n      fourlines: this.isFourLines(),\n      vertical: this.isVertical()\n    });\n\n    return mgtHtml`\n      <mgt-flyout light-dismiss class=\"flyout\" .avoidHidingAnchor=${false}>\n        <div slot=\"anchor\" class=\"${slotClasses}\">${anchor}</div>\n        ${flyoutContent}\n      </mgt-flyout>`;\n  }\n\n  /**\n   * Render the flyout menu content.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPerson\n   */\n  protected renderFlyoutContent(personDetails: IDynamicPerson, image: string, presence: Presence): TemplateResult {\n    this.fireCustomEvent('flyout-content-rendered');\n    return (\n      this.renderTemplate('person-card', { person: personDetails, personImage: image }) ||\n      mgtHtml`\n        <mgt-person-card\n          class=\"mgt-person-card\"\n          lock-tab-navigation\n          .personDetails=${personDetails}\n          .personImage=${image}\n          .personPresence=${presence}\n          .showPresence=${this.showPresence}>\n        </mgt-person-card>`\n    );\n  }\n\n  protected args() {\n    return [\n      this.providerState,\n      this.verticalLayout,\n      this.view,\n      this.fallbackDetails,\n      this.line1Property,\n      this.line2Property,\n      this.line3Property,\n      this.line4Property,\n      this.fetchImage,\n      this.avatarType,\n      this.userId,\n      this.personQuery,\n      this.disableImageFetch,\n      this.showPresence,\n      this.personPresence,\n      this.personDetails\n    ];\n  }\n\n  /**\n   * load state into the component.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtPerson\n   */\n  protected async loadState() {\n    const provider = Providers.globalProvider;\n    if (!provider || provider.state === ProviderState.Loading) {\n      return;\n    }\n\n    if (provider && provider.state === ProviderState.SignedOut) {\n      this.personDetailsInternal = null;\n      return;\n    }\n\n    const graph = provider.graph.forComponent(this);\n\n    if ((this.verticalLayout && this.view !== 'fourlines') || this.fallbackDetails) {\n      this.line2Property = 'email';\n    }\n\n    // Prepare person props\n    let personProps = [\n      ...defaultPersonProperties,\n      this.line1Property,\n      this.line2Property,\n      this.line3Property,\n      this.line4Property\n    ];\n    personProps = personProps.filter(email => email !== 'email');\n\n    let details = this.personDetailsInternal || this.personDetails;\n    if (details) {\n      if (\n        !details.personImage &&\n        this.fetchImage &&\n        this.avatarType === 'photo' &&\n        !this.personImage &&\n        !this._fetchedImage\n      ) {\n        let image: string;\n        if ('groupTypes' in details) {\n          image = await getGroupImage(graph, details);\n        } else {\n          image = await getPersonImage(graph, details, MgtPerson.config.useContactApis);\n        }\n        if (image) {\n          details.personImage = image;\n          this._fetchedImage = image;\n        }\n      }\n    } else if (this.userId || this.personQuery === 'me') {\n      // Use userId or 'me' query to get the person and image\n      let person: IDynamicPerson;\n      if (this.avatarType === 'photo' && !this.disableImageFetch) {\n        person = await getUserWithPhoto(graph, this.userId, personProps);\n      } else {\n        if (this.personQuery === 'me') {\n          person = await getMe(graph, personProps);\n        } else {\n          person = await getUser(graph, this.userId, personProps);\n        }\n      }\n      this.personDetailsInternal = person;\n      this.personDetails = person;\n      this._fetchedImage = this.getImage();\n    } else if (this.personQuery) {\n      // Use the personQuery to find our person.\n      let people = await findPeople(graph, this.personQuery, 1);\n\n      if (!people || people.length === 0) {\n        people = (await findUsers(graph, this.personQuery, 1)) || [];\n      }\n\n      if (people?.length) {\n        this.personDetailsInternal = people[0];\n        this.personDetails = people[0];\n        if (this.avatarType === 'photo' && !this.disableImageFetch) {\n          const image = await getPersonImage(graph, people[0], MgtPerson.config.useContactApis);\n\n          if (image) {\n            this.personDetailsInternal.personImage = image;\n            this.personDetails.personImage = image;\n            this._fetchedImage = image;\n          }\n        }\n      }\n    }\n\n    details = this.personDetailsInternal || this.personDetails || this.fallbackDetails;\n\n    // populate presence\n    const defaultPresence: Presence = {\n      activity: 'Offline',\n      availability: 'Offline',\n      id: null\n    };\n\n    if (this.showPresence && !this.personPresence && !this._fetchedPresence) {\n      try {\n        if (details) {\n          // setting userId to 'me' ensures only the presence.read permission is required\n          const userId = this.personQuery !== 'me' ? details?.id : null;\n          this._fetchedPresence = await getUserPresence(graph, userId);\n        } else {\n          this._fetchedPresence = defaultPresence;\n        }\n      } catch (_) {\n        // set up a default Presence in case beta api changes or getting error code\n        this._fetchedPresence = defaultPresence;\n      }\n    }\n  }\n\n  /**\n   * Gets the user initials\n   *\n   * @protected\n   * @returns {string}\n   * @memberof MgtPerson\n   */\n  protected getInitials(person?: IDynamicPerson): string {\n    if (!person) {\n      person = this.personDetailsInternal;\n    }\n\n    if (isContact(person)) {\n      return person.initials;\n    }\n\n    let initials = '';\n    if (isUser(person)) {\n      initials += person.givenName?.[0]?.toUpperCase() ?? '';\n      initials += person.surname?.[0]?.toUpperCase() ?? '';\n    }\n\n    if (!initials && person.displayName) {\n      const name = person.displayName.split(/\\s+/);\n      for (let i = 0; i < 2 && i < name.length; i++) {\n        if (name[i][0] && this.isLetter(name[i][0])) {\n          initials += name[i][0].toUpperCase();\n        }\n      }\n    }\n\n    return initials;\n  }\n\n  private getImage(): string {\n    if (this.personImage) {\n      return this.personImage;\n    }\n\n    if (this._fetchedImage) {\n      return this._fetchedImage;\n    }\n\n    const person = this.personDetailsInternal || this.personDetails;\n    return person?.personImage ? person.personImage : null;\n  }\n\n  private isLetter(char: string) {\n    try {\n      return char.match(new RegExp('\\\\p{L}', 'u'));\n    } catch (e) {\n      return char.toLowerCase() !== char.toUpperCase();\n    }\n  }\n\n  private getTextFromProperty(personDetailsInternal: IDynamicPerson, prop: string): string {\n    if (!prop || prop.length === 0) {\n      return null;\n    }\n\n    const properties = prop.trim().split(',');\n    let text: string;\n    let i = 0;\n\n    while (!text && i < properties.length) {\n      const currentProp = properties[i].trim();\n      switch (currentProp) {\n        case 'mail':\n        case 'email':\n          text = getEmailFromGraphEntity(personDetailsInternal);\n          break;\n        default:\n          text = personDetailsInternal[currentProp] as string;\n      }\n      i++;\n    }\n\n    return text;\n  }\n\n  private isLargeAvatar() {\n    return (\n      this.avatarSize === 'large' || (this.avatarSize === 'auto' && this.view !== 'image' && this.view !== 'oneline')\n    );\n  }\n\n  private isNoLine() {\n    return this.view === 'image';\n  }\n\n  private isOneLine() {\n    return this.view === 'oneline';\n  }\n\n  private isTwoLines() {\n    return this.view === 'twolines';\n  }\n\n  private isThreeLines() {\n    return this.view === 'threelines';\n  }\n\n  private isFourLines() {\n    return this.view === 'fourlines';\n  }\n\n  private isVertical() {\n    return this.verticalLayout;\n  }\n\n  private readonly handleMouseClick = (e: MouseEvent) => {\n    const element = e.target as HTMLElement;\n    // todo: fix for disambiguation\n    if (\n      this.personCardInteraction === 'click' &&\n      element.tagName !== `${customElementHelper.prefix}-PERSON-CARD`.toUpperCase()\n    ) {\n      this.showPersonCard();\n    }\n  };\n\n  private readonly handleKeyDown = (e: KeyboardEvent) => {\n    // enter activates person-card\n    if (e) {\n      if (e.key === 'Enter') {\n        this.showPersonCard();\n      }\n    }\n  };\n\n  private readonly handleMouseEnter = () => {\n    clearTimeout(this._mouseEnterTimeout);\n    clearTimeout(this._mouseLeaveTimeout);\n    if (this.personCardInteraction !== 'hover') {\n      return;\n    }\n    this._mouseEnterTimeout = window.setTimeout(this.showPersonCard, 500);\n  };\n\n  private readonly handleMouseLeave = () => {\n    clearTimeout(this._mouseEnterTimeout);\n    clearTimeout(this._mouseLeaveTimeout);\n    this._mouseLeaveTimeout = window.setTimeout(this.hidePersonCard, 500);\n  };\n\n  /**\n   * hides the person card\n   *\n   * @memberof MgtPerson\n   */\n  public hidePersonCard = () => {\n    const flyout = this.flyout;\n    if (flyout) {\n      flyout.close();\n    }\n    const personCard =\n      this.querySelector<Element & IExpandable & IHistoryClearer>('.mgt-person-card') ||\n      this.renderRoot.querySelector('.mgt-person-card');\n    if (personCard) {\n      personCard.isExpanded = false;\n      personCard.clearHistory();\n    }\n  };\n\n  private readonly loadPersonCardResources = async () => {\n    // if there could be a person-card then we should load those resources using a dynamic import\n    if (this.personCardInteraction !== 'none' && !this._hasLoadedPersonCard) {\n      const { registerMgtPersonCardComponent } = await import('../mgt-person-card/mgt-person-card');\n\n      // only register person card if it hasn't been registered yet\n      if (!customElements.get(buildComponentName('person-card'))) registerMgtPersonCardComponent();\n\n      this._hasLoadedPersonCard = true;\n    }\n  };\n\n  public showPersonCard = () => {\n    if (!this._personCardShouldRender) {\n      this._personCardShouldRender = true;\n      void this.loadPersonCardResources();\n    }\n\n    const flyout = this.flyout;\n    if (flyout) {\n      flyout.open();\n    }\n  };\n}\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\n/**\n * An object containing width, height, top and left properties (aka segment's bounding rects)\n *\n * @interface IWindowSegment\n */\nexport interface IWindowSegment {\n  top: number;\n  left: number;\n  width: number;\n  height: number;\n}\n\n/**\n * An interface that defines the Window Segments Enumeration API.\n *\n * @interface SegmentAwareWindow\n */\nexport interface ISegmentAwareWindow extends Window {\n  /**\n   * Returns an array of screen segments.\n   *\n   * @returns {*}\n   * @memberof SegmentAwareWindow\n   */\n  getWindowSegments(): IWindowSegment[];\n}\n\n/**\n * Responds whether or not the Window object supports the Window Segments Enumeration API.\n *\n * @export\n * @returns {boolean}\n */\nexport const isWindowSegmentAware = (): boolean => {\n  return (window as unknown as ISegmentAwareWindow).getWindowSegments !== undefined;\n};\n\n/**\n * Returns an ISegmentAwareWindow instance of the Window object, or null if the API is not supported.\n *\n * @export\n * @returns {ISegmentAwareWindow}\n */\nexport const getSegmentAwareWindow = (): ISegmentAwareWindow => {\n  return isWindowSegmentAware() ? (window as unknown as ISegmentAwareWindow) : null;\n};\n","// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\n\nimport { css, CSSResult } from 'lit';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles: CSSResult[] = [\n  css`\n.root .scout-top{position:fixed;top:0;left:0}.root .scout-bottom{position:fixed;bottom:0;right:0}.root .flyout{display:none;position:fixed;z-index:9999999;opacity:0;box-shadow:var(--mgt-flyout-box-shadow,var(--elevation-shadow-card-rest));border-radius:8px}.root .flyout.small{overflow:hidden auto}.root.visible .flyout{display:inline-block;animation-name:fade-in;animation-duration:.3s;animation-timing-function:cubic-bezier(.1,.9,.2,1);animation-fill-mode:both;transition:top .3s ease,bottom .3s ease,left .3s ease}.root.visible .flyout.small{overflow:hidden auto}@keyframes fade-in{from{opacity:0;margin-top:-10px;margin-bottom:-10px}to{opacity:1;margin-top:0;margin-bottom:0}}\n`];","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { html, PropertyValues, TemplateResult } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { getSegmentAwareWindow, isWindowSegmentAware, IWindowSegment } from '../../../utils/WindowSegmentHelpers';\nimport { styles } from './mgt-flyout-css';\nimport { MgtBaseTaskComponent } from '@microsoft/mgt-element/';\nimport { registerComponent } from '@microsoft/mgt-element';\n\nexport const registerMgtFlyoutComponent = () => registerComponent('flyout', MgtFlyout);\n\n/**\n * A component to create flyout anchored to an element\n *\n * @export\n * @class MgtFlyout\n * @extends {LitElement}\n */\nexport class MgtFlyout extends MgtBaseTaskComponent {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  /**\n   * Gets or sets whether the flyout is light dismissible.\n   *\n   * @type {boolean}\n   * @memberof MgtFlyout\n   */\n  @property({\n    attribute: 'light-dismiss',\n    type: Boolean\n  })\n  public isLightDismiss: boolean;\n\n  /**\n   * Gets or sets whether the flyout should avoid rendering the flyout\n   * on top of the anchor\n   *\n   * @type {boolean}\n   * @memberof MgtFlyout\n   */\n  @property({\n    attribute: null,\n    type: Boolean\n  })\n  public avoidHidingAnchor: boolean;\n\n  /**\n   * Gets or sets whether the flyout is visible\n   *\n   * @type {string}\n   * @memberof MgtFlyout\n   */\n  @property({\n    attribute: 'isOpen',\n    type: Boolean\n  })\n  public get isOpen(): boolean {\n    return this._isOpen;\n  }\n  public set isOpen(value: boolean) {\n    const oldValue = this._isOpen;\n    if (oldValue === value) {\n      return;\n    }\n\n    this._isOpen = value;\n\n    window.requestAnimationFrame(() => {\n      this.setupWindowEvents(this.isOpen);\n      const flyout = this._flyout;\n      if (!this.isOpen && flyout) {\n        // reset style for next update\n        flyout.style.width = null;\n        flyout.style.setProperty('--mgt-flyout-set-width', null);\n        flyout.style.setProperty('--mgt-flyout-set-height', null);\n        flyout.style.maxHeight = null;\n        flyout.style.top = null;\n        flyout.style.left = null;\n        flyout.style.bottom = null;\n      }\n    });\n\n    this.requestUpdate('isOpen', oldValue);\n    this.dispatchEvent(new Event(value ? 'opened' : 'closed'));\n  }\n\n  // Minimum distance to render from window edge\n  private get _edgePadding() {\n    return 24;\n  }\n\n  // if the flyout is opened once, this will keep the flyout in the dom\n  private _renderedOnce = false;\n\n  private get _flyout(): HTMLElement {\n    return this.renderRoot.querySelector('.flyout');\n  }\n\n  private get _anchor(): HTMLElement {\n    return this.renderRoot.querySelector('.anchor');\n  }\n\n  private get _topScout(): HTMLElement {\n    return this.renderRoot.querySelector('.scout-top');\n  }\n\n  private get _bottomScout(): HTMLElement {\n    return this.renderRoot.querySelector('.scout-bottom');\n  }\n\n  private _isOpen = false;\n  private _smallView = false;\n  private _windowHeight: number;\n\n  constructor() {\n    super();\n\n    this.avoidHidingAnchor = true;\n\n    // handling when person-card is expanded and size changes\n    this.addEventListener('expanded', () => {\n      window.requestAnimationFrame(() => {\n        this.updateFlyout();\n      });\n    });\n  }\n\n  /**\n   * Show the flyout.\n   */\n  public open(): void {\n    this.isOpen = true;\n  }\n\n  /**\n   * Close the flyout.\n   */\n  public close(): void {\n    this.isOpen = false;\n  }\n\n  /**\n   * Invoked each time the custom element is disconnected from the document's DOM\n   *\n   * @memberof MgtFlyout\n   */\n  public disconnectedCallback() {\n    this.setupWindowEvents(false);\n    super.disconnectedCallback();\n  }\n\n  /**\n   * Invoked whenever the element is updated. Implement to perform\n   * post-updating tasks via DOM APIs, for example, focusing an element.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param changedProperties Map of changed properties with old values\n   */\n  protected updated(changedProps: PropertyValues) {\n    super.updated(changedProps);\n\n    window.requestAnimationFrame(() => {\n      this.updateFlyout();\n    });\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method must return\n   * a lit-html TemplateResult. Setting properties inside this method will *not*\n   * trigger the element to update.\n   */\n  protected render() {\n    const flyoutClasses = {\n      root: true,\n      visible: this.isOpen\n    };\n\n    const anchorTemplate = this.renderAnchor();\n    let flyoutTemplate = null;\n    this._windowHeight =\n      window.innerHeight && document.documentElement.clientHeight\n        ? Math.min(window.innerHeight, document.documentElement.clientHeight)\n        : window.innerHeight || document.documentElement.clientHeight;\n\n    if (this._windowHeight < 250) {\n      this._smallView = true;\n    }\n\n    if (this.isOpen || this._renderedOnce) {\n      this._renderedOnce = true;\n      const smallFlyoutClasses = classMap({\n        flyout: true,\n        small: this._smallView\n      });\n      flyoutTemplate = html`\n        <div class=${smallFlyoutClasses} @wheel=${this.handleFlyoutWheel}>\n          ${this.renderFlyout()}\n        </div>\n      `;\n    }\n\n    return html`\n      <div class=${classMap(flyoutClasses)}>\n        <div class=\"anchor\">\n          ${anchorTemplate}\n        </div>\n        <div class=\"scout-top\"></div>\n        <div class=\"scout-bottom\"></div>\n        ${flyoutTemplate}\n      </div>\n    `;\n  }\n\n  /**\n   * Renders the anchor content.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtFlyout\n   */\n  protected renderAnchor(): TemplateResult {\n    return html`\n      <slot name=\"anchor\"></slot>\n    `;\n  }\n\n  /**\n   * Renders the flyout.\n   */\n  protected renderFlyout(): TemplateResult {\n    return html`\n      <slot name=\"flyout\"></slot>\n    `;\n  }\n\n  /**\n   * Updates the position of the flyout.\n   * Makes a second recursive call to ensure the flyout is positioned correctly.\n   * This is needed as the width of the flyout is not settled until after the first render.\n   *\n   * @private\n   * @param {boolean} [firstPass=true]\n   * @return {*}\n   * @memberof MgtFlyout\n   */\n  private updateFlyout(firstPass = true) {\n    if (!this.isOpen) {\n      return;\n    }\n\n    const anchor = this._anchor;\n    const flyout = this._flyout;\n\n    if (flyout && anchor) {\n      const windowWidth =\n        window.innerWidth && document.documentElement.clientWidth\n          ? Math.min(window.innerWidth, document.documentElement.clientWidth)\n          : window.innerWidth || document.documentElement.clientWidth;\n\n      this._windowHeight =\n        window.innerHeight && document.documentElement.clientHeight\n          ? Math.min(window.innerHeight, document.documentElement.clientHeight)\n          : window.innerHeight || document.documentElement.clientHeight;\n\n      let left = 0;\n      let bottom: number;\n      let top = 0;\n      let height: number;\n      let width: number;\n\n      const flyoutRect = flyout.getBoundingClientRect();\n      const anchorRect = anchor.getBoundingClientRect();\n      const topScoutRect = this._topScout.getBoundingClientRect();\n      const bottomScoutRect = this._bottomScout.getBoundingClientRect();\n\n      const windowRect: IWindowSegment = {\n        height: this._windowHeight,\n        left: 0,\n        top: 0,\n        width: windowWidth\n      };\n\n      if (isWindowSegmentAware()) {\n        const segmentAwareWindow = getSegmentAwareWindow();\n        const screenSegments = segmentAwareWindow.getWindowSegments();\n\n        let anchorSegment: IWindowSegment;\n\n        const anchorCenterX = anchorRect.left + anchorRect.width / 2;\n        const anchorCenterY = anchorRect.top + anchorRect.height / 2;\n\n        for (const segment of screenSegments) {\n          if (anchorCenterX >= segment.left && anchorCenterY >= segment.top) {\n            anchorSegment = segment;\n            break;\n          }\n        }\n\n        if (anchorSegment) {\n          windowRect.left = anchorSegment.left;\n          windowRect.top = anchorSegment.top;\n          windowRect.width = anchorSegment.width;\n          windowRect.height = anchorSegment.height;\n        }\n      }\n\n      if (flyoutRect.width + 2 * this._edgePadding > windowRect.width) {\n        if (flyoutRect.width > windowRect.width) {\n          // flyout is wider than the window\n          width = windowRect.width;\n          left = 0;\n        } else {\n          // center in between\n          left = (windowRect.width - flyoutRect.width) / 2;\n        }\n      } else if (anchorRect.left + flyoutRect.width + this._edgePadding > windowRect.width) {\n        // it will render off screen to the right, move to the left\n        left = anchorRect.left - (anchorRect.left + flyoutRect.width + this._edgePadding - windowRect.width);\n      } else if (anchorRect.left < this._edgePadding) {\n        // it will render off screen to the left, move to the right\n        left = this._edgePadding;\n      } else {\n        left = anchorRect.left;\n      }\n\n      const anchorRectBottomToWindowBottom = windowRect.height - (anchorRect.top + anchorRect.height);\n      const anchorRectTopToWindowTop = anchorRect.top;\n\n      if (this.avoidHidingAnchor) {\n        if (anchorRectBottomToWindowBottom <= flyoutRect.height) {\n          if (anchorRectTopToWindowTop < flyoutRect.height) {\n            if (anchorRectTopToWindowTop > anchorRectBottomToWindowBottom) {\n              // more room top than bottom - render above\n              bottom = windowRect.height - anchorRect.top;\n              height = anchorRectTopToWindowTop;\n            } else {\n              // more room bottom than top\n              top = anchorRect.bottom;\n              height = anchorRectBottomToWindowBottom;\n            }\n          } else {\n            // render above anchor\n            bottom = windowRect.height - anchorRect.top;\n            height = anchorRectTopToWindowTop;\n          }\n        } else {\n          top = anchorRect.bottom;\n          height = anchorRectBottomToWindowBottom;\n        }\n      } else {\n        if (flyoutRect.height + 2 * this._edgePadding > windowRect.height) {\n          // flyout wants to be higher than the window hight, and we don't need to avoid hiding the anchor\n          // make the flyout height the height of the window\n          if (flyoutRect.height >= windowRect.height) {\n            height = windowRect.height;\n            top = 0;\n          } else {\n            top = (windowRect.height - flyoutRect.height) / 2;\n          }\n        } else {\n          if (anchorRect.top + anchorRect.height + flyoutRect.height + this._edgePadding > windowRect.height) {\n            // it will render offscreen bellow, move it up a bit\n            top = windowRect.height - flyoutRect.height - this._edgePadding;\n          } else {\n            top = Math.max(anchorRect.top + anchorRect.height, this._edgePadding);\n          }\n        }\n      }\n\n      // check the scout is positioned where it is supposed to be\n      // if it's not, then we are no longer fixed position and should assume\n      // absolute positioning\n      // this is a workaround when a transform is applied to a parent\n      // https://stackoverflow.com/questions/42660332/css-transform-parent-and-fixed-child\n      if (topScoutRect.top !== 0 || topScoutRect.left !== 0) {\n        left -= topScoutRect.left;\n\n        if (typeof bottom !== 'undefined') {\n          bottom += bottomScoutRect.top - this._windowHeight;\n        } else {\n          top -= topScoutRect.top;\n        }\n      }\n\n      if (this.direction === 'rtl') {\n        if (left > 100 && this.offsetLeft > 100) {\n          // potentially anchored to right side (for non people-picker flyout)\n          flyout.style.left = `${windowRect.width - left + flyoutRect.left - flyoutRect.width - 30}px`;\n        }\n      } else {\n        flyout.style.left = `${left + windowRect.left}px`;\n      }\n\n      if (typeof bottom !== 'undefined') {\n        flyout.style.top = 'unset';\n        flyout.style.bottom = `${bottom}px`;\n      } else {\n        flyout.style.bottom = 'unset';\n        flyout.style.top = `${top + windowRect.top}px`;\n      }\n\n      if (width) {\n        // if we had to set the width, recalculate since the height could have changed\n        flyout.style.width = `${width}px`;\n        flyout.style.setProperty('--mgt-flyout-set-width', `${width}px`);\n        window.requestAnimationFrame(() => this.updateFlyout());\n      }\n\n      // don't use the calculated height on the first pass as the contents of the flyout may not have rendered yet\n      // this gives them a change to contribute height and not get forced to a smaller than intended height\n      if (height && !firstPass) {\n        flyout.style.maxHeight = `${height}px`;\n        flyout.style.setProperty('--mgt-flyout-set-height', `${height}px`);\n      } else {\n        flyout.style.maxHeight = null;\n        flyout.style.setProperty('--mgt-flyout-set-height', 'unset');\n      }\n      if (firstPass) {\n        window.requestAnimationFrame(() => this.updateFlyout(false));\n      }\n    }\n  }\n\n  private setupWindowEvents(isOpen: boolean) {\n    if (isOpen && this.isLightDismiss) {\n      window.addEventListener('wheel', this.handleWindowEvent);\n      window.addEventListener('pointerdown', this.handleWindowEvent);\n      window.addEventListener('resize', this.handleResize);\n      window.addEventListener('keyup', this.handleKeyUp);\n    } else {\n      window.removeEventListener('wheel', this.handleWindowEvent);\n      window.removeEventListener('pointerdown', this.handleWindowEvent);\n      window.removeEventListener('resize', this.handleResize);\n      window.removeEventListener('keyup', this.handleKeyUp);\n    }\n  }\n\n  private readonly handleWindowEvent = (e: Event) => {\n    const flyout = this._flyout;\n\n    if (flyout) {\n      // IE\n      if (!e.composedPath) {\n        let currentElem = e.target as HTMLElement;\n        while (currentElem) {\n          currentElem = currentElem.parentElement;\n          if (currentElem === flyout || (e.type === 'pointerdown' && currentElem === this)) {\n            return;\n          }\n        }\n      } else {\n        const path = e.composedPath();\n        if (path.includes(flyout) || (e.type === 'pointerdown' && path.includes(this))) {\n          return;\n        }\n      }\n    }\n\n    this.close();\n  };\n\n  private readonly handleResize = () => {\n    this.close();\n  };\n\n  private readonly handleKeyUp = (e: KeyboardEvent) => {\n    if (e.key === 'Escape') {\n      this.close();\n    }\n  };\n\n  private readonly handleFlyoutWheel = (e: Event) => {\n    e.preventDefault();\n  };\n}\n","// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\n\nimport { css, CSSResult } from 'lit';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles: CSSResult[] = [\n  css`\n:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}\n`];","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { html } from 'lit';\nimport { MgtBaseTaskComponent } from '@microsoft/mgt-element';\nimport { styles } from './mgt-spinner-css';\nimport { registerComponent } from '@microsoft/mgt-element';\n\nexport const registerMgtSpinnerComponent = () => registerComponent('spinner', MgtSpinner);\n\n/**\n * Custom Component used to handle loading state in components.\n *\n * @export MgtSpinner\n * @class MgtSpinner\n * @extends {MgtBaseComponent}\n */\nexport class MgtSpinner extends MgtBaseTaskComponent {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * user the `css` tag function.\n   */\n  public static get styles() {\n    return styles;\n  }\n\n  /**\n   * Render the loading spinner\n   *\n   * @returns\n   * @memberof MgtSpinner\n   */\n  public render() {\n    return html`<fluent-progress-ring title=\"spinner\"></fluent-progress-ring>`;\n  }\n}\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\n/**\n * All schemas and stores for caching component calls\n */\nexport const schemas = {\n  presence: {\n    name: 'presence',\n    stores: {\n      presence: 'presence'\n    },\n    version: 2\n  },\n  users: {\n    name: 'users',\n    stores: {\n      users: 'users',\n      usersQuery: 'usersQuery',\n      userFilters: 'userFilters'\n    },\n    version: 3\n  },\n  photos: {\n    name: 'photos',\n    stores: {\n      contacts: 'contacts',\n      users: 'users',\n      groups: 'groups',\n      teams: 'teams'\n    },\n    version: 2\n  },\n  people: {\n    name: 'people',\n    stores: {\n      contacts: 'contacts',\n      groupPeople: 'groupPeople',\n      peopleQuery: 'peopleQuery'\n    },\n    version: 3\n  },\n  groups: {\n    name: 'groups',\n    stores: {\n      groups: 'groups',\n      groupsQuery: 'groupsQuery'\n    },\n    version: 5\n  },\n  get: {\n    name: 'responses',\n    stores: {\n      responses: 'responses'\n    },\n    version: 2\n  },\n  search: {\n    name: 'search',\n    stores: {\n      responses: 'responses'\n    },\n    version: 2\n  },\n  files: {\n    name: 'files',\n    stores: {\n      driveFiles: 'driveFiles',\n      groupFiles: 'groupFiles',\n      siteFiles: 'siteFiles',\n      userFiles: 'userFiles',\n      insightFiles: 'insightFiles',\n      fileQueries: 'fileQueries'\n    },\n    version: 2\n  },\n  fileLists: {\n    name: 'file-lists',\n    stores: {\n      fileLists: 'fileLists',\n      insightfileLists: 'insightfileLists'\n    },\n    version: 2\n  }\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { IDynamicPerson, IContact, IGroup, IUser } from './types';\n\nexport const isGroup = (obj: IDynamicPerson): obj is IGroup => {\n  return 'groupTypes' in obj;\n};\n\nexport const isUser = (obj: IDynamicPerson): obj is IUser => {\n  return 'personType' in obj || 'userType' in obj;\n};\n\nexport const isContact = (obj: IDynamicPerson): obj is IContact => {\n  return 'initials' in obj;\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport {\n  CacheItem,\n  CacheService,\n  CacheStore,\n  CollectionResponse,\n  GraphPageIterator,\n  IGraph,\n  prepScopes\n} from '@microsoft/mgt-element';\nimport { DriveItem, SharedInsight, Trending, UploadSession, UsedInsight } from '@microsoft/microsoft-graph-types';\nimport { schemas } from './cacheStores';\nimport { GraphRequest, ResponseType } from '@microsoft/microsoft-graph-client';\nimport { blobToBase64 } from '../utils/Utils';\nimport { MgtFileUploadConflictBehavior } from '../components/mgt-file-list/mgt-file-upload/mgt-file-upload';\n\n/**\n * Simple type guard to check if a response is an UploadSession\n *\n * @param session\n * @returns\n */\nexport const isUploadSession = (session: unknown): session is UploadSession => {\n  return Array.isArray((session as UploadSession).nextExpectedRanges);\n};\n\ntype Insight = SharedInsight | UsedInsight | Trending;\n\n/**\n * Object to be stored in cache\n */\ninterface CacheFile extends CacheItem {\n  /**\n   * stringified json representing a file\n   */\n  file?: string;\n}\n\n/**\n * Object to be stored in cache\n */\ninterface CacheFileList extends CacheItem {\n  /**\n   * stringified json representing a list of files\n   */\n  files?: string[];\n  /**\n   * nextLink string to get next page\n   */\n  nextLink?: string;\n}\n\n/**\n * document thumbnail object stored in cache\n */\nexport interface CacheThumbnail extends CacheItem {\n  /**\n   * tag associated with thumbnail\n   */\n  eTag?: string;\n  /**\n   * document thumbnail\n   */\n  thumbnail?: string;\n}\n\n/**\n * Clear Cache of FileList\n */\nexport const clearFilesCache = async (): Promise<void> => {\n  const cache: CacheStore<CacheFileList> = CacheService.getCache<CacheFileList>(\n    schemas.fileLists,\n    schemas.fileLists.stores.fileLists\n  );\n  await cache.clearStore();\n};\n\n/**\n * Defines the time it takes for objects in the cache to expire\n */\nexport const getFileInvalidationTime = (): number =>\n  CacheService.config.files.invalidationPeriod || CacheService.config.defaultInvalidationPeriod;\n\n/**\n * Whether or not the cache is enabled\n */\nexport const getIsFilesCacheEnabled = (): boolean =>\n  CacheService.config.files.isEnabled && CacheService.config.isEnabled;\n\n/**\n * Defines the time it takes for objects in the cache to expire\n */\nexport const getFileListInvalidationTime = (): number =>\n  CacheService.config.fileLists.invalidationPeriod || CacheService.config.defaultInvalidationPeriod;\n\n/**\n * Whether or not the cache is enabled\n */\nexport const getIsFileListsCacheEnabled = (): boolean =>\n  CacheService.config.fileLists.isEnabled && CacheService.config.isEnabled;\n\nconst validDriveItemScopes = [\n  'Files.Read',\n  'Files.ReadWrite',\n  'Files.Read.All',\n  'Files.ReadWrite.All',\n  'Group.Read.All',\n  'Group.ReadWrite.All',\n  'Sites.Read.All',\n  'Sites.ReadWrite.All'\n];\nexport const validInsightScopes = ['Sites.Read.All', 'Sites.ReadWrite.All'];\nconst validFileUploadScopes = ['Files.ReadWrite', 'Files.ReadWrite.All', 'Sites.ReadWrite.All'];\n/**\n * Load a DriveItem give and arbitrary query\n *\n * @param graph\n * @param resource\n * @returns\n */\nexport const getDriveItemByQuery = async (\n  graph: IGraph,\n  resource: string,\n  storeName: string = schemas.files.stores.fileQueries,\n  scopes = validDriveItemScopes\n): Promise<DriveItem> => {\n  // get from cache\n  const cache: CacheStore<CacheFile> = CacheService.getCache<CacheFile>(schemas.files, storeName);\n  const cachedFile = await getFileFromCache(cache, resource);\n  if (cachedFile) {\n    return cachedFile;\n  }\n\n  let response: DriveItem;\n  try {\n    response = (await graph.api(resource).middlewareOptions(prepScopes(scopes)).get()) as DriveItem;\n\n    if (getIsFilesCacheEnabled()) {\n      await cache.putValue(resource, { file: JSON.stringify(response) });\n    }\n    // eslint-disable-next-line no-empty\n  } catch {}\n\n  return response || null;\n};\n\n// GET /drives/{drive-id}/items/{item-id}\nexport const getDriveItemById = async (graph: IGraph, driveId: string, itemId: string): Promise<DriveItem> => {\n  const endpoint = `/drives/${driveId}/items/${itemId}`;\n  return getDriveItemByQuery(graph, endpoint, schemas.files.stores.driveFiles);\n};\n\n// GET /drives/{drive-id}/root:/{item-path}\nexport const getDriveItemByPath = async (graph: IGraph, driveId: string, itemPath: string): Promise<DriveItem> => {\n  const endpoint = `/drives/${driveId}/root:/${itemPath}`;\n  return getDriveItemByQuery(graph, endpoint, schemas.files.stores.driveFiles);\n};\n\n// GET /groups/{group-id}/drive/items/{item-id}\nexport const getGroupDriveItemById = async (graph: IGraph, groupId: string, itemId: string): Promise<DriveItem> => {\n  const endpoint = `/groups/${groupId}/drive/items/${itemId}`;\n  return getDriveItemByQuery(graph, endpoint, schemas.files.stores.groupFiles);\n};\n\n// GET /groups/{group-id}/drive/root:/{item-path}\nexport const getGroupDriveItemByPath = async (graph: IGraph, groupId: string, itemPath: string): Promise<DriveItem> => {\n  const endpoint = `/groups/${groupId}/drive/root:/${itemPath}`;\n  return getDriveItemByQuery(graph, endpoint, schemas.files.stores.groupFiles);\n};\n\n// GET /me/drive/items/{item-id}\nexport const getMyDriveItemById = async (graph: IGraph, itemId: string): Promise<DriveItem> => {\n  const endpoint = `/me/drive/items/${itemId}`;\n  return getDriveItemByQuery(graph, endpoint, schemas.files.stores.userFiles);\n};\n\n// GET /me/drive/root:/{item-path}\nexport const getMyDriveItemByPath = async (graph: IGraph, itemPath: string): Promise<DriveItem> => {\n  const endpoint = `/me/drive/root:/${itemPath}`;\n  return getDriveItemByQuery(graph, endpoint, schemas.files.stores.userFiles);\n};\n\n// GET /sites/{site-id}/drive/items/{item-id}\nexport const getSiteDriveItemById = async (graph: IGraph, siteId: string, itemId: string): Promise<DriveItem> => {\n  const endpoint = `/sites/${siteId}/drive/items/${itemId}`;\n  return getDriveItemByQuery(graph, endpoint, schemas.files.stores.siteFiles);\n};\n\n// GET /sites/{site-id}/drive/root:/{item-path}\nexport const getSiteDriveItemByPath = async (graph: IGraph, siteId: string, itemPath: string): Promise<DriveItem> => {\n  const endpoint = `/sites/${siteId}/drive/root:/${itemPath}`;\n  return getDriveItemByQuery(graph, endpoint, schemas.files.stores.siteFiles);\n};\n\n// GET /sites/{site-id}/lists/{list-id}/items/{item-id}/driveItem\nexport const getListDriveItemById = async (\n  graph: IGraph,\n  siteId: string,\n  listId: string,\n  itemId: string\n): Promise<DriveItem> => {\n  const endpoint = `/sites/${siteId}/lists/${listId}/items/${itemId}/driveItem`;\n  return getDriveItemByQuery(graph, endpoint, schemas.files.stores.siteFiles);\n};\n\n// GET /users/{user-id}/drive/items/{item-id}\nexport const getUserDriveItemById = async (graph: IGraph, userId: string, itemId: string): Promise<DriveItem> => {\n  const endpoint = `/users/${userId}/drive/items/${itemId}`;\n  return getDriveItemByQuery(graph, endpoint, schemas.files.stores.userFiles);\n};\n\n// GET /users/{user-id}/drive/root:/{item-path}\nexport const getUserDriveItemByPath = async (graph: IGraph, userId: string, itemPath: string): Promise<DriveItem> => {\n  const endpoint = `/users/${userId}/drive/root:/${itemPath}`;\n  return getDriveItemByQuery(graph, endpoint, schemas.files.stores.userFiles);\n};\n\n// GET /me/insights/trending/{id}/resource\n// GET /me/insights/used/{id}/resource\n// GET /me/insights/shared/{id}/resource\nexport const getMyInsightsDriveItemById = async (\n  graph: IGraph,\n  insightType: string,\n  id: string\n): Promise<DriveItem> => {\n  const endpoint = `/me/insights/${insightType}/${id}/resource`;\n  return getDriveItemByQuery(graph, endpoint, schemas.files.stores.insightFiles, validInsightScopes);\n};\n\n// GET /users/{id or userPrincipalName}/insights/{trending or used or shared}/{id}/resource\nexport const getUserInsightsDriveItemById = async (\n  graph: IGraph,\n  userId: string,\n  insightType: string,\n  id: string\n): Promise<DriveItem> => {\n  const endpoint = `/users/${userId}/insights/${insightType}/${id}/resource`;\n  return getDriveItemByQuery(graph, endpoint, schemas.files.stores.insightFiles, validInsightScopes);\n};\n\nconst getIterator = async (\n  graph: IGraph,\n  endpoint: string,\n  storeName: string,\n  top?: number\n): Promise<GraphPageIterator<DriveItem>> => {\n  let filesPageIterator: GraphPageIterator<DriveItem>;\n\n  // get iterator from cached values\n  const cache: CacheStore<CacheFileList> = CacheService.getCache<CacheFileList>(schemas.fileLists, storeName);\n  const fileList = await getFileListFromCache(cache, storeName, `${endpoint}:${top}`);\n  if (fileList) {\n    filesPageIterator = getFilesPageIteratorFromCache(graph, fileList.files, fileList.nextLink);\n\n    return filesPageIterator;\n  }\n\n  // get iterator from graph request\n  let request: GraphRequest;\n  try {\n    request = graph.api(endpoint).middlewareOptions(prepScopes(validDriveItemScopes));\n    if (top) {\n      request.top(top);\n    }\n    filesPageIterator = await getFilesPageIteratorFromRequest(graph, request);\n\n    if (getIsFileListsCacheEnabled()) {\n      const nextLink = filesPageIterator.nextLink;\n      await cache.putValue(endpoint, {\n        files: filesPageIterator.value.map(v => JSON.stringify(v)),\n        nextLink\n      });\n    }\n    // eslint-disable-next-line no-empty\n  } catch {}\n  return filesPageIterator || null;\n};\n\n// GET /me/drive/root/children\nexport const getFilesIterator = async (graph: IGraph, top?: number): Promise<GraphPageIterator<DriveItem>> => {\n  const endpoint = '/me/drive/root/children';\n  const cacheStore = schemas.fileLists.stores.fileLists;\n  return getIterator(graph, endpoint, cacheStore, top);\n};\n\n// GET /drives/{drive-id}/items/{item-id}/children\nexport const getDriveFilesByIdIterator = async (\n  graph: IGraph,\n  driveId: string,\n  itemId: string,\n  top?: number\n): Promise<GraphPageIterator<DriveItem>> => {\n  const endpoint = `/drives/${driveId}/items/${itemId}/children`;\n  const cacheStore = schemas.fileLists.stores.fileLists;\n  return getIterator(graph, endpoint, cacheStore, top);\n};\n\n// GET /drives/{drive-id}/root:/{item-path}:/children\nexport const getDriveFilesByPathIterator = async (\n  graph: IGraph,\n  driveId: string,\n  itemPath: string,\n  top?: number\n): Promise<GraphPageIterator<DriveItem>> => {\n  const endpoint = `/drives/${driveId}/root:/${itemPath}:/children`;\n  const cacheStore = schemas.fileLists.stores.fileLists;\n  return getIterator(graph, endpoint, cacheStore, top);\n};\n\n// GET /groups/{group-id}/drive/items/{item-id}/children\nexport const getGroupFilesByIdIterator = async (\n  graph: IGraph,\n  groupId: string,\n  itemId: string,\n  top?: number\n): Promise<GraphPageIterator<DriveItem>> => {\n  const endpoint = `/groups/${groupId}/drive/items/${itemId}/children`;\n  const cacheStore = schemas.fileLists.stores.fileLists;\n  return getIterator(graph, endpoint, cacheStore, top);\n};\n\n// GET /groups/{group-id}/drive/root:/{item-path}:/children\nexport const getGroupFilesByPathIterator = async (\n  graph: IGraph,\n  groupId: string,\n  itemPath: string,\n  top?: number\n): Promise<GraphPageIterator<DriveItem>> => {\n  const endpoint = `/groups/${groupId}/drive/root:/${itemPath}:/children`;\n  const cacheStore = schemas.fileLists.stores.fileLists;\n  return getIterator(graph, endpoint, cacheStore, top);\n};\n\n// GET /me/drive/items/{item-id}/children\nexport const getFilesByIdIterator = async (\n  graph: IGraph,\n  itemId: string,\n  top?: number\n): Promise<GraphPageIterator<DriveItem>> => {\n  const endpoint = `/me/drive/items/${itemId}/children`;\n  const cacheStore = schemas.fileLists.stores.fileLists;\n  return getIterator(graph, endpoint, cacheStore, top);\n};\n\n// GET /me/drive/root:/{item-path}:/children\nexport const getFilesByPathIterator = async (\n  graph: IGraph,\n  itemPath: string,\n  top?: number\n): Promise<GraphPageIterator<DriveItem>> => {\n  const endpoint = `/me/drive/root:/${itemPath}:/children`;\n  const cacheStore = schemas.fileLists.stores.fileLists;\n  return getIterator(graph, endpoint, cacheStore, top);\n};\n\n// GET /sites/{site-id}/drive/items/{item-id}/children\nexport const getSiteFilesByIdIterator = async (\n  graph: IGraph,\n  siteId: string,\n  itemId: string,\n  top?: number\n): Promise<GraphPageIterator<DriveItem>> => {\n  const endpoint = `/sites/${siteId}/drive/items/${itemId}/children`;\n  const cacheStore = schemas.fileLists.stores.fileLists;\n  return getIterator(graph, endpoint, cacheStore, top);\n};\n\n// GET /sites/{site-id}/drive/root:/{item-path}:/children\nexport const getSiteFilesByPathIterator = async (\n  graph: IGraph,\n  siteId: string,\n  itemPath: string,\n  top?: number\n): Promise<GraphPageIterator<DriveItem>> => {\n  const endpoint = `/sites/${siteId}/drive/root:/${itemPath}:/children`;\n  const cacheStore = schemas.fileLists.stores.fileLists;\n  return getIterator(graph, endpoint, cacheStore, top);\n};\n\n// GET /users/{user-id}/drive/items/{item-id}/children\nexport const getUserFilesByIdIterator = async (\n  graph: IGraph,\n  userId: string,\n  itemId: string,\n  top?: number\n): Promise<GraphPageIterator<DriveItem>> => {\n  const endpoint = `/users/${userId}/drive/items/${itemId}/children`;\n  const cacheStore = schemas.fileLists.stores.fileLists;\n  return getIterator(graph, endpoint, cacheStore, top);\n};\n\n// GET /users/{user-id}/drive/root:/{item-path}:/children\nexport const getUserFilesByPathIterator = async (\n  graph: IGraph,\n  userId: string,\n  itemPath: string,\n  top?: number\n): Promise<GraphPageIterator<DriveItem>> => {\n  const endpoint = `/users/${userId}/drive/root:/${itemPath}:/children`;\n  const cacheStore = schemas.fileLists.stores.fileLists;\n  return getIterator(graph, endpoint, cacheStore, top);\n};\n\nexport const getFilesByListQueryIterator = async (\n  graph: IGraph,\n  listQuery: string,\n  top?: number\n): Promise<GraphPageIterator<DriveItem>> => {\n  const cacheStore = schemas.fileLists.stores.fileLists;\n  return getIterator(graph, listQuery, cacheStore, top);\n};\n\n// GET /me/insights/{trending\t| used | shared}\nexport const getMyInsightsFiles = async (graph: IGraph, insightType: string): Promise<DriveItem[]> => {\n  const endpoint = `/me/insights/${insightType}`;\n  const cacheStore = schemas.fileLists.stores.insightfileLists;\n\n  // get files from cached values\n  const cache: CacheStore<CacheFileList> = CacheService.getCache<CacheFileList>(schemas.fileLists, cacheStore);\n  const fileList = await getFileListFromCache(cache, cacheStore, endpoint);\n  if (fileList) {\n    // fileList.files is string[] so JSON.parse to get proper objects\n    return fileList.files.map((file: string) => JSON.parse(file) as DriveItem);\n  }\n\n  // get files from graph request\n  let insightResponse: CollectionResponse<Insight>;\n  try {\n    insightResponse = (await graph\n      .api(endpoint)\n      .filter(\"resourceReference/type eq 'microsoft.graph.driveItem'\")\n      .middlewareOptions(prepScopes(validInsightScopes))\n      .get()) as CollectionResponse<Insight>;\n    // eslint-disable-next-line no-empty\n  } catch {}\n\n  const result = await getDriveItemsByInsights(graph, insightResponse, validInsightScopes);\n  if (getIsFileListsCacheEnabled()) {\n    await cache.putValue(endpoint, { files: result.map(file => JSON.stringify(file)) });\n  }\n\n  return result || null;\n};\n\n// GET /users/{id | userPrincipalName}/insights/{trending\t| used | shared}\nexport const getUserInsightsFiles = async (\n  graph: IGraph,\n  userId: string,\n  insightType: string\n): Promise<DriveItem[]> => {\n  let endpoint: string;\n  let filter: string;\n\n  if (insightType === 'shared') {\n    endpoint = '/me/insights/shared';\n    filter = `((lastshared/sharedby/id eq '${userId}') and (resourceReference/type eq 'microsoft.graph.driveItem'))`;\n  } else {\n    endpoint = `/users/${userId}/insights/${insightType}`;\n    filter = \"resourceReference/type eq 'microsoft.graph.driveItem'\";\n  }\n\n  const key = `${endpoint}?$filter=${filter}`;\n\n  // get files from cached values\n  const cacheStore = schemas.fileLists.stores.insightfileLists;\n  const cache: CacheStore<CacheFileList> = CacheService.getCache<CacheFileList>(schemas.fileLists, cacheStore);\n  const fileList = await getFileListFromCache(cache, cacheStore, key);\n  if (fileList) {\n    return fileList.files.map((file: string) => JSON.parse(file) as DriveItem);\n  }\n\n  // get files from graph request\n  let insightResponse: CollectionResponse<Insight>;\n\n  try {\n    insightResponse = (await graph\n      .api(endpoint)\n      .filter(filter)\n      .middlewareOptions(prepScopes(validInsightScopes))\n      .get()) as CollectionResponse<Insight>;\n    // eslint-disable-next-line no-empty\n  } catch {}\n\n  const result = await getDriveItemsByInsights(graph, insightResponse, validInsightScopes);\n  if (getIsFileListsCacheEnabled()) {\n    await cache.putValue(endpoint, { files: result.map(file => JSON.stringify(file)) });\n  }\n\n  return result || null;\n};\n\nexport const getFilesByQueries = async (graph: IGraph, fileQueries: string[]): Promise<DriveItem[]> => {\n  if (!fileQueries || fileQueries.length === 0) {\n    return [];\n  }\n\n  const batch = graph.createBatch();\n  const files: DriveItem[] = [];\n  let cache: CacheStore<CacheFile>;\n  let cachedFile: CacheFile;\n  if (getIsFilesCacheEnabled()) {\n    cache = CacheService.getCache<CacheFile>(schemas.files, schemas.files.stores.fileQueries);\n  }\n\n  for (const fileQuery of fileQueries) {\n    if (getIsFilesCacheEnabled()) {\n      cachedFile = await cache.getValue(fileQuery); // todo\n    }\n\n    if (getIsFilesCacheEnabled() && cachedFile && getFileInvalidationTime() > Date.now() - cachedFile.timeCached) {\n      files.push(JSON.parse(cachedFile.file) as DriveItem);\n    } else if (fileQuery !== '') {\n      batch.get(fileQuery, fileQuery, validDriveItemScopes);\n    }\n  }\n\n  try {\n    const responses = await batch.executeAll();\n\n    for (const fileQuery of fileQueries) {\n      const response = responses.get(fileQuery);\n      if (response?.content) {\n        files.push(response.content as DriveItem);\n        if (getIsFilesCacheEnabled()) {\n          await cache.putValue(fileQuery, { file: JSON.stringify(response.content) });\n        }\n      }\n    }\n\n    return files;\n  } catch (_) {\n    try {\n      return Promise.all(\n        fileQueries\n          .filter(fileQuery => fileQuery && fileQuery !== '')\n          .map(async fileQuery => {\n            const file = await getDriveItemByQuery(graph, fileQuery);\n            if (file) {\n              if (getIsFilesCacheEnabled()) {\n                await cache.putValue(fileQuery, { file: JSON.stringify(file) });\n              }\n              return file;\n            }\n          })\n      );\n    } catch (e) {\n      return [];\n    }\n  }\n};\n\nconst getDriveItemsByInsights = async (\n  graph: IGraph,\n  insightResponse: CollectionResponse<Insight>,\n  scopes: string[]\n): Promise<DriveItem[]> => {\n  if (!insightResponse) {\n    return [];\n  }\n\n  const insightItems = insightResponse.value;\n  const batch = graph.createBatch();\n  const driveItems: DriveItem[] = [];\n  for (const item of insightItems) {\n    const driveItemId = item.resourceReference.id;\n    if (driveItemId !== '') {\n      batch.get(driveItemId, driveItemId, scopes);\n    }\n  }\n\n  try {\n    const driveItemResponses = await batch.executeAll();\n\n    for (const item of insightItems) {\n      const driveItemResponse = driveItemResponses.get(item.resourceReference.id);\n      if (driveItemResponse?.content) {\n        driveItems.push(driveItemResponse.content as DriveItem);\n      }\n    }\n    return driveItems;\n  } catch (_) {\n    try {\n      // we're filtering the insights calls that feed this to ensure that only\n      // drive items are returned, but we still need to check for nulls\n      return Promise.all(\n        insightItems\n          .filter(insightItem => Boolean(insightItem.resourceReference.id))\n          .map(\n            async insightItem =>\n              (await graph\n                .api(insightItem.resourceReference.id)\n                .middlewareOptions(prepScopes(scopes))\n                .get()) as DriveItem\n          )\n      );\n    } catch (e) {\n      return [];\n    }\n  }\n};\n\nconst getFilesPageIteratorFromRequest = async (graph: IGraph, request: GraphRequest) => {\n  return GraphPageIterator.create<DriveItem>(graph, request);\n};\n\nconst getFilesPageIteratorFromCache = (graph: IGraph, value: string[], nextLink: string) => {\n  return GraphPageIterator.createFromValue<DriveItem>(\n    graph,\n    value.map(v => JSON.parse(v) as DriveItem),\n    nextLink\n  );\n};\n\n/**\n * Load a file from the cache\n *\n * @param {CacheStore<CacheFile>} cache\n * @param {string} key\n * @return {*}\n */\nconst getFileFromCache = async <TResult = DriveItem>(cache: CacheStore<CacheFile>, key: string): Promise<TResult> => {\n  if (getIsFilesCacheEnabled()) {\n    const file = await cache.getValue(key);\n\n    if (file && getFileInvalidationTime() > Date.now() - file.timeCached) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n      return JSON.parse(file.file) as TResult;\n    }\n  }\n\n  return null;\n};\n\nexport const getFileListFromCache = async (cache: CacheStore<CacheFileList>, store: string, key: string) => {\n  if (!cache) {\n    cache = CacheService.getCache<CacheFileList>(schemas.fileLists, store);\n  }\n\n  if (getIsFileListsCacheEnabled()) {\n    const fileList = await cache.getValue(key);\n\n    if (fileList && getFileListInvalidationTime() > Date.now() - fileList.timeCached) {\n      return fileList;\n    }\n  }\n\n  return null;\n};\n\n// refresh filesPageIterator to its next iteration and save current page to cache\nexport const fetchNextAndCacheForFilesPageIterator = async (filesPageIterator: GraphPageIterator<DriveItem>) => {\n  const nextLink = filesPageIterator.nextLink;\n\n  if (filesPageIterator.hasNext) {\n    await filesPageIterator.next();\n  }\n  if (getIsFileListsCacheEnabled()) {\n    const cache: CacheStore<CacheFileList> = CacheService.getCache<CacheFileList>(\n      schemas.fileLists,\n      schemas.fileLists.stores.fileLists\n    );\n\n    // match only the endpoint (after version number and before OData query params) e.g. /me/drive/root/children\n    const reg = /(graph.microsoft.com\\/(v1.0|beta))(.*?)(?=\\?)/gi;\n    const matches = reg.exec(nextLink);\n    const key = matches[3];\n\n    await cache.putValue(key, { files: filesPageIterator.value.map(v => JSON.stringify(v)), nextLink });\n  }\n};\n\n/**\n * retrieves the specified document thumbnail\n *\n * @param {string} resource\n * @param {string[]} scopes\n * @returns {Promise<string>}\n */\nexport const getDocumentThumbnail = async (\n  graph: IGraph,\n  resource: string,\n  scopes: string[]\n): Promise<CacheThumbnail> => {\n  try {\n    const response = (await graph\n      .api(resource)\n      .responseType(ResponseType.RAW)\n      .middlewareOptions(prepScopes(scopes))\n      .get()) as Response;\n\n    if (response.status === 404) {\n      // 404 means the resource does not have a thumbnail\n      // we still want to cache that state\n      // so we return an object that can be cached\n      return { eTag: null, thumbnail: null };\n    } else if (!response.ok) {\n      return null;\n    }\n\n    const eTag = response.headers.get('eTag');\n    const blob = await blobToBase64(await response.blob());\n    return { eTag, thumbnail: blob };\n  } catch (e) {\n    return null;\n  }\n};\n\n/**\n * retrieve file properties based on Graph query\n *\n * @param graph\n * @param resource\n * @returns\n */\nexport const getGraphfile = async (graph: IGraph, resource: string): Promise<DriveItem> => {\n  // get from graph request\n  try {\n    const response = (await graph.api(resource).middlewareOptions(prepScopes(validDriveItemScopes)).get()) as DriveItem;\n    return response || null;\n    // eslint-disable-next-line no-empty\n  } catch {}\n\n  return null;\n};\n\n/**\n * retrieve UploadSession Url for large file and send by chuncks\n *\n * @param graph\n * @param resource\n * @returns\n */\nexport const getUploadSession = async (\n  graph: IGraph,\n  resource: string,\n  conflictBehavior: MgtFileUploadConflictBehavior\n): Promise<UploadSession> => {\n  try {\n    // get from graph request\n    const sessionOptions = {\n      item: {\n        '@microsoft.graph.conflictBehavior': conflictBehavior ? conflictBehavior : 'rename'\n      }\n    };\n    let response: UploadSession;\n    try {\n      response = (await graph\n        .api(resource)\n        .middlewareOptions(prepScopes(validFileUploadScopes))\n        .post(JSON.stringify(sessionOptions))) as UploadSession;\n      // eslint-disable-next-line no-empty\n    } catch {}\n\n    return response || null;\n  } catch (e) {\n    return null;\n  }\n};\n\n/**\n * send file chunck to OneDrive, SharePoint Site\n *\n * @param graph\n * @param resource\n * @param file\n * @returns\n */\nexport const sendFileChunk = async (\n  graph: IGraph,\n  resource: string,\n  contentLength: string,\n  contentRange: string,\n  file: Blob\n): Promise<UploadSession | DriveItem> => {\n  try {\n    // get from graph request\n    const header = {\n      'Content-Length': contentLength,\n      'Content-Range': contentRange\n    };\n    let response: UploadSession | DriveItem;\n    try {\n      response = (await graph.client\n        .api(resource)\n        .middlewareOptions(prepScopes(validFileUploadScopes))\n        .headers(header)\n        .put(file)) as UploadSession | DriveItem;\n      // eslint-disable-next-line no-empty\n    } catch {}\n\n    return response || null;\n  } catch (e) {\n    return null;\n  }\n};\n\n/**\n * send file to OneDrive, SharePoint Site\n *\n * @param graph\n * @param resource\n * @param file\n * @returns\n */\nexport const sendFileContent = async (graph: IGraph, resource: string, file: File): Promise<DriveItem> => {\n  try {\n    // get from graph request\n    let response: DriveItem;\n    try {\n      response = (await graph.client\n        .api(resource)\n        .middlewareOptions(prepScopes(validFileUploadScopes))\n        .put(file)) as DriveItem;\n      // eslint-disable-next-line no-empty\n    } catch {}\n\n    return response || null;\n  } catch (e) {\n    return null;\n  }\n};\n\n/**\n * delete upload session\n *\n * @param graph\n * @param resource\n * @returns\n */\nexport const deleteSessionFile = async (graph: IGraph, resource: string): Promise<void> => {\n  try {\n    await graph.client.api(resource).middlewareOptions(prepScopes(validFileUploadScopes)).delete();\n  } catch {\n    // TODO: re-examine the error handling here\n    // DELETE returns a 204 on success so void makes sense to return on the happy path\n    // but we should probably throw on error\n    return null;\n  }\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { IGraph, prepScopes, CacheItem, CacheService, CacheStore, CacheSchema } from '@microsoft/mgt-element';\nimport { Contact, Person, User } from '@microsoft/microsoft-graph-types';\nimport { CollectionResponse } from '@microsoft/mgt-element';\nimport { extractEmailAddress } from '../utils/Utils';\nimport { schemas } from './cacheStores';\nimport { IDynamicPerson } from './types';\n\nconst personTypes = ['any', 'person', 'group'] as const;\n/**\n * Person Type enum\n *\n * @export\n * @enum {string}\n */\nexport type PersonType = (typeof personTypes)[number];\nexport const isPersonType = (value: unknown): value is PersonType =>\n  typeof value === 'string' && personTypes.includes(value as PersonType);\nexport const personTypeConverter = (value: string, defaultValue: PersonType = 'any'): PersonType =>\n  isPersonType(value) ? value : defaultValue;\n\nconst userTypes = ['any', 'user', 'contact'] as const;\n/**\n * User Type enum\n *\n * @export\n * @enum {string}\n */\nexport type UserType = (typeof userTypes)[number];\n\nexport const isUserType = (value: unknown): value is UserType => {\n  return typeof value === 'string' && userTypes.includes(value as UserType);\n};\n\nexport const userTypeConverter = (value: string, defaultValue: UserType = 'any'): UserType =>\n  isUserType(value) ? value : defaultValue;\n\n/**\n * Object to be stored in cache representing individual people\n */\ninterface CachePerson extends CacheItem {\n  /**\n   * json representing a person stored as string\n   */\n  person?: string;\n}\n\n/**\n * Stores results of queries (multiple people returned)\n */\ninterface CachePeopleQuery extends CacheItem {\n  /**\n   * max number of results the query asks for\n   */\n  maxResults?: number;\n  /**\n   * list of people returned by query (might be less than max results!)\n   */\n  results?: string[];\n}\n\n/**\n * Defines the expiration time\n */\nconst getPeopleInvalidationTime = (): number => {\n  return CacheService.config.people.invalidationPeriod || CacheService.config.defaultInvalidationPeriod;\n};\n\n/**\n * Whether the people store is enabled\n */\nconst getIsPeopleCacheEnabled = (): boolean => CacheService.config.people.isEnabled && CacheService.config.isEnabled;\n\nconst validPeopleQueryScopes = ['People.Read', 'People.Read.All'];\nconst validContactQueryScopes = ['Contacts.Read', 'Contacts.ReadWrite'];\n\n/**\n * async promise, returns all Graph people who are most relevant contacts to the signed in user.\n *\n * @param {IGraph} graph\n * @param {string} query\n * @param {number} [top=10] - number of people to return\n * @param {UserType} [personType='any'] - the type of person to search for\n * @returns {(Promise<Person[]>)}\n */\nexport const findPeople = async (\n  graph: IGraph,\n  query: string,\n  top = 10,\n  userType: UserType = 'any',\n  filters = ''\n): Promise<Person[]> => {\n  const cacheKey = `${query}:${top}:${userType}`;\n  let cache: CacheStore<CachePeopleQuery>;\n  if (getIsPeopleCacheEnabled()) {\n    const people: CacheSchema = schemas.people;\n    const peopleQuery: string = schemas.people.stores.peopleQuery;\n    cache = CacheService.getCache<CachePeopleQuery>(people, peopleQuery);\n    const result: CachePeopleQuery = getIsPeopleCacheEnabled() ? await cache.getValue(cacheKey) : null;\n    if (result && getPeopleInvalidationTime() > Date.now() - result.timeCached) {\n      return result.results.map(peopleStr => JSON.parse(peopleStr) as Person);\n    }\n  }\n\n  let filter = \"personType/class eq 'Person'\";\n\n  if (userType !== 'any') {\n    if (userType === 'user') {\n      filter += \"and personType/subclass eq 'OrganizationUser'\";\n    } else {\n      filter += \"and (personType/subclass eq 'ImplicitContact' or personType/subclass eq 'PersonalContact')\";\n    }\n  }\n\n  if (filters !== '') {\n    // Adding the default people filters to the search filters\n    filter += ` and  ${filters}`;\n  }\n  let graphResult: CollectionResponse<Person>;\n  try {\n    let graphRequest = graph\n      .api('/me/people')\n      .search('\"' + query + '\"')\n      .top(top)\n      .filter(filter)\n      .middlewareOptions(prepScopes(validPeopleQueryScopes));\n\n    if (userType !== 'contact') {\n      // for any type other than Contact, user a wider search\n      graphRequest = graphRequest.header('X-PeopleQuery-QuerySources', 'Mailbox,Directory');\n    }\n\n    graphResult = (await graphRequest.get()) as CollectionResponse<Person>;\n\n    if (getIsPeopleCacheEnabled() && graphResult) {\n      const item: CachePeopleQuery = { maxResults: top, results: null };\n      item.results = graphResult.value.map(personStr => JSON.stringify(personStr));\n      await cache.putValue(cacheKey, item);\n    }\n  } catch (error) {\n    // intentionally empty\n  }\n  return graphResult?.value;\n};\n\n/**\n * async promise to the Graph for People, by default, it will request the most frequent contacts for the signed in user.\n *\n * @returns {(Promise<Person[]>)}\n * @memberof Graph\n */\nexport const getPeople = async (\n  graph: IGraph,\n  userType: UserType = 'any',\n  peopleFilters = '',\n  top = 10\n): Promise<Person[]> => {\n  let cache: CacheStore<CachePeopleQuery>;\n  const cacheKey = `${peopleFilters ? peopleFilters : `*:${userType}`}:${top}`;\n\n  if (getIsPeopleCacheEnabled()) {\n    cache = CacheService.getCache<CachePeopleQuery>(schemas.people, schemas.people.stores.peopleQuery);\n    const cacheRes = await cache.getValue(cacheKey);\n\n    if (cacheRes && getPeopleInvalidationTime() > Date.now() - cacheRes.timeCached) {\n      return cacheRes.results.map(ppl => JSON.parse(ppl) as Person);\n    }\n  }\n\n  const uri = '/me/people';\n  let filter = \"personType/class eq 'Person'\";\n  if (userType !== 'any') {\n    if (userType === 'user') {\n      filter += \"and personType/subclass eq 'OrganizationUser'\";\n    } else {\n      filter += \"and (personType/subclass eq 'ImplicitContact' or personType/subclass eq 'PersonalContact')\";\n    }\n  }\n\n  if (peopleFilters) {\n    filter += ` and ${peopleFilters}`;\n  }\n\n  let people: CollectionResponse<Person>;\n  try {\n    let graphRequest = graph.api(uri).middlewareOptions(prepScopes(validPeopleQueryScopes)).top(top).filter(filter);\n\n    if (userType !== 'contact') {\n      // for any type other than Contact, user a wider search\n      graphRequest = graphRequest.header('X-PeopleQuery-QuerySources', 'Mailbox,Directory');\n    }\n\n    people = (await graphRequest.get()) as CollectionResponse<Person>;\n    if (getIsPeopleCacheEnabled() && people) {\n      await cache.putValue(cacheKey, { maxResults: 10, results: people.value.map(ppl => JSON.stringify(ppl)) });\n    }\n  } catch (_) {\n    // no-op\n  }\n  return people ? people.value : null;\n};\n\n/**\n * Attempts to extract the email from the IDynamicPerson properties.\n *\n * @param {IDynamicperson} entity\n */\nexport const getEmailFromGraphEntity = (entity: IDynamicPerson): string => {\n  const person = entity as Person;\n  const user = entity as User;\n  const contact = entity as Contact;\n\n  if (user.mail) {\n    return extractEmailAddress(user.mail);\n  } else if (person.scoredEmailAddresses?.length) {\n    return extractEmailAddress(person.scoredEmailAddresses[0].address);\n  } else if (contact.emailAddresses?.length) {\n    return extractEmailAddress(contact.emailAddresses[0].address);\n  }\n  return null;\n};\n\n/**\n * async promise, returns a Graph contact associated with the email provided\n *\n * @param {string} email\n * @returns {(Promise<Contact[]>)}\n * @memberof Graph\n */\nexport const findContactsByEmail = async (graph: IGraph, email: string): Promise<Contact[]> => {\n  let cache: CacheStore<CachePerson>;\n  if (getIsPeopleCacheEnabled()) {\n    cache = CacheService.getCache<CachePerson>(schemas.people, schemas.people.stores.contacts);\n    const contact = await cache.getValue(email);\n\n    if (contact && getPeopleInvalidationTime() > Date.now() - contact.timeCached) {\n      return JSON.parse(contact.person) as Contact[];\n    }\n  }\n\n  const encodedEmail = `${email.replace(/#/g, '%2523')}`;\n\n  const result = (await graph\n    .api('/me/contacts')\n    .filter(`emailAddresses/any(a:a/address eq '${encodedEmail}')`)\n    .middlewareOptions(prepScopes(validContactQueryScopes))\n    .get()) as CollectionResponse<Contact>;\n\n  if (getIsPeopleCacheEnabled() && result) {\n    await cache.putValue(email, { person: JSON.stringify(result.value) });\n  }\n\n  return result ? result.value : null;\n};\n\n/**\n * async promise, returns Graph people matching the Graph query specified\n * in the resource param\n *\n * @param {IGraph} graph - the graph instance to use for making requests\n * @param {string} version - the graph version url segment to use when making requests\n * @param {string} resource - the resource segment of the graph url to be requested\n * @param {string[]} scopes - an array of scopes that are required to make the underlying graph request,\n *  if any scope provided is not currently consented then the user will be prompted for consent prior to\n *  making the graph request to load data.\n * @returns {(Promise<Person[]>)}\n * @memberof Graph\n */\nexport const getPeopleFromResource = async (\n  graph: IGraph,\n  version: string,\n  resource: string,\n  scopes: string[]\n): Promise<Person[]> => {\n  let cache: CacheStore<CachePeopleQuery>;\n  const key = `${version}${resource}`;\n  if (getIsPeopleCacheEnabled()) {\n    cache = CacheService.getCache<CachePeopleQuery>(schemas.people, schemas.people.stores.peopleQuery);\n    const result: CachePeopleQuery = await cache.getValue(key);\n    if (result && getPeopleInvalidationTime() > Date.now() - result.timeCached) {\n      return result.results.map(peopleStr => JSON.parse(peopleStr) as Person);\n    }\n  }\n\n  let request = graph.api(resource).version(version);\n\n  if (scopes?.length) {\n    request = request.middlewareOptions(prepScopes(scopes));\n  }\n\n  let response = (await request.get()) as CollectionResponse<Person>;\n  // get more pages if there are available\n  if (response && Array.isArray(response.value) && response['@odata.nextLink']) {\n    let page = response;\n\n    while (page?.['@odata.nextLink']) {\n      const nextLink = page['@odata.nextLink'] as string;\n      const nextResource = nextLink.split(version)[1];\n      page = (await graph.api(nextResource).version(version).get()) as CollectionResponse<Person>;\n      if (page?.value?.length) {\n        page.value = response.value.concat(page.value);\n        response = page;\n      }\n    }\n  }\n\n  if (getIsPeopleCacheEnabled() && response) {\n    const item = { results: null };\n    if (Array.isArray(response.value)) {\n      item.results = response.value.map(personStr => JSON.stringify(personStr));\n    } else {\n      item.results = [JSON.stringify(response)];\n    }\n    await cache.putValue(key, item);\n  }\n\n  return response?.value;\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { IGraph, prepScopes, CacheItem, CacheService, CacheStore } from '@microsoft/mgt-element';\nimport { ResponseType } from '@microsoft/microsoft-graph-client';\nimport * as MicrosoftGraph from '@microsoft/microsoft-graph-types';\nimport { Person, ProfilePhoto } from '@microsoft/microsoft-graph-types';\n\nimport { blobToBase64 } from '../utils/Utils';\nimport { schemas } from './cacheStores';\nimport { findContactsByEmail, getEmailFromGraphEntity } from './graph.people';\nimport { findUsers } from './graph.user';\nimport { IDynamicPerson } from './types';\n\n/**\n * photo object stored in cache\n */\nexport interface CachePhoto extends CacheItem {\n  /**\n   * user tag associated with photo\n   */\n  eTag?: string;\n  /**\n   * user/contact photo\n   */\n  photo?: string;\n}\n\n/**\n * Defines expiration time\n */\nexport const getPhotoInvalidationTime = () =>\n  CacheService.config.photos.invalidationPeriod || CacheService.config.defaultInvalidationPeriod;\n\n/**\n * Whether photo store is enabled\n */\nexport const getIsPhotosCacheEnabled = () => CacheService.config.photos.isEnabled && CacheService.config.isEnabled;\n\n/**\n * Ordered list of scopes able to load user photos for any user, least privilege comes first\n */\nexport const anyUserValidPhotoScopes = ['User.ReadBasic.All', 'User.Read.All', 'User.ReadWrite.All'];\n\n/**\n * Ordered list of scopes able to load user photo for the current user, least privilege comes first\n */\nexport const currentUserValidPhotoScopes = ['User.Read', 'User.ReadWrite', ...anyUserValidPhotoScopes];\n\n/**\n * retrieves a photo for the specified resource.\n *\n * @param {string} resource\n * @param {string[]} scopes\n * @returns {Promise<string>}\n */\nexport const getPhotoForResource = async (graph: IGraph, resource: string, scopes: string[]): Promise<CachePhoto> => {\n  try {\n    const response = (await graph\n      .api(`${resource}/photo/$value`)\n      .responseType(ResponseType.RAW)\n      .middlewareOptions(prepScopes(scopes))\n      .get()) as Response;\n\n    if (response.status === 404) {\n      // 404 means the resource does not have a photo\n      // we still want to cache that state\n      // so we return an object that can be cached\n      return { eTag: null, photo: null };\n    } else if (!response.ok) {\n      return null;\n    }\n\n    const eTag = response['@odata.mediaEtag'] as string;\n    const blob = await blobToBase64(await response.blob());\n    return { eTag, photo: blob };\n  } catch (e) {\n    return null;\n  }\n};\n\n/**\n * async promise, returns Graph photos associated with contacts of the logged in user\n *\n * @param contactId\n * @returns {Promise<string>}\n * @memberof Graph\n */\nexport const getContactPhoto = async (graph: IGraph, contactId: string): Promise<string> => {\n  let cache: CacheStore<CachePhoto>;\n  let photoDetails: CachePhoto;\n  if (getIsPhotosCacheEnabled()) {\n    cache = CacheService.getCache<CachePhoto>(schemas.photos, schemas.photos.stores.contacts);\n    photoDetails = await cache.getValue(contactId);\n    if (photoDetails && getPhotoInvalidationTime() > Date.now() - photoDetails.timeCached) {\n      return photoDetails.photo;\n    }\n  }\n  const validContactPhotoScopes = ['Contacts.Read', 'Contacts.ReadWrite'];\n\n  photoDetails = await getPhotoForResource(graph, `me/contacts/${contactId}`, validContactPhotoScopes);\n  if (getIsPhotosCacheEnabled() && photoDetails) {\n    await cache.putValue(contactId, photoDetails);\n  }\n  return photoDetails ? photoDetails.photo : null;\n};\n\n/**\n * async promise, returns Graph photo associated with provided userId\n *\n * @param userId\n * @returns {Promise<string>}\n * @memberof Graph\n */\nexport const getUserPhoto = async (graph: IGraph, userId: string): Promise<string> => {\n  let cache: CacheStore<CachePhoto>;\n  let photoDetails: CachePhoto;\n\n  if (getIsPhotosCacheEnabled()) {\n    cache = CacheService.getCache<CachePhoto>(schemas.photos, schemas.photos.stores.users);\n    photoDetails = await cache.getValue(userId);\n    if (photoDetails && getPhotoInvalidationTime() > Date.now() - photoDetails.timeCached) {\n      return photoDetails.photo;\n    } else if (photoDetails) {\n      // there is a photo in the cache, but it's stale. implicit assumption that the app has permissions\n      // necessary to fetch photo metadata otherwise there couldn't be data in the cache\n      try {\n        const response = (await graph.api(`users/${userId}/photo`).get()) as ProfilePhoto;\n        if (\n          response &&\n          (response['@odata.mediaEtag'] !== photoDetails.eTag ||\n            (response['@odata.mediaEtag'] === null && photoDetails.eTag === null))\n        ) {\n          // set photoDetails to null so that photo gets pulled from the graph later\n          photoDetails = null;\n        }\n      } catch {\n        return null;\n      }\n    }\n  }\n  // if there is a photo in the cache, we got here because it was stale\n  photoDetails = photoDetails || (await getPhotoForResource(graph, `users/${userId}`, anyUserValidPhotoScopes));\n  if (getIsPhotosCacheEnabled() && photoDetails) {\n    await cache.putValue(userId, photoDetails);\n  }\n  return photoDetails ? photoDetails.photo : null;\n};\n\n/**\n * async promise, returns Graph photo associated with the logged in user\n *\n * @returns {Promise<string>}\n * @memberof Graph\n */\nexport const myPhoto = async (graph: IGraph): Promise<string> => {\n  let cache: CacheStore<CachePhoto>;\n  let photoDetails: CachePhoto;\n  if (getIsPhotosCacheEnabled()) {\n    cache = CacheService.getCache<CachePhoto>(schemas.photos, schemas.photos.stores.users);\n    photoDetails = await cache.getValue('me');\n    if (photoDetails && getPhotoInvalidationTime() > Date.now() - photoDetails.timeCached) {\n      return photoDetails.photo;\n    }\n  }\n\n  try {\n    const response = (await graph.api('me/photo').get()) as ProfilePhoto;\n    if (\n      response &&\n      (response['@odata.mediaEtag'] !== photoDetails.eTag ||\n        (response['@odata.mediaEtag'] === null && photoDetails.eTag === null))\n    ) {\n      photoDetails = null;\n    }\n  } catch {\n    return null;\n  }\n  photoDetails = photoDetails || (await getPhotoForResource(graph, 'me', currentUserValidPhotoScopes));\n  if (getIsPhotosCacheEnabled()) {\n    await cache.putValue('me', photoDetails || {});\n  }\n\n  return photoDetails ? photoDetails.photo : null;\n};\n\n/**\n * async promise, loads image of user\n *\n * @export\n */\nexport const getPersonImage = async (graph: IGraph, person: IDynamicPerson, useContactsApis = true) => {\n  // handle if person but not user\n  if ('personType' in person && (person as Person).personType.subclass !== 'OrganizationUser') {\n    if ((person as Person).personType.subclass === 'PersonalContact' && useContactsApis) {\n      // if person is a contact, look for them and their photo in contact api\n      const contactMail = getEmailFromGraphEntity(person);\n      const contact = await findContactsByEmail(graph, contactMail);\n      if (contact?.length && contact[0].id) {\n        return await getContactPhoto(graph, contact[0].id);\n      }\n    }\n\n    return null;\n  }\n\n  // handle if user\n  if ((person as MicrosoftGraph.Person).userPrincipalName || person.id) {\n    // try to find a user by userPrincipalName\n    const id = (person as MicrosoftGraph.Person).userPrincipalName || person.id;\n    return await getUserPhoto(graph, id);\n  }\n\n  // else assume id is for user and try to get photo\n  if (person.id) {\n    const image = await getUserPhoto(graph, person.id);\n    if (image) {\n      return image;\n    }\n  }\n\n  // let's try to find a person by the email\n  const email = getEmailFromGraphEntity(person);\n\n  if (email) {\n    // try to find user\n    const users = await findUsers(graph, email, 1);\n    if (users?.length) {\n      return await getUserPhoto(graph, users[0].id);\n    }\n\n    // if no user, try to find a contact\n    if (useContactsApis) {\n      const contacts = await findContactsByEmail(graph, email);\n      if (contacts?.length) {\n        return await getContactPhoto(graph, contacts[0].id);\n      }\n    }\n  }\n\n  return null;\n};\n\n/**\n * Load the image for a group\n *\n * @param graph\n * @param group\n * @param useContactsApis\n * @returns\n */\nexport const getGroupImage = async (graph: IGraph, group: IDynamicPerson) => {\n  let photoDetails: CachePhoto;\n  let cache: CacheStore<CachePhoto>;\n\n  const groupId = group.id;\n\n  if (getIsPhotosCacheEnabled()) {\n    cache = CacheService.getCache<CachePhoto>(schemas.photos, schemas.photos.stores.groups);\n    photoDetails = await cache.getValue(groupId);\n    if (photoDetails && getPhotoInvalidationTime() > Date.now() - photoDetails.timeCached) {\n      return photoDetails.photo;\n    } else if (photoDetails) {\n      // there is a photo in the cache, but it's stale\n      try {\n        const response = (await graph.api(`groups/${groupId}/photo`).get()) as ProfilePhoto;\n        if (\n          response &&\n          (response['@odata.mediaEtag'] !== photoDetails.eTag ||\n            (response['@odata.mediaEtag'] === null && photoDetails.eTag === null))\n        ) {\n          // set photoDetails to null so that photo gets pulled from the graph later\n          photoDetails = null;\n        }\n      } catch {\n        return null;\n      }\n    }\n  }\n\n  const validGroupPhotoScopes = ['Group.Read.All', 'Group.ReadWrite.All'];\n  // if there is a photo in the cache, we got here because it was stale\n  photoDetails = photoDetails || (await getPhotoForResource(graph, `groups/${groupId}`, validGroupPhotoScopes));\n  if (getIsPhotosCacheEnabled() && photoDetails) {\n    await cache.putValue(groupId, photoDetails);\n  }\n  return photoDetails ? photoDetails.photo : null;\n};\n\n/**\n * checks if user has a photo in the cache\n *\n * @param userId\n * @returns {CachePhoto}\n * @memberof Graph\n */\nexport const getPhotoFromCache = async (userId: string, storeName: string): Promise<CachePhoto> => {\n  const cache = CacheService.getCache<CachePhoto>(schemas.photos, storeName);\n  const item = await cache.getValue(userId);\n  return item;\n};\n\n/**\n * checks if user has a photo in the cache\n *\n * @param userId\n * @returns {void}\n * @memberof Graph\n */\nexport const storePhotoInCache = async (userId: string, storeName: string, value: CachePhoto): Promise<void> => {\n  const cache = CacheService.getCache<CachePhoto>(schemas.photos, storeName);\n  await cache.putValue(userId, value);\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { IGraph, prepScopes, CacheItem, CacheService, CacheStore, CollectionResponse } from '@microsoft/mgt-element';\nimport { Person, Presence } from '@microsoft/microsoft-graph-types';\nimport { schemas } from './cacheStores';\nimport { IDynamicPerson } from './types';\n\n/**\n * Object to be stored in cache representing individual people\n */\ninterface CachePresence extends CacheItem {\n  /**\n   * json representing a person stored as string\n   */\n  presence?: string;\n}\n\n/**\n * Defines the expiration time\n */\nconst getPresenceInvalidationTime = (): number =>\n  CacheService.config.presence.invalidationPeriod || CacheService.config.defaultInvalidationPeriod;\n\n/**\n * Whether the groups store is enabled\n */\nconst getIsPresenceCacheEnabled = (): boolean =>\n  CacheService.config.presence.isEnabled && CacheService.config.isEnabled;\n\n/**\n * async promise, allows developer to get user presence\n *\n * @returns {Promise<Presence>}\n * @param {IGraph} graph\n * @param {string} userId - id for the user or null for current signed in user\n * @memberof BetaGraph\n */\nexport const getUserPresence = async (graph: IGraph, userId?: string): Promise<Presence> => {\n  let cache: CacheStore<CachePresence>;\n\n  if (getIsPresenceCacheEnabled()) {\n    cache = CacheService.getCache(schemas.presence, schemas.presence.stores.presence);\n    const presence = await cache.getValue(userId || 'me');\n    if (presence && getPresenceInvalidationTime() > Date.now() - presence.timeCached) {\n      return JSON.parse(presence.presence) as Presence;\n    }\n  }\n\n  const validScopes = userId ? ['presence.read.all'] : ['presence.read', 'presence.read.all'];\n  const resource = userId ? `/users/${userId}/presence` : '/me/presence';\n\n  const result = (await graph.api(resource).middlewareOptions(prepScopes(validScopes)).get()) as Presence;\n  if (getIsPresenceCacheEnabled()) {\n    await cache.putValue(userId || 'me', { presence: JSON.stringify(result) });\n  }\n\n  return result;\n};\n\n/**\n * async promise, allows developer to get person presense by providing array of IDynamicPerson\n *\n * @returns {}\n * @memberof BetaGraph\n */\nexport const getUsersPresenceByPeople = async (graph: IGraph, people?: IDynamicPerson[]) => {\n  if (!people || people.length === 0) {\n    return {};\n  }\n\n  const peoplePresence: Record<string, Presence> = {};\n  const peoplePresenceToQuery: string[] = [];\n  const validScopes = ['presence.read.all'];\n  let cache: CacheStore<CachePresence>;\n\n  if (getIsPresenceCacheEnabled()) {\n    cache = CacheService.getCache(schemas.presence, schemas.presence.stores.presence);\n  }\n\n  for (const person of people) {\n    if (person?.id) {\n      const id = person.id;\n      peoplePresence[id] = null;\n      let presence: CachePresence;\n      if (getIsPresenceCacheEnabled()) {\n        presence = await cache.getValue(id);\n      }\n      if (getIsPresenceCacheEnabled() && presence && getPresenceInvalidationTime() > Date.now() - presence.timeCached) {\n        peoplePresence[id] = JSON.parse(presence.presence) as Presence;\n      } else {\n        peoplePresenceToQuery.push(id);\n      }\n    }\n  }\n\n  try {\n    if (peoplePresenceToQuery.length > 0) {\n      const presenceResult = (await graph\n        .api('/communications/getPresencesByUserId')\n        .middlewareOptions(prepScopes(validScopes))\n        .post({\n          ids: peoplePresenceToQuery\n        })) as CollectionResponse<Presence>;\n\n      for (const r of presenceResult.value) {\n        peoplePresence[r.id] = r;\n        if (getIsPresenceCacheEnabled()) {\n          await cache.putValue(r.id, { presence: JSON.stringify(r) });\n        }\n      }\n    }\n\n    return peoplePresence;\n  } catch (_) {\n    try {\n      /**\n       * individual calls to getUserPresence as fallback\n       * must filter out the contacts, which will either 404 or have PresenceUnknown response\n       * caching will be handled by getUserPresence\n       */\n      const response = await Promise.all(\n        people\n          .filter(\n            person =>\n              person?.id &&\n              !peoplePresence[person.id] &&\n              'personType' in person &&\n              (person as Person).personType.subclass === 'OrganizationUser'\n          )\n          .map(person => getUserPresence(graph, person.id))\n      );\n\n      for (const r of response) {\n        peoplePresence[r.id] = r;\n      }\n      return peoplePresence;\n    } catch (e) {\n      return null;\n    }\n  }\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { CacheItem, CacheService, CacheStore, CollectionResponse, IGraph, prepScopes } from '@microsoft/mgt-element';\nimport { User } from '@microsoft/microsoft-graph-types';\n\nimport { GraphRequest } from '@microsoft/microsoft-graph-client';\nimport { schemas } from './cacheStores';\nimport { findPeople, PersonType } from './graph.people';\nimport { IDynamicPerson } from './types';\n\n/**\n * Object to be stored in cache\n */\nexport interface CacheUser extends CacheItem {\n  /**\n   * stringified json representing a user\n   */\n  user?: string;\n}\n\n/**\n * Object to be stored in cache\n */\nexport interface CacheUserQuery extends CacheItem {\n  /**\n   * max number of results the query asks for\n   */\n  maxResults?: number;\n  /**\n   * list of users returned by query\n   */\n  results?: string[];\n}\n\n/**\n * Defines the time it takes for objects in the cache to expire\n */\nexport const getUserInvalidationTime = (): number =>\n  CacheService.config.users.invalidationPeriod || CacheService.config.defaultInvalidationPeriod;\n\n/**\n * Whether or not the cache is enabled\n */\nexport const getIsUsersCacheEnabled = (): boolean =>\n  CacheService.config.users.isEnabled && CacheService.config.isEnabled;\n\nexport const getUsers = async (graph: IGraph, userFilters = '', top = 10): Promise<User[]> => {\n  const allValidScopes = [\n    'User.ReadBasic.All',\n    'User.Read.All',\n    'Directory.Read.All',\n    'User.ReadWrite.All',\n    'Directory.ReadWrite.All'\n  ];\n  const apiString = '/users';\n  let cache: CacheStore<CacheUserQuery>;\n  const cacheKey = `${userFilters === '' ? '*' : userFilters}:${top}`;\n  const cacheItem = { maxResults: top, results: null };\n\n  if (getIsUsersCacheEnabled()) {\n    cache = CacheService.getCache<CacheUserQuery>(schemas.users, schemas.users.stores.userFilters);\n    const cacheRes = await cache.getValue(cacheKey);\n    if (cacheRes && getUserInvalidationTime() > Date.now() - cacheRes.timeCached) {\n      return cacheRes.results.map(userStr => JSON.parse(userStr) as User);\n    }\n  }\n  const graphClient: GraphRequest = graph.api(apiString).top(top);\n\n  if (userFilters) {\n    graphClient.filter(userFilters).header('ConsistencyLevel', 'eventual').count(true);\n  }\n\n  try {\n    const response = (await graphClient\n      .middlewareOptions(prepScopes(allValidScopes))\n      .get()) as CollectionResponse<User>;\n    if (getIsUsersCacheEnabled() && response) {\n      cacheItem.results = response.value.map(userStr => JSON.stringify(userStr));\n      await cache.putValue(userFilters, cacheItem);\n    }\n    return response.value;\n    // eslint-disable-next-line no-empty\n  } catch (error) {}\n};\n\nconst allValidMeScopes = ['User.Read', 'User.ReadWrite'];\n/**\n * async promise, returns Graph User data relating to the user logged in\n *\n * @returns {(Promise<User>)}\n * @memberof Graph\n */\nexport const getMe = async (graph: IGraph, requestedProps?: string[]): Promise<User> => {\n  // for the /me call we'll only use the single User.Read and User.ReadWrite permissions\n  // as they are explicitly scoped to the current user\n  let cache: CacheStore<CacheUser>;\n  if (getIsUsersCacheEnabled()) {\n    cache = CacheService.getCache<CacheUser>(schemas.users, schemas.users.stores.users);\n    const me = await cache.getValue('me');\n\n    if (me && getUserInvalidationTime() > Date.now() - me.timeCached) {\n      const cachedData = JSON.parse(me.user) as User;\n      const uniqueProps = requestedProps\n        ? requestedProps.filter(prop => !Object.keys(cachedData).includes(prop))\n        : null;\n\n      // if requestedProps doesn't contain any unique props other than \"@odata.context\"\n      if (!uniqueProps || uniqueProps.length <= 1) {\n        return cachedData;\n      }\n    }\n  }\n\n  let apiString = 'me';\n  if (requestedProps) {\n    apiString = apiString + '?$select=' + requestedProps.toString();\n  }\n  const response = (await graph.api(apiString).middlewareOptions(prepScopes(allValidMeScopes)).get()) as User;\n  if (getIsUsersCacheEnabled()) {\n    await cache.putValue('me', { user: JSON.stringify(response) });\n  }\n  return response;\n};\n\nexport const validUserByIdScopes = [\n  'User.ReadBasic.All',\n  'User.Read.All',\n  'Directory.Read.All',\n  'User.ReadWrite.All',\n  'Directory.ReadWrite.All'\n];\n/**\n * async promise, returns all Graph users associated with the userPrincipleName provided\n *\n * @param {string} userPrincipleName\n * @returns {(Promise<User>)}\n * @memberof Graph\n */\nexport const getUser = async (graph: IGraph, userPrincipleName: string, requestedProps?: string[]): Promise<User> => {\n  let cache: CacheStore<CacheUser>;\n\n  if (getIsUsersCacheEnabled()) {\n    cache = CacheService.getCache<CacheUser>(schemas.users, schemas.users.stores.users);\n    // check cache\n    const user = await cache.getValue(userPrincipleName);\n\n    // is it stored and is timestamp good?\n    if (user && getUserInvalidationTime() > Date.now() - user.timeCached) {\n      const cachedData = user.user ? (JSON.parse(user.user) as User) : null;\n      const uniqueProps =\n        requestedProps && cachedData ? requestedProps.filter(prop => !Object.keys(cachedData).includes(prop)) : null;\n\n      // return without any worries\n      if (!uniqueProps || uniqueProps.length <= 1) {\n        return cachedData;\n      }\n    }\n  }\n\n  let apiString = `/users/${userPrincipleName}`;\n  if (requestedProps) {\n    apiString = apiString + '?$select=' + requestedProps.toString();\n  }\n\n  // else we must grab it\n  let response: User;\n  try {\n    response = (await graph.api(apiString).middlewareOptions(prepScopes(validUserByIdScopes)).get()) as User;\n    // eslint-disable-next-line no-empty\n  } catch (_) {}\n\n  if (getIsUsersCacheEnabled()) {\n    await cache.putValue(userPrincipleName, { user: JSON.stringify(response) });\n  }\n  return response;\n};\n\n/**\n * Returns a Promise of Graph Users array associated with the user ids array\n *\n * @export\n * @param {IGraph} graph\n * @param {string[]} userIds, an array of string ids\n * @returns {Promise<User[]>}\n */\nexport const getUsersForUserIds = async (\n  graph: IGraph,\n  userIds: string[],\n  searchInput = '',\n  userFilters = '',\n  fallbackDetails?: IDynamicPerson[]\n): Promise<User[]> => {\n  if (!userIds || userIds.length === 0) {\n    return [];\n  }\n  const batch = graph.createBatch<User>();\n  const peopleDict: Record<string, User | Promise<User>> = {};\n  const peopleSearchMatches = {};\n  const notInCache = [];\n  searchInput = searchInput.toLowerCase();\n  let cache: CacheStore<CacheUser>;\n\n  if (getIsUsersCacheEnabled()) {\n    cache = CacheService.getCache<CacheUser>(schemas.users, schemas.users.stores.users);\n  }\n\n  for (const id of userIds) {\n    peopleDict[id] = null;\n    let apiUrl = `/users/${id}`;\n    let user: User;\n    let cacheUser: CacheUser;\n    if (getIsUsersCacheEnabled()) {\n      cacheUser = await cache.getValue(id);\n    }\n    if (cacheUser?.user && getUserInvalidationTime() > Date.now() - cacheUser.timeCached) {\n      user = JSON.parse(cacheUser?.user) as User;\n\n      if (searchInput) {\n        if (user) {\n          const displayName = user.displayName;\n          const searchMatches = displayName?.toLowerCase().includes(searchInput);\n          if (searchMatches) {\n            peopleSearchMatches[id] = user;\n          }\n        }\n      } else {\n        if (user) {\n          peopleDict[id] = user;\n        } else {\n          batch.get(id, apiUrl, validUserByIdScopes);\n          notInCache.push(id);\n        }\n      }\n    } else if (id !== '') {\n      if (id === 'me') {\n        peopleDict[id] = await getMe(graph);\n      } else {\n        apiUrl = `/users/${id}`;\n        if (userFilters) {\n          apiUrl += `${apiUrl}?$filter=${userFilters}&$count=true`;\n        }\n        batch.get(id, apiUrl, validUserByIdScopes, userFilters ? { ConsistencyLevel: 'eventual' } : {});\n        notInCache.push(id);\n      }\n    }\n  }\n  try {\n    if (batch.hasRequests) {\n      const responses = await batch.executeAll();\n      // iterate over userIds to ensure the order of ids\n      for (const id of userIds) {\n        const response = responses.get(id);\n        if (response?.content) {\n          const user = response.content;\n          if (searchInput) {\n            const displayName = user?.displayName.toLowerCase() || '';\n            if (displayName.includes(searchInput)) {\n              peopleSearchMatches[id] = user;\n            }\n          } else {\n            peopleDict[id] = user;\n          }\n\n          if (getIsUsersCacheEnabled()) {\n            await cache.putValue(id, { user: JSON.stringify(user) });\n          }\n        } else {\n          const fallback = fallbackDetails.find(detail => Object.values(detail).includes(id));\n          if (fallback) {\n            peopleDict[id] = fallback as User;\n          }\n        }\n      }\n    }\n    if (searchInput && Object.keys(peopleSearchMatches).length) {\n      return Promise.all(Object.values(peopleSearchMatches));\n    }\n    return Promise.all(Object.values(peopleDict));\n  } catch (_) {\n    // fallback to making the request one by one\n    try {\n      // call getUser for all the users that weren't cached\n      userIds\n        .filter(id => notInCache.includes(id))\n        .forEach(id => {\n          peopleDict[id] = getUser(graph, id);\n        });\n      if (getIsUsersCacheEnabled()) {\n        // store all users that weren't retrieved from the cache, into the cache\n        await Promise.all(\n          userIds\n            .filter(id => notInCache.includes(id))\n            .map(async id => await cache.putValue(id, { user: JSON.stringify(await peopleDict[id]) }))\n        );\n      }\n      return Promise.all(Object.values(peopleDict));\n    } catch (e) {\n      return [];\n    }\n  }\n};\n\n/**\n * Returns a Promise of Graph Users array associated with the people queries array\n *\n * @export\n * @param {IGraph} graph\n * @param {string[]} peopleQueries, an array of string ids\n * @returns {Promise<User[]>}\n */\nexport const getUsersForPeopleQueries = async (\n  graph: IGraph,\n  peopleQueries: string[],\n  fallbackDetails?: IDynamicPerson[]\n): Promise<User[]> => {\n  const allValidPeopleScopes = ['People.Read', 'People.Read.All'];\n  if (!peopleQueries || peopleQueries.length === 0) {\n    return [];\n  }\n\n  const batch = graph.createBatch<CollectionResponse<User>>();\n  const people: User[] = [];\n  let cacheRes: CacheUserQuery;\n  let cache: CacheStore<CacheUserQuery>;\n  if (getIsUsersCacheEnabled()) {\n    cache = CacheService.getCache<CacheUserQuery>(schemas.users, schemas.users.stores.usersQuery);\n  }\n\n  for (const personQuery of peopleQueries) {\n    if (getIsUsersCacheEnabled()) {\n      cacheRes = await cache.getValue(personQuery);\n    }\n\n    if (\n      getIsUsersCacheEnabled() &&\n      cacheRes?.results[0] &&\n      getUserInvalidationTime() > Date.now() - cacheRes.timeCached\n    ) {\n      const person = JSON.parse(cacheRes.results[0]) as User;\n      people.push(person);\n    } else {\n      batch.get(personQuery, `/me/people?$search=\"${personQuery}\"`, allValidPeopleScopes, {\n        'X-PeopleQuery-QuerySources': 'Mailbox,Directory'\n      });\n    }\n  }\n\n  if (batch.hasRequests) {\n    try {\n      const responses = await batch.executeAll();\n\n      for (const personQuery of peopleQueries) {\n        const response = responses.get(personQuery);\n        if (response?.content?.value && response.content.value.length > 0) {\n          people.push(response.content.value[0]);\n          if (getIsUsersCacheEnabled()) {\n            await cache.putValue(personQuery, { maxResults: 1, results: [JSON.stringify(response.content.value[0])] });\n          }\n        } else {\n          const fallback = fallbackDetails.find(detail => Object.values(detail).includes(personQuery));\n          if (fallback) {\n            people.push(fallback as User);\n          }\n        }\n      }\n\n      return people;\n    } catch (_) {\n      try {\n        return Promise.all(\n          peopleQueries\n            .filter(personQuery => personQuery && personQuery !== '')\n            .map(async personQuery => {\n              const personArray = await findPeople(graph, personQuery, 1);\n              if (personArray?.length) {\n                if (getIsUsersCacheEnabled()) {\n                  await cache.putValue(personQuery, { maxResults: 1, results: [JSON.stringify(personArray[0])] });\n                }\n                return personArray[0];\n              }\n            })\n        );\n      } catch (e) {\n        return [];\n      }\n    }\n  }\n  return people;\n};\n\n/**\n * Search Microsoft Graph for Users in the organization\n *\n * @export\n * @param {IGraph} graph\n * @param {string} query - the string to search for\n * @param {number} [top=10] - maximum number of results to return\n * @returns {Promise<User[]>}\n */\nexport const findUsers = async (graph: IGraph, query: string, top = 10, userFilters = ''): Promise<User[]> => {\n  const scopes = validUserByIdScopes;\n  const item = { maxResults: top, results: null };\n  const cacheKey = `${query}:${top}:${userFilters}`;\n  let cache: CacheStore<CacheUserQuery>;\n\n  if (getIsUsersCacheEnabled()) {\n    cache = CacheService.getCache<CacheUserQuery>(schemas.users, schemas.users.stores.usersQuery);\n    const result: CacheUserQuery = await cache.getValue(cacheKey);\n\n    if (result && getUserInvalidationTime() > Date.now() - result.timeCached) {\n      return result.results.map(userStr => JSON.parse(userStr) as User);\n    }\n  }\n\n  const encodedQuery = `${query.replace(/#/g, '%2523')}`;\n  const graphBuilder = graph.api('users').search(`\"displayName:${encodedQuery}\" OR \"mail:${encodedQuery}\"`);\n  let graphResult: CollectionResponse<User>;\n\n  if (userFilters !== '') {\n    graphBuilder.filter(userFilters).header('ConsistencyLevel', 'eventual').count(true);\n  }\n  try {\n    graphResult = (await graphBuilder.top(top).middlewareOptions(prepScopes(scopes)).get()) as CollectionResponse<User>;\n    // eslint-disable-next-line no-empty\n  } catch {}\n\n  if (getIsUsersCacheEnabled() && graphResult) {\n    item.results = graphResult.value.map(userStr => JSON.stringify(userStr));\n    await cache.putValue(query, item);\n  }\n  return graphResult ? graphResult.value : null;\n};\n\n/**\n * async promise, returns all matching Graph users who are member of the specified group\n *\n * @param {string} query\n * @param {string} groupId - the group to query\n * @param {number} [top=10] - number of people to return\n * @param {PersonType} [personType='person'] - the type of person to search for\n * @param {boolean} [transitive=false] - whether the return should contain a flat list of all nested members\n * @returns {(Promise<User[]>)}\n */\nexport const findGroupMembers = async (\n  graph: IGraph,\n  query: string,\n  groupId: string,\n  top = 10,\n  personType: PersonType = 'person',\n  transitive = false,\n  userFilters = '',\n  peopleFilters = ''\n): Promise<User[]> => {\n  const allValidScopes = [\n    'GroupMember.Read.All',\n    'Group.Read.All',\n    'Directory.Read.All',\n    'GroupMember.ReadWrite.All',\n    'Group.ReadWrite.All'\n  ];\n  const item = { maxResults: top, results: null };\n\n  let cache: CacheStore<CacheUserQuery>;\n  const key = `${groupId || '*'}:${query || '*'}:${top}:${personType}:${transitive}:${userFilters}`;\n\n  if (getIsUsersCacheEnabled()) {\n    cache = CacheService.getCache<CacheUserQuery>(schemas.users, schemas.users.stores.usersQuery);\n    const result: CacheUserQuery = await cache.getValue(key);\n\n    if (result && getUserInvalidationTime() > Date.now() - result.timeCached) {\n      return result.results.map(userStr => JSON.parse(userStr) as User);\n    }\n  }\n\n  let filter = '';\n  if (query) {\n    filter = `startswith(displayName,'${query}') or startswith(givenName,'${query}') or startswith(surname,'${query}') or startswith(mail,'${query}') or startswith(userPrincipalName,'${query}')`;\n  }\n\n  let apiUrl = `/groups/${groupId}/${transitive ? 'transitiveMembers' : 'members'}`;\n  if (personType === 'person') {\n    apiUrl += '/microsoft.graph.user';\n  } else if (personType === 'group') {\n    apiUrl += '/microsoft.graph.group';\n    if (query) {\n      filter = `startswith(displayName,'${query}') or startswith(mail,'${query}')`;\n    }\n  }\n\n  if (userFilters) {\n    filter += query ? ` and ${userFilters}` : userFilters;\n  }\n\n  if (peopleFilters) {\n    filter += query ? ` and ${peopleFilters}` : peopleFilters;\n  }\n\n  const graphClient: GraphRequest = graph.api(apiUrl).top(top).filter(filter);\n\n  if (userFilters) {\n    graphClient.header('ConsistencyLevel', 'eventual').count(true);\n  }\n\n  const graphResult = (await graphClient\n    .middlewareOptions(prepScopes(allValidScopes))\n    .get()) as CollectionResponse<User>;\n\n  if (getIsUsersCacheEnabled() && graphResult) {\n    item.results = graphResult.value.map(userStr => JSON.stringify(userStr));\n    await cache.putValue(key, item);\n  }\n\n  return graphResult ? graphResult.value : null;\n};\n\nexport const findUsersFromGroupIds = async (\n  graph: IGraph,\n  query: string,\n  groupIds: string[],\n  top = 10,\n  personType: PersonType = 'person',\n  transitive = false,\n  groupFilters = ''\n): Promise<User[]> => {\n  const users: User[] = [];\n  for (const groupId of groupIds) {\n    try {\n      const groupUsers = await findGroupMembers(graph, query, groupId, top, personType, transitive, groupFilters);\n      users.push(...groupUsers);\n    } catch (_) {\n      continue;\n    }\n  }\n  return users;\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { GraphError } from '@microsoft/microsoft-graph-client';\n\nexport const isGraphError = (e: unknown): e is GraphError => {\n  const test = e as GraphError;\n  return (\n    test.statusCode &&\n    'code' in test &&\n    'body' in test &&\n    test.date &&\n    'message' in test &&\n    'name' in test &&\n    'requestId' in test\n  );\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { CacheService, IGraph, prepScopes } from '@microsoft/mgt-element';\n\nimport {\n  CachePhoto,\n  anyUserValidPhotoScopes,\n  currentUserValidPhotoScopes,\n  getIsPhotosCacheEnabled,\n  getPhotoForResource,\n  getPhotoFromCache,\n  getPhotoInvalidationTime,\n  storePhotoInCache\n} from './graph.photos';\nimport { CacheUser, getIsUsersCacheEnabled, getUserInvalidationTime } from './graph.user';\nimport { IDynamicPerson } from './types';\nimport { schemas } from './cacheStores';\nimport { Photo } from '@microsoft/microsoft-graph-types';\nimport { isGraphError } from './isGraphError';\n\n/**\n * async promise, returns IDynamicPerson\n *\n * @param {string} userId\n * @returns {(Promise<IDynamicPerson>)}\n * @memberof Graph\n */\nexport const getUserWithPhoto = async (\n  graph: IGraph,\n  userId?: string,\n  requestedProps?: string[]\n): Promise<IDynamicPerson> => {\n  const anyUserValidScopes = [\n    'User.ReadBasic.All',\n    'User.Read.All',\n    'Directory.Read.All',\n    'User.ReadWrite.All',\n    'Directory.ReadWrite.All'\n  ];\n\n  const currentUserValidScopes = ['User.Read', 'User.ReadWrite', ...anyUserValidScopes];\n\n  const requiredUserScopes = userId ? anyUserValidScopes : currentUserValidScopes;\n  const requiredPhotoScopes = userId ? anyUserValidPhotoScopes : currentUserValidPhotoScopes;\n\n  let photo: string;\n  let user: IDynamicPerson = null;\n\n  let cachedPhoto: CachePhoto;\n  let cachedUser: CacheUser;\n\n  const resource = userId ? `users/${userId}` : 'me';\n  const fullResource = resource + (requestedProps ? `?$select=${requestedProps.toString()}` : '');\n\n  // attempt to get user and photo from cache if enabled\n  if (getIsUsersCacheEnabled()) {\n    const cache = CacheService.getCache<CacheUser>(schemas.users, schemas.users.stores.users);\n    cachedUser = await cache.getValue(userId || 'me');\n    if (cachedUser && getUserInvalidationTime() > Date.now() - cachedUser.timeCached) {\n      user = cachedUser.user ? (JSON.parse(cachedUser.user) as IDynamicPerson) : null;\n      if (user !== null && requestedProps) {\n        const uniqueProps = requestedProps.filter(prop => !Object.keys(user).includes(prop));\n        if (uniqueProps.length >= 1) {\n          user = null;\n          cachedUser = null;\n        }\n      }\n    } else {\n      cachedUser = null;\n    }\n  }\n  if (getIsPhotosCacheEnabled()) {\n    cachedPhoto = await getPhotoFromCache(userId || 'me', schemas.photos.stores.users);\n    if (cachedPhoto && getPhotoInvalidationTime() > Date.now() - cachedPhoto.timeCached) {\n      photo = cachedPhoto.photo;\n    } else if (cachedPhoto) {\n      try {\n        const response: Photo = (await graph.api(`${resource}/photo`).get()) as Photo;\n        if (response?.['@odata.mediaEtag'] && response['@odata.mediaEtag'] === cachedPhoto.eTag) {\n          // put current image into the cache to update the timestamp since etag is the same\n          await storePhotoInCache(userId || 'me', schemas.photos.stores.users, cachedPhoto);\n          photo = cachedPhoto.photo;\n        } else {\n          cachedPhoto = null;\n        }\n      } catch (e: unknown) {\n        if (isGraphError(e)) {\n          // if 404 received (photo not found) but user already in cache, update timeCache value to prevent repeated 404 error / graph calls on each page refresh\n          if (e.code === 'ErrorItemNotFound' || e.code === 'ImageNotFound') {\n            await storePhotoInCache(userId || 'me', schemas.photos.stores.users, { eTag: null, photo: null });\n          }\n        }\n      }\n    }\n  }\n\n  // if both are not in the cache, batch get them\n  if (!cachedPhoto && !cachedUser) {\n    let eTag: string;\n\n    // batch calls\n    const batch = graph.createBatch();\n    if (userId) {\n      batch.get(\n        'user',\n        `/users/${userId}${requestedProps ? '?$select=' + requestedProps.toString() : ''}`,\n        requiredUserScopes\n      );\n      batch.get('photo', `users/${userId}/photo/$value`, requiredPhotoScopes);\n    } else {\n      batch.get('user', 'me', requiredUserScopes);\n      batch.get('photo', 'me/photo/$value', requiredPhotoScopes);\n    }\n    const response = await batch.executeAll();\n\n    const photoResponse = response.get('photo');\n    if (photoResponse) {\n      // eslint-disable-next-line @typescript-eslint/dot-notation\n      eTag = photoResponse.headers['ETag'];\n      photo = photoResponse.content as string;\n    }\n\n    const userResponse = response.get('user');\n    if (userResponse) {\n      user = userResponse.content as IDynamicPerson;\n    }\n\n    // store user & photo in their respective cache\n    if (getIsUsersCacheEnabled()) {\n      const cache = CacheService.getCache<CacheUser>(schemas.users, schemas.users.stores.users);\n      await cache.putValue(userId || 'me', { user: JSON.stringify(user) });\n    }\n    if (getIsPhotosCacheEnabled()) {\n      await storePhotoInCache(userId || 'me', schemas.photos.stores.users, { eTag, photo });\n    }\n  } else if (!cachedPhoto) {\n    try {\n      // if only photo or user is not cached, get it individually\n      const response = await getPhotoForResource(graph, resource, requiredPhotoScopes);\n      if (response) {\n        if (getIsPhotosCacheEnabled()) {\n          await storePhotoInCache(userId || 'me', schemas.photos.stores.users, {\n            eTag: response.eTag,\n            photo: response.photo\n          });\n        }\n        photo = response.photo;\n      }\n    } catch (_) {\n      // intentionally left empty...\n    }\n  } else if (!cachedUser) {\n    // get user from graph\n    try {\n      const response: IDynamicPerson = (await graph\n        .api(fullResource)\n        .middlewareOptions(prepScopes(requiredUserScopes))\n        .get()) as IDynamicPerson;\n\n      if (response) {\n        if (getIsUsersCacheEnabled()) {\n          const cache = CacheService.getCache<CacheUser>(schemas.users, schemas.users.stores.users);\n          await cache.putValue(userId || 'me', { user: JSON.stringify(response) });\n        }\n        user = response;\n      }\n    } catch (_) {\n      // intentionally left empty...\n    }\n  }\n\n  if (user) {\n    user.personImage = photo;\n  }\n  return user;\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport * as MicrosoftGraph from '@microsoft/microsoft-graph-types';\n\n/**\n * IDynamicPerson describes the person object we use throughout mgt-person,\n * which can be one of three similar Graph types.\n *\n * In addition, this custom type also defines the optional `personImage` property,\n * which is used to pass the image around to other components as part of the person object.\n */\nexport type IUser = MicrosoftGraph.User | MicrosoftGraph.Person;\nexport type IContact = MicrosoftGraph.Contact;\nexport type IGroup = MicrosoftGraph.Group;\n\nexport type IDynamicPerson = (IUser | IContact | IGroup) & {\n  /**\n   * personDetails.personImage is a toolkit injected property to pass image between components\n   * an optimization to avoid fetching the image when unnecessary.\n   *\n   * @type {string}\n   */\n  personImage?: string;\n};\n\n/**\n * avatarSize describes the enum strings that can be passed in to determine\n * size of avatar.\n */\nexport type AvatarSize = 'small' | 'large' | 'auto';\n\n/**\n * Insight string types used to retrieve OneDrive files\n */\nexport type OfficeGraphInsightString = 'trending' | 'used' | 'shared';\n\nconst viewTypes = ['image', 'oneline', 'twolines', 'threelines', 'fourlines'] as const;\n/**\n * Enumeration to define what parts of the person component render\n *\n * @export\n * @enum {string}\n */\nexport type ViewType = (typeof viewTypes)[number];\n\nexport const isViewType = (value: unknown): value is ViewType => {\n  return typeof value === 'string' && viewTypes.includes(value as ViewType);\n};\n\nexport const viewTypeConverter = (value: string, defaultValue: ViewType = 'twolines'): ViewType => {\n  if (isViewType(value)) {\n    return value;\n  }\n  return defaultValue;\n};\n\n/**\n * Postion describes the position of the dropdown\n */\nexport type Position = 'above' | 'below';\n","// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\n\nimport { css, CSSResult } from 'lit';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles: CSSResult[] = [\n  css`\n:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host{--card-height:auto;--card-width:99%;background-color:var(--agenda-background-color,transparent)}:host .header{margin:var(--agenda-header-margin,18px 0 12px 10px);font-size:var(--agenda-header-font-size,24px);font-style:normal;font-weight:400;line-height:32px;color:var(--agenda-header-color,var(--neutral-foreground-rest));opacity:.9}:host .agenda,:host .group{display:flex;flex-direction:column;row-gap:var(--agenda-event-row-gap,14px)}:host .agenda>.group:first-child>.header,:host .group>.group:first-child>.header{margin-top:0}:host .agenda .event,:host .group .event{background:var(--agenda-event-background-color,var(--fill-color));border:var(--agenda-event-border,solid 2px transparent);box-shadow:var(--agenda-event-box-shadow,var(--elevation-shadow-card-rest));padding:var(--agenda-event-padding,12px);position:relative;display:flex;flex:1 1 auto;content-visibility:visible;contain:none}:host .agenda .event-container,:host .group .event-container{border-radius:calc(var(--layer-corner-radius) * 1px);padding:1px}:host .agenda .event.narrow,:host .group .event.narrow{display:flex;flex-direction:column;inset:0}:host .agenda .event-time-container,:host .group .event-time-container{font-style:normal;font-weight:600;font-size:12px;color:var(--agenda-event-time-color,var(--neutral-foreground-rest));width:112px;height:16px}:host .agenda .event-time-container.narrow,:host .group .event-time-container.narrow{margin-bottom:1px;width:100%}:host .agenda .event-time,:host .group .event-time{font-size:var(--agenda-event-time-font-size,12px);color:var(--agenda-event-time-color,var(--neutral-foreground-rest));font-weight:600}:host .agenda .event-details-container,:host .group .event-details-container{display:flex;flex-direction:column;position:relative;bottom:8px;top:0;padding-inline-start:32px}:host .agenda .event-details-container.narrow,:host .group .event-details-container.narrow{position:inherit;left:6px;display:flex;flex-direction:column;padding-inline-start:0}:host .agenda .event-subject,:host .group .event-subject{font-style:normal;font-weight:400;font-size:var(--agenda-event-subject-font-size,20px);line-height:28px;color:var(--agenda-event-subject-color,var(--neutral-foreground-rest));mix-blend-mode:normal;position:inherit;bottom:8px}:host .agenda .event-location-container,:host .group .event-location-container{display:inline-flex;flex-direction:row}:host .agenda .event-location-container .event-location,:host .group .event-location-container .event-location{padding-inline-start:3px;font-style:normal;font-weight:400;font-size:var(--agenda-event-location-font-size,12px);line-height:16px;color:var(--agenda-event-location-color,var(--neutral-foreground-rest))}:host .agenda .event-location-container .event-location-loading,:host .group .event-location-container .event-location-loading{width:90px;height:10px;margin:2px 0 0 4px}:host .agenda .event-location-container .event-location-icon,:host .group .event-location-container .event-location-icon{display:inline-flex}:host .agenda .event-location-container .event-location-icon svg,:host .group .event-location-container .event-location-icon svg{position:relative;top:2px;width:12px;height:12px}:host .agenda .event-location-container .event-location-icon svg path,:host .group .event-location-container .event-location-icon svg path{stroke:var(--agenda-event-location-color,var(--neutral-foreground-rest))}:host .agenda .event-location-container .event-location-icon-loading,:host .group .event-location-container .event-location-icon-loading{width:14px;height:14px}:host .agenda .event-location-container .event-attendee-loading,:host .group .event-location-container .event-attendee-loading{width:20px;height:20px;border-radius:10px;margin:0 2px 0 0}:host .agenda .event-attendees,:host .group .event-attendees{--list-margin:8px 0 0 0;--person-avatar-size:20px}fluent-card.event.event-loading{--card-height:90px}:host .event-attendees{--color:$agenda-event-attendees-color}:host fluent-tooltip{width:auto;contain:inline-size}[dir=rtl] :host{direction:rtl}[dir=rtl] .event-time-container{direction:ltr;display:flex;justify-content:flex-end}@media (forced-colors:active) and (prefers-color-scheme:dark){:host .agenda .event-location-container .event-location-icon svg path{stroke:#fff!important}}@media (forced-colors:active) and (prefers-color-scheme:light){:host .agenda .event-location-container .event-location-icon svg path{stroke:#000!important}}\n`];","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { GraphPageIterator, IGraph, prepScopes } from '@microsoft/mgt-element';\nimport * as MicrosoftGraph from '@microsoft/microsoft-graph-types';\n\n/**\n *\n * @param {IGraph} graph\n * @param {string} query the graph resource and query string to be requested\n * @param {string[]} additionalScopes an array of scope to be requested before making the request\n * Should be calculated by the calling code using `IProvider.needsAdditionalScopes()`\n * @returns {Promise<GraphPageIterator<MicrosoftGraph.Event>>} a page iterator to allow\n * the calling code to request more data if present and needed\n */\nexport const getEventsQueryPageIterator = async (\n  graph: IGraph,\n  query: string,\n  additionalScopes: string[]\n): Promise<GraphPageIterator<MicrosoftGraph.Event>> => {\n  const request = graph.api(query).middlewareOptions(prepScopes(additionalScopes)).orderby('start/dateTime');\n\n  return GraphPageIterator.create<MicrosoftGraph.Event>(graph, request);\n};\n\n/**\n * returns Calender events iterator associated with either the logged in user or a specific groupId\n *\n * @param {IGraph} graph\n * @param {Date} startDateTime\n * @param {Date} endDateTime\n * @param {string} [groupId]\n * @returns {Promise<GraphPageIterator<MicrosoftGraph.Event>>}\n * @memberof Graph\n */\nexport const getEventsPageIterator = async (\n  graph: IGraph,\n  startDateTime: Date,\n  endDateTime: Date,\n  groupId?: string\n): Promise<GraphPageIterator<MicrosoftGraph.Event>> => {\n  const sdt = `startdatetime=${startDateTime.toISOString()}`;\n  const edt = `enddatetime=${endDateTime.toISOString()}`;\n\n  const uri: string = groupId\n    ? `groups/${groupId}/calendar/calendarview?${sdt}&${edt}`\n    : `me/calendarview?${sdt}&${edt}`;\n  const allValidScopes = groupId\n    ? ['Group.Read.All', 'Group.ReadWrite.All']\n    : ['Calendars.ReadBasic', 'Calendars.Read', 'Calendars.ReadWrite'];\n\n  return getEventsQueryPageIterator(graph, uri, allValidScopes);\n};\n","// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\n\nimport { css, CSSResult } from 'lit';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles: CSSResult[] = [\n  css`\n:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host .people-list{list-style:none;margin:var(--people-list-margin,8px 4px 8px 8px);padding:unset;display:flex;align-items:center;gap:var(--people-avatar-gap,4px)}:host .people-list .people-person{--person-avatar-size:var(--people-person-avatar-size, 24px)}:host .overflow span{vertical-align:middle;color:var(--people-overflow-font-color,currentColor);font-size:var(--people-overflow-font-size,12px);font-weight:var(--people-overflow-font-weight,400)}\n`];","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport * as MicrosoftGraph from '@microsoft/microsoft-graph-types';\nimport { html, TemplateResult } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport { repeat } from 'lit/directives/repeat.js';\nimport { getPeople, getPeopleFromResource } from '../../graph/graph.people';\nimport { getUsersPresenceByPeople } from '../../graph/graph.presence';\nimport { findGroupMembers, getUsersForPeopleQueries, getUsersForUserIds } from '../../graph/graph.user';\nimport { IDynamicPerson } from '../../graph/types';\nimport { Providers, ProviderState, MgtTemplatedTaskComponent, mgtHtml } from '@microsoft/mgt-element';\nimport '../../styles/style-helper';\nimport { type PersonCardInteraction, personCardConverter } from './../PersonCardInteraction';\n\nimport { styles } from './mgt-people-css';\nimport { MgtPerson, registerMgtPersonComponent } from '../mgt-person/mgt-person';\nimport { registerComponent } from '@microsoft/mgt-element';\n\n/**\n * web component to display a group of people or contacts by using their photos or initials.\n *\n * @export\n * @class MgtPeople\n * @extends {MgtTemplatedTaskComponent}\n *\n * @cssprop --people-list-margin- {String} the margin around the list of people. Default is 8px 4px 8px 8px.\n * @cssprop --people-avatar-gap - {String} the gap between the people in the list. Default is 4px.\n * @cssprop --people-overflow-font-color - {Color} the color of the overflow text.\n * @cssprop --people-overflow-font-size - {String} the text color of the overflow text. Default is 12px.\n * @cssprop --people-overflow-font-weight - {String} the font weight of the overflow text. Default is 400.\n * @cssprop --people-person-avatar-size - {Length} the size of the avatar. Default is 24px.\n */\n\nexport const registerMgtPeopleComponent = () => {\n  registerMgtPersonComponent();\n  registerComponent('people', MgtPeople);\n};\n\nexport class MgtPeople extends MgtTemplatedTaskComponent {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  /**\n   * determines if agenda events come from specific group\n   *\n   * @type {string}\n   */\n  @property({\n    attribute: 'group-id',\n    type: String\n  })\n  public groupId: string;\n\n  /**\n   * user id array\n   *\n   * @memberof MgtPeople\n   */\n  @property({\n    attribute: 'user-ids',\n    converter: (value, _type) => {\n      return value.split(',').map(v => v.trim());\n    }\n  })\n  public userIds: string[];\n\n  /**\n   * containing array of people used in the component.\n   *\n   * @type {IDynamicPerson[]}\n   */\n  @property({\n    attribute: 'people',\n    type: Object\n  })\n  public people: IDynamicPerson[];\n\n  /**\n   * allows developer to define queries of people for component\n   *\n   * @type {string[]}\n   */\n\n  @property({\n    attribute: 'people-queries',\n    converter: (value, _type) => {\n      return value.split(',').map(v => v.trim());\n    }\n  })\n  public peopleQueries: string[];\n\n  /**\n   * developer determined max people shown in component\n   *\n   * @type {number}\n   */\n  @property({\n    attribute: 'show-max',\n    type: Number\n  })\n  public showMax: number;\n\n  /**\n   * determines if person component renders presence\n   *\n   * @type {boolean}\n   */\n  @property({\n    attribute: 'show-presence',\n    type: Boolean\n  })\n  public showPresence: boolean;\n\n  /**\n   * Sets how the person-card is invoked\n   * Valid options are: 'none', 'hover', or 'click'\n   * Set to 'none' to not show the card\n   *\n   * @type {PersonCardInteraction}\n   * @memberof MgtPerson\n   */\n  @property({\n    attribute: 'person-card',\n    converter: (value, _type) => personCardConverter(value, 'hover')\n  })\n  public personCardInteraction: PersonCardInteraction = 'hover';\n\n  /**\n   * The resource to get\n   *\n   * @type {string}\n   * @memberof MgtPeople\n   */\n  @property({\n    attribute: 'resource',\n    type: String\n  })\n  public resource: string;\n\n  /**\n   * Api version to use for request\n   *\n   * @type {string}\n   * @memberof MgtPeople\n   */\n  @property({\n    attribute: 'version',\n    type: String\n  })\n  public version = 'v1.0';\n\n  /**\n   * The scopes to request\n   *\n   * @type {string[]}\n   * @memberof MgtPeople\n   */\n  @property({\n    attribute: 'scopes',\n    converter: value => {\n      return value ? value.toLowerCase().split(',') : null;\n    },\n    reflect: true\n  })\n  public scopes: string[] = [];\n\n  /**\n   * Fallback when no user is found\n   *\n   * @type {IDynamicPerson[]}\n   */\n  @property({\n    attribute: 'fallback-details',\n    type: Array\n  })\n  public fallbackDetails: IDynamicPerson[];\n\n  /**\n   * Get the scopes required for people\n   *\n   * @static\n   * @return {*}  {string[]}\n   * @memberof MgtPeople\n   */\n  public static get requiredScopes(): string[] {\n    return [\n      ...new Set([\n        'user.read.all',\n        'people.read',\n        'user.readbasic.all',\n        'presence.read.all',\n        'contacts.read',\n        ...MgtPerson.requiredScopes\n      ])\n    ];\n  }\n\n  private _peoplePresence: Record<string, MicrosoftGraph.Presence> = {};\n  @state() private _arrowKeyLocation = -1;\n\n  constructor() {\n    super();\n    this.showMax = 3;\n  }\n\n  /**\n   * Clears the state of the component\n   *\n   * @protected\n   * @memberof MgtPeople\n   */\n  protected clearState(): void {\n    this.people = null;\n  }\n\n  protected args(): unknown[] {\n    return [\n      this.providerState,\n      this.groupId,\n      this.userIds,\n      this.peopleQueries,\n      this.showMax,\n      this.resource,\n      this.version,\n      this.fallbackDetails\n    ];\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method must return\n   * a lit-html TemplateResult. Setting properties inside this method will *not*\n   * trigger the element to update.\n   */\n  protected renderContent = () => {\n    if (!this.people || this.people.length === 0) {\n      return this.renderNoData();\n    }\n\n    return this.renderTemplate('default', { people: this.people, max: this.showMax }) || this.renderPeople();\n  };\n\n  /**\n   * Render the loading state.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtPeople\n   */\n  protected renderLoading = () => {\n    return this.renderTemplate('loading', null) || html``;\n  };\n\n  /**\n   * Render the list of people.\n   *\n   * @protected\n   * @param {*} people\n   * @returns {TemplateResult}\n   * @memberof MgtPeople\n   */\n  protected renderPeople(): TemplateResult {\n    const maxPeople = this.people.slice(0, this.showMax).filter(pple => pple);\n    return html`\n      <ul\n        tabindex=\"0\"\n        class=\"people-list\"\n        aria-label=\"people\"\n        @keydown=${this.handleKeyDown}>\n        ${repeat(\n          maxPeople,\n          p => (p.id ? p.id : p.displayName),\n          p => html`\n            <li tabindex=\"-1\" class=\"people-person\">\n              ${this.renderPerson(p)}\n            </li>\n          `\n        )}\n        ${this.people.length > this.showMax ? this.renderOverflow() : null}\n      </ul>\n    `;\n  }\n\n  /**\n   * Render the overflow content to represent any extra people, beyond the max.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPeople\n   */\n  protected renderOverflow(): TemplateResult {\n    const extra = this.people.length - this.showMax;\n    return (\n      this.renderTemplate('overflow', {\n        extra,\n        max: this.showMax,\n        people: this.people\n      }) ||\n      html`\n        <li tabindex=\"-1\" aria-label=\"and ${extra} more attendees\" class=\"overflow\"><span>+${extra}</span></li>\n      `\n    );\n  }\n\n  /**\n   * Handles the keypresses on a keyboard for the listed people.\n   *\n   * @param event is a KeyboardEvent.\n   */\n  protected handleKeyDown = (event: KeyboardEvent) => {\n    const peopleContainer: HTMLElement = this.shadowRoot.querySelector('.people-list');\n    let person: HTMLElement;\n    const peopleElements: HTMLCollection = peopleContainer?.children;\n    // Default all tabindex values in li nodes to -1\n    for (const element of peopleElements) {\n      const el: HTMLElement = element as HTMLElement;\n      el.setAttribute('tabindex', '-1');\n      el.blur();\n    }\n\n    const childElementCount = peopleContainer.childElementCount;\n    const keyName = event.key;\n    if (keyName === 'ArrowRight') {\n      this._arrowKeyLocation = (this._arrowKeyLocation + 1 + childElementCount) % childElementCount;\n    } else if (keyName === 'ArrowLeft') {\n      this._arrowKeyLocation = (this._arrowKeyLocation - 1 + childElementCount) % childElementCount;\n    } else if (keyName === 'Tab' || keyName === 'Escape') {\n      this._arrowKeyLocation = -1;\n      peopleContainer.blur();\n    } else if (['Enter', 'space', ' '].includes(keyName)) {\n      if (this.personCardInteraction !== 'none') {\n        const personEl = peopleElements[this._arrowKeyLocation] as HTMLElement;\n        const mgtPerson = personEl.querySelector<MgtPerson>('mgt-person');\n        if (mgtPerson) {\n          mgtPerson.showPersonCard();\n        }\n      }\n    }\n\n    if (this._arrowKeyLocation > -1) {\n      person = peopleElements[this._arrowKeyLocation] as HTMLElement;\n      person.setAttribute('tabindex', '1');\n      person.focus();\n    }\n  };\n\n  /**\n   * Render an individual person.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPeople\n   */\n  protected renderPerson(person: MicrosoftGraph.User | MicrosoftGraph.Person | MicrosoftGraph.Contact): TemplateResult {\n    let personPresence: MicrosoftGraph.Presence = {\n      // set up default presence\n      activity: 'Offline',\n      availability: 'Offline',\n      id: null\n    };\n    if (this.showPresence && this._peoplePresence) {\n      personPresence = this._peoplePresence[person.id];\n    }\n    const avatarSize = 'small';\n    return (\n      this.renderTemplate('person', { person }, person.id) ||\n      // set image to @ to flag the mgt-person component to\n      // query the image from the graph\n      mgtHtml`\n        <mgt-person\n          class=\"people-person\"\n          .personDetails=${person}\n          .fetchImage=${true}\n          .avatarSize=${avatarSize}\n          .personCardInteraction=${this.personCardInteraction}\n          .showPresence=${this.showPresence}\n          .personPresence=${personPresence}\n          .usage=${'people'}\n        ></mgt-person>\n      `\n    );\n  }\n\n  /**\n   * render the no data state.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPeople\n   */\n  protected renderNoData(): TemplateResult {\n    return this.renderTemplate('no-data', null) || html``;\n  }\n\n  /**\n   * load state into the component.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtPeople\n   */\n  protected async loadState() {\n    if (!this.people) {\n      const provider = Providers.globalProvider;\n\n      if (provider && provider.state === ProviderState.SignedIn) {\n        const graph = provider.graph.forComponent(this);\n\n        // populate people\n        if (this.groupId) {\n          this.people = await findGroupMembers(graph, null, this.groupId, this.showMax, 'person');\n        } else if (this.userIds) {\n          this.people = await getUsersForUserIds(graph, this.userIds, '', '', this.fallbackDetails);\n        } else if (this.peopleQueries) {\n          this.people = await getUsersForPeopleQueries(graph, this.peopleQueries, this.fallbackDetails);\n        } else if (this.resource) {\n          this.people = await getPeopleFromResource(graph, this.version, this.resource, this.scopes);\n        } else {\n          this.people = await getPeople(graph);\n        }\n\n        // populate presence for people\n        if (this.showPresence) {\n          this._peoplePresence = await getUsersPresenceByPeople(graph, this.people);\n        } else {\n          this._peoplePresence = null;\n        }\n      }\n    }\n  }\n}\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport * as MicrosoftGraph from '@microsoft/microsoft-graph-types';\nimport { html, TemplateResult } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { Providers, ProviderState, mgtHtml, MgtTemplatedTaskComponent } from '@microsoft/mgt-element';\nimport '../../styles/style-helper';\nimport '../mgt-person/mgt-person';\nimport { styles } from './mgt-agenda-css';\nimport { getEventsPageIterator, getEventsQueryPageIterator } from './mgt-agenda.graph';\nimport { SvgIcon, getSvg } from '../../utils/SvgHelper';\nimport { MgtPeople, registerMgtPeopleComponent } from '../mgt-people/mgt-people';\nimport { registerFluentComponents } from '../../utils/FluentComponents';\nimport { fluentCard } from '@fluentui/web-components';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { registerComponent } from '@microsoft/mgt-element';\n\n/**\n * Web Component which represents events in a user or group calendar.\n *\n * @export\n * @class MgtAgenda\n * @extends {MgtTemplatedComponent}\n *\n * @fires {CustomEvent<MicrosoftGraph.Event>} eventClick - Fired when user click an event\n *\n * @cssprop --event-box-shadow - {String} Event box shadow color and size\n * @cssprop --event-row-gap - {String} The size of the gap between two event elements\n * @cssprop --event-padding - {String} Event padding\n * @cssprop --event-background-color - {Color} Event background color\n * @cssprop --event-border - {String} Event border style\n * @cssprop --agenda-header-margin - {String} Agenda header margin size\n * @cssprop --agenda-header-font-size - {Length} Agenda header font size\n * @cssprop --agenda-header-color - {Color} Agenda header color\n * @cssprop --event-time-font-size - {Length} Event time font size\n * @cssprop --event-time-color - {Color} Event time color\n * @cssprop --event-subject-font-size - {Length} Event subject font size\n * @cssprop --event-subject-color - {Color} Event subject color\n * @cssprop --event-location-font-size - {Length} Event location font size\n * @cssprop --event-location-color - {Color} Event location color\n * @cssprop --event-attendees-color - {Color} Event attendees color\n */\n\nexport const registerMgtAgendaComponent = () => {\n  registerFluentComponents(fluentCard);\n  // register dependent components\n  registerMgtPeopleComponent();\n  // register self\n  registerComponent('agenda', MgtAgenda);\n};\n\nexport class MgtAgenda extends MgtTemplatedTaskComponent {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  /**\n   * stores current date for initial calender selection in events.\n   *\n   * @type {string}\n   */\n  @property({\n    attribute: 'date',\n    type: String\n  })\n  public date: string;\n\n  /**\n   * determines if agenda events come from specific group\n   *\n   * @type {string}\n   */\n  @property({\n    attribute: 'group-id',\n    type: String\n  })\n  public groupId: string;\n\n  /**\n   * sets number of days until end date, 3 is the default\n   *\n   * @type {number}\n   */\n  @property({\n    attribute: 'days',\n    type: Number\n  })\n  public days = 3;\n\n  /**\n   * allows developer to specify a different graph query that retrieves events\n   *\n   * @type {string}\n   */\n  @property({\n    attribute: 'event-query',\n    type: String\n  })\n  public eventQuery: string;\n\n  /**\n   * array containing events from user agenda.\n   *\n   * @type {MicrosoftGraph.Event[]}\n   */\n  @property({\n    attribute: 'events',\n    type: Array,\n    hasChanged: (newVal: [], oldVal: []) => {\n      return newVal !== oldVal;\n    }\n  })\n  public events: MicrosoftGraph.Event[];\n\n  /**\n   * allows developer to define max number of events shown\n   *\n   * @type {number}\n   */\n  @property({\n    attribute: 'show-max',\n    type: Number\n  })\n  public showMax: number;\n\n  /**\n   * allows developer to define agenda to group events by day.\n   *\n   * @type {boolean}\n   */\n  @property({\n    attribute: 'group-by-day',\n    type: Boolean\n  })\n  public groupByDay: boolean;\n\n  /**\n   * allows developer to specify preferred timezone that should be used for\n   * rendering events retrieved from Graph, eg. `America/Los_Angeles`.\n   * By default events are rendered using the current timezone of the\n   * device being used.\n   *\n   * @type {string}\n   */\n  @property({\n    attribute: 'preferred-timezone',\n    type: String\n  })\n  public preferredTimezone: string;\n\n  /**\n   * Get the scopes required for agenda\n   *\n   * @static\n   * @return {*}  {string[]}\n   * @memberof MgtAgenda\n   */\n  public static get requiredScopes(): string[] {\n    return [...new Set(['calendars.read', ...MgtPeople.requiredScopes])];\n  }\n\n  /**\n   * determines width available for agenda component.\n   *\n   * @type {boolean}\n   */\n  @property({ attribute: false }) private _isNarrow: boolean;\n\n  /**\n   * Determines width available if resize is necessary, adds onResize event listener to window\n   *\n   * @memberof MgtAgenda\n   */\n  public connectedCallback() {\n    this._isNarrow = this.offsetWidth < 600;\n    super.connectedCallback();\n    window.addEventListener('resize', this.onResize);\n  }\n\n  /**\n   * Removes onResize event listener from window\n   *\n   * @memberof MgtAgenda\n   */\n  public disconnectedCallback() {\n    window.removeEventListener('resize', this.onResize);\n    super.disconnectedCallback();\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method must return a lit-html TemplateResult.\n   * Setting properties inside this method will not trigger the element to update\n   *\n   * @returns\n   * @memberof MgtAgenda\n   */\n  public renderContent = (): TemplateResult => {\n    // No data\n    if (!this.events || this.events.length === 0) {\n      return this.renderNoData();\n    }\n\n    // Prep data\n    const events = this.showMax && this.showMax > 0 ? this.events.slice(0, this.showMax) : this.events;\n\n    // Default template\n    const renderedTemplate = this.renderTemplate('default', { events });\n    if (renderedTemplate) {\n      return renderedTemplate;\n    }\n\n    const agendaClasses = {\n      agenda: true,\n      grouped: this.groupByDay\n    };\n\n    // Render list\n    return html`\n      <div dir=${this.direction} class=\"${classMap(agendaClasses)}\">\n        ${this.groupByDay ? this.renderGroups(events) : this.renderEvents(events)}\n      </div>\n    `;\n  };\n\n  /**\n   * Reloads the component with its current settings and potential new data\n   *\n   * @memberof MgtAgenda\n   */\n  public async reload() {\n    this.events = await this.loadEvents();\n  }\n\n  /**\n   * Render the loading state\n   *\n   * @protected\n   * @returns\n   * @memberof MgtAgenda\n   */\n  protected renderLoading = (): TemplateResult => {\n    return (\n      this.renderTemplate('loading', null) ||\n      html`\n        <fluent-card class=\"event event-loading\">\n          <div class=\"event-time-container\">\n            <div class=\"event-time-loading loading-element\"></div>\n          </div>\n          <div class=\"event-details-container\">\n            <div class=\"event-subject-loading loading-element\"></div>\n            <div class=\"event-location-container\">\n              <div class=\"event-location-icon-loading loading-element\"></div>\n              <div class=\"event-location-loading loading-element\"></div>\n            </div>\n            <div class=\"event-location-container\">\n              <div class=\"event-attendee-loading loading-element\"></div>\n              <div class=\"event-attendee-loading loading-element\"></div>\n              <div class=\"event-attendee-loading loading-element\"></div>\n            </div>\n          </div>\n        </fluent-card>`\n    );\n  };\n\n  /**\n   * Clears state of the component\n   *\n   * @protected\n   * @memberof MgtAgenda\n   */\n  protected clearState(): void {\n    this.events = null;\n  }\n\n  /**\n   * Render the no-data state.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtAgenda\n   */\n  protected renderNoData(): TemplateResult {\n    return this.renderTemplate('no-data', null) || html``;\n  }\n\n  /**\n   * Render an individual Event.\n   *\n   * @protected\n   * @param {MicrosoftGraph.Event} event\n   * @returns\n   * @memberof MgtAgenda\n   */\n  protected renderEvent(event: MicrosoftGraph.Event): TemplateResult {\n    // Update narrow state\n    this._isNarrow = this.offsetWidth < 600;\n\n    const eventClasses = {\n      narrow: this._isNarrow\n    };\n\n    return html`\n      <fluent-card class=\"${classMap({ event: true, ...eventClasses })}\">\n        <div class=\"${classMap({ 'event-time-container': true, ...eventClasses })}\">\n          <div class=\"event-time\" aria-label=\"${this.getEventTimeString(event)}\">${this.getEventTimeString(event)}</div>\n        </div>\n        <div class=\"${classMap({ 'event-details-container': true, ...eventClasses })}\">\n          ${this.renderTitle(event)} ${this.renderLocation(event)} ${this.renderAttendees(event)}\n        </div>\n        <div class=\"event-other-container\">${this.renderOther(event)}</div>\n      </fluent-card>\n    `;\n  }\n\n  /**\n   * Render the header for a group.\n   * Only relevant for grouped Events.\n   *\n   * @protected\n   * @param {Date} date\n   * @returns\n   * @memberof MgtAgenda\n   */\n  protected renderHeader(header: string): TemplateResult {\n    return (\n      this.renderTemplate('header', { header }, 'header-' + header) ||\n      html`\n        <div class=\"header\" aria-label=\"${header}\">${header}</div>\n      `\n    );\n  }\n\n  /**\n   * Render the title field of an Event\n   *\n   * @protected\n   * @param {MicrosoftGraph.Event} event\n   * @returns\n   * @memberof MgtAgenda\n   */\n  protected renderTitle(event: MicrosoftGraph.Event): TemplateResult {\n    return html`\n      <div\n        aria-label=${event.subject}\n        class=\"${classMap({\n          'event-subject': true,\n          narrow: this._isNarrow\n        })}\"\n      >\n        ${event.subject}\n      </div>`;\n  }\n\n  /**\n   * Render the location field of an Event\n   *\n   * @protected\n   * @param {MicrosoftGraph.Event} event\n   * @returns\n   * @memberof MgtAgenda\n   */\n  protected renderLocation(event: MicrosoftGraph.Event): TemplateResult {\n    if (!event.location.displayName) {\n      return null;\n    }\n\n    return html`\n      <div class=\"event-location-container\">\n        <div class=\"event-location-icon\">${getSvg(SvgIcon.OfficeLocation)}</div>\n        <div class=\"event-location\" aria-label=\"${event.location.displayName}\">${event.location.displayName}</div>\n      </div>\n    `;\n  }\n\n  /**\n   * Render the attendees field of an Event\n   *\n   * @protected\n   * @param {MicrosoftGraph.Event} event\n   * @returns\n   * @memberof MgtAgenda\n   */\n  protected renderAttendees(event: MicrosoftGraph.Event): TemplateResult {\n    if (!event.attendees.length) {\n      return null;\n    }\n    return mgtHtml`\n      <mgt-people\n        show-max=\"5\"\n        show-presence\n        class=\"event-attendees\"\n        .peopleQueries=${event.attendees.map(attendee => {\n          return attendee.emailAddress.address;\n        })}\n      ></mgt-people>\n    `;\n  }\n\n  /**\n   * Render the event other field of an Event\n   *\n   * @protected\n   * @param {MicrosoftGraph.Event} event\n   * @returns\n   * @memberof MgtAgenda\n   */\n  protected renderOther(event: MicrosoftGraph.Event): TemplateResult {\n    return this.hasTemplate('event-other')\n      ? html`\n          ${this.renderTemplate('event-other', { event }, event.id + '-other')}\n        `\n      : null;\n  }\n\n  /**\n   * Render the events in groups, each with a header.\n   *\n   * @protected\n   * @param {MicrosoftGraph.Event[]} events\n   * @returns {TemplateResult}\n   * @memberof MgtAgenda\n   */\n  protected renderGroups(events: MicrosoftGraph.Event[]): TemplateResult {\n    // Render list, grouped by day\n    const grouped: Record<string, MicrosoftGraph.Event[]> = {};\n\n    events.forEach(event => {\n      let dateString = event?.start?.dateTime;\n      if (event.end.timeZone === 'UTC') {\n        dateString += 'Z';\n      }\n\n      const header = this.getDateHeaderFromDateTimeString(dateString);\n      grouped[header] = grouped[header] || [];\n      grouped[header].push(event);\n    });\n\n    return html`\n      ${Object.keys(grouped).map(\n        header =>\n          html`\n            <div class=\"group\">${this.renderHeader(header)} ${this.renderEvents(grouped[header])}</div>\n          `\n      )}\n    `;\n  }\n\n  /**\n   * Render a list of events.\n   *\n   * @protected\n   * @param {MicrosoftGraph.Event[]} events\n   * @returns {TemplateResult}\n   * @memberof MgtAgenda\n   */\n  protected renderEvents(events: MicrosoftGraph.Event[]): TemplateResult {\n    return html`\n        ${events.map(\n          event =>\n            html`\n              <div\n                class=\"event-container\"\n                tabindex=\"0\"\n                @focus=${() => this.eventClicked(event)}>\n                ${this.renderTemplate('event', { event }, event.id) || this.renderEvent(event)}\n              </div>`\n        )}`;\n  }\n\n  protected args() {\n    return [this.providerState, this.preferredTimezone, this.eventQuery, this.date, this.groupId, this.days];\n  }\n\n  /**\n   * Load state into the component\n   *\n   * @protected\n   * @returns\n   * @memberof MgtAgenda\n   */\n  protected async loadState() {\n    if (this.events) {\n      return;\n    }\n\n    const events = await this.loadEvents();\n    if (events?.length > 0) {\n      this.events = events;\n    }\n  }\n\n  private readonly onResize = () => {\n    this._isNarrow = this.offsetWidth < 600;\n  };\n\n  private eventClicked(event: MicrosoftGraph.Event) {\n    this.fireCustomEvent('eventClick', event);\n  }\n\n  private getEventTimeString(event: MicrosoftGraph.Event) {\n    if (event.isAllDay) {\n      return 'ALL DAY';\n    }\n\n    // #937 When not specifying a preferred time zone using the\n    // preferred-timezone attribute, MGT treats the dates retrieved from\n    // Microsoft Graph as local time, rather than UTC.\n    let startString = event.start.dateTime;\n    if (event.start.timeZone === 'UTC') {\n      startString += 'Z';\n    }\n    let endString = event.end.dateTime;\n    if (event.end.timeZone === 'UTC') {\n      endString += 'Z';\n    }\n\n    const start = this.prettyPrintTimeFromDateTime(new Date(startString));\n    const end = this.prettyPrintTimeFromDateTime(new Date(endString));\n\n    return `${start} - ${end}`;\n  }\n\n  private async loadEvents(): Promise<MicrosoftGraph.Event[]> {\n    const p = Providers.globalProvider;\n    let events: MicrosoftGraph.Event[] = [];\n\n    if (p?.state === ProviderState.SignedIn) {\n      const graph = p.graph.forComponent(this);\n\n      if (this.eventQuery) {\n        try {\n          const tokens = this.eventQuery.split('|');\n          let scope: string;\n          let query: string;\n          if (tokens.length > 1) {\n            query = tokens[0].trim();\n            scope = tokens[1].trim();\n          } else {\n            query = this.eventQuery;\n          }\n          const iterator = await getEventsQueryPageIterator(graph, query, scope ? [scope] : []);\n          if (iterator?.value) {\n            events = iterator.value;\n\n            while (iterator.hasNext) {\n              await iterator.next();\n              events = iterator.value;\n            }\n          }\n          // eslint-disable-next-line no-empty\n        } catch (e) {}\n      } else {\n        const start = this.date ? new Date(this.date) : new Date();\n        const end = new Date(start.getTime());\n        end.setDate(start.getDate() + this.days);\n\n        try {\n          const iterator = await getEventsPageIterator(graph, start, end, this.groupId);\n          if (iterator?.value) {\n            events = iterator.value;\n\n            while (iterator.hasNext) {\n              await iterator.next();\n              events = iterator.value;\n            }\n          }\n        } catch (error) {\n          // noop - possible error with graph\n        }\n      }\n    }\n\n    return events;\n  }\n\n  private prettyPrintTimeFromDateTime(date: Date) {\n    return date.toLocaleTimeString(navigator.language, {\n      timeStyle: 'short',\n      timeZone: this.preferredTimezone\n    });\n  }\n\n  private getDateHeaderFromDateTimeString(dateTimeString: string) {\n    const date = new Date(dateTimeString);\n    return date.toLocaleDateString(navigator.language, {\n      dateStyle: 'full',\n      timeZone: this.preferredTimezone\n    });\n  }\n}\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nexport const strings = {\n  comboboxPlaceholder: 'Select an item'\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { html, TemplateResult } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport {\n  CacheService,\n  CacheStore,\n  equals,\n  MgtTemplatedTaskComponent,\n  prepScopes,\n  Providers,\n  ProviderState,\n  CollectionResponse,\n  IGraph\n} from '@microsoft/mgt-element';\n\nimport { getPhotoForResource } from '../../graph/graph.photos';\nimport { getDocumentThumbnail } from '../../graph/graph.files';\nimport { schemas } from '../../graph/cacheStores';\nimport { CacheResponse } from '../CacheResponse';\nimport { Entity } from '@microsoft/microsoft-graph-types';\nimport { GraphRequest } from '@microsoft/microsoft-graph-client';\nimport { registerComponent } from '@microsoft/mgt-element';\n\n/**\n * Simple holder type for an image\n */\ninterface ImageValue {\n  image: string;\n}\n\n/**\n * A type guard to check if a value is a collection response\n *\n * @param value {*} the value to check\n * @returns {boolean} true if the value is a collection response\n */\nexport const isCollectionResponse = (value: unknown): value is CollectionResponse<unknown> =>\n  Array.isArray((value as CollectionResponse<unknown>)?.value);\n\nconst responseTypes = ['json', 'image'] as const;\n/**\n * Enumeration to define what types of query are available\n *\n * @export\n * @enum {string}\n */\nexport type ResponseType = (typeof responseTypes)[number];\nconst isResponseType = (value: unknown): value is ResponseType =>\n  typeof value === 'string' && responseTypes.includes(value as ResponseType);\nconst responseTypeConverter = (value: string, defaultValue: ResponseType = 'json'): ResponseType =>\n  isResponseType(value) ? value : defaultValue;\n\n/**\n * Defines the expiration time\n */\nconst getResponseInvalidationTime = (currentInvalidationPeriod: number): number =>\n  currentInvalidationPeriod ||\n  CacheService.config.response.invalidationPeriod ||\n  CacheService.config.defaultInvalidationPeriod;\n\n/**\n * Whether the response store is enabled\n */\nconst getIsResponseCacheEnabled = (): boolean =>\n  CacheService.config.response.isEnabled && CacheService.config.isEnabled;\n\n/**\n * Holder type emitted with the dataChange event\n */\nexport interface DataChangedDetail {\n  response?: CollectionResponse<Entity>;\n  error?: object;\n}\n\nexport const registerMgtGetComponent = () => registerComponent('get', MgtGet);\n\n/**\n * Custom element for making Microsoft Graph get queries\n *\n * @fires {CustomEvent<DataChangedDetail>} dataChange - Fired when data changes bubbles, composed, and is not cancelable.\n *\n * @export\n * @class mgt-get\n * @extends {MgtTemplatedComponent}\n */\nexport class MgtGet extends MgtTemplatedTaskComponent {\n  /**\n   * The resource to get\n   *\n   * @type {string}\n   * @memberof MgtGet\n   */\n  @property({\n    attribute: 'resource',\n    reflect: true,\n    type: String\n  })\n  public resource: string;\n\n  /**\n   * The scopes to request\n   *\n   * @type {string[]}\n   * @memberof MgtGet\n   */\n  @property({\n    attribute: 'scopes',\n    converter: (value, _type) => {\n      return value ? value.toLowerCase().split(',') : null;\n    },\n    reflect: true\n  })\n  public scopes: string[] = [];\n\n  /**\n   * Api version to use for request\n   *\n   * @type {string}\n   * @memberof MgtGet\n   */\n  @property({\n    attribute: 'version',\n    reflect: true,\n    type: String\n  })\n  public version = 'v1.0';\n\n  /**\n   * Type of response\n   * Default = json\n   * Supported values = json, image\n   *\n   * @type {ResponseType}\n   * @memberof MgtGet\n   */\n  @property({\n    attribute: 'type',\n    reflect: true,\n    type: String,\n    converter: value => responseTypeConverter(value, 'json')\n  })\n  public type: ResponseType = 'json';\n\n  /**\n   * Maximum number of pages to get for the resource\n   * default = 3\n   * if <= 0, all pages will be fetched\n   *\n   * @type {number}\n   * @memberof MgtGet\n   */\n  @property({\n    attribute: 'max-pages',\n    reflect: true,\n    type: Number\n  })\n  public maxPages = 3;\n\n  /**\n   * Number of milliseconds to poll the delta API and\n   * update the response. Set to positive value to enable\n   *\n   * @type {number}\n   * @memberof MgtGet\n   */\n  @property({\n    attribute: 'polling-rate',\n    reflect: true,\n    type: Number\n  })\n  public pollingRate = 0;\n\n  /**\n   * Enables cache on the response from the specified resource\n   * default = false\n   *\n   * @type {boolean}\n   * @memberof MgtGet\n   */\n  @property({\n    attribute: 'cache-enabled',\n    reflect: true,\n    type: Boolean\n  })\n  public cacheEnabled = false;\n\n  /**\n   * Invalidation period of the cache for the responses in milliseconds\n   *\n   * @type {number}\n   * @memberof MgtGet\n   */\n  @property({\n    attribute: 'cache-invalidation-period',\n    type: Number\n  })\n  public cacheInvalidationPeriod = 0;\n\n  /**\n   * Gets or sets the response of the request\n   *\n   * @type any\n   * @memberof MgtGet\n   */\n  @property({ attribute: false }) public response: CollectionResponse<Entity> | Entity | ImageValue;\n\n  /**\n   *\n   * Gets or sets the error (if any) of the request\n   *\n   * @type any\n   * @memberof MgtGet\n   */\n  @property({ attribute: false }) public error: object;\n\n  private isPolling = false;\n  private isRefreshing = false;\n\n  /**\n   * Refresh the data\n   *\n   * @param {boolean} [hardRefresh=false]\n   * if false (default), the component will only update if the data changed\n   * if true, the data will be first cleared and reloaded completely\n   * @memberof MgtGet\n   */\n  public refresh(hardRefresh = false) {\n    this.isRefreshing = true;\n    if (hardRefresh) {\n      this.clearState();\n    }\n    void this._task.run();\n  }\n\n  /**\n   * Clears state of the component\n   *\n   * @protected\n   * @memberof MgtGet\n   */\n  protected clearState(): void {\n    this.response = null;\n  }\n\n  protected args(): unknown[] {\n    return [\n      this.providerState,\n      this.resource,\n      this.scopes,\n      this.version,\n      this.pollingRate,\n      this.type,\n      this.maxPages,\n      this.cacheEnabled,\n      this.cacheInvalidationPeriod\n    ];\n  }\n\n  protected renderLoading = () => {\n    const loading = this.renderTemplate('loading', null);\n    return isCollectionResponse(this.response)\n      ? this.renderValueContentWithDefaultTemplate(\n          html`${this.response.value.map(v => this.renderTemplate('value', v, v.id))} ${loading} `\n        )\n      : loading;\n  };\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method must return\n   * a lit-html TemplateResult. Setting properties inside this method will *not*\n   * trigger the element to update.\n   */\n  protected renderContent = () => {\n    if (this.hasTemplate('value') && isCollectionResponse(this.response)) {\n      const valueContent: TemplateResult = isCollectionResponse(this.response)\n        ? html`\n          ${this.response.value.map(v => this.renderTemplate('value', v, v.id))}\n        `\n        : this.renderTemplate('value', this.response);\n\n      return this.renderValueContentWithDefaultTemplate(valueContent);\n    } else if (this.response) {\n      return this.renderTemplate('default', this.response) || html``;\n    } else if (this.hasTemplate('no-data')) {\n      return this.renderTemplate('no-data', null);\n    } else {\n      return html``;\n    }\n  };\n\n  private renderValueContentWithDefaultTemplate(valueContent: TemplateResult) {\n    if (this.hasTemplate('default')) {\n      const defaultContent = this.renderTemplate('default', this.response);\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/dot-notation\n      if ((this.templates['value']?.templateOrder ?? 999) > this.templates['default'].templateOrder) {\n        return html`\n          ${defaultContent}${valueContent}\n        `;\n      } else {\n        return html`\n          ${valueContent}${defaultContent}\n        `;\n      }\n    } else {\n      return valueContent;\n    }\n  }\n\n  /**\n   * load state into the component.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtGet\n   */\n  protected async loadState() {\n    const provider = Providers.globalProvider;\n\n    this.error = null;\n\n    if (!provider || provider.state !== ProviderState.SignedIn) {\n      return;\n    }\n\n    if (this.resource) {\n      try {\n        let cache: CacheStore<CacheResponse>;\n        const key = `${this.version}${this.resource}`;\n        let response: Entity | CollectionResponse<Entity> | ImageValue = null;\n\n        if (this.shouldRetrieveCache()) {\n          cache = CacheService.getCache<CacheResponse>(schemas.get, schemas.get.stores.responses);\n          const result: CacheResponse = getIsResponseCacheEnabled() ? await cache.getValue(key) : null;\n          if (result && getResponseInvalidationTime(this.cacheInvalidationPeriod) > Date.now() - result.timeCached) {\n            response = JSON.parse(result.response) as CollectionResponse<Entity>;\n          }\n        }\n\n        if (!response) {\n          let uri = this.resource;\n          let isDeltaLink = false;\n\n          // if we had a response earlier with a delta link, use it instead\n          if (this.response?.['@odata.deltaLink']) {\n            uri = this.response['@odata.deltaLink'] as string;\n            isDeltaLink = true;\n          } else {\n            // TODO: Check this against the base url for the cloud in use.\n            isDeltaLink = new URL(uri, 'https://graph.microsoft.com').pathname.endsWith('delta');\n          }\n\n          const graph: IGraph = provider.graph.forComponent(this);\n          let request: GraphRequest = graph.api(uri).version(this.version);\n\n          if (this.scopes?.length) {\n            request = request.middlewareOptions(prepScopes(this.scopes));\n          }\n\n          if (this.type === 'json') {\n            response = (await request.get()) as CollectionResponse<Entity> | Entity;\n\n            if (isDeltaLink && isCollectionResponse(this.response) && isCollectionResponse(response)) {\n              const responseValues: Entity[] = response.value;\n              response.value = this.response.value.concat(responseValues);\n            }\n\n            if (!this.isPolling && !equals(this.response, response)) {\n              this.response = response;\n            }\n\n            // get more pages if there are available\n            if (isCollectionResponse(response) && response['@odata.nextLink']) {\n              let pageCount = 1;\n              let page = response;\n\n              while (\n                (pageCount < this.maxPages || this.maxPages <= 0 || (isDeltaLink && this.pollingRate)) &&\n                page?.['@odata.nextLink']\n              ) {\n                pageCount++;\n                const nextResource = (page['@odata.nextLink'] as string).split(this.version)[1];\n                page = (await graph.api(nextResource).version(this.version).get()) as CollectionResponse<Entity>;\n                if (page?.value?.length) {\n                  page.value = response.value.concat(page.value);\n                  response = page;\n                  if (!this.isPolling) {\n                    this.response = response;\n                  }\n                }\n              }\n            }\n          } else {\n            if (this.resource.indexOf('/photo/$value') === -1 && this.resource.indexOf('/thumbnails/') === -1) {\n              throw new Error('Only /photo/$value and /thumbnails/ endpoints support the image type');\n            }\n\n            let image: string;\n            if (this.resource.indexOf('/photo/$value') > -1) {\n              // Sanitizing the resource to ensure getPhotoForResource gets the right format\n              const sanitizedResource = this.resource.replace('/photo/$value', '');\n              const photoResponse = await getPhotoForResource(graph, sanitizedResource, this.scopes);\n              if (photoResponse) {\n                image = photoResponse.photo;\n              }\n            } else if (this.resource.indexOf('/thumbnails/') > -1) {\n              const imageResponse = await getDocumentThumbnail(graph, this.resource, this.scopes);\n              if (imageResponse) {\n                image = imageResponse.thumbnail;\n              }\n            }\n\n            if (image) {\n              response = {\n                image\n              };\n            }\n          }\n\n          if (this.shouldUpdateCache() && response) {\n            cache = CacheService.getCache<CacheResponse>(schemas.get, schemas.get.stores.responses);\n            await cache.putValue(key, { response: JSON.stringify(response) });\n          }\n        }\n\n        if (!equals(this.response, response)) {\n          this.response = response;\n        }\n      } catch (e: unknown) {\n        this.error = e as object;\n      }\n\n      if (this.response) {\n        this.error = null;\n\n        if (this.pollingRate) {\n          setTimeout(() => {\n            this.isPolling = true;\n            void this.loadState().finally(() => {\n              this.isPolling = false;\n            });\n          }, this.pollingRate);\n        }\n      }\n    } else {\n      this.response = null;\n    }\n    this.isRefreshing = false;\n    this.fireCustomEvent('dataChange', { response: this.response, error: this.error }, true, false, true);\n  }\n\n  private shouldRetrieveCache(): boolean {\n    return getIsResponseCacheEnabled() && this.cacheEnabled && !(this.isRefreshing || this.isPolling);\n  }\n\n  private shouldUpdateCache(): boolean {\n    return getIsResponseCacheEnabled() && this.cacheEnabled;\n  }\n}\n","// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\n\nimport { css, CSSResult } from 'lit';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles: CSSResult[] = [\n  css`\n:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host{--max-height:var(--picker-max-height, 380px);font-family:var(--default-font-family)}:host .picker{background-color:var(--picker-background-color,transparent)}:host fluent-combobox::part(selected-value)::placeholder{color:var(--picker-text-color,var(--input-filled-placeholder-rest))}:host fluent-combobox::part(selected-value):hover::placeholder{color:var(--picker-text-color-hover,var(--secondary-text-hover-color))}[dir=rtl] .picker{direction:rtl}\n`];","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { html, PropertyValueMap, TemplateResult } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { MgtTemplatedTaskComponent, mgtHtml } from '@microsoft/mgt-element';\nimport { strings } from './strings';\nimport { fluentCombobox, fluentOption } from '@fluentui/web-components';\nimport { registerFluentComponents } from '../../utils/FluentComponents';\nimport '../../styles/style-helper';\nimport { Entity } from '@microsoft/microsoft-graph-types';\nimport { DataChangedDetail, registerMgtGetComponent } from '../mgt-get/mgt-get';\nimport { styles } from './mgt-picker-css';\nimport { registerComponent } from '@microsoft/mgt-element';\n\nexport const registerMgtPickerComponent = () => {\n  registerFluentComponents(fluentCombobox, fluentOption);\n\n  registerMgtGetComponent();\n  registerComponent('picker', MgtPicker);\n};\n\n/**\n * Web component that allows a single entity pick from a generic endpoint from Graph. Is a thin wrapper over mgt-get.\n * Does not load any state itself, only received state from mgt-get via events.\n *\n * @fires {CustomEvent<any>} selectionChanged - Fired when an option is clicked/selected\n * @export\n * @class MgtPicker\n * @extends {MgtTemplatedTaskComponent}\n *\n * @cssprop --picker-background-color - {Color} Picker component background color\n * @cssprop --picker-list-max-height - {String} max height for options list. Default value is 380px.\n */\nexport class MgtPicker extends MgtTemplatedTaskComponent {\n  protected get strings() {\n    return strings;\n  }\n\n  public static get styles() {\n    return styles;\n  }\n\n  /**\n   * The resource to get\n   *\n   * @type {string}\n   * @memberof MgtPicker\n   */\n  @property({\n    attribute: 'resource',\n    type: String\n  })\n  public resource: string;\n\n  /**\n   * Api version to use for request\n   *\n   * @type {string}\n   * @memberof MgtPicker\n   */\n  @property({\n    attribute: 'version',\n    type: String\n  })\n  public version = 'v1.0';\n\n  /**\n   * Maximum number of pages to get for the resource\n   * default = 3\n   * if <= 0, all pages will be fetched\n   *\n   * @type {number}\n   * @memberof MgtPicker\n   */\n  @property({\n    attribute: 'max-pages',\n    type: Number\n  })\n  public maxPages = 3;\n\n  /**\n   * A placeholder for the picker\n   *\n   * @type {string}\n   * @memberof MgtPicker\n   */\n  @property({\n    attribute: 'placeholder',\n    type: String\n  })\n  public placeholder: string;\n\n  /**\n   * Key to be rendered in the picker\n   *\n   * @type {string}\n   * @memberof MgtPicker\n   */\n  @property({\n    attribute: 'key-name',\n    type: String\n  })\n  public keyName: string;\n\n  /**\n   * Entity to be rendered in the picker\n   *\n   * @type {string}\n   * @memberof MgtPicker\n   */\n  @property({\n    attribute: 'entity-type',\n    type: String\n  })\n  public entityType: string;\n\n  /**\n   * The scopes to request\n   *\n   * @type {string[]}\n   * @memberof MgtPicker\n   */\n  @property({\n    attribute: 'scopes',\n    converter: value => {\n      return value ? value.toLowerCase().split(',') : null;\n    }\n  })\n  public scopes: string[] = [];\n\n  /**\n   * Enables cache on the response from the specified resource\n   * default = false\n   *\n   * @type {boolean}\n   * @memberof MgtPicker\n   */\n  @property({\n    attribute: 'cache-enabled',\n    type: Boolean\n  })\n  public cacheEnabled = false;\n\n  /**\n   * Invalidation period of the cache for the responses in milliseconds\n   *\n   * @type {number}\n   * @memberof MgtPicker\n   */\n  @property({\n    attribute: 'cache-invalidation-period',\n    type: Number\n  })\n  public cacheInvalidationPeriod = 0;\n\n  /**\n   * Sets the currently selected value for the picker\n   * Must be present as an option in the supplied data returned from the the underlying graph query\n   *\n   * @type {string}\n   * @memberof MgtPicker\n   */\n  @property({\n    attribute: 'selected-value',\n    type: String\n  })\n  public selectedValue: string;\n\n  @state() private response: Entity[];\n\n  constructor() {\n    super();\n    this.placeholder = this.strings.comboboxPlaceholder;\n    this.entityType = null;\n    this.keyName = null;\n  }\n\n  /**\n   * Refresh the data\n   *\n   * @param {boolean} [hardRefresh=false]\n   * if false (default), the component will only update if the data changed\n   * if true, the data will be first cleared and reloaded completely\n   * @memberof MgtPicker\n   */\n  public refresh(hardRefresh = false) {\n    if (hardRefresh) {\n      this.clearState();\n    }\n    void this._task.run();\n  }\n\n  /**\n   * Clears the state of the component\n   *\n   * @protected\n   * @memberof MgtPicker\n   */\n  protected clearState(): void {\n    this.response = null;\n    this.error = null;\n  }\n\n  public renderLoading = (): TemplateResult => {\n    if (!this.response) {\n      return this.renderTemplate('loading', null);\n    }\n    return this.renderContent();\n  };\n\n  /**\n   * Invoked on each update to perform rendering the picker. This method must return\n   * a lit-html TemplateResult. Setting properties inside this method will *not*\n   * trigger the element to update.\n   */\n  public renderContent = () => {\n    const error = this.error ? (this.error as Error) : null;\n    if (error && this.hasTemplate('error')) {\n      return this.renderTemplate('error', { error }, 'error');\n    } else if (this.hasTemplate('no-data')) {\n      return this.renderTemplate('no-data', null);\n    }\n\n    return this.response?.length > 0 ? this.renderPicker() : this.renderGet();\n  };\n\n  /**\n   * Render picker.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPicker\n   */\n  protected renderPicker(): TemplateResult {\n    return mgtHtml`\n      <fluent-combobox\n        @keydown=${this.handleComboboxKeydown}\n        current-value=${ifDefined(this.selectedValue)}\n        part=\"picker\"\n        class=\"picker\"\n        id=\"combobox\"\n        autocomplete=\"list\"\n        placeholder=${this.placeholder}>\n          ${this.response.map(\n            item => html`\n            <fluent-option value=${item.id} @click=${(e: MouseEvent) =>\n              this.handleClick(e, item)}> ${this.getNestedPropertyValue(item, this.keyName)} </fluent-option>`\n          )}\n      </fluent-combobox>\n     `;\n  }\n\n  private getNestedPropertyValue(item: Entity, keyName: string) {\n    const keys = keyName.split('.');\n    let value: Entity | object | string = item;\n\n    for (const key of keys) {\n      value = value[key] as object | string;\n\n      if (value === undefined) {\n        console.warn(`mgt-picker: Key '${key}' is undefined.`);\n        return '';\n      }\n    }\n\n    return value;\n  }\n\n  /**\n   * Renders mgt-get which does a GET request to the resource.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPicker\n   */\n  protected renderGet(): TemplateResult {\n    return mgtHtml`\n      <mgt-get\n        class=\"mgt-get\"\n        resource=${this.resource}\n        version=${this.version}\n        .scopes=${this.scopes}\n        max-pages=${this.maxPages}\n        ?cache-enabled=${this.cacheEnabled}\n        ?cache-invalidation-period=${this.cacheInvalidationPeriod}>\n      </mgt-get>`;\n  }\n\n  /**\n   * When the component is first updated wire up the event listeners.\n   * @param changedProperties a map of changed properties with old values\n   */\n  protected firstUpdated(changedProperties: PropertyValueMap<unknown> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(changedProperties);\n    const parent = this.renderRoot;\n    if (parent) {\n      parent.addEventListener('dataChange', (e: CustomEvent<DataChangedDetail>): void => this.handleDataChange(e));\n    } else {\n      console.error('🦒: mgt-picker component requires a renderRoot. Something has gone horribly wrong.');\n    }\n  }\n\n  private handleDataChange(e: CustomEvent<DataChangedDetail>): void {\n    const response = e.detail.response.value;\n    const error = e.detail.error ? e.detail.error : null;\n    this.response = response;\n    this.error = error;\n  }\n\n  private handleClick(_e: MouseEvent, item: Entity) {\n    this.fireCustomEvent('selectionChanged', item, true, false, true);\n  }\n\n  /**\n   * Handles getting the fluent option item in the dropdown and fires a custom\n   * event with it when you press Enter or Backspace keys.\n   *\n   * @param {KeyboardEvent} e\n   */\n  private readonly handleComboboxKeydown = (e: KeyboardEvent) => {\n    let value: string;\n    let item: Entity;\n    const keyName: string = e.key;\n    const comboBox: HTMLElement = e.target as HTMLElement;\n    const fluentOptionEl = comboBox.querySelector('.selected');\n    if (fluentOptionEl) {\n      value = fluentOptionEl.getAttribute('value');\n    }\n\n    if ('Enter' === keyName) {\n      if (value) {\n        item = this.response.filter(res => res.id === value).pop();\n        this.fireCustomEvent('selectionChanged', item, true, false, true);\n      }\n    }\n  };\n}\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nexport const strings = {\n  termsetIdRequired: 'The termsetId property or termset-id attribute is required',\n  noTermsFound: 'No terms found',\n  comboboxPlaceholder: 'Select a term',\n  loadingMessage: 'Loading...'\n};\n","// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\n\nimport { css, CSSResult } from 'lit';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles: CSSResult[] = [\n  css`\n:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host{--max-height:var(--taxonomy-picker-list-max-height, 380px)}:host .picker{background-color:var(--taxonomy-picker-background-color,transparent)}:host fluent-combobox::part(selected-value)::placeholder{color:var(--taxonomy-picker-placeholder-color,var(--input-filled-placeholder-rest))}:host fluent-combobox::part(selected-value):hover::placeholder{color:var(--taxonomy-picker-placeholder-color-hover,var(--secondary-text-hover-color))}[dir=rtl] .picker{direction:rtl}\n`];","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport type * as MicrosoftGraph from '@microsoft/microsoft-graph-types';\nimport { Position } from '../../graph/types';\nimport { html, PropertyValueMap, TemplateResult } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport { MgtTemplatedTaskComponent, mgtHtml } from '@microsoft/mgt-element';\nimport { strings } from './strings';\nimport { fluentCombobox, fluentOption } from '@fluentui/web-components';\nimport { registerFluentComponents } from '../../utils/FluentComponents';\nimport '../../styles/style-helper';\nimport { styles } from './mgt-taxonomy-picker-css';\nimport { DataChangedDetail, registerMgtGetComponent } from '../mgt-get/mgt-get';\nimport { registerComponent } from '@microsoft/mgt-element';\nimport { registerMgtSpinnerComponent } from '../sub-components/mgt-spinner/mgt-spinner';\n\nexport const registerMgtTaxonomyPickerComponent = () => {\n  registerFluentComponents(fluentCombobox, fluentOption);\n\n  registerMgtSpinnerComponent();\n  registerMgtGetComponent();\n  registerComponent('taxonomy-picker', MgtTaxonomyPicker);\n};\n\n/**\n * Web component that can query the Microsoft Graph API for Taxonomy\n * and render a dropdown control with terms,\n * allowing selection of a single term based on\n * the specified term set id or a combination of the specified term set id and the specified term id.\n * Uses mgt-get.\n *\n * @fires {CustomEvent<MicrosoftGraph.TermStore.Term>} selectionChanged - Fired when an option is clicked/selected\n * @export\n * @class MgtTaxonomyPicker\n * @extends {MgtTemplatedTaskComponent}\n *\n * @cssprop --taxonomy-picker-background-color - {Color} Picker component background color\n * @cssprop --taxonomy-picker-list-max-height - {String} max height for options list. Default value is 380px.\n * @cssprop --taxonomy-picker-placeholder-color - {Color} Text color for the placeholder in the picker\n * @cssprop --taxonomy-picker-placeholder-hover-color - {Color} Text color for the placeholder in the picker on hover\n */\nexport class MgtTaxonomyPicker extends MgtTemplatedTaskComponent {\n  /**\n   * The strings to be used for localizing the component.\n   *\n   * @readonly\n   * @protected\n   * @memberof MgtTaxonomyPicker\n   */\n  protected get strings() {\n    return strings;\n  }\n\n  public static get styles() {\n    return styles;\n  }\n\n  /**\n   * The termsetId of the term set whose children to get.\n   *\n   * @type {string}\n   * @memberof MgtTaxonomyPicker\n   */\n  @property({\n    attribute: 'term-set-id',\n    type: String\n  })\n  public termsetId: string;\n\n  /**\n   * The termId of the term whose children to get. This term must be a child of the term set specified by termsetId.\n   *\n   * @type {string}\n   * @memberof MgtTaxonomyPicker\n   */\n  @property({\n    attribute: 'term-id',\n    type: String\n  })\n  public termId: string;\n\n  /**\n   * The id of the site where the termset is located. If not specified, the termset is assumed to be at the tenant level.\n   *\n   * @type {string}\n   * @memberof MgtTaxonomyPicker\n   */\n  @property({\n    attribute: 'site-id',\n    type: String\n  })\n  public siteId: string;\n\n  /**\n   * The locale based on which the term names should be returned.\n   *\n   * @type {string}\n   * @memberof MgtTaxonomyPicker\n   */\n  @property({\n    attribute: 'locale',\n    type: String\n  })\n  public locale: string;\n\n  /**\n   * Api version to use for request.\n   * Default is beta.\n   *\n   * @type {string}\n   * @memberof MgtTaxonomyPicker\n   */\n  @property({\n    attribute: 'version',\n    type: String\n  })\n  public version = 'beta';\n\n  /**\n   * A placeholder for the picker.\n   *\n   * @type {string}\n   * @memberof MgtTaxonomyPicker\n   */\n  @property({\n    attribute: 'placeholder',\n    type: String\n  })\n  public placeholder: string;\n\n  /**\n   * The position of the dropdown. Can be 'above' or 'below'.\n   *\n   * @type {string}\n   * @memberof MgtTaxonomyPicker\n   */\n  @property({\n    attribute: 'position',\n    type: String,\n    converter: (value: Position): Position => {\n      if (value === 'above') {\n        return 'above';\n      }\n      return 'below';\n    }\n  })\n  public position: Position = 'below';\n\n  /**\n   * The default selected term id.\n   *\n   * @type {string}\n   * @memberof MgtTaxonomyPicker\n   */\n  @property({\n    attribute: 'default-selected-term-id',\n    type: String\n  })\n  public defaultSelectedTermId: string;\n\n  /**\n   * The selected term.\n   *\n   * @type {MicrosoftGraph.TermStore.Term}\n   * @memberof MgtTaxonomyPicker\n   */\n  @property({\n    attribute: 'selected-term',\n    type: Object\n  })\n  public selectedTerm: MicrosoftGraph.TermStore.Term | null = null;\n\n  /**\n   * Determines whether component should be disabled or not\n   *\n   * @type {boolean}\n   * @memberof MgtPeoplePicker\n   */\n  @property({\n    attribute: 'disabled',\n    type: Boolean\n  })\n  public disabled: boolean;\n\n  /**\n   * Enables cache on the response from the specified resource.\n   * Default is false.\n   *\n   * @type {boolean}\n   * @memberof MgtTaxonomyPicker\n   */\n  @property({\n    attribute: 'cache-enabled',\n    type: Boolean\n  })\n  public cacheEnabled = false;\n\n  /**\n   * Invalidation period of the cache for the responses in milliseconds.\n   *\n   * @type {number}\n   * @memberof MgtTaxonomyPicker\n   */\n  @property({\n    attribute: 'cache-invalidation-period',\n    type: Number\n  })\n  public cacheInvalidationPeriod = 0;\n\n  @state() private terms: MicrosoftGraph.TermStore.Term[];\n  @state() private noTerms: boolean;\n  // @state() private error: object;\n\n  constructor() {\n    super();\n    this.placeholder = this.strings.comboboxPlaceholder;\n    this.noTerms = false;\n  }\n\n  /**\n   * Refresh the data\n   *\n   * @param {boolean} [hardRefresh=false]\n   * if false (default), the component will only update if the data changed\n   * if true, the data will be first cleared and reloaded completely\n   * @memberof MgtTaxonomyPicker\n   */\n  public refresh(hardRefresh = false) {\n    if (hardRefresh) {\n      this.clearState();\n    }\n  }\n\n  /**\n   * Clears the state of the component\n   *\n   * @protected\n   * @memberof MgtTaxonomyPicker\n   */\n  protected clearState(): void {\n    this.terms = null;\n    this.error = null;\n    this.noTerms = false;\n  }\n  /**\n   * Renders loading spinner while terms are fetched from the Graph\n   *\n   * @protected\n   * @returns\n   * @memberof MgtTaxonomyPicker\n   */\n  protected renderLoading = () => {\n    if (!this.terms) {\n      return (\n        this.renderTemplate('loading', null, 'loading') ||\n        mgtHtml`\n        <div class=\"message-parent\">\n          <mgt-spinner></mgt-spinner>\n          <div label=\"loading-text\" aria-label=\"loading\">\n            ${this.strings.loadingMessage}\n          </div>\n        </div>\n      `\n      );\n    }\n    return this.renderContent();\n  };\n\n  /**\n   * Invoked on each update to perform rendering the picker. This method must return\n   * a lit-html TemplateResult. Setting properties inside this method will *not*\n   * trigger the element to update.\n   */\n  public renderContent = () => {\n    // if error state, render error template\n    if (this.error) {\n      return this.renderError();\n    }\n\n    // if no terms are found, render no-data template\n    if (this.noTerms) {\n      return this.renderNoData();\n    }\n\n    // if terms are found, render picker else render get\n    return this.terms?.length > 0 ? this.renderTaxonomyPicker() : this.renderGet();\n  };\n\n  /**\n   * Render the no-data state.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtTaxonomyPicker\n   */\n  protected renderError = (): TemplateResult =>\n    this.renderTemplate('error', null, 'error') || html`<span>${this.error}</span>`;\n  /**\n   * Render the no-data state.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtTaxonomyPicker\n   */\n  protected renderNoData(): TemplateResult {\n    return this.renderTemplate('no-data', null) || html`<span>${this.strings.noTermsFound}</span>`;\n  }\n\n  /**\n   * Render picker.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtTaxonomyPicker\n   */\n  protected renderTaxonomyPicker(): TemplateResult {\n    return mgtHtml`\n      <fluent-combobox class=\"taxonomy-picker\" autocomplete=\"both\" placeholder=${this.placeholder} position=${\n        this.position\n      } ?disabled=${this.disabled}>\n        ${this.terms.map(term => this.renderTaxonomyPickerItem(term))}\n      </fluent-combobox>\n     `;\n  }\n\n  /**\n   * Render picker item.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtTaxonomyPicker\n   */\n  protected renderTaxonomyPickerItem(term: MicrosoftGraph.TermStore.Term): TemplateResult {\n    const selected: boolean = this.defaultSelectedTermId && this.defaultSelectedTermId === term.id;\n\n    return html`\n        <fluent-option value=${term.id} ?selected=${selected} @click=${(e: MouseEvent) => this.handleClick(e, term)}> ${\n          this.renderTemplate('term', { term }, term.id) || term.labels[0].name\n        } </fluent-option>\n        `;\n  }\n\n  /**\n   * Render picker.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtTaxonomyPicker\n   */\n  protected renderGet(): TemplateResult {\n    // if termsetId is not specified, return error message\n    if (!this.termsetId) {\n      return html`<span>${this.strings.termsetIdRequired}</span>`;\n    }\n\n    let resource = `/termStore/sets/${this.termsetId}/children`;\n\n    // if both termsetId and termId are specified, then set resource to /termStore/sets/{termsetId}/terms/{termId}/children\n    if (this.termId) {\n      resource = `/termStore/sets/${this.termsetId}/terms/${this.termId}/children`;\n    }\n\n    // if siteId is specified, then prefix /sites/{siteId}/ to the resource\n    if (this.siteId) {\n      resource = `/sites/${this.siteId}${resource}`;\n    }\n\n    // Add properties to select to the resource\n    resource += '?$select=id,labels,descriptions,properties';\n\n    return mgtHtml`\n      <mgt-get\n        class=\"mgt-get\"\n        resource=${resource}\n        version=${this.version}\n        scopes=\"TermStore.Read.All, TermStore.ReadWrite.All\"\n        ?cache-enabled=${this.cacheEnabled}\n        ?cache-invalidation-period=${this.cacheInvalidationPeriod}>\n      </mgt-get>`;\n  }\n\n  protected firstUpdated(changedProperties: PropertyValueMap<unknown> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(changedProperties);\n    const parent = this.renderRoot;\n    parent.addEventListener('dataChange', (e: CustomEvent<DataChangedDetail>): void => this.handleDataChange(e));\n  }\n\n  private handleDataChange(e: CustomEvent<DataChangedDetail>): void {\n    const error = e.detail.error ? e.detail.error : null;\n\n    if (error) {\n      this.error = error;\n      return;\n    }\n\n    // if locale is specified, then convert it to lower case\n    if (this.locale) {\n      this.locale = this.locale.toLowerCase();\n    }\n\n    const response = e.detail.response.value;\n\n    // if response is not null and has values, if locale is specified, then\n    // get the label in response that has languageTag equal to locale and make it the first label and append the rest of the labels\n\n    const terms = response.map((item: MicrosoftGraph.TermStore.Term) => {\n      const labels = item.labels;\n      if (labels && labels.length > 0) {\n        if (this.locale) {\n          const label = labels.find(l => l.languageTag.toLowerCase() === this.locale);\n          if (label) {\n            item.labels = [label, ...labels.filter(l => l.languageTag.toLowerCase() !== this.locale)];\n          }\n        }\n      }\n      return item;\n    });\n\n    this.terms = terms;\n\n    //  if there are no terms then set noTerms to true\n    if (terms.length === 0) {\n      this.noTerms = true;\n    }\n  }\n\n  private handleClick(e: MouseEvent, item: MicrosoftGraph.TermStore.Term) {\n    this.selectedTerm = item;\n    this.fireCustomEvent('selectionChanged', item);\n  }\n}\n","// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\n\nimport { css, CSSResult } from 'lit';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles: CSSResult[] = [\n  css`\n:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host .signed-in-person{--person-background-color:$signed-in-background-color;padding:var(--login-button-padding,10px 16px)}:host .account{padding:0;margin:7px 0}:host .account,:host .person,:host .signed-in-person{--person-avatar-size:var(--login-person-avatar-size, 40px)}:host fluent-button.signed-in{height:auto;min-width:auto}:host fluent-button.signed-in::part(control){width:100%;height:100%;padding:var(--login-button-padding,0);background:var(--login-signed-in-background,transparent);word-spacing:inherit;text-indent:inherit;letter-spacing:inherit}:host fluent-button.signed-in::part(control):focus-within,:host fluent-button.signed-in::part(control):hover{background:var(--login-signed-in-hover-background,var(--neutral-fill-stealth-hover));--secondary-text-color:var(--secondary-text-hover-color)}:host fluent-button.signed-out::part(control){color:var(--login-signed-out-button-text-color,var(--neutral-fill-foreground-rest));background:var(--login-signed-out-button-background,padding-box linear-gradient(var(--neutral-fill-rest),var(--neutral-fill-rest)),border-box var(--neutral-stroke-control-rest))}:host fluent-button.signed-out::part(control):focus-within,:host fluent-button.signed-out::part(control):hover{background:var(--login-signed-out-button-hover-background,var(--neutral-fill-stealth-hover))}:host fluent-button.small::part(control):hover{background:0 0}:host fluent-button:focus-visible{outline-style:var(--focus-ring-style,auto)}:host fluent-card{--fill-color:var(--login-popup-background-color, var(--neutral-layer-1));padding:var(--login-popup-padding,16px)}:host .login-root .small .signed-in-person{padding:0;background:0 0}:host .login-root .small .signed-in-person:focus-within,:host .login-root .small .signed-in-person:hover{background:0 0}:host .login-root .account-list{padding:calc(var(--design-unit) * 1px) 0;margin:0}:host .login-root .account-item{height:auto;min-width:auto;margin-top:4px;background:var(--login-popup-background-color,var(--neutral-layer-1));list-style-type:none;cursor:pointer}:host .login-root .account-item:hover{background:var(--login-account-item-hover-bg-color,var(--neutral-fill-stealth-hover));--person-background-color:$login-account-item-hover-bg-color}:host .login-root .flyout .flyout-command{color:var(--login-flyout-command-text-color,var(--accent-foreground-rest))}:host .login-root .flyout .popup-content .commands{display:flex;align-items:flex-end;justify-content:flex-end}:host .login-root .flyout .popup-content .commands fluent-button::part(control){color:var(--login-command-button-text-color,var(--neutral-fill-foreground-rest));background:var(--login-command-button-background-color,var(--neutral-fill-stealth-rest));word-spacing:inherit;text-indent:inherit;letter-spacing:inherit}:host .login-root .flyout .popup-content .commands fluent-button::part(control):hover{background:var(--login-command-button-hover-background-color,var(--neutral-fill-stealth-hover))}:host .login-root .flyout .popup-content .content .main-profile{margin-bottom:56px;margin-top:27px}:host .login-root .flyout .popup-content .add-account{padding-top:16px}:host .login-root .flyout .popup-content .add-account fluent-button::part(control){color:var(--login-add-account-button-text-color,var(--neutral-fill-foreground-rest));background:var(--login-add-account-button-background-color,var(--neutral-fill-stealth-rest));word-spacing:inherit;text-indent:inherit;letter-spacing:inherit}:host .login-root .flyout .popup-content .add-account fluent-button::part(control):hover{background:var(--login-add-account-button-hover-background-color,var(--neutral-fill-stealth-hover))}\n`];","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nexport const strings: Record<string, string> = {\n  signInLinkSubtitle: 'Sign In',\n  signOutLinkSubtitle: 'Sign Out',\n  signInWithADifferentAccount: 'Sign in with a different account'\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { CSSResult, html, TemplateResult } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { Providers, ProviderState, IProviderAccount, mgtHtml, MgtTemplatedTaskComponent } from '@microsoft/mgt-element';\n\nimport { AvatarSize, IDynamicPerson, ViewType } from '../../graph/types';\nimport { MgtFlyout, registerMgtFlyoutComponent } from '../sub-components/mgt-flyout/mgt-flyout';\nimport { getUserWithPhoto } from '../../graph/graph.userWithPhoto';\nimport { MgtPerson, registerMgtPersonComponent } from '../mgt-person/mgt-person';\n\nimport { getSvg, SvgIcon } from '../../utils/SvgHelper';\n\nimport { styles } from './mgt-login-css';\nimport { strings } from './strings';\n\nimport '../../styles/style-helper';\n\nimport { fluentListbox, fluentProgressRing, fluentButton, fluentCard } from '@fluentui/web-components';\nimport { registerFluentComponents } from '../../utils/FluentComponents';\nimport { registerComponent } from '@microsoft/mgt-element';\nimport { TaskStatus } from '@lit/task';\n\n/**\n * loginViewType describes the enum strings that can be passed in to determine\n * size of the mgt-login control.\n */\nexport type LoginViewType = 'avatar' | 'compact' | 'full';\n\ninterface PersonViewConfig {\n  view: ViewType;\n  avatarSize: AvatarSize;\n}\n\nexport const registerMgtLoginComponent = () => {\n  registerFluentComponents(fluentListbox, fluentProgressRing, fluentButton, fluentCard);\n\n  registerMgtFlyoutComponent();\n  registerMgtPersonComponent();\n  registerComponent('login', MgtLogin);\n};\n\n/**\n * Web component button and flyout control to facilitate Microsoft identity platform authentication\n *\n * @export\n * @class MgtLogin\n * @extends {MgtTemplatedTaskComponent}\n *\n * @fires {CustomEvent<undefined>} loginInitiated - Fired when login is initiated by the user\n * @fires {CustomEvent<undefined>} loginCompleted - Fired when login completes\n * @fires {CustomEvent<undefined>} loginFailed - Fired when login fails\n * @fires {CustomEvent<undefined>} logoutInitiated - Fired when logout is initiated by the user\n * @fires {CustomEvent<undefined>} logoutCompleted - Fired when logout completed\n *\n * @template signed-in-button-content (dataContext: {personDetails, personImage})\n * @template signed-out-button-content (dataContext: null)\n * @template flyout-commands (dataContext: {handleSignOut})\n * @template flyout-person-details (dataContext: {personDetails, personImage})\n *\n * @cssprop --login-signed-in-background - {String} the background properties of the component when signed in.\n * @cssprop --login-signed-in-hover-background - {String} the background properties of the component when signed in.\n * @cssprop --login-signed-out-button-background - {String} the background properties of the component when signed out.\n * @cssprop --login-signed-out-button-hover-background - {String} the background properties of the component when signed out.\n * @cssprop --login-signed-out-button-text-color - {Color} the background color of the component when signed out.\n * @cssprop --login-button-padding - {Length} the padding of the button. Default is 0px.\n * @cssprop --login-popup-background-color - {Color} the background color of the popup.\n * @cssprop --login-popup-command-button-background-color - {Color} the color of the background to the popup command button.\n * @cssprop --login-popup-padding - {Length} the padding applied to the popup card. Default is 16px.\n * @cssprop --login-add-account-button-text-color - {Color} the color for the text and icon of the add account button.\n * @cssprop --login-add-account-button-background-color - {Color} the color for the background and icon of the add account button.\n * @cssprop --login-add-account-button-hover-background-color - {Color} the color for the background and icon of the add account button on hover.\n * @cssprop --login-command-button-text-color - {Color} the color for the text of the command button.\n * @cssprop --login-command-button-background-color - {Color} the color for the background of the command button.\n * @cssprop --login-command-button-hover-background-color - {Color} the color for the background of the command button on hovering.\n * @cssprop --login-account-item-hover-bg-color - {Color} the background color of the account item on hover.\n * @cssprop --login-flyout-command-text-color - {Color} the color for the text of the flyout command button.\n * @cssprop --login-person-avatar-size - {Length} the size of the avatar in the person component. Default is 40px.\n */\nexport class MgtLogin extends MgtTemplatedTaskComponent {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles(): CSSResult[] {\n    return styles;\n  }\n  /**\n   * Returns the object of strings for localization\n   *\n   * @readonly\n   * @protected\n   * @memberof MgtLogin\n   */\n  protected get strings(): Record<string, string> {\n    return strings;\n  }\n\n  /**\n   * Allows developer to use specific user details for login.\n   *\n   * @type {IDynamicPerson}\n   */\n  @property({\n    attribute: 'user-details',\n    type: Object\n  })\n  public userDetails: IDynamicPerson;\n\n  /**\n   * Determines if presence is shown for logged in user\n   * defaults to false\n   *\n   * @type {boolean}\n   */\n  @property({\n    attribute: 'show-presence',\n    type: Boolean\n  })\n  public showPresence = false;\n\n  /**\n   * Determines the view style to apply to the logged in user\n   * options are 'full', 'compact', 'avatar', defaults to 'full'\n   *\n   * @type {LoginViewType}\n   */\n  @property({\n    attribute: 'login-view',\n    type: String\n  })\n  public loginView: LoginViewType = 'full';\n\n  /**\n   * Gets the flyout element\n   *\n   * @protected\n   * @type {MgtFlyout}\n   * @memberof MgtLogin\n   */\n  protected get flyout(): MgtFlyout {\n    return this.renderRoot.querySelector('.flyout');\n  }\n\n  /**\n   * Get the scopes required for login\n   *\n   * @static\n   * @return {*}  {string[]}\n   * @memberof MgtLogin\n   */\n  public static get requiredScopes(): string[] {\n    return [...new Set(['user.read', ...MgtPerson.requiredScopes])];\n  }\n\n  /**\n   * Determines if login menu popup should be showing.\n   *\n   * @private\n   * @type {boolean}\n   */\n  @state() private _isFlyoutOpen: boolean;\n\n  /**\n   * The image blob string\n   *\n   * @private\n   * @type {string}\n   * @memberof MgtLogin\n   */\n  private _image: string;\n\n  /**\n   * Suffix for user details key\n   *\n   * @private\n   * @type {string}\n   * @memberof MgtLogin\n   */\n  private get _userDetailsKey() {\n    return '-userDetails';\n  }\n\n  @state() private _arrowKeyLocation = -1;\n\n  constructor() {\n    super();\n    this._isFlyoutOpen = false;\n  }\n\n  /**\n   * Invoked each time the custom element is appended into a document-connected element\n   *\n   * @memberof MgtLogin\n   */\n  public connectedCallback() {\n    super.connectedCallback();\n    this.addEventListener('click', e => e.stopPropagation());\n  }\n\n  /**\n   * Initiate login\n   *\n   * @returns {Promise<void>}\n   * @memberof MgtLogin\n   */\n  public async login(): Promise<void> {\n    const provider = Providers.globalProvider;\n    // (If we have user details or the consumer doesn't cancel the loginInitiated event) and the provider doesn't support multi-account, we don't have to login.\n    // This condition is to prevent the login popup from showing up when the user is already logged in while still ensuring the loginIntiated event is raised\n    if ((this.userDetails || !this.fireCustomEvent('loginInitiated')) && !provider.isMultiAccountSupportedAndEnabled) {\n      return;\n    }\n    if (provider?.login) {\n      await provider.login();\n\n      if (provider.state === ProviderState.SignedIn) {\n        this.fireCustomEvent('loginCompleted');\n      } else {\n        this.fireCustomEvent('loginFailed');\n      }\n    }\n  }\n\n  /**\n   * Initiate logout\n   *\n   * @returns {Promise<void>}\n   * @memberof MgtLogin\n   */\n  public logout = async (): Promise<void> => {\n    if (!this.fireCustomEvent('logoutInitiated')) {\n      return;\n    }\n\n    const provider = Providers.globalProvider;\n    if (provider?.isMultiAccountSupportedAndEnabled) {\n      localStorage.removeItem(provider.getActiveAccount().id + this._userDetailsKey);\n    }\n    if (provider?.logout) {\n      await provider.logout();\n      this.userDetails = null;\n      if (provider.isMultiAccountSupportedAndEnabled) {\n        localStorage.removeItem(provider.getActiveAccount().id + this._userDetailsKey);\n      }\n      this.hideFlyout();\n      this.fireCustomEvent('logoutCompleted');\n    }\n  };\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method must return\n   * a lit-html TemplateResult. Setting properties inside this method will *not*\n   * trigger the element to update.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   */\n  protected renderContent = (): TemplateResult => {\n    return html`\n      <div class=\"login-root\">\n        ${this.renderButton()}\n        ${this.renderFlyout()}\n      </div>`;\n  };\n\n  protected args(): unknown[] {\n    return [this.providerState];\n  }\n\n  /**\n   * Load state into the component.\n   *\n   * @protected\n   * @memberof MgtLogin\n   */\n  protected async loadState() {\n    const provider = Providers.globalProvider;\n    if (provider && !this.userDetails) {\n      if (provider.state === ProviderState.SignedIn) {\n        this.userDetails = await getUserWithPhoto(provider.graph.forComponent(this));\n\n        if (this.userDetails.personImage) {\n          this._image = this.userDetails.personImage;\n        }\n\n        if (provider.isMultiAccountSupportedAndEnabled) {\n          localStorage.setItem(\n            Providers.globalProvider.getActiveAccount().id + this._userDetailsKey,\n            JSON.stringify(this.userDetails)\n          );\n        }\n        this.fireCustomEvent('loginCompleted');\n      } else {\n        this.userDetails = null;\n      }\n    }\n  }\n\n  /**\n   * Render the sign in or sign out button.\n   *\n   * @protected\n   * @memberof MgtLogin\n   * @returns {TemplateResult}\n   */\n  protected renderButton(): TemplateResult {\n    const isSignedIn = Providers.globalProvider?.state === ProviderState.SignedIn;\n    const loginClasses = classMap({\n      'signed-in': isSignedIn && Boolean(this.userDetails),\n      'signed-out': !isSignedIn,\n      small: this.loginView === 'avatar'\n    });\n    const appearance = isSignedIn ? 'stealth' : 'neutral';\n    const showSignedInState = isSignedIn && this.userDetails;\n    const buttonContentTemplate = showSignedInState\n      ? this.renderSignedInButtonContent(this.userDetails, this._image)\n      : this.renderSignedOutButtonContent();\n    const expandedState: boolean | undefined = showSignedInState ? this._isFlyoutOpen : undefined;\n    return html`\n      <fluent-button\n        id=\"login-button\"\n        aria-expanded=\"${ifDefined(expandedState)}\"\n        appearance=${appearance}\n        aria-label=\"${ifDefined(isSignedIn ? undefined : this.strings.signInLinkSubtitle)}\"\n        ?disabled=${this._task.status === TaskStatus.PENDING}\n        @click=${this.onClick}\n        class=${loginClasses}>\n          ${buttonContentTemplate}\n      </fluent-button>`;\n  }\n\n  private readonly flyoutOpened = () => {\n    this._isFlyoutOpen = true;\n  };\n  private readonly flyoutClosed = () => {\n    this._isFlyoutOpen = false;\n  };\n\n  /**\n   * Render the details flyout.\n   *\n   * @protected\n   * @memberof MgtLogin\n   * @returns {TemplateResult}\n   */\n  protected renderFlyout(): TemplateResult {\n    return mgtHtml`\n      <mgt-flyout\n        class=\"flyout\"\n        light-dismiss\n        @opened=${this.flyoutOpened}\n        @closed=${this.flyoutClosed}>\n        <fluent-card\n          slot=\"flyout\"\n          tabindex=\"0\"\n          class=\"flyout-card\"\n          @keydown=${this.onUserKeyDown}\n          >\n          ${this.renderFlyoutContent()}\n        </fluent-card>\n      </mgt-flyout>`;\n  }\n\n  /**\n   * Tracks tabbing through the flyout (keydown)\n   */\n  private readonly onUserKeyDown = (e: KeyboardEvent): void => {\n    if (!this.flyout.isOpen) {\n      return;\n    }\n\n    const el = this.renderRoot.querySelector('.popup-content');\n    const focusableEls = el.querySelectorAll('ul, fluent-button');\n    const firstFocusableEl = el.querySelector('#signout-button') || focusableEls[0];\n    const lastFocusableEl =\n      el.querySelector('#signin-different-account-button') || focusableEls[focusableEls.length - 1];\n\n    if (e.key === 'Tab' && e.shiftKey && firstFocusableEl === e.target) {\n      e.preventDefault();\n      (lastFocusableEl as HTMLElement)?.focus();\n    }\n    if (e.key === 'Tab' && !e.shiftKey && lastFocusableEl === e.target) {\n      e.preventDefault();\n      (firstFocusableEl as HTMLElement)?.focus();\n    }\n    if (e.key === 'Escape') {\n      const loginButton = this.renderRoot.querySelector('#login-button');\n      (loginButton as HTMLElement)?.focus();\n    }\n    const fluentCardEl = this.renderRoot.querySelector('fluent-card');\n    if (e.shiftKey && e.key === 'Tab' && e.target === fluentCardEl) {\n      this.hideFlyout();\n    }\n  };\n\n  /**\n   * Render the flyout menu content.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtLogin\n   */\n  protected renderFlyoutContent(): TemplateResult {\n    if (!this.userDetails) {\n      return;\n    }\n    return html`\n       <div class=\"popup\">\n         <div class=\"popup-content\">\n           <div class=\"commands\">\n             ${this.renderFlyoutCommands()}\n           </div>\n           <div class=\"content\">\n             <div class=\"main-profile\">\n               ${this.renderFlyoutPersonDetails(this.userDetails, this._image)}\n             </div>\n             ${this.renderAccounts()}\n           </div>\n           ${this.renderAddAccountContent()}\n         </div>\n       </div>\n     `;\n  }\n\n  private get hasMultipleAccounts(): boolean {\n    return (\n      Providers.globalProvider?.isMultiAccountSupportedAndEnabled &&\n      Providers.globalProvider?.getAllAccounts?.()?.length > 1\n    );\n  }\n\n  private get usesVerticalPersonCard(): boolean {\n    return this.loginView === 'full' || this.hasMultipleAccounts;\n  }\n\n  /**\n   * Render the flyout person details.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtLogin\n   */\n  protected renderFlyoutPersonDetails(personDetails: IDynamicPerson, personImage: string): TemplateResult {\n    const template = this.renderTemplate('flyout-person-details', { personDetails, personImage });\n    return (\n      template ||\n      mgtHtml`\n        <mgt-person\n          .personDetails=${personDetails}\n          .personImage=${personImage}\n          view=\"twolines\"\n          .line2Property=${'email'}\n          ?vertical-layout=${this.usesVerticalPersonCard}\n          class=\"person\">\n        </mgt-person>`\n    );\n  }\n\n  /**\n   * Render the flyout commands.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtLogin\n   */\n  protected renderFlyoutCommands(): TemplateResult {\n    const template = this.renderTemplate('flyout-commands', { handleSignOut: () => this.logout() });\n    return (\n      template ||\n      html`\n        <fluent-button\n          id=\"signout-button\"\n          appearance=\"stealth\"\n          size=\"medium\"\n          class=\"flyout-command\"\n          @click=${this.logout}\n          aria-label=${this.strings.signOutLinkSubtitle}>\n            ${this.strings.signOutLinkSubtitle}\n        </fluent-button>`\n    );\n  }\n\n  /**\n   * Render the button content.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtLogin\n   */\n  protected renderButtonContent(): TemplateResult {\n    if (this.userDetails) {\n      return this.renderSignedInButtonContent(this.userDetails, this._image);\n    } else {\n      return this.renderSignedOutButtonContent();\n    }\n  }\n\n  /**\n   * Renders the button to allow adding accounts.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtLogin\n   */\n  protected renderAddAccountContent() {\n    if (Providers.globalProvider.isMultiAccountSupportedAndEnabled) {\n      return html`\n        <div class=\"add-account\">\n          <fluent-button\n            id=\"signin-different-account-button\"\n            appearance=\"stealth\"\n            aria-label=\"${this.strings.signInWithADifferentAccount}\"\n            @click=${() => void this.login()}>\n            <span slot=\"start\"><i>${getSvg(SvgIcon.SelectAccount, 'currentColor')}</i></span>\n            ${this.strings.signInWithADifferentAccount}\n          </fluent-button>\n        </div>`;\n    }\n  }\n\n  private parsePersonDisplayConfiguration(): PersonViewConfig {\n    const displayConfig: PersonViewConfig = { view: 'twolines', avatarSize: 'small' };\n    switch (this.loginView) {\n      case 'avatar':\n        displayConfig.view = 'image';\n        displayConfig.avatarSize = 'small';\n        break;\n      case 'compact':\n        displayConfig.view = 'oneline';\n        displayConfig.avatarSize = 'small';\n        break;\n      case 'full':\n      default:\n        displayConfig.view = 'twolines';\n        displayConfig.avatarSize = 'auto';\n        break;\n    }\n    return displayConfig;\n  }\n\n  /**\n   * Render the button content when the user is signed in.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtLogin\n   */\n  protected renderSignedInButtonContent(personDetails: IDynamicPerson, personImage: string): TemplateResult {\n    const template = this.renderTemplate('signed-in-button-content', { personDetails, personImage });\n    const displayConfig = this.parsePersonDisplayConfiguration();\n    return (\n      template ||\n      mgtHtml`\n        <mgt-person\n          .personDetails=${this.userDetails}\n          .personImage=${this._image}\n          .view=${displayConfig.view}\n          .showPresence=${this.showPresence}\n          .avatarSize=${displayConfig.avatarSize}\n          line2-property=\"email\"\n          class=\"signed-in-person\"\n        ></mgt-person>`\n    );\n  }\n\n  /**\n   * Renders multiple accounts that can be used to sign in.\n   *\n   * @return {TemplateResult}\n   * @memberof MgtLogin\n   */\n  renderAccounts(): TemplateResult {\n    if (\n      Providers.globalProvider.state === ProviderState.SignedIn &&\n      Providers.globalProvider.isMultiAccountSupportedAndEnabled\n    ) {\n      const provider = Providers.globalProvider;\n      const accounts = provider.getAllAccounts();\n\n      if (accounts?.length > 1) {\n        return html`\n          <div id=\"accounts\">\n            <ul\n              tabindex=\"0\"\n              class=\"account-list\"\n              part=\"account-list\"\n              aria-label=\"${this.ariaLabel}\"\n              @keydown=${this.handleAccountListKeyDown}\n            >\n              ${accounts\n                .filter(a => a.id !== provider.getActiveAccount().id)\n                .map(account => {\n                  const details = localStorage.getItem(account.id + this._userDetailsKey);\n                  return mgtHtml`\n                    <li\n                      tabindex=\"-1\"\n                      part=\"account-item\"\n                      class=\"account-item\"\n                      @click=${() => this.setActiveAccount(account)}\n                      @keyup=${(e: KeyboardEvent) => {\n                        if (e.key === 'Enter') this.setActiveAccount(account);\n                      }}\n                    >\n                      <mgt-person\n                        .personDetails=${details ? JSON.parse(details) : null}\n                        .fallbackDetails=${{ displayName: account.name, mail: account.mail }}\n                        .view=${'twolines'}\n                        class=\"account\"\n                      ></mgt-person>\n                    </li>`;\n                })}\n            </ul>\n          </div>\n       `;\n      }\n    }\n  }\n\n  private readonly handleAccountListKeyDown = (event: KeyboardEvent) => {\n    const list: HTMLUListElement = this.renderRoot.querySelector('ul.account-list');\n    let item: HTMLLIElement;\n    const listItems: HTMLCollection = list?.children;\n    // Default all tabindex values in li nodes to -1\n    for (const element of listItems) {\n      const el = element as HTMLLIElement;\n      el.setAttribute('tabindex', '-1');\n      el.blur();\n    }\n\n    const childElementCount = list.childElementCount;\n    const keyName = event.key;\n    if (keyName === 'ArrowDown') {\n      this._arrowKeyLocation = (this._arrowKeyLocation + 1 + childElementCount) % childElementCount;\n    } else if (keyName === 'ArrowUp') {\n      this._arrowKeyLocation = (this._arrowKeyLocation - 1 + childElementCount) % childElementCount;\n    } else if (keyName === 'Tab' || keyName === 'Escape') {\n      this._arrowKeyLocation = -1;\n      list.blur();\n      if (keyName === 'Escape') {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n      return;\n    }\n\n    if (this._arrowKeyLocation > -1) {\n      item = listItems[this._arrowKeyLocation] as HTMLLIElement;\n      item.setAttribute('tabindex', '1');\n      item.focus();\n    }\n  };\n\n  /**\n   * Set one of the non-active accounts as the active account\n   *\n   * @param {IProviderAccount} account\n   * @memberof MgtLogin\n   */\n  private setActiveAccount(account: IProviderAccount) {\n    Providers.globalProvider.setActiveAccount(account);\n  }\n\n  /**\n   * Clears state of the component\n   *\n   * @protected\n   * @memberof MgtLogin\n   */\n  protected clearState() {\n    this.userDetails = null;\n    this._image = null;\n  }\n\n  /**\n   * Render the button content when the user is not signed in.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtLogin\n   */\n  protected renderSignedOutButtonContent(): TemplateResult {\n    const template = this.renderTemplate('signed-out-button-content', null);\n    return (\n      template ||\n      html`\n        <span>${this.strings.signInLinkSubtitle}</span>`\n    );\n  }\n\n  /**\n   * Show the flyout and its content.\n   *\n   * @protected\n   * @memberof MgtLogin\n   */\n  protected showFlyout(): void {\n    const flyout = this.flyout;\n    if (flyout) {\n      flyout.open();\n    }\n  }\n\n  /**\n   * Dismiss the flyout.\n   *\n   * @protected\n   * @memberof MgtLogin\n   */\n  protected hideFlyout(): void {\n    const flyout = this.flyout;\n    if (flyout) {\n      flyout.close();\n    }\n  }\n\n  /**\n   * Handles the click on the button in the flyout.\n   *\n   * @private\n   * @memberof MgtLogin\n   */\n  private readonly onClick = (): void => {\n    if (this.userDetails && this._isFlyoutOpen) {\n      this.hideFlyout();\n    } else if (this.userDetails) {\n      this.showFlyout();\n    } else {\n      void this.login();\n    }\n  };\n}\n","// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\n\nimport { css, CSSResult } from 'lit';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles: CSSResult[] = [\n  css`\n:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host .container{display:flex;flex-direction:column;position:relative}:host .dropdown{display:none;position:absolute;z-index:1000;top:34px}:host .dropdown.visible{display:flex}:host .dropdown .team-photo{width:24px;position:inherit;border-radius:50%;margin:0 6px}:host .dropdown .team-start-slot{width:max-content}:host .dropdown .team-parent-name{width:auto}:host .loading-text,:host .search-error-text{font-style:normal;font-weight:400;font-size:14px;line-height:20px}:host .message-parent{display:flex;flex-direction:row;gap:5px;padding:5px}:host .message-parent .loading-text{margin:auto}:host fluent-card{background:var(--channel-picker-dropdown-background-color,var(--fill-color));padding:2px;--card-height:auto;--width:var(--card-width)}:host fluent-text-field{width:100%}:host fluent-text-field::part(root){background:padding-box linear-gradient(var(--channel-picker-input-background-color,var(--neutral-fill-input-rest)),var(--channel-picker-input-background-color,var(--neutral-fill-input-rest))),border-box var(--channel-picker-input-border-color,var(--neutral-stroke-input-rest))}:host fluent-text-field::part(root):hover{background:padding-box linear-gradient(var(--channel-picker-input-background-color-hover,var(--neutral-fill-input-hover)),var(--channel-picker-input-background-color-hover,var(--neutral-fill-input-hover))),border-box var(--channel-picker-input-hover-border-color,var(--neutral-stroke-input-hover))}:host fluent-text-field::part(root):focus,:host fluent-text-field::part(root):focus-within{background:padding-box linear-gradient(var(--channel-picker-input-background-color-focus,var(--neutral-fill-input-focus)),var(--channel-picker-input-background-color-focus,var(--neutral-fill-input-focus))),border-box var(--channel-picker-input-focus-border-color,var(--neutral-stroke-input-focus))}:host fluent-text-field::part(control){word-spacing:inherit;text-indent:inherit;letter-spacing:inherit}:host fluent-text-field::part(control)::placeholder{color:var(--channel-picker-input-placeholder-text-color,var(--input-placeholder-rest))}:host fluent-text-field::part(control):hover::placeholder{color:var(--channel-picker-input-placeholder-text-color-hover,var(--input-placeholder-hover))}:host fluent-text-field::part(control):focus-within::placeholder,:host fluent-text-field::part(control):focus::placeholder{color:var(--channel-picker-input-placeholder-text-color-focus,var(--input-placeholder-filled))}:host fluent-text-field .search-icon svg path{fill:var(--channel-picker-search-icon-color,currentColor)}:host fluent-text-field .down-chevron{height:auto;min-width:auto}:host fluent-text-field .down-chevron svg path{fill:var(--channel-picker-down-chevron-color,currentColor)}:host fluent-text-field .up-chevron{height:auto;min-width:auto}:host fluent-text-field .up-chevron svg path{fill:var(--channel-picker-up-chevron-color,currentColor)}:host fluent-text-field .close-icon{height:auto;min-width:auto}:host fluent-text-field .close-icon svg path{fill:var(--channel-picker-close-icon-color,currentColor)}:host fluent-tree-view{min-width:100%;--tree-item-nested-width:2em}:host fluent-tree-item{width:100%;--tree-item-nested-width:2em}:host fluent-tree-item:focus-visible{outline:0}:host fluent-tree-item::part(expand-collapse-button){background:0 0}:host fluent-tree-item::part(content-region),:host fluent-tree-item::part(positioning-region){color:var(--channel-picker-dropdown-item-text-color,currentColor);background:var(--channel-picker-dropdown-background-color,transparent);border:calc(var(--stroke-width) * 2px) solid transparent;height:auto}:host fluent-tree-item::part(content-region):hover,:host fluent-tree-item::part(positioning-region):hover{background:var(--channel-picker-dropdown-item-background-color-hover,var(--neutral-fill-stealth-hover))}:host fluent-tree-item::part(content-region):hover::part(expand-collapse-button),:host fluent-tree-item::part(positioning-region):hover::part(expand-collapse-button){background:var(--channel-picker-dropdown-item-background-color-hover,var(--neutral-fill-stealth-hover))}:host fluent-tree-item fluent-tree-item::part(content-region){height:auto}:host fluent-breadcrumb-item{color:var(--channel-picker-dropdown-item-text-color-selected,var(--neutral-foreground-rest))}:host fluent-breadcrumb-item .team-parent-name{font-weight:700}:host fluent-breadcrumb-item .team-photo{width:19px;position:inherit;border-radius:50%}:host fluent-breadcrumb-item .arrow{margin-left:8px;margin-right:8px}:host fluent-breadcrumb-item .arrow svg{stroke:var(--channel-picker-arrow-fill,var(--neutral-foreground-rest))}[dir=rtl] :host{--direction:rtl}[dir=rtl] .dropdown{text-align:right}[dir=rtl] .arrow{transform:scaleX(-1);filter:fliph;filter:FlipH;margin-right:0;margin-left:5px}[dir=rtl] .selected-team{padding-left:10px}[dir=rtl] .message-parent .loading-text{right:auto;left:10px;padding-right:8px;text-align:right}@media (forced-colors:active) and (prefers-color-scheme:dark){:host fluent-text-field svg{stroke:#fff!important}}@media (forced-colors:active) and (prefers-color-scheme:light){:host fluent-text-field svg{stroke:#000!important}}\n`];","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { IGraph, CacheService, CacheStore, prepScopes } from '@microsoft/mgt-element';\nimport { Team, Channel } from '@microsoft/microsoft-graph-types';\nimport {\n  getPhotoForResource,\n  CachePhoto,\n  getPhotoInvalidationTime,\n  getIsPhotosCacheEnabled\n} from '../../graph/graph.photos';\nimport { schemas } from '../../graph/cacheStores';\nimport { CollectionResponse } from '@microsoft/mgt-element';\nimport { DropdownItem } from './teams-channel-picker-types';\n\nconst teamReadScopes = [\n  'Team.ReadBasic.All',\n  'TeamSettings.Read.All',\n  'TeamSettings.ReadWrite.All',\n  'User.Read.All',\n  'User.ReadWrite.All'\n];\n\nconst channelReadScopes = ['Channel.ReadBasic.All', 'ChannelSettings.Read.All', 'ChannelSettings.ReadWrite.All'];\n\nconst teamPhotoReadScopes = ['Team.ReadBasic.All', 'TeamSettings.Read.All', 'TeamSettings.ReadWrite.All'];\n\n/**\n * async promise, returns all Teams associated with the user logged in\n *\n * @returns {Promise<Team[]>}\n * @memberof Graph\n */\nexport const getAllMyTeams = async (graph: IGraph): Promise<Team[]> => {\n  const scopes = teamReadScopes;\n  const teams = (await graph\n    .api('/me/joinedTeams')\n    .select(['displayName', 'id', 'isArchived'])\n    .middlewareOptions(prepScopes(scopes))\n    .get()) as CollectionResponse<Team>;\n\n  return teams?.value;\n};\n\n/** An object collection of cached photos. */\ntype CachePhotos = Record<string, CachePhoto>;\n\n/**\n * Load the photos for a give set of teamIds\n *\n * @param graph {IGraph}\n * @param teamIds {string[]}\n * @returns {Promise<CachePhotos>}\n */\nexport const getTeamsPhotosForPhotoIds = async (graph: IGraph, teamIds: string[]): Promise<CachePhotos> => {\n  let cache: CacheStore<CachePhoto>;\n  let photos: CachePhotos = {};\n\n  if (getIsPhotosCacheEnabled()) {\n    cache = CacheService.getCache<CachePhoto>(schemas.photos, schemas.photos.stores.teams);\n    for (const id of teamIds) {\n      try {\n        const photoDetail = await cache.getValue(id);\n        if (photoDetail && getPhotoInvalidationTime() > Date.now() - photoDetail.timeCached) {\n          photos[id] = photoDetail;\n        }\n      } catch (_) {\n        // no-op\n      }\n    }\n    if (Object.keys(photos).length) {\n      return photos;\n    }\n  }\n\n  photos = {};\n\n  for (const id of teamIds) {\n    try {\n      const photoDetail = await getPhotoForResource(graph, `/teams/${id}`, teamPhotoReadScopes);\n      if (getIsPhotosCacheEnabled() && photoDetail) {\n        await cache.putValue(id, photoDetail);\n      }\n      photos[id] = photoDetail;\n    } catch (_) {\n      // no-op\n    }\n  }\n\n  return photos;\n};\n\n/**\n * Creates an array of DropdownItems from an array of Teams populated with channels and photos\n *\n * @param graph {IGraph}\n * @param teams {Team[]} the teams to get channels for\n * @returns {Promise<DropdownItem[]>} a promise that resolves to an array of DropdownItems\n */\nexport const getChannelsForTeams = async (graph: IGraph, teams: Team[]): Promise<DropdownItem[]> => {\n  const batch = graph.createBatch<CollectionResponse<Channel>>();\n\n  for (const team of teams) {\n    batch.get(team.id, `teams/${team.id}/channels`, channelReadScopes);\n  }\n\n  const responses = await batch.executeAll();\n  const result: DropdownItem[] = [];\n  for (const team of teams) {\n    const channelsForTeam = responses.get(team.id);\n    // skip over any teams that don't have channels\n    if (!channelsForTeam?.content?.value?.length) continue;\n    result.push({\n      item: team,\n      channels: channelsForTeam.content.value.map(c => ({ item: c }))\n    });\n  }\n  return result;\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\n/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nexport const strings = {\n  inputPlaceholderText: 'Select a channel',\n  noResultsFound: \"We didn't find any matches.\",\n  loadingMessage: 'Loading...',\n  photoFor: 'Teams photo for',\n  teamsChannels: 'Teams and channels results',\n  closeButtonAriaLabel: 'remove the selected channel'\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport * as MicrosoftGraph from '@microsoft/microsoft-graph-types';\nimport { html, TemplateResult } from 'lit';\nimport { state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { TaskStatus } from '@lit/task';\nimport { Providers, ProviderState, MgtTemplatedTaskComponent, mgtHtml } from '@microsoft/mgt-element';\nimport '../../styles/style-helper';\nimport { getSvg, SvgIcon } from '../../utils/SvgHelper';\nimport { debounce } from '../../utils/Utils';\nimport { styles } from './mgt-teams-channel-picker-css';\nimport { getAllMyTeams, getChannelsForTeams, getTeamsPhotosForPhotoIds } from './mgt-teams-channel-picker.graph';\nimport { strings } from './strings';\nimport { repeat } from 'lit/directives/repeat.js';\nimport { registerFluentComponents } from '../../utils/FluentComponents';\nimport {\n  fluentBreadcrumb,\n  fluentBreadcrumbItem,\n  fluentTreeView,\n  fluentTreeItem,\n  fluentCard,\n  fluentTextField\n} from '@fluentui/web-components';\nimport { registerComponent } from '@microsoft/mgt-element';\nimport { registerMgtSpinnerComponent } from '../sub-components/mgt-spinner/mgt-spinner';\nimport { SelectedChannel, DropdownItem, ChannelPickerItemState } from './teams-channel-picker-types';\n\nexport const registerMgtTeamsChannelPickerComponent = () => {\n  registerFluentComponents(\n    fluentBreadcrumb,\n    fluentBreadcrumbItem,\n    fluentCard,\n    fluentTreeView,\n    fluentTreeItem,\n    fluentTextField\n  );\n  registerMgtSpinnerComponent();\n  registerComponent('teams-channel-picker', MgtTeamsChannelPicker);\n};\n\n/**\n * Web component used to select channels from a User's Microsoft Teams profile\n *\n *\n * @class MgtTeamsChannelPicker\n * @extends {MgtTemplatedTaskComponent}\n *\n * @fires {CustomEvent<SelectedChannel | null>} selectionChanged - Fired when the selection changes\n *\n * @cssprop --channel-picker-input-border-color - {Color} Input border color\n * @cssprop --channel-picker-input-background-color - {Color} Input section background color\n * @cssprop --channel-picker-input-background-color-hover - {Color} Input background hover color\n * @cssprop --channel-picker-input-background-color-focus - {Color} Input background focus color\n *\n * @cssprop --channel-picker-dropdown-background-color - {Color} Background color of dropdown area\n * @cssprop --channel-picker-dropdown-item-text-color - {Color} Text color of the dropdown text.\n * @cssprop --channel-picker-dropdown-item-background-color-hover - {Color} Background color of channel or team during hover\n * @cssprop --channel-picker-dropdown-item-text-color-selected - {Color} Text color of channel or team during after selection\n *\n * @cssprop --channel-picker-arrow-fill - {Color} Color of arrow svg\n * @cssprop --channel-picker-input-placeholder-text-color - {Color} Color of placeholder text\n * @cssprop --channel-picker-input-placeholder-text-color-focus - {Color} Color of placeholder text during focus state\n * @cssprop --channel-picker-input-placeholder-text-color-hover - {Color} Color of placeholder text during hover state\n *\n * @cssprop --channel-picker-search-icon-color - {Color} the search icon color.\n * @cssprop --channel-picker-down-chevron-color - {Color} the down chevron icon color.\n * @cssprop --channel-picker-up-chevron-color - {Color} the up chevron icon color.\n * @cssprop --channel-picker-close-icon-color - {Color} the close icon color.\n *\n */\nexport class MgtTeamsChannelPicker extends MgtTemplatedTaskComponent {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * user the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  /**\n   * Strings for localization\n   *\n   * @readonly\n   * @protected\n   * @memberof MgtTeamsChannelPicker\n   */\n  protected get strings() {\n    return strings;\n  }\n\n  private teamsPhotos = {};\n\n  /**\n   * Gets Selected item to be used\n   *\n   * @readonly\n   * @type {SelectedChannel}\n   * @memberof MgtTeamsChannelPicker\n   */\n  public get selectedItem(): SelectedChannel | null {\n    if (this._selectedItemState) {\n      return { channel: this._selectedItemState.item, team: this._selectedItemState.parent.item };\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the scopes required for teams channel picker\n   *\n   * @static\n   * @return {*}  {string[]}\n   * @memberof MgtTeamsChannelPicker\n   */\n  public static get requiredScopes(): string[] {\n    return ['team.readbasic.all', 'channel.readbasic.all'];\n  }\n\n  private set items(value) {\n    if (this._items === value) {\n      return;\n    }\n    this._items = value;\n    this._treeViewState = value ? this.generateTreeViewState(value) : [];\n    this.resetFocusState();\n  }\n  private get items(): DropdownItem[] | undefined {\n    return this._items;\n  }\n\n  private get _inputWrapper(): HTMLInputElement | null {\n    return this.renderRoot.querySelector<HTMLInputElement>('fluent-text-field');\n  }\n  // User input in search\n  private get _input(): HTMLInputElement | null {\n    const wrapper = this._inputWrapper;\n    const input = wrapper?.shadowRoot.querySelector<HTMLInputElement>('input');\n    return input;\n  }\n  private _inputValue = '';\n\n  @state() private _selectedItemState: ChannelPickerItemState;\n  private _items: DropdownItem[] | undefined;\n  private _treeViewState: ChannelPickerItemState[] = [];\n  private _focusList: ChannelPickerItemState[] = [];\n\n  // focus state\n  private debouncedSearch: () => void;\n\n  // determines loading state\n  @state() private _isDropdownVisible: boolean;\n\n  constructor() {\n    super();\n    this._inputValue = '';\n    this._treeViewState = [];\n    this._focusList = [];\n    this._isDropdownVisible = false;\n  }\n\n  /**\n   * Invoked each time the custom element is appended into a document-connected element\n   *\n   * @memberof MgtTeamsChannelPicker\n   */\n  public connectedCallback() {\n    super.connectedCallback();\n    window.addEventListener('click', this.handleWindowClick);\n    this.addEventListener('focus', this.loadTeamsIfNotLoaded);\n    this.addEventListener('mouseover', this.loadTeamsIfNotLoaded);\n    this.addEventListener('blur', this.lostFocus);\n\n    const ownerDocument = this.renderRoot.ownerDocument;\n    if (ownerDocument) {\n      ownerDocument.documentElement.setAttribute('dir', this.direction);\n    }\n  }\n\n  /**\n   * Invoked each time the custom element is disconnected from the document's DOM\n   *\n   * @memberof MgtTeamsChannelPicker\n   */\n  public disconnectedCallback() {\n    window.removeEventListener('click', this.handleWindowClick);\n    this.removeEventListener('focus', this.loadTeamsIfNotLoaded);\n    this.removeEventListener('mouseover', this.loadTeamsIfNotLoaded);\n    this.removeEventListener('blur', this.lostFocus);\n    super.disconnectedCallback();\n  }\n\n  protected args(): unknown[] {\n    return [];\n  }\n\n  /**\n   * selects a channel by looking up the id in the Graph\n   *\n   * @param {string} channelId MicrosoftGraph.Channel.id\n   * @returns {Promise<return>} A promise that will resolve to true if channel was selected\n   * @memberof MgtTeamsChannelPicker\n   */\n  public async selectChannelById(channelId: string): Promise<boolean> {\n    const provider = Providers.globalProvider;\n    if (provider && provider.state === ProviderState.SignedIn) {\n      // since the component normally handles loading on hover, forces the load for items\n      if (!this.items) {\n        await this._task.run();\n      }\n\n      for (const item of this._treeViewState) {\n        for (const channel of item.channels) {\n          if (channel.item.id === channelId) {\n            item.isExpanded = true;\n            this.selectChannel(channel);\n            this.markSelectedChannelInDropdown(channelId);\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Marks a channel selected by ID as selected in the dropdown menu.\n   * It ensures the parent team is set to as expanded to show the channel.\n   *\n   * @param channelId ID string of the selected channel\n   */\n  private markSelectedChannelInDropdown(channelId: string) {\n    const treeItem = this.renderRoot.querySelector(`[id='${channelId}']`);\n    if (treeItem) {\n      treeItem.setAttribute('selected', 'true');\n      if (treeItem.parentElement) {\n        treeItem.parentElement.setAttribute('expanded', 'true');\n      }\n    }\n  }\n\n  /**\n   * Called from the base class while the _task is in a pending state\n   * This calls to the renderContent method as the loading indicator is nested inside the dropdown\n   * This ensures that the component shows a control immediately and only shows a loading indicator\n   * if the user interacts with the component while the _task is pending.\n   */\n  protected renderLoading = () => this.renderContent();\n\n  /**\n   * Invoked by the render method when the _task has been completed\n   *\n   * @returns\n   * @memberof MgtTeamsChannelPicker\n   */\n  public renderContent = () => {\n    const dropdownClasses = {\n      dropdown: true,\n      visible: this._isDropdownVisible\n    };\n\n    return (\n      this.renderTemplate('default', { teams: this.items ?? [] }) ||\n      html`\n        <div class=\"container\" @blur=${this.lostFocus}>\n          <fluent-text-field\n            autocomplete=\"off\"\n            appearance=\"outline\"\n            id=\"teams-channel-picker-input\"\n            role=\"combobox\"\n            placeholder=\"${this._selectedItemState ? '' : this.strings.inputPlaceholderText} \"\n            aria-label=${this.strings.inputPlaceholderText}\n            aria-expanded=\"${this._isDropdownVisible}\"\n            label=\"teams-channel-picker-input\"\n            @focus=${this.handleFocus}\n            @keyup=${this.handleInputChanged}\n            @click=${this.handleInputClick}\n            @keydown=${this.handleInputKeydown}\n          >\n            <div tabindex=\"0\" slot=\"start\" style=\"width: max-content;\">${this.renderSelected()}</div>\n            <div tabindex=\"0\" slot=\"end\">${this.renderChevrons()}${this.renderCloseButton()}</div>\n          </fluent-text-field>\n          <fluent-card\n            class=${classMap(dropdownClasses)}\n          >\n            ${this.renderDropdown()}\n          </fluent-card>\n        </div>`\n    );\n  };\n\n  /**\n   * Handles clicks on the input section.\n   *\n   * @param e {UIEvent}\n   */\n  handleInputClick = (e: UIEvent) => {\n    e.stopPropagation();\n    this.gainedFocus();\n  };\n\n  handleInputKeydown = (e: KeyboardEvent) => {\n    const keyName = e.key;\n    if (['ArrowDown', 'Enter'].includes(keyName)) {\n      if (!this._isDropdownVisible) {\n        this.gainedFocus();\n      } else {\n        // focus on the first item on the list. Ideally, focus on the selected.\n        const firstTreeItem = this.renderRoot.querySelector<HTMLElement>('fluent-tree-item');\n        firstTreeItem.focus();\n      }\n    } else if (keyName === 'Escape') {\n      this.lostFocus();\n    }\n  };\n\n  /**\n   * Renders selected channel\n   *\n   * @protected\n   * @returns\n   * @memberof MgtTeamsChannelPicker\n   */\n  protected renderSelected() {\n    if (!this._selectedItemState) {\n      return this.renderSearchIcon();\n    }\n    let icon: TemplateResult;\n    if (this._selectedItemState.parent.channels) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n      const src = this.teamsPhotos[this._selectedItemState.parent.item.id]?.photo;\n      icon = html`<img\n        class=\"team-photo\"\n        alt=\"${this._selectedItemState.parent.item.displayName}\"\n        role=\"img\"\n        src=${src} />`;\n    }\n\n    const parentName = this._selectedItemState?.parent?.item?.displayName.trim();\n    const channelName = this._selectedItemState?.item?.displayName.trim();\n\n    return html`\n      <fluent-breadcrumb title=${this._selectedItemState.item.displayName}>\n        <fluent-breadcrumb-item>\n          <span slot=\"start\">${icon}</span>\n          <span class=\"team-parent-name\">${parentName}</span>\n          <span slot=\"separator\" class=\"arrow\">${getSvg(SvgIcon.TeamSeparator, '#000000')}</span>\n        </fluent-breadcrumb-item>\n        <fluent-breadcrumb-item>${channelName}</fluent-breadcrumb-item>\n      </fluent-breadcrumb>`;\n  }\n\n  /**\n   * Clears the state of the component\n   *\n   * @protected\n   * @memberof MgtTeamsChannelPicker\n   */\n  protected clearState(): void {\n    this._inputValue = '';\n    this._treeViewState = [];\n    this._focusList = [];\n    this._isDropdownVisible = false;\n  }\n\n  /**\n   * Renders search icon\n   *\n   * @protected\n   * @returns\n   * @memberof MgtTeamsChannelPicker\n   */\n  protected renderSearchIcon() {\n    return html`\n      <div class=\"search-icon\">\n        ${getSvg(SvgIcon.Search, '#252424')}\n      </div>\n    `;\n  }\n\n  /**\n   * Renders close button\n   *\n   * @protected\n   * @returns\n   * @memberof MgtTeamsChannelPicker\n   */\n  protected renderCloseButton() {\n    return html`\n      <fluent-button\n        appearance=\"stealth\"\n        class=\"close-icon\"\n        style=\"display:none\"\n        aria-label=${this.strings.closeButtonAriaLabel}\n        @click=${this.onClickCloseButton}\n        @keydown=${this.onKeydownCloseButton}>\n        <svg width=\"8\" height=\"8\" viewBox=\"0 0 8 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M0.0885911 0.215694L0.146447 0.146447C0.320013 -0.0271197 0.589437 -0.046405 0.784306 0.0885911L0.853553 0.146447L4 3.293L7.14645 0.146447C7.34171 -0.0488154 7.65829 -0.0488154 7.85355 0.146447C8.04882 0.341709 8.04882 0.658291 7.85355 0.853553L4.707 4L7.85355 7.14645C8.02712 7.32001 8.0464 7.58944 7.91141 7.78431L7.85355 7.85355C7.67999 8.02712 7.41056 8.0464 7.21569 7.91141L7.14645 7.85355L4 4.707L0.853553 7.85355C0.658291 8.04882 0.341709 8.04882 0.146447 7.85355C-0.0488154 7.65829 -0.0488154 7.34171 0.146447 7.14645L3.293 4L0.146447 0.853553C-0.0271197 0.679987 -0.046405 0.410563 0.0885911 0.215694L0.146447 0.146447L0.0885911 0.215694Z\" fill=\"#212121\"/>\n        </svg>\n      </fluent-button>\n    `;\n  }\n\n  /**\n   * Handles clicks on the close button after selecting a channel.\n   *\n   * @param e {UIEvent}\n   */\n  onClickCloseButton = () => {\n    this.removeSelectedChannel(null);\n  };\n\n  /**\n   * Handles keypresses on the close button.\n   *\n   * @param e {KeyboardEvent}\n   */\n  onKeydownCloseButton = (e: KeyboardEvent) => {\n    if (e.key === 'Enter') this.removeSelectedChannel(null);\n  };\n\n  /**\n   * Displays the close button after selecting a channel.\n   */\n  protected showCloseIcon() {\n    const downChevron = this.renderRoot.querySelector<HTMLElement>('.down-chevron');\n    const upChevron = this.renderRoot.querySelector<HTMLElement>('.up-chevron');\n    const closeIcon = this.renderRoot.querySelector<HTMLElement>('.close-icon');\n    if (downChevron) {\n      downChevron.style.display = 'none';\n    }\n    if (upChevron) {\n      upChevron.style.display = 'none';\n    }\n\n    if (closeIcon) {\n      closeIcon.style.display = null;\n    }\n  }\n\n  /**\n   * Renders down chevron icon\n   *\n   * @protected\n   * @returns\n   * @memberof MgtTeamsChannelPicker\n   */\n  protected renderDownChevron() {\n    return html`\n      <fluent-button appearance=\"stealth\" class=\"down-chevron\" @click=${this.gainedFocus}>\n        <svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M2.21967 4.46967C2.51256 4.17678 2.98744 4.17678 3.28033 4.46967L6 7.18934L8.71967 4.46967C9.01256 4.17678 9.48744 4.17678 9.78033 4.46967C10.0732 4.76256 10.0732 5.23744 9.78033 5.53033L6.53033 8.78033C6.23744 9.07322 5.76256 9.07322 5.46967 8.78033L2.21967 5.53033C1.92678 5.23744 1.92678 4.76256 2.21967 4.46967Z\" fill=\"#212121\" />\n        </svg>\n      </fluent-button>`;\n  }\n\n  /**\n   * Renders up chevron icon\n   *\n   * @protected\n   * @returns\n   * @memberof MgtTeamsChannelPicker\n   */\n  protected renderUpChevron() {\n    return html`\n      <fluent-button appearance=\"stealth\" style=\"display:none\" class=\"up-chevron\" @click=${this.handleUpChevronClick}>\n        <svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M2.21967 7.53033C2.51256 7.82322 2.98744 7.82322 3.28033 7.53033L6 4.81066L8.71967 7.53033C9.01256 7.82322 9.48744 7.82322 9.78033 7.53033C10.0732 7.23744 10.0732 6.76256 9.78033 6.46967L6.53033 3.21967C6.23744 2.92678 5.76256 2.92678 5.46967 3.21967L2.21967 6.46967C1.92678 6.76256 1.92678 7.23744 2.21967 7.53033Z\" fill=\"#212121\" />\n        </svg>\n      </fluent-button>`;\n  }\n\n  /**\n   * Renders both chevrons\n   */\n  private renderChevrons() {\n    return html`${this.renderUpChevron()}${this.renderDownChevron()}`;\n  }\n\n  /**\n   * Renders dropdown content\n   *\n   * @returns\n   * @memberof MgtTeamsChannelPicker\n   */\n  protected renderDropdown() {\n    if (this._task.status === TaskStatus.PENDING || !this._treeViewState) {\n      return this.renderLoadingIndicator();\n    }\n\n    if (this._treeViewState) {\n      if (this._treeViewState.length === 0 && this._inputValue.length > 0) {\n        return this.renderError();\n      }\n\n      return this.renderDropdownList(this._treeViewState);\n    }\n\n    return html``;\n  }\n\n  /**\n   * Renders the dropdown list recursively\n   *\n   * @protected\n   * @param {ChannelPickerItemState[]} items\n   * @returns\n   * @memberof MgtTeamsChannelPicker\n   */\n  protected renderDropdownList(items: ChannelPickerItemState[]) {\n    if (items && items.length > 0) {\n      let icon: TemplateResult = null;\n\n      return html`\n        <fluent-tree-view\n          class=\"tree-view\"\n          dir=${this.direction}\n          aria-live=\"polite\"\n          aria-relevant=\"all\"\n          aria-atomic=\"true\"\n          aria-label=${this.strings.teamsChannels}\n          aria-orientation=\"horizontal\"\n          @keydown=${this.onKeydownTreeView}>\n          ${repeat(\n            items,\n            (itemObj: ChannelPickerItemState) => itemObj?.item,\n            (obj: ChannelPickerItemState) => {\n              if (obj.channels) {\n                icon = html`<img\n                  class=\"team-photo\"\n                  alt=\"${this.strings.photoFor} ${obj.item.displayName}\"\n                  src=${// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                  this.teamsPhotos[obj.item.id]?.photo} />`;\n              }\n              return html`\n                <fluent-tree-item\n                  ?expanded=${obj?.isExpanded}\n                  @click=${this.handleTeamTreeItemClick}>\n                    <span slot=\"start\">${icon}</span>${obj.item.displayName}\n                    ${repeat(\n                      obj?.channels,\n                      (channels: ChannelPickerItemState) => channels.item,\n                      (channel: ChannelPickerItemState) => {\n                        return this.renderItem(channel);\n                      }\n                    )}\n                </fluent-tree-item>`;\n            }\n          )}\n        </fluent-tree-view>`;\n    }\n    return null;\n  }\n\n  /**\n   * Renders each Channel or Team\n   *\n   * @param {ChannelPickerItemState} itemState\n   * @returns\n   * @memberof MgtTeamsChannelPicker\n   */\n  protected renderItem(itemState: ChannelPickerItemState) {\n    return html`\n      <fluent-tree-item\n        id=${itemState?.item?.id}\n        @keydown=${(e: KeyboardEvent) => this.onUserKeyDown(e, itemState)}\n        @click=${() => this.handleItemClick(itemState)}>\n          ${itemState?.item.displayName}\n      </fluent-tree-item>`;\n  }\n\n  /**\n   * Renders an error message when no channel or teams match the query\n   *\n   * @protected\n   * @returns\n   * @memberof MgtTeamsChannelPicker\n   */\n  protected renderError = (): TemplateResult => {\n    const template = this.renderTemplate('error', null, 'error');\n\n    return (\n      template ||\n      html`\n        <div class=\"message-parent\">\n          <div\n            label=\"search-error-text\"\n            aria-live=\"polite\"\n            aria-relevant=\"all\"\n            aria-atomic=\"true\"\n            class=\"search-error-text\"\n          >\n            ${this.strings.noResultsFound}\n          </div>\n        </div>\n      `\n    );\n  };\n\n  /**\n   * Renders loading spinner while channels are fetched from the Graph\n   *\n   * @protected\n   * @returns\n   * @memberof MgtTeamsChannelPicker\n   */\n  protected renderLoadingIndicator = (): TemplateResult => {\n    const template = this.renderTemplate('loading', null, 'loading');\n\n    return (\n      template ||\n      mgtHtml`\n        <div class=\"message-parent\">\n          <mgt-spinner></mgt-spinner>\n          <div label=\"loading-text\" aria-label=\"loading\" class=\"loading-text\">\n            ${this.strings.loadingMessage}\n          </div>\n        </div>\n      `\n    );\n  };\n\n  /**\n   * Queries Microsoft Graph for Teams & respective channels then sets to items list\n   *\n   * @protected\n   * @memberof MgtTeamsChannelPicker\n   */\n  protected async loadState() {\n    const provider = Providers.globalProvider;\n    let teams: MicrosoftGraph.Team[];\n    if (provider && provider.state === ProviderState.SignedIn) {\n      const graph = provider.graph.forComponent(this);\n\n      teams = await getAllMyTeams(graph);\n      teams = teams.filter(t => !t.isArchived);\n\n      const teamsIds = teams.map(t => t.id);\n      this.teamsPhotos = await getTeamsPhotosForPhotoIds(graph, teamsIds);\n\n      this._items = await getChannelsForTeams(graph, teams);\n    }\n    this.filterList();\n    this.resetFocusState();\n  }\n\n  /**\n   * Clears the selectedItem state.\n   *\n   * @memberof MgtTeamsChannelPicker\n   */\n  clearSelectedItem() {\n    this.removeSelectedChannel();\n  }\n\n  /**\n   * Handles operations that are performed on the DOM when you remove a\n   * channel. For example on clicking the X button.\n   *\n   * @param item a selected channel item\n   */\n  private removeSelectedChannel(item?: ChannelPickerItemState) {\n    this.selectChannel(item);\n    const treeItems = this.renderRoot.querySelectorAll('fluent-tree-item');\n    if (treeItems) {\n      treeItems.forEach((treeItem: HTMLElement) => {\n        treeItem.removeAttribute('expanded');\n        treeItem.removeAttribute('selected');\n      });\n    }\n  }\n\n  onKeydownTreeView = (e: KeyboardEvent) => {\n    const keyName = e.key;\n    if (keyName === 'Escape') {\n      this.lostFocus();\n    }\n  };\n\n  private handleItemClick(item: ChannelPickerItemState) {\n    if (item.channels) {\n      item.isExpanded = !item.isExpanded;\n    } else {\n      this.selectChannel(item);\n      this.lostFocus();\n    }\n  }\n\n  handleTeamTreeItemClick = (event: Event) => {\n    event.preventDefault();\n    event.stopImmediatePropagation();\n    const element = event.target as HTMLElement;\n    if (element) {\n      const expanded = element.getAttribute('expanded');\n\n      if (expanded) {\n        element.removeAttribute('expanded');\n      } else {\n        element.setAttribute('expanded', 'true');\n      }\n      element.removeAttribute('selected');\n      const hasId = element.getAttribute('id');\n      if (hasId) {\n        element.setAttribute('selected', 'true');\n      }\n    }\n  };\n\n  handleInputChanged = (e: KeyboardEvent) => {\n    const target = e.target as HTMLInputElement;\n    if (this._inputValue !== target?.value) {\n      this._inputValue = target?.value;\n    } else {\n      return;\n    }\n\n    // shows list\n    this.gainedFocus();\n\n    if (!this.debouncedSearch) {\n      this.debouncedSearch = debounce(() => {\n        this.filterList();\n      }, 400);\n    }\n\n    this.debouncedSearch();\n  };\n\n  private onUserKeyDown(e: KeyboardEvent, item?: ChannelPickerItemState) {\n    const key = e.code;\n    switch (key) {\n      case 'Enter':\n        this.selectChannel(item);\n        this.resetFocusState();\n        this.lostFocus();\n        e.preventDefault();\n        break;\n      case 'Backspace':\n        if (this._inputValue.length === 0 && this._selectedItemState) {\n          this.selectChannel(null);\n          this.resetFocusState();\n          e.preventDefault();\n        }\n        break;\n    }\n  }\n\n  private filterList() {\n    if (this.items) {\n      this._treeViewState = this.generateTreeViewState(this.items, this._inputValue);\n      this.resetFocusState();\n    }\n  }\n\n  private generateTreeViewState(\n    tree: DropdownItem[],\n    filterString = '',\n    parent: ChannelPickerItemState = null\n  ): ChannelPickerItemState[] {\n    const treeView: ChannelPickerItemState[] = [];\n    filterString = filterString.toLowerCase();\n\n    if (tree) {\n      for (const item of tree) {\n        let stateItem: ChannelPickerItemState;\n\n        if (filterString.length === 0 || item.item.displayName.toLowerCase().includes(filterString)) {\n          stateItem = { item: item.item, parent };\n          if (item.channels) {\n            stateItem.channels = this.generateTreeViewState(item.channels, '', stateItem);\n            stateItem.isExpanded = filterString.length > 0;\n          }\n        } else if (item.channels) {\n          const newStateItem = { item: item.item, parent };\n          const channels = this.generateTreeViewState(item.channels, filterString, newStateItem);\n          if (channels.length > 0) {\n            stateItem = newStateItem;\n            stateItem.channels = channels;\n            stateItem.isExpanded = true;\n          }\n        }\n\n        if (stateItem) {\n          treeView.push(stateItem);\n        }\n      }\n    }\n    return treeView;\n  }\n\n  // generates a flat list from a tree to facilitate easier focus\n  // navigation\n  private generateFocusList(items: ChannelPickerItemState[]): ChannelPickerItemState[] {\n    if (!items || items.length === 0) {\n      return [];\n    }\n\n    let array: ChannelPickerItemState[] = [];\n\n    for (const item of items) {\n      array.push(item);\n      if (item.channels && item.isExpanded) {\n        array = [...array, ...this.generateFocusList(item.channels)];\n      }\n    }\n\n    return array;\n  }\n\n  private resetFocusState() {\n    this._focusList = this.generateFocusList(this._treeViewState);\n    this.requestUpdate();\n  }\n\n  private readonly loadTeamsIfNotLoaded = () => {\n    if (!this.items && this._task.status !== TaskStatus.PENDING) {\n      void this._task.run();\n    }\n  };\n\n  private readonly handleWindowClick = (e: MouseEvent) => {\n    if (e.target !== this) {\n      this.lostFocus();\n    }\n  };\n\n  private readonly gainedFocus = () => {\n    const input = this._input;\n    if (input) {\n      input.focus();\n    }\n\n    this._isDropdownVisible = true;\n    this.toggleChevron();\n    this.resetFocusState();\n    this.requestUpdate();\n  };\n\n  private readonly lostFocus = () => {\n    this._inputValue = '';\n    if (this._input) {\n      this._input.value = this._inputValue;\n      this._input.textContent = '';\n    }\n    const wrapper = this._inputWrapper;\n    if (wrapper) wrapper.value = '';\n\n    this._isDropdownVisible = false;\n    this.filterList();\n    this.toggleChevron();\n    this.requestUpdate();\n\n    if (this._selectedItemState !== undefined) {\n      this.showCloseIcon();\n    }\n  };\n\n  handleFocus = () => {\n    this.lostFocus();\n    this.gainedFocus();\n  };\n\n  private selectChannel(item?: ChannelPickerItemState) {\n    if (item && this._selectedItemState !== item) {\n      this._input?.setAttribute('disabled', 'true');\n    } else {\n      this._input?.removeAttribute('disabled');\n    }\n    this._selectedItemState = item;\n    this.lostFocus();\n    this.fireCustomEvent('selectionChanged', this.selectedItem);\n  }\n\n  /**\n   * Hides the close icon.\n   */\n  private hideCloseIcon() {\n    const closeIcon = this.renderRoot.querySelector<HTMLElement>('.close-icon');\n    if (closeIcon) {\n      closeIcon.style.display = 'none';\n    }\n  }\n\n  /**\n   * Toggles the up and down chevron depending on the dropdown\n   * visibility.\n   */\n  private toggleChevron() {\n    const downChevron = this.renderRoot.querySelector<HTMLElement>('.down-chevron');\n    const upChevron = this.renderRoot.querySelector<HTMLElement>('.up-chevron');\n    if (this._isDropdownVisible) {\n      if (downChevron) {\n        downChevron.style.display = 'none';\n      }\n      if (upChevron) {\n        upChevron.style.display = null;\n      }\n    } else {\n      if (downChevron) {\n        downChevron.style.display = null;\n        this.hideCloseIcon();\n      }\n      if (upChevron) {\n        upChevron.style.display = 'none';\n      }\n    }\n    this.hideCloseIcon();\n  }\n\n  handleUpChevronClick = (e: Event) => {\n    e.stopPropagation();\n    this.lostFocus();\n  };\n}\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { TodoTaskList, TodoTask } from '@microsoft/microsoft-graph-types';\nimport { IGraph, prepScopes } from '@microsoft/mgt-element';\nimport { CollectionResponse } from '@microsoft/mgt-element';\n\nexport interface LinkedResource {\n  id: string;\n  webUrl: string;\n  applicationName: string;\n  displayName: string;\n  externalId: string;\n}\n\nconst writeTaskScopes = ['Tasks.ReadWrite'];\nconst readTaskScopes = ['Tasks.Read', 'Tasks.ReadWrite'];\n\n/**\n * Get all todo tasks for a specific task list.\n *\n * @export\n * @param {IGraph} graph\n * @param {string} listId\n * @returns {Promise<TodoTask[]>}\n */\nexport const getTodoTasks = async (graph: IGraph, listId: string): Promise<TodoTask[]> => {\n  const tasks = (await graph\n    .api(`/me/todo/lists/${listId}/tasks`)\n    .header('Cache-Control', 'no-store')\n    .middlewareOptions(prepScopes(readTaskScopes))\n    .get()) as CollectionResponse<TodoTask>;\n\n  return tasks?.value;\n};\n\n/**\n * Get a specific todo task.\n *\n * @export\n * @param {IGraph} graph\n * @param {string} listId\n * @param {string} taskId\n * @returns {Promise<TodoTask>}\n */\nexport const getTodoTask = async (graph: IGraph, listId: string, taskId: string): Promise<TodoTask> =>\n  (await graph\n    .api(`/me/todo/lists/${listId}/tasks/${taskId}`)\n    .header('Cache-Control', 'no-store')\n    .middlewareOptions(prepScopes(readTaskScopes))\n    .get()) as TodoTask;\n\n/**\n * get all todo task lists\n *\n * @export\n * @param {IGraph} graph\n * @returns {Promise<TodoTaskList[]>}\n */\nexport const getTodoTaskLists = async (graph: IGraph): Promise<TodoTaskList[]> => {\n  const taskLists = (await graph\n    .api('/me/todo/lists')\n    .header('Cache-Control', 'no-store')\n    .middlewareOptions(prepScopes(readTaskScopes))\n    .get()) as CollectionResponse<TodoTaskList>;\n\n  return taskLists?.value;\n};\n\n/**\n * Get a specific todo task list.\n *\n * @export\n * @param {IGraph} graph\n * @param {string} listId\n * @returns {Promise<TodoTaskList>}\n */\nexport const getTodoTaskList = async (graph: IGraph, listId: string): Promise<TodoTaskList> =>\n  (await graph\n    .api(`/me/todo/lists/${listId}`)\n    .header('Cache-Control', 'no-store')\n    .middlewareOptions(prepScopes(readTaskScopes))\n    .get()) as TodoTaskList;\n\n/**\n * Create a new todo task.\n *\n * @export\n * @param {IGraph} graph\n * @param {string} listId\n * @param {{ title: string; dueDateTime: { dateTime: string; timeZone: string } }} taskData\n * @returns {Promise<TodoTask>}\n */\nexport const createTodoTask = async (\n  graph: IGraph,\n  listId: string,\n  taskData: { title: string; dueDateTime?: { dateTime: string; timeZone: string } }\n): Promise<TodoTask> =>\n  (await graph\n    .api(`/me/todo/lists/${listId}/tasks`)\n    .header('Cache-Control', 'no-store')\n    .middlewareOptions(prepScopes(writeTaskScopes))\n    .post(taskData)) as TodoTask;\n\n/**\n * Create a new todo task list.\n *\n * @export\n * @param {IGraph} graph\n * @param {{ displayName: string }} list\n * @returns {Promise<TodoTaskList>}\n */\nexport const createTodoTaskList = async (graph: IGraph, listData: { displayName: string }): Promise<TodoTaskList> =>\n  (await graph\n    .api('/me/todo/lists')\n    .header('Cache-Control', 'no-store')\n    .middlewareOptions(prepScopes(writeTaskScopes))\n    .post(listData)) as TodoTaskList;\n\n/**\n * Delete a todo task.\n *\n * @export\n * @param {IGraph} graph\n * @param {string} listId\n * @param {string} taskId\n * @returns {Promise<void>}\n */\nexport const deleteTodoTask = async (graph: IGraph, listId: string, taskId: string): Promise<void> => {\n  await graph\n    .api(`/me/todo/lists/${listId}/tasks/${taskId}`)\n    .header('Cache-Control', 'no-store')\n    .middlewareOptions(prepScopes(writeTaskScopes))\n    .delete();\n};\n\n/**\n * Delete a todo task list.\n *\n * @export\n * @param {IGraph} graph\n * @param {string} listId\n * @returns {Promise<void>}\n */\nexport const deleteTodoTaskList = async (graph: IGraph, listId: string): Promise<void> => {\n  await graph\n    .api(`/me/todo/lists/${listId}`)\n    .header('Cache-Control', 'no-store')\n    .middlewareOptions(prepScopes(writeTaskScopes))\n    .delete();\n};\n\n/**\n * Update a todo task.\n *\n * @export\n * @param {IGraph} graph\n * @param {string} listId\n * @param {string} taskId\n * @param {TodoTask} taskData\n * @returns {Promise<TodoTask>}\n */\nexport const updateTodoTask = async (\n  graph: IGraph,\n  listId: string,\n  taskId: string,\n  taskData: TodoTask\n): Promise<TodoTask> =>\n  (await graph\n    .api(`/me/todo/lists/${listId}/tasks/${taskId}`)\n    .header('Cache-Control', 'no-store')\n    .middlewareOptions(prepScopes(writeTaskScopes))\n    .patch(taskData)) as TodoTask;\n\n/**\n * Update a todo task list.\n *\n * @export\n * @param {IGraph} graph\n * @param {string} listId\n * @param {TodoTaskList} taskListData\n * @returns {Promise<TodoTaskList>}\n */\nexport const updateTodoTaskList = async (\n  graph: IGraph,\n  listId: string,\n  taskListData: TodoTaskList\n): Promise<TodoTaskList> =>\n  (await graph\n    .api(`/me/todo/lists/${listId}`)\n    .header('Cache-Control', 'no-store')\n    .middlewareOptions(prepScopes(writeTaskScopes))\n    .patch(taskListData)) as TodoTaskList;\n","// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\n\nimport { css, CSSResult } from 'lit';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles: CSSResult[] = [\n  css`\n:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host{display:flex;flex-direction:column;color:var(--color,var(--neutral-foreground-rest))}:host input[type=date]::-webkit-calendar-picker-indicator,:host input[type=date]::-webkit-inner-spin-button{display:none;appearance:none}:host .task-icon{font-family:FabricMDL2Icons;user-select:none}:host .task-icon.divider{vertical-align:initial;margin:0 12px;font-size:16px}:host .header{margin:var(--tasks-header-margin,0 0 12px 0);padding:var(--tasks-title-padding,0);display:flex;align-items:center;justify-content:space-between}:host .header .header__loading{max-width:90px;width:100%;height:20px;background:#f2f2f2}:host .header select{font-size:var(--tasks-plan-title-font-size,1.1em);padding:var(--tasks-plan-title-padding,5px);border:none;appearance:none;cursor:pointer}:host .header select::-ms-expand{display:none}:host .header .plan-title{font-size:var(--tasks-plan-title-font-size,1.1em);padding:var(--tasks-plan-title-padding,5px)}:host .header .add-bar{display:flex}:host .header .add-bar .add-bar-item{flex:1 1 auto}:host .header .new-task-due{display:flex}:host .header .new-task-due input{flex:1 1 auto;background-color:var(--task-background-color,var(--neutral-layer-floating))}:host .header .title-cont{flex:1 1 auto;display:flex;align-items:center;height:var(--tasks-new-button-height,34px)}:host .header .new-task-button{flex:0 0 auto;display:flex;justify-content:center;align-items:center;width:var(--tasks-new-button-width,auto);height:var(--tasks-new-button-height,32px);border-radius:2px;padding:0 20px;background:var(--tasks-new-button-background,#0078d4);border:var(--tasks-new-button-border,solid 1px transparent);color:var(--tasks-new-button-color,#fff);user-select:none;cursor:pointer}:host .header .new-task-button span{font-size:14px;font-weight:600;letter-spacing:.1px;line-height:14px}:host .header .new-task-button .task-icon{margin-right:8px}:host .header .new-task-button.hidden{visibility:hidden}:host .header .new-task-button:hover{background:var(--tasks-new-button-hover-background,#106ebe)}:host .header .new-task-button:active{background:var(--tasks-new-button-active-background,#005a9e)}:host .task{position:relative;margin:var(--task-margin,0 0 0 0);padding:var(--task-padding,0 0 0 0);background-color:var(--task-background-color,var(--neutral-layer-floating));border:var(--task-border,var(--neutral-stroke-input-active));border-radius:8px}:host .task .task-content{display:flex}:host .task .task-content .divider{position:absolute;height:2px;left:0;right:0;bottom:0;background-color:var(--task-background-color,var(--neutral-layer-floating))}:host .task .task-content .task-details-container{flex:1;display:grid;grid-template-columns:auto 1fr;-ms-grid-columns:auto 1fr;grid-template-rows:auto auto auto auto;-ms-grid-rows:auto auto auto auto;justify-content:space-between;align-items:flex-start;color:var(--task-detail-color,var(--neutral-foreground-hint));font-size:12px;font-weight:600;white-space:normal;margin-bottom:12px}:host .task .task-content .task-details-container .task-detail{width:100%;height:100%;margin:4px 24px 6px 0;display:flex;justify-content:flex-start;align-items:center}:host .task .task-content .task-details-container .task-title{color:var(--task-color,var(--neutral-foreground-rest));font-size:14px;font-weight:600;grid-row:1;grid-column:1/3;grid-column:1;-ms-grid-column-span:2;margin:22px 0 4px}:host .task .task-content .task-details-container .task-group{min-height:24px;grid-row:2;grid-column:1}:host .task .task-content .task-details-container .task-bucket{min-height:24px;grid-row:2;grid-column:2}:host .task .task-content .task-details-container .task-due{justify-content:flex-end;align-items:flex-start;grid-row:4;grid-column:1/3;grid-column:1;-ms-grid-column-span:2}:host .task .task-content .task-details-container.tablet{grid-template-columns:1fr .5fr 1fr .5fr;-ms-grid-columns:1fr .5fr 1fr .5fr;grid-template-rows:auto auto;-ms-grid-rows:auto auto}:host .task .task-content .task-details-container.tablet.no-plan{grid-template-columns:0 1fr 1fr 1fr;-ms-grid-columns:0 1fr 1fr 1fr}:host .task .task-content .task-details-container.tablet .task-detail{margin:4px 24px 6px 0}:host .task .task-content .task-details-container.tablet .task-title{grid-row:1;grid-column:1/5;grid-column:1;-ms-grid-column-span:4}:host .task .task-content .task-details-container.tablet .task-group{grid-row:2;grid-column:1}:host .task .task-content .task-details-container.tablet .task-bucket{grid-row:2;grid-column:2}:host .task .task-content .task-details-container.tablet .task-assignee{grid-row:2;grid-column:3}:host .task .task-content .task-details-container.tablet .task-due{justify-content:flex-start;align-items:center;grid-row:2;grid-column:4}:host .task .task-content .task-details-container.desktop{grid-template-columns:2fr 1fr .5fr 1fr .5fr;-ms-grid-columns:2fr 1fr .5fr 1fr .5fr;grid-template-rows:auto;-ms-grid-rows:auto;margin:0}:host .task .task-content .task-details-container.desktop.no-plan{grid-template-columns:2fr 0 1fr 1fr 1fr;-ms-grid-columns:2fr 0 1fr 1fr 1fr}:host .task .task-content .task-details-container.desktop .task-detail{margin:0 24px 0 0}:host .task .task-content .task-details-container.desktop .task-title{padding:0;grid-row:1;grid-column:1}:host .task .task-content .task-details-container.desktop .task-group{min-height:61px;grid-row:1;grid-column:2}:host .task .task-content .task-details-container.desktop .task-bucket{grid-row:1;grid-column:3}:host .task .task-content .task-details-container.desktop .task-assignee{grid-row:1;grid-column:4}:host .task .task-content .task-details-container.desktop .task-due{justify-content:flex-start;align-items:center;grid-row:1;grid-column:5}:host .task .task-content .task-details-container svg{vertical-align:middle;margin-right:4px}:host .task .task-content .task-details-container svg path{fill:var(--task-detail-color,var(--neutral-foreground-hint))}:host .task .task-content .task-details-container select,:host .task .task-content .task-details-container span{vertical-align:middle;color:var(--task-detail-color,var(--neutral-foreground-hint))}:host .task .task-content .task-details-container .task-icon{color:#797775;margin-right:8px}:host .task .task-content .task-details-container .people{color:var(--task-detail-color,var(--neutral-foreground-hint));font-size:16px}:host .task .task-content .task-details-container .person{display:inline-block}:host .task .task-content .task-details-container .picker{background-color:var(--task-background-color,var(--neutral-layer-floating));background-clip:padding-box;width:var(--mgt-flyout-set-width,350px);color:var(--task-detail-color,var(--neutral-foreground-hint))}:host .task .task-content .task-details-container .picker .people-picker{--separator-margin:0px 10px 0px 10px}:host .task .task-content .task-details-container input,:host .task .task-content .task-details-container select{color:var(--task-detail-color,var(--neutral-foreground-hint));font-size:.9em;background-color:var(--task-background-color,var(--neutral-layer-floating))}:host .task .task-check-container{font-family:FabricMDL2Icons;border-radius:50%;color:#fff;cursor:pointer;display:flex;align-items:var(--task-icon-alignment,flex-start);margin:21px 10px 20px 20px;user-select:none}:host .task .task-check-container.complete .task-check{background-color:var(--task-icon-background-completed,#00ad56);border:var(--task-icon-border-completed,solid 1px #fff);color:var(--task-icon-color-completed,#fff)}:host .task .task-check-container.complete .task-content .task-details-container .task-title{text-decoration:line-through;color:var(--task-detail-color,var(--neutral-foreground-hint))}:host .task .task-check-container .task-check{font-family:FabricMDL2Icons;font-size:12px;width:18px;height:18px;border-radius:var(--task-icon-border-radius,50%);border:var(--task-icon-border,solid 1px #797775);color:var(--task-color,var(--neutral-foreground-rest));display:flex;justify-content:center;align-items:center;background-color:var(--task-icon-background,transparent);user-select:none}:host .task .task-check-container .task-check.loading .task-check-content{animation:rotate-icon 2s infinite linear}:host .task .task-options{cursor:pointer;user-select:none;margin:16px 8px 0 0}:host .task.read-only .task-check-container{cursor:default}:host .task.complete{background:var(--task-complete-background,var(--neutral-layer-1));border:var(--task-complete-border,2px dotted inherit)}:host .task.complete .task-content .task-details-container .task-title{text-decoration:line-through;color:var(--task-detail-color,var(--neutral-foreground-hint))}:host .task.new-task{margin:var(--task-new-margin,var(--task-margin,0 0 24px 0));display:flex;flex-direction:row}:host .task.new-task .self-assign{display:none}:host .task.new-task .assign-to{border:0;background:0 0}:host .task.new-task .fake-check-box{width:15px;height:15px;cursor:pointer;margin:0 5px}:host .task.new-task .fake-check-box::after{font-family:FabricMDL2Icons;content:\"uE739\"}:host .task.new-task .fake-check-box~:checked{font-family:FabricMDL2Icons;content:\"uE73A\"}:host .task.new-task .task-content{flex:1 1 auto;align-content:center;vertical-align:middle;margin:0 0 0 12px}:host .task.new-task .task-content .task-details-container{display:flex;flex-direction:column;align-items:stretch;margin:0}:host .task.new-task .task-content .task-details-container .task-title{display:flex;height:32px;padding:2px}:host .task.new-task .task-content .task-details-container .task-title input{flex:1;margin:var(--task-new-input-margin,0 24px 0 16px);padding:var(--task-new-input-padding,6px);font-size:var(--task-new-input-font-size,14px);font-weight:600;border:var(--task-new-border,none);border-bottom:1px solid #e1dfdd;outline:0;border-radius:0;background-color:var(--task-background-color,var(--neutral-layer-floating))}:host .task.new-task .task-content .task-details-container .task-title input:hover{border-bottom:1px solid #106ebe}:host .task.new-task .task-content .task-details-container .task-title input:active{border-bottom:1px solid #005a9e}:host .task.new-task .task-content .task-details-container .task-title input:focus{border-bottom:1px solid #0078d4}:host .task.new-task .task-content .task-details-container .task-details{display:flex;justify-content:stretch;align-items:center;flex-wrap:wrap;margin:14px 0 14px 4px}:host .task.new-task .task-content .task-details-container .task-details .new-task-group{margin:8px 16px}:host .task.new-task .task-content .task-details-container .task-details .new-task-bucket{margin:8px 16px}:host .task.new-task .task-content .task-details-container .task-details .new-task-due{margin:8px 16px}:host .task.new-task .task-content .task-details-container .task-details .new-task-assignee{margin:8px 16px;min-width:80px}:host .task.new-task .task-content .task-details-container .task-details .task-people label{display:flex;align-content:center;align-items:center}:host .task.new-task .task-content .task-details-container .task-details input,:host .task.new-task .task-content .task-details-container .task-details select{font-size:12px;font-weight:600;border:var(--task-new-select-border,none);border-bottom:1px solid #e1dfdd}:host .task.new-task .task-content .task-details-container .task-details input:hover,:host .task.new-task .task-content .task-details-container .task-details select:hover{border-bottom:1px solid #106ebe}:host .task.new-task .task-content .task-details-container .task-details input:active,:host .task.new-task .task-content .task-details-container .task-details select:active{border-bottom:1px solid #005a9e}:host .task.new-task .task-content .task-details-container .task-details input:focus,:host .task.new-task .task-content .task-details-container .task-details select:focus{border-bottom:1px solid #0078d4}:host .task.new-task .task-add-button-container{margin-right:28px}:host .task.new-task .task-add-button-container .task-add,:host .task.new-task .task-add-button-container .task-cancel{justify-content:center;align-items:center;cursor:pointer;flex:0 0 auto;display:flex;width:var(--tasks-new-button-width,100px);height:var(--tasks-new-button-height,32px);border-radius:4px;border:var(--tasks-new-button-border,solid 1px #e5e5e5);font-size:14px;line-height:20px}:host .task.new-task .task-add-button-container .task-add{color:#fff;background:var(--task-new-add-button-background,#0078d4);margin:22px 0 12px auto}:host .task.new-task .task-add-button-container .task-cancel{color:var(--task-new-cancel-button-color,var(--neutral-foreground-rest))}:host .task.new-task .task-add-button-container.disabled .task-add{color:var(--task-new-cancel-button-color,var(--neutral-foreground-rest));background:var(--task-new-add-button-disabled-background,#fff);cursor:default}@keyframes rotate-icon{from{transform:rotate(0)}to{transform:rotate(360deg)}}[dir=rtl] .arrow-options{--arrow-options-left:auto}[dir=rtl] .dot-options{--dot-options-translatex:translateX(60px)}[dir=rtl] .task-details{margin-right:14px!important}[dir=rtl] .task-icon{margin-left:8px}[dir=rtl] .task-detail svg{margin-left:4px}@media (forced-colors:active) and (prefers-color-scheme:dark){:host svg{fill:#fff!important;fill-rule:nonzero!important;clip-rule:nonzero!important}:host svg path{fill:#fff!important;fill-rule:nonzero!important;clip-rule:nonzero!important}}@media (forced-colors:active) and (prefers-color-scheme:light){:host svg{fill:#000!important;fill-rule:nonzero!important;clip-rule:nonzero!important}:host svg path{fill:#000!important;fill-rule:nonzero!important;clip-rule:nonzero!important}}:host{border-radius:8px;width:100%}:host .task,:host.loading-task{margin-block:1px;box-shadow:var(--task-box-shadow,var(--elevation-shadow-card-active));width:100%;display:flex;background-color:var(--task-background-color,var(--neutral-layer-floating))}:host .task.new-task,:host.loading-task.new-task{margin:14px 0 1px;box-shadow:var(--task-box-shadow,var(--elevation-shadow-card-active))}:host .task.complete,:host.loading-task.complete{border:1px solid var(--task-border-completed,var(--neutral-stroke-input-active));background:var(--task-complete-background,var(--neutral-layer-1))}:host .task.complete .task-details .task-due,:host .task.complete .task-details .title,:host.loading-task.complete .task-details .task-due,:host.loading-task.complete .task-details .title{text-decoration:line-through}:host .task.read-only,:host.loading-task.read-only{opacity:1}:host .task:hover,:host.loading-task:hover{background-color:var(--task-background-color-hover,var(--neutral-fill-hover));border-radius:8px}:host .task .task-details,:host.loading-task .task-details{box-sizing:border-box;display:flex;flex-direction:row;align-items:center;padding:2px;line-height:24px;border-radius:4px;width:100%}:host .task .task-details .task>div,:host.loading-task .task-details .task>div{display:flex;align-items:center;width:200px}:host .task .task-details .task-delete,:host.loading-task .task-details .task-delete{display:flex}:host .task .task-details .container,:host.loading-task .task-details .container{display:flex;width:100%}:host .task .task-details .task-due,:host.loading-task .task-details .task-due{min-width:120px;margin-inline-end:12px;height:32px;text-decoration:inherit;display:flex}:host fluent-text-field::part(end),:host fluent-text-field::part(start){margin-inline:unset}:host fluent-text-field::part(control){padding:0;cursor:pointer}:host fluent-text-field::part(root){background:0 0}:host fluent-text-field.new-task{width:100%;height:34px}:host fluent-text-field.new-task div.start .add-icon{display:flex;margin-inline:10px}:host fluent-text-field.new-task div:nth-child(2){display:flex;align-items:center}:host fluent-text-field.new-task div:nth-child(2) .calendar{display:flex;align-items:center}:host fluent-text-field.new-task div:nth-child(2) .calendar svg{fill:var(--task-color,var(--neutral-foreground-rest))}:host fluent-text-field.new-task div:nth-child(2) .calendar .date{margin-inline-start:10px;color:var(--task-color,var(--neutral-foreground-rest));width:auto;cursor:pointer}:host fluent-text-field.new-task div:nth-child(2) .calendar input{flex:1;border:none;border-bottom:1px solid var(--task-color,var(--neutral-foreground-rest));outline:0;border-radius:0}:host fluent-text-field.new-task div:nth-child(2) .calendar input:hover{border-bottom:1px solid var(--task-date-input-hover-color,var(--neutral-layer-1))}:host fluent-text-field.new-task div:nth-child(2) .calendar input:active,:host fluent-text-field.new-task div:nth-child(2) .calendar input:focus{border-bottom:1px solid var(--task-date-input-active-color,var(--accent-fill-rest))}:host fluent-text-field.title{flex-grow:1;display:inline}:host fluent-text-field.date{color:var(--task-detail-color,var(--neutral-foreground-hint))}:host fluent-text-field::after{border-bottom:none}:host fluent-text-field.dark::part(control){color-scheme:dark}:host fluent-button.task-add-icon.neutral,:host fluent-button.task-cancel-icon.neutral,:host fluent-button.task-delete.neutral{fill:var(--task-color,var(--neutral-foreground-rest))}:host fluent-button.task-add-icon.neutral::part(control),:host fluent-button.task-cancel-icon.neutral::part(control),:host fluent-button.task-delete.neutral::part(control){border:none;background:inherit}:host fluent-button.task-add-icon.neutral::part(control) svg,:host fluent-button.task-cancel-icon.neutral::part(control) svg,:host fluent-button.task-delete.neutral::part(control) svg{fill:var(--task-color,var(--neutral-foreground-rest))}:host fluent-checkbox.complete div>svg .filled{display:block}:host fluent-checkbox.complete div>svg .regular{display:none}:host fluent-checkbox.complete div>svg path{fill:var(--task-radio-background-color,var(--accent-fill-rest))}:host fluent-checkbox div>svg .filled{display:none}:host fluent-checkbox div>svg .regular{display:block}:host fluent-checkbox div>svg path{fill:var(--task-background-color,var(--neutral-layer-floating))}:host fluent-checkbox::part(control){margin-inline-start:10px;background:0 0;border-radius:50%}:host fluent-checkbox::part(label){margin-inline-end:unset;width:100%}\n`];","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\n/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nexport const strings = {\n  cancelNewTaskSubtitle: 'Cancel',\n  newTaskPlaceholder: 'Add a task',\n  newTaskLabel: 'New Task Input',\n  editTaskLabel: 'Edit Task Input',\n  addTaskButtonSubtitle: 'Add',\n  deleteTaskOption: 'Delete',\n  editTaskOption: 'Edit',\n  dueDate: 'Due date',\n  newTaskDateInputLabel: 'New Task Date Input',\n  changeTaskDateInputLabel: 'Change Task Date Input',\n  newTaskNameInputLabel: 'New Task Name Input',\n  cancelAddingTask: 'Cancel adding a new task'\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\nexport const strings = {\n  cancelNewTaskSubtitle: 'Cancel',\n  newTaskPlaceholder: 'Add a task',\n  addTaskButtonSubtitle: 'Add',\n  removeTaskSubtitle: 'Delete Task'\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { html, TemplateResult } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { ComponentMediaQuery, Providers, ProviderState, MgtTemplatedTaskComponent } from '@microsoft/mgt-element';\nimport { strings } from './strings';\nimport { registerFluentComponents } from '../../utils/FluentComponents';\nimport { fluentTextField, fluentButton, fluentCalendar } from '@fluentui/web-components';\nimport { TodoTask } from '@microsoft/microsoft-graph-types';\n/**\n * The foundation for creating task based components.\n *\n * @export\n * @class MgtTasksBase\n * @extends {MgtTemplatedComponent}\n */\nexport abstract class MgtTasksBase extends MgtTemplatedTaskComponent {\n  /**\n   * determines if tasks are un-editable\n   *\n   * @type {boolean}\n   */\n  @property({ attribute: 'read-only', type: Boolean })\n  public readOnly: boolean;\n\n  /**\n   * sets whether the header is rendered\n   *\n   * @type {boolean}\n   * @memberof MgtTasksBase\n   */\n  @property({ attribute: 'hide-header', type: Boolean })\n  public hideHeader: boolean;\n\n  /**\n   * sets whether the options are rendered\n   *\n   * @type {boolean}\n   * @memberof MgtTasksBase\n   */\n  @property({ attribute: 'hide-options', type: Boolean })\n  public hideOptions: boolean;\n\n  /**\n   * if set, the component will only show tasks from the target list\n   *\n   * @type {string}\n   */\n  @property({ attribute: 'target-id', type: String })\n  public targetId: string;\n\n  /**\n   * if set, the component will first show tasks from this list\n   *\n   * @type {string}\n   * @memberof MgtTodo\n   */\n  @property({ attribute: 'initial-id', type: String })\n  public initialId: string;\n\n  private _previousMediaQuery: ComponentMediaQuery;\n\n  protected get strings(): Record<string, string> {\n    return strings;\n  }\n\n  constructor() {\n    super();\n\n    registerFluentComponents(fluentTextField, fluentButton, fluentCalendar);\n\n    this.clearState();\n    this._previousMediaQuery = this.mediaQuery;\n  }\n\n  protected args(): unknown[] {\n    return [this.providerState, this.targetId, this.initialId];\n  }\n\n  /**\n   * updates provider state\n   *\n   * @memberof MgtTasksBase\n   */\n  public connectedCallback() {\n    super.connectedCallback();\n    window.addEventListener('resize', this.onResize);\n  }\n\n  /**\n   * removes updates on provider state\n   *\n   * @memberof MgtTasksBase\n   */\n  public disconnectedCallback() {\n    window.removeEventListener('resize', this.onResize);\n    super.disconnectedCallback();\n  }\n\n  /**\n   * Render the loading state\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtTasksBase\n   */\n  protected renderLoading = (): TemplateResult => {\n    return this.renderLoadingTask();\n  };\n\n  /**\n   * Invoked by render when the task is in a completed state\n   */\n  protected renderContent = () => {\n    const provider = Providers.globalProvider;\n    if (!provider || provider.state !== ProviderState.SignedIn) {\n      return html``;\n    }\n\n    const picker = this.renderPicker();\n    const newTaskTemplate = this.renderNewTask();\n    const tasksTemplate = this.renderTasks();\n\n    return html`\n      ${picker}\n      ${newTaskTemplate}\n      <div class=\"tasks\" dir=${this.direction}>\n        ${tasksTemplate}\n      </div>\n    `;\n  };\n\n  /**\n   * Render a task in a loading state.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtTodo\n   */\n  protected renderLoadingTask() {\n    return html`\n      <div class=\"task loading-task\">\n        <div class=\"task-details\">\n          <div class=\"title\"></div>\n          <div class=\"task-due\"></div>\n          <div class=\"task-delete\"></div>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Render the panel for creating a new task.\n   *\n   * @protected\n   * @memberof MgtTasksBase\n   */\n  protected abstract renderNewTask(): TemplateResult;\n\n  /**\n   * Render the generic picker.\n   *\n   * @protected\n   * @memberof MgtTasksBase\n   */\n  protected abstract renderPicker(): TemplateResult;\n\n  /**\n   * Render the list of todo tasks\n   *\n   * @protected\n   * @abstract\n   * @param {ITask[]} tasks\n   * @returns {TemplateResult}\n   * @memberof MgtTasksBase\n   */\n  protected abstract renderTasks(): TemplateResult;\n\n  /**\n   * Make a service call to create the new task object.\n   *\n   * @protected\n   * @abstract\n   * @memberof MgtTasksBase\n   */\n  protected abstract createNewTask(): Promise<void>;\n\n  /**\n   * Clear the form data from the new task panel.\n   *\n   * @protected\n   * @memberof MgtTasksBase\n   */\n  protected abstract clearNewTaskData(): void;\n\n  /**\n   * Clear the component state.\n   *\n   * @protected\n   * @memberof MgtTasksBase\n   */\n  protected clearState(): void {\n    this.requestUpdate();\n  }\n\n  /**\n   * Handle when a task is clicked\n   *\n   * @protected\n   * @param {Event} e\n   * @param {TodoTask} task\n   * @memberof MgtTasksBase\n   */\n  protected handleTaskClick = (task: TodoTask): void => {\n    this.fireCustomEvent('taskClick', { task });\n  };\n\n  /**\n   * Convert a date to a properly formatted string\n   *\n   * @protected\n   * @param {Date} date\n   * @returns\n   * @memberof MgtTasksBase\n   */\n  protected dateToInputValue(date: Date): string {\n    if (date) {\n      return new Date(date.getTime() - date.getTimezoneOffset() * 60000).toISOString().split('T')[0];\n    }\n\n    return null;\n  }\n\n  private readonly onResize = () => {\n    if (this.mediaQuery !== this._previousMediaQuery) {\n      this._previousMediaQuery = this.mediaQuery;\n      this.requestUpdate();\n    }\n  };\n}\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { html, nothing, TemplateResult } from 'lit';\nimport { state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { repeat } from 'lit/directives/repeat.js';\nimport { fluentCheckbox, fluentRadioGroup, fluentButton } from '@fluentui/web-components';\nimport { IGraph, mgtHtml, registerComponent, Providers, ProviderState } from '@microsoft/mgt-element';\nimport { TodoTaskList, TodoTask, TaskStatus } from '@microsoft/microsoft-graph-types';\nimport {\n  createTodoTask,\n  deleteTodoTask,\n  getTodoTaskList,\n  getTodoTaskLists,\n  getTodoTasks,\n  updateTodoTask\n} from './graph.todo';\nimport { styles } from './mgt-todo-css';\nimport { strings } from './strings';\nimport { registerMgtPickerComponent } from '../mgt-picker/mgt-picker';\nimport { MgtTasksBase } from '../mgt-tasks-base/mgt-tasks-base';\nimport { registerFluentComponents } from '../../utils/FluentComponents';\nimport { isElementDark } from '../../utils/isDark';\nimport { getSvg, SvgIcon } from '../../utils/SvgHelper';\n\n/**\n * Filter function\n */\nexport type TodoFilter = (task: TodoTask) => boolean;\n\nexport const registerMgtTodoComponent = () => {\n  registerFluentComponents(fluentCheckbox, fluentRadioGroup, fluentButton);\n  registerMgtPickerComponent();\n  registerComponent('todo', MgtTodo);\n};\n\n/**\n * component enables the user to view, add, remove, complete, or edit todo tasks. It works with tasks in Microsoft Planner or Microsoft To-Do.\n *\n * @export\n * @class MgtTodo\n * @extends {MgtTasksBase}\n *\n * @cssprop --task-color - {Color} - Task text color\n * @cssprop --task-background-color - {Color} - Task background color\n * @cssprop --task-complete-background - {Color} - Task background color when completed\n * @cssprop --task-date-input-active-color - {Color} - Task date input active color\n * @cssprop --task-date-input-hover-color - {Color} - Task date input hover color\n * @cssprop --task-background-color-hover - {Color} - Task background when hovered\n * @cssprop --task-box-shadow - {Color} - Task box shadow color\n * @cssprop --task-border-completed - {Color} - Task border color when completed\n * @cssprop --task-radio-background-color - {Color} - Task radio background color\n */\nexport class MgtTodo extends MgtTasksBase {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  public static get styles() {\n    return styles;\n  }\n  /**\n   * Strings for localization\n   *\n   * @readonly\n   * @protected\n   * @memberof MgtTodo\n   */\n  protected get strings() {\n    return strings;\n  }\n\n  /**\n   * Optional filter function when rendering tasks\n   *\n   * @type {TodoFilter}\n   * @memberof MgtTodo\n   */\n  public taskFilter: TodoFilter;\n\n  /**\n   * Get the scopes required for todo\n   *\n   * @static\n   * @return {*}  {string[]}\n   * @memberof MgtTodo\n   */\n  public static get requiredScopes(): string[] {\n    return ['tasks.read', 'tasks.readwrite'];\n  }\n  @state() private _tasks: TodoTask[];\n  @state() private _taskBeingUpdated: TodoTask;\n  @state() private _updatingTaskDate: boolean;\n  @state() private _isChangedDueDate = false;\n\n  @state() private _newTaskDueDate: Date;\n  @state() private _newTaskName: string;\n  @state() private _changedTaskName: string;\n  @state() private _isNewTaskBeingAdded: boolean;\n  @state() private _graph: IGraph;\n  @state() private currentList: TodoTaskList;\n  @state() private _isDarkMode = false;\n\n  constructor() {\n    super();\n    this._graph = null;\n    this._newTaskDueDate = null;\n    this._tasks = [];\n    this.addEventListener('selectionChanged', this.handleSelectionChanged);\n    this.addEventListener('blur', this.handleBlur);\n  }\n\n  /**\n   * updates provider state\n   *\n   * @memberof MgtTodo\n   */\n  public connectedCallback() {\n    super.connectedCallback();\n    window.addEventListener('darkmodechanged', this.onThemeChanged);\n    // invoked to ensure we have the correct initial value for _isDarkMode\n    this.onThemeChanged();\n  }\n\n  /**\n   * removes updates on provider state\n   *\n   * @memberof MgtTodo\n   */\n  public disconnectedCallback() {\n    window.removeEventListener('darkmodechanged', this.onThemeChanged);\n    super.disconnectedCallback();\n  }\n\n  private readonly onThemeChanged = () => {\n    this._isDarkMode = isElementDark(this);\n  };\n\n  /**\n   * Render the list of todo tasks\n   */\n  protected renderTasks(): TemplateResult {\n    let tasks = this._tasks;\n    if (tasks && this.taskFilter) {\n      tasks = tasks.filter(task => this.taskFilter(task));\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const completedTasks = tasks.filter(task => task.status === 'completed');\n\n    const taskTemplates = repeat(\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      tasks.filter(task => task.status !== 'completed'),\n      task => task.id,\n      task => this.renderTask(task)\n    );\n\n    const completedTaskTemplates = repeat(\n      completedTasks\n        .sort((a, b) => {\n          return a.lastModifiedDateTime < b.lastModifiedDateTime ? -1 : 1;\n        })\n        .filter(task => task.status === 'completed'),\n      task => task.id,\n      task => this.renderTask(task)\n    );\n    return html`\n      ${taskTemplates}\n      ${completedTaskTemplates}\n    `;\n  }\n\n  /**\n   * Render the generic picker or the task list displayName.\n   *\n   */\n  protected renderPicker() {\n    if (this.targetId) {\n      return html`<p>${this.currentList?.displayName}</p>`;\n    } else {\n      return mgtHtml`\n        <mgt-picker\n          resource=\"me/todo/lists\"\n          scopes=\"tasks.read, tasks.readwrite\"\n          key-name=\"displayName\"\n          selected-value=\"${ifDefined(this.currentList?.displayName)}\"\n          placeholder=\"Select a task list\">\n        </mgt-picker>`;\n    }\n  }\n\n  /**\n   * Render the panel for creating a new task\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtTodo\n   */\n  protected renderNewTask = (): TemplateResult => {\n    const addIcon = this._newTaskName\n      ? html`\n        <fluent-checkbox\n          class=\"task-add-icon\"\n          @click=\"${this.addTask}\">\n        </fluent-checkbox>\n      `\n      : html`\n        <span class=\"add-icon\">${getSvg(SvgIcon.Add)}</span>\n      `;\n\n    const cancelIcon = html`\n      <fluent-button\n        aria-label=${this.strings.cancelAddingTask}\n        class=\"task-cancel-icon\" \n        @click=\"${this.clearNewTaskData}\"\n      >\n        ${getSvg(SvgIcon.Cancel)}\n      </fluent-button>\n    `;\n    const dateClass = { dark: this._isDarkMode, date: true };\n    const calendarTemplate = html`\n      <fluent-text-field\n        autocomplete=\"off\"\n        type=\"date\"\n        id=\"new-taskDate-input\"\n        class=\"${classMap(dateClass)}\"\n        aria-label=\"${this.strings.newTaskDateInputLabel}\"\n        .value=\"${this.dateToInputValue(this._newTaskDueDate)}\"\n        @change=\"${this.handleDateChange}\"\n      >\n      </fluent-text-field>\n    `;\n\n    const newTaskDetails = this.readOnly\n      ? nothing\n      : html`\n      <fluent-text-field\n        autocomplete=\"off\"\n        appearance=\"outline\"\n        class=\"new-task\"\n        id=\"new-task-name-input\"\n        aria-label=\"${this.strings.newTaskLabel}\"\n        .value=${this._newTaskName}\n        placeholder=\"${this.strings.newTaskPlaceholder}\"\n        @keydown=\"${this.handleKeyDown}\"\n        @input=\"${this.handleInput}\"\n      >\n        <div slot=\"start\" class=\"start\">${addIcon}</div>\n        ${\n          this._newTaskName\n            ? html`\n              <div slot=\"end\" class=\"end\">\n                <span class=\"calendar\">${calendarTemplate}</span>\n                ${cancelIcon}\n              </div> `\n            : html``\n        }\n      </fluent-text-field>\n    `;\n    return html`\n      ${\n        this.currentList\n          ? html`\n            <div dir=${this.direction} class=\"task new-task incomplete\">\n              ${newTaskDetails}\n            </div>\n        `\n          : html``\n      }  \n     `;\n  };\n\n  /**\n   * Handle a change in taskList.\n   *\n   * @protected\n   * @param {CustomEvent} e\n   * @returns {TemplateResult}\n   * @memberof MgtTodo\n   */\n\n  protected handleSelectionChanged = (e: CustomEvent<TodoTaskList>) => {\n    this.currentList = e.detail;\n    void this.loadTasks(this.currentList);\n  };\n\n  /**\n   * Render task details.\n   *\n   * @protected\n   * @param {TodoTask} task\n   * @returns {TemplateResult}\n   * @memberof MgtTodo\n   */\n  protected renderTaskDetails = (task: TodoTask) => {\n    const context = { task, list: this.currentList };\n\n    if (this.hasTemplate('task')) {\n      return this.renderTemplate('task', context, task.id);\n    }\n\n    let taskDetailsTemplate = null;\n\n    const taskDeleteTemplate = html`\n      <fluent-button class=\"task-delete\"\n        @click=\"${() => this.removeTask(task.id)}\"\n        aria-label=\"${this.strings.deleteTaskOption}\">\n        ${getSvg(SvgIcon.Delete)}\n      </fluent-button>`;\n\n    if (this.hasTemplate('task-details')) {\n      taskDetailsTemplate = this.renderTemplate('task-details', context, `task-details-${task.id}`);\n    } else {\n      const dateClass = { dark: this._isDarkMode, date: true, 'task-due': true };\n      const calendarTemplate = html`\n        <fluent-text-field\n          autocomplete=\"off\"\n          type=\"date\"\n          id=\"${task.id}-taskDate-input\"\n          class=\"${classMap(dateClass)}\"\n          aria-label=\"${this.strings.changeTaskDateInputLabel}\"\n          .value=\"${\n            task.dueDateTime\n              ? this.dateToInputValue(new Date(task.dueDateTime.dateTime))\n              : this._taskBeingUpdated === task\n              ? this.dateToInputValue(this._newTaskDueDate)\n              : nothing\n          }\"\n          @change=\"${this.handleDateUpdate}\"\n          @focus=\"${(e: KeyboardEvent) => this.updatingTask(e, task)}\"\n          @blur=\"${this.handleBlur}\"\n        >\n        </fluent-text-field>\n      `;\n      const changeTaskDetailsTemplate = html`\n          <fluent-text-field \n            autocomplete=\"off\"\n            appearance=\"outline\"\n            class=\"title\"\n            id=${task.id}\n            .value=\"${task.title ? task.title : this._taskBeingUpdated === task ? this._changedTaskName : ''}\"\n            aria-label=\"${this.strings.editTaskLabel}\"\n            @keydown=\"${(e: KeyboardEvent) => this.handleChange(e, task)}\"\n            @input=\"${(e: KeyboardEvent) => this.handleChange(e, task)}\"\n            @focus=\"${(e: KeyboardEvent) => this.updatingTask(e, task)}\"\n          >\n          </fluent-text-field>\n          ${task.dueDateTime || this._taskBeingUpdated === task ? html`${calendarTemplate}` : nothing}\n          ${taskDeleteTemplate}\n      `;\n\n      taskDetailsTemplate = html`\n      <div class=\"task-details\">\n        ${changeTaskDetailsTemplate}\n      </div>\n      `;\n    }\n\n    return html`${taskDetailsTemplate}`;\n  };\n\n  /**\n   * Render a task in the list.\n   *\n   * @protected\n   * @param {TodoTask} task\n   * @returns {TemplateResult}\n   * @memberof MgtTodo\n   */\n  protected renderTask = (task: TodoTask) => {\n    const isCompleted = task.status === 'completed';\n\n    const taskClasses = classMap({\n      complete: isCompleted,\n      'read-only': this.readOnly,\n      task: true\n    });\n\n    const checkboxClasses = classMap({\n      complete: isCompleted\n    });\n\n    const taskCheckContent = isCompleted ? html`${getSvg(SvgIcon.CheckMark)}` : html`${getSvg(SvgIcon.Radio)}`;\n\n    return html`\n      <div class=${taskClasses} @blur=\"${this.handleBlur}\">\n        <fluent-checkbox \n          id=${task.id} \n          class=${checkboxClasses}\n          ?checked=${isCompleted}\n          @click=\"${() => this.handleTaskCheckClick(task)}\"\n          @keydown=\"${(e: KeyboardEvent) => this.handleTaskCheckKeydown(e, task)}\"\n        >\n          <div slot=\"checked-indicator\">\n            ${taskCheckContent}\n          </div>\n        </fluent-checkbox>\n        ${this.renderTaskDetails(task)}\n      </div>\n    `;\n  };\n\n  /**\n   * loads tasks from dataSource\n   *\n   * @returns {Promise<void>}\n   * @memberof MgtTodo\n   */\n  protected loadState = async (): Promise<void> => {\n    const provider = Providers.globalProvider;\n    if (!provider || provider.state !== ProviderState.SignedIn) {\n      return;\n    }\n\n    if (!this._graph) {\n      const graph = provider.graph.forComponent(this);\n      this._graph = graph;\n    }\n\n    if (!this.currentList && !this.initialId) {\n      const lists = await getTodoTaskLists(this._graph);\n      const defaultList = lists?.find(l => l.wellknownListName === 'defaultList');\n      if (defaultList) await this.loadTasks(defaultList);\n    }\n\n    if (this.targetId) {\n      // Call to get the displayName of the list\n      this.currentList = await getTodoTaskList(this._graph, this.targetId);\n      this._tasks = await getTodoTasks(this._graph, this.targetId);\n    } else if (this.initialId) {\n      // Call to get the displayName of the list\n      this.currentList = await getTodoTaskList(this._graph, this.initialId);\n      this._tasks = await getTodoTasks(this._graph, this.initialId);\n    }\n  };\n\n  /**\n   * Send a request the Graph to create a new todo task item\n   *\n   * @protected\n   * @returns {Promise<void>}\n   * @memberof MgtTodo\n   */\n  protected async createNewTask(): Promise<void> {\n    const listId = this.currentList.id;\n    const taskData = {\n      title: this._newTaskName\n    };\n\n    if (this._newTaskDueDate) {\n      // eslint-disable-next-line @typescript-eslint/dot-notation\n      taskData['dueDateTime'] = {\n        dateTime: new Date(this._newTaskDueDate).toLocaleDateString(),\n        timeZone: 'UTC'\n      };\n    }\n\n    const task = await createTodoTask(this._graph, listId, taskData);\n    this._tasks.unshift(task);\n  }\n\n  /**\n   * Create a new todo task and add it to the list\n   *\n   * @protected\n   * @returns {Promise<void>}\n   * @memberof MgtTodo\n   */\n  protected addTask = async (): Promise<void> => {\n    if (this._isNewTaskBeingAdded || !this._newTaskName) {\n      return;\n    }\n\n    this._isNewTaskBeingAdded = true;\n\n    try {\n      await this.createNewTask();\n    } finally {\n      this.clearNewTaskData();\n      this._isNewTaskBeingAdded = false;\n    }\n  };\n\n  /**\n   *Update a todo task in the todo list\n   * @protected\n   * @returns {Promise<void>}\n   * @memberof MgtTodo\n   */\n  protected updateTask = async (task: TodoTask): Promise<void> => {\n    try {\n      if (!this._changedTaskName && !this._isChangedDueDate) {\n        return;\n      }\n      await this.updateTaskItem(task);\n    } finally {\n      this.clearNewTaskData();\n    }\n  };\n\n  /**\n   * Send a request the Graph to update a todo task item\n   *\n   * @protected\n   * @returns {Promise<void>}\n   * @memberof MgtTodo\n   */\n  protected async updateTaskItem(task: TodoTask): Promise<void> {\n    const listId = this.currentList.id;\n    let taskData: TodoTask = {};\n\n    if (this._changedTaskName && this._changedTaskName !== task.title) {\n      taskData = {\n        title: this._changedTaskName\n      };\n    }\n\n    if (this._updatingTaskDate) {\n      if (!this._isChangedDueDate) {\n        return;\n      }\n      if (this._newTaskDueDate) {\n        taskData.dueDateTime = {\n          dateTime: new Date(this._newTaskDueDate).toLocaleDateString(),\n          timeZone: 'UTC'\n        };\n      } else if (this._isChangedDueDate && !this._newTaskDueDate) {\n        taskData.dueDateTime = null;\n      } else {\n        taskData.dueDateTime = null;\n      }\n    }\n\n    if (!Object.keys(taskData).length) {\n      return;\n    }\n    const updatedTask = await updateTodoTask(this._graph, listId, task.id, taskData);\n    const taskIndex = this._tasks.findIndex(t => t.id === updatedTask.id);\n    this._tasks[taskIndex] = updatedTask;\n  }\n\n  /**\n   * Clear out the new task metadata input fields\n   *\n   * @protected\n   * @memberof MgtTodo\n   */\n  protected clearNewTaskData = (): void => {\n    this._newTaskDueDate = null;\n    this._newTaskName = '';\n    this._changedTaskName = '';\n    this._isChangedDueDate = false;\n  };\n\n  /**\n   * Clear the state of the component\n   *\n   * @protected\n   * @memberof MgtTodo\n   */\n  protected clearState = (): void => {\n    super.clearState();\n    this.currentList = null;\n    this._tasks = [];\n    this._taskBeingUpdated = null;\n  };\n\n  private readonly loadTasks = async (list: TodoTaskList): Promise<void> => {\n    this.currentList = list;\n\n    this._tasks = await getTodoTasks(this._graph, list.id);\n  };\n\n  private readonly updateTaskStatus = async (task: TodoTask, taskStatus: TaskStatus): Promise<void> => {\n    // Change the task status\n    task.status = taskStatus;\n\n    // Send update request\n    const listId = this.currentList.id;\n    task = await updateTodoTask(this._graph, listId, task.id, task);\n\n    const taskIndex = this._tasks.findIndex(t => t.id === task.id);\n    this._tasks[taskIndex] = task;\n  };\n\n  private readonly removeTask = async (taskId: string): Promise<void> => {\n    this._tasks = this._tasks.filter(t => t.id !== taskId);\n    this.requestUpdate();\n\n    const listId = this.currentList.id;\n    await deleteTodoTask(this._graph, listId, taskId);\n\n    this._tasks = this._tasks.filter(t => t.id !== taskId);\n  };\n\n  private handleTaskCheckClick(task: TodoTask) {\n    this.handleTaskClick(task);\n    if (!this.readOnly) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      if (task.status === 'completed') {\n        void this.updateTaskStatus(task, 'notStarted');\n      } else {\n        void this.updateTaskStatus(task, 'completed');\n      }\n    }\n  }\n\n  private handleTaskCheckKeydown(e: KeyboardEvent, task: TodoTask) {\n    if (e.key === 'Enter' && !this.readOnly) {\n      this.handleTaskClick(task);\n      if (task.status === 'completed') {\n        void this.updateTaskStatus(task, 'notStarted');\n      } else {\n        void this.updateTaskStatus(task, 'completed');\n      }\n    }\n  }\n\n  private readonly handleInput = (e: MouseEvent) => {\n    if ((e.target as HTMLInputElement).id === 'new-task-name-input') {\n      this._newTaskName = (e.target as HTMLInputElement).value;\n    }\n  };\n\n  private readonly handleChange = async (e: KeyboardEvent, task: TodoTask) => {\n    if ((e.target as HTMLInputElement).id === task.id) {\n      if (e.key === 'Enter') {\n        await this.updateTask(task);\n        (e.target as HTMLInputElement)?.blur();\n      }\n      this._changedTaskName = (e.target as HTMLInputElement).value;\n    }\n  };\n\n  private readonly handleKeyDown = async (e: KeyboardEvent) => {\n    if (e.key === 'Enter' && (e.target as HTMLInputElement).id === 'new-task-name-input') {\n      await this.addTask();\n    }\n  };\n\n  private readonly updatingTask = (e: KeyboardEvent, task: TodoTask) => {\n    if ((e.target as HTMLInputElement).id === task.id) {\n      this._taskBeingUpdated = task;\n    }\n    if ((e.target as HTMLInputElement).id === `${task.id}-taskDate-input`) {\n      this._updatingTaskDate = true;\n      this._taskBeingUpdated = task;\n    }\n  };\n\n  private readonly handleBlur = () => {\n    const task = this._taskBeingUpdated;\n    const targets = this.renderRoot.querySelectorAll('fluent-text-field');\n    for (const target of targets) {\n      if (\n        task &&\n        ((target as HTMLInputElement).id === task.id || (target as HTMLInputElement).id === `${task.id}-taskDate-input`)\n      ) {\n        void this.updateTask(task);\n        (target as HTMLElement)?.blur();\n        this._taskBeingUpdated = null;\n        this._updatingTaskDate = false;\n      }\n    }\n  };\n\n  private readonly handleDateChange = (e: Event) => {\n    const value = (e.target as HTMLInputElement).value;\n    if (value) {\n      this._newTaskDueDate = new Date(value + 'T17:00');\n    } else {\n      this._newTaskDueDate = null;\n    }\n  };\n\n  private readonly handleDateUpdate = (e: Event) => {\n    const task = this._taskBeingUpdated;\n    if (task) {\n      const value = (e.target as HTMLInputElement).value;\n      if (value) {\n        this._newTaskDueDate = new Date(value + 'T17:00');\n      } else {\n        this._newTaskDueDate = null;\n      }\n\n      if (task.dueDateTime && this._newTaskDueDate) {\n        this._isChangedDueDate = new Date(task.dueDateTime.dateTime) !== this._newTaskDueDate;\n      } else if (task.dueDateTime || this._newTaskDueDate) {\n        this._isChangedDueDate = true;\n      } else {\n        this._isChangedDueDate = false;\n      }\n    }\n  };\n}\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { SwatchRGB, baseLayerLuminance, isDark } from '@fluentui/web-components';\n\n/**\n * Utility to help quickly determine if an element is dark based fluentui theme\n *\n * @param element HTMLElement to check if dark\n * @returns true if the element is dark\n */\nexport const isElementDark = (element: HTMLElement) => {\n  const luminance = baseLayerLuminance.getValueFor(element);\n  return isDark(SwatchRGB.create(luminance, luminance, luminance));\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nexport const strings = {\n  placeholder: 'Search',\n  title: 'Search'\n};\n","// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\n\nimport { css, CSSResult } from 'lit';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles: CSSResult[] = [\n  css`\n:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host fluent-search{width:100%}\n`];","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { CSSResult, html, TemplateResult } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { MgtBaseTaskComponent } from '@microsoft/mgt-element';\nimport { fluentSearch } from '@fluentui/web-components';\nimport { registerFluentComponents } from '../../utils/FluentComponents';\nimport { strings } from './strings';\nimport { styles } from './mgt-search-box-css';\nimport { debounce } from '../../utils/Utils';\nimport { registerComponent } from '@microsoft/mgt-element';\n\nexport const registerMgtSearchBoxComponent = () => {\n  registerFluentComponents(fluentSearch);\n  registerComponent('search-box', MgtSearchBox);\n};\n\n/**\n * Web component used to enter a search value to power search scenarios.\n *\n * @fires {CustomEvent<string>} searchTermChanged - Fired when the search term is changed\n *\n * @class MgtSearchBox\n * @extends {MgtBaseComponent}\n */\nexport class MgtSearchBox extends MgtBaseTaskComponent {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * user the `css` tag function.\n   */\n  static get styles(): CSSResult[] {\n    return styles;\n  }\n\n  /**\n   * Provides strings for localization\n   *\n   * @readonly\n   * @protected\n   * @memberof MgtSearchBox\n   */\n  protected get strings() {\n    return strings;\n  }\n\n  /**\n   * The placeholder rendered in the search input (for example, `Select a user` or `Select a task list`).\n   *\n   * @type {string}\n   * @memberof MgtSearchBox\n   */\n  @property({\n    attribute: 'placeholder',\n    type: String\n  })\n  public placeholder: string;\n\n  /**\n   * Value of the search term\n   *\n   * @type {string}\n   * @memberof MgtSearchBox\n   */\n  @property({\n    attribute: 'search-term',\n    type: String\n  })\n  public get searchTerm() {\n    return this._searchTerm;\n  }\n  public set searchTerm(value) {\n    this._searchTerm = value;\n    this.fireSearchTermChanged();\n  }\n\n  /**\n   * Debounce delay of the search input in milliseconds\n   *\n   * @type {number}\n   * @memberof MgtSearchBox\n   */\n  @property({\n    attribute: 'debounce-delay',\n    type: Number,\n    reflect: true\n  })\n  public debounceDelay: number;\n  private _searchTerm = '';\n  private debouncedSearchTermChanged: () => void;\n\n  constructor() {\n    super();\n    this.debounceDelay = 300;\n  }\n\n  /**\n   * Renders the component\n   *\n   * @return {TemplateResult}\n   * @memberof MgtSearchBox\n   */\n  protected readonly renderContent = (): TemplateResult => {\n    return html`\n      <fluent-search\n        autocomplete=\"off\"\n        class=\"search-term-input\"\n        appearance=\"outline\"\n        value=${this.searchTerm ?? ''}\n        placeholder=${this.placeholder ? this.placeholder : strings.placeholder}\n        title=${this.title ? this.title : strings.title}\n        @input=${this.onInputChanged}\n        @change=${this.onInputChanged}\n      >\n      </fluent-search>`;\n  };\n\n  private readonly onInputChanged = (e: Event) => {\n    this.searchTerm = (e.target as HTMLInputElement).value;\n  };\n\n  /**\n   * Fires and debounces the custom event to listeners\n   */\n  private fireSearchTermChanged() {\n    if (!this.debouncedSearchTermChanged) {\n      this.debouncedSearchTermChanged = debounce(() => {\n        this.fireCustomEvent('searchTermChanged', this.searchTerm);\n      }, this.debounceDelay);\n    }\n\n    this.debouncedSearchTermChanged();\n  }\n}\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { IGraph } from './IGraph';\nimport { Client } from '@microsoft/microsoft-graph-client';\nimport { Graph } from './Graph';\n\n/**\n * The version of the Graph to use for making requests.\n */\nconst GRAPH_VERSION = 'beta';\n\n/**\n * BetaGraph\n *\n * @export\n * @class BetaGraph\n * @extends {BetaGraph}\n */\nexport class BetaGraph extends Graph {\n  /**\n   * get a BetaGraph instance based on an existing IGraph implementation.\n   *\n   * @static\n   * @param {Graph} graph\n   * @returns {BetaGraph}\n   * @memberof BetaGraph\n   */\n  public static fromGraph(graph: IGraph): BetaGraph {\n    const betaGraph = new BetaGraph(graph.client);\n    betaGraph.setComponent(graph.componentName);\n    return betaGraph;\n  }\n\n  constructor(client: Client, version: string = GRAPH_VERSION) {\n    super(client, version);\n  }\n\n  /**\n   * Returns a new instance of the Graph using the same\n   * client within the context of the provider.\n   *\n   * @param {Element} component\n   * @returns {BetaGraph}\n   * @memberof BetaGraph\n   */\n  public forComponent(component: Element | string): BetaGraph {\n    const graph = new BetaGraph(this.client);\n    this.setComponent(component);\n    return graph;\n  }\n}\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nexport const strings = {\n  modified: 'modified on',\n  back: 'Back',\n  next: 'Next',\n  pages: 'pages',\n  page: 'Page'\n};\n","// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\n\nimport { css, CSSResult } from 'lit';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles: CSSResult[] = [\n  css`\n:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}.search-results{scroll-margin:100px}.search-result-grid{font-size:14px;margin:16px 4px;display:grid;grid-template-columns:32px 2fr 0fr;gap:.5rem}.search-result{font-size:14px;margin:16px 4px}.file-icon{--file-type-icon-height:32px}.search-result-info{margin:4px 0;display:inline-flex}.search-result-date{padding-top:3px}.search-result-date__shimmer{border-radius:4px;margin-top:2%;margin-left:5px;height:10px;width:200px}.search-result-summary{margin:4px 0;color:var(--body-subtle-text-color)}.search-result-thumbnail__shimmer{width:126px;height:72px}.search-result-thumbnail img{height:72px;max-width:126px;width:126px;object-fit:cover}.search-result-url{font-size:14px;font-weight:600;margin:4px 0}.search-result-url a{color:var(--color);text-decoration:none}.search-result-url a:hover{text-decoration:underline}.search-result-content__shimmer{border-radius:4px;margin-top:10px;height:10px}.search-result-name{font-size:16px;font-weight:600;margin:4px 0}.search-result-name__shimmer{border-radius:4px;margin-top:10px;height:10px;width:20%}.search-result-name a{color:var(--color);text-decoration:none}.search-result-name a:hover{text-decoration:underline}.search-result-author__shimmer{width:24px;height:24px}.search-result-icon{width:30px;height:30px}.search-result-icon__shimmer{width:32px;height:32px}.search-result-icon img{width:100%}.search-result-icon svg,.search-result-icon svg>path{width:100%;height:100%;fill:var(--neutral-foreground-rest);fill-rule:nonzero!important;clip-rule:nonzero!important}.search-results-page-active{border-bottom-style:solid;border-bottom-color:var(--accent-base-color)}.search-results-page svg,.search-results-page svg>path{height:12px;fill:var(--neutral-foreground-rest);fill-rule:nonzero!important;clip-rule:nonzero!important}.search-result-answer{box-shadow:var(--answer-box-shadow,0 3.2px 7.2px rgba(0,0,0,.132),0 .6px 1.8px rgba(0,0,0,.108));border-radius:var(--answer-border-radius,4px);border:var(--answer-border,none);padding:var(--answer-padding,10px)}.search-results-pages{margin:16px 4px}\n`];","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { html, HTMLTemplateResult, nothing, TemplateResult } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport {\n  CacheService,\n  CacheStore,\n  equals,\n  prepScopes,\n  Providers,\n  ProviderState,\n  mgtHtml,\n  BetaGraph,\n  BatchResponse,\n  CollectionResponse,\n  MgtTemplatedTaskComponent\n} from '@microsoft/mgt-element';\n\nimport { schemas } from '../../graph/cacheStores';\nimport { strings } from './strings';\nimport { styles } from './mgt-search-results-css';\nimport {\n  DirectoryObject,\n  Drive,\n  DriveItem,\n  EntityType,\n  List,\n  ListItem,\n  Message,\n  SearchHit,\n  SearchHitsContainer,\n  SearchRequest,\n  SearchResponse,\n  Site\n} from '@microsoft/microsoft-graph-types';\nimport { SearchRequest as BetaSearchRequest } from '@microsoft/microsoft-graph-types-beta';\nimport {\n  getIsResponseCacheEnabled,\n  getNameFromUrl,\n  getRelativeDisplayDate,\n  getResponseInvalidationTime,\n  sanitizeSummary,\n  trimFileExtension\n} from '../../utils/Utils';\nimport { getSvg, SvgIcon } from '../../utils/SvgHelper';\nimport { fluentSkeleton, fluentButton, fluentTooltip, fluentDivider } from '@fluentui/web-components';\nimport { registerFluentComponents } from '../../utils/FluentComponents';\nimport { CacheResponse } from '../CacheResponse';\nimport { registerComponent } from '@microsoft/mgt-element';\nimport { registerMgtFileComponent } from '../mgt-file/mgt-file';\nimport { registerMgtPersonComponent } from '../mgt-person/mgt-person';\n\n/**\n * Object representing a thumbnail\n */\ninterface Thumbnail {\n  /**\n   * The url of the Thumbnail\n   */\n  url?: string;\n}\n\n/**\n * Object representing a Binary Thumbnail\n */\ninterface BinaryThumbnail {\n  /**\n   * The url of the Thumbnail\n   */\n  url?: string;\n\n  /**\n   * The web Url of the Thumbnail\n   */\n  thumbnailWebUrl?: string;\n}\n\n/**\n * Object representing a Search Answer\n */\ninterface Answer {\n  '@odata.type': string;\n  displayName?: string;\n  description?: string;\n  webUrl?: string;\n}\n\n/**\n * Object representing a search resource supporting thumbnails\n */\ninterface ThumbnailResource {\n  thumbnail: Thumbnail;\n}\n\ninterface UserResource {\n  lastModifiedBy?: {\n    user?: {\n      email?: string;\n    };\n  };\n  userPrincipalName?: string;\n}\n\n/**\n * Object representing a Search Resource\n */\ntype SearchResource = Partial<\n  DriveItem & Site & List & Message & ListItem & Drive & DirectoryObject & Answer & ThumbnailResource & UserResource\n>;\n\n/**\n * Object representing a full Search Response\n */\ntype SearchResponseCollection = CollectionResponse<SearchResponse>;\n\nexport const registerMgtSearchResultsComponent = () => {\n  registerFluentComponents(fluentSkeleton, fluentButton, fluentTooltip, fluentDivider);\n\n  registerMgtFileComponent();\n  registerMgtPersonComponent();\n  registerComponent('search-results', MgtSearchResults);\n};\n\n/**\n * **Preview component** Custom element for making Microsoft Graph get queries.\n * Component may change before general availability release.\n *\n * @fires {CustomEvent<DataChangedDetail>} dataChange - Fired when data changes\n *\n * @cssprop --answer-border-radius - {Length} Border radius of an answer\n * @cssprop --answer-box-shadow - {Length} Box shadow of an answer\n * @cssprop --answer-border - {Length} Border of an answer\n * @cssprop --answer-padding - {Length} Padding of an answer\n *\n * @class mgt-search-results\n * @extends {MgtTemplatedTaskComponent}\n */\nexport class MgtSearchResults extends MgtTemplatedTaskComponent {\n  /**\n   * Default page size is 10\n   */\n  private _size = 10;\n\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * user the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  /**\n   * Gets all the localization strings for the component\n   */\n  protected get strings() {\n    return strings;\n  }\n\n  private _queryString: string;\n\n  /**\n   * The query to send to Microsoft Search\n   *\n   * @type {string}\n   * @memberof MgtSearchResults\n   */\n  public get queryString(): string {\n    return this._queryString;\n  }\n  @property({\n    attribute: 'query-string',\n    type: String\n  })\n  public set queryString(value: string) {\n    if (this._queryString !== value) {\n      this._queryString = value;\n      this.currentPage = 1;\n    }\n  }\n\n  /**\n   * Query template to use in complex search scenarios\n   * Query Templates are currently supported only on the beta endpoint\n   */\n  @property({\n    attribute: 'query-template',\n    type: String\n  })\n  public queryTemplate: string;\n\n  /**\n   * One or more types of resources expected in the response.\n   * Possible values are: list, site, listItem, message, event,\n   * drive, driveItem, externalItem.\n   *\n   * @type {string[]}\n   * @memberof MgtSearchResults\n   */\n  @property({\n    attribute: 'entity-types',\n    converter: value => {\n      return value.split(',').map(v => v.trim());\n    },\n    type: String\n  })\n  public entityTypes: string[] = ['driveItem', 'listItem', 'site'];\n\n  /**\n   * The scopes to request\n   *\n   * @type {string[]}\n   * @memberof MgtSearchResults\n   */\n  @property({\n    attribute: 'scopes',\n    converter: (value, _type) => {\n      return value ? value.toLowerCase().split(',') : null;\n    }\n  })\n  public scopes: string[] = [];\n\n  /**\n   * Content sources to use with External Items\n   *\n   * @type {string[]}\n   * @memberof MgtSearchResults\n   */\n  @property({\n    attribute: 'content-sources',\n    converter: (value, _type) => {\n      return value ? value.toLowerCase().split(',') : null;\n    }\n  })\n  public contentSources: string[] = [];\n\n  /**\n   * Api version to use for request\n   *\n   * @type {string}\n   * @memberof MgtSearchResults\n   */\n  @property({\n    attribute: 'version',\n    reflect: true,\n    type: String\n  })\n  public version = 'v1.0';\n\n  /**\n   * Specifies the offset for the search results.\n   * Offset 0 returns the very first result.\n   *\n   * @type {number}\n   * @memberof MgtSearchResults\n   */\n  public get from(): number {\n    return (this.currentPage - 1) * this.size;\n  }\n\n  /**\n   * The size of the page to be retrieved.\n   * The maximum value is 1000.\n   *\n   * @type {number}\n   * @memberof MgtSearchResults\n   */\n  public get size(): number {\n    return this._size;\n  }\n  @property({\n    attribute: 'size',\n    reflect: true,\n    type: Number\n  })\n  public set size(value) {\n    if (value > this.maxPageSize) {\n      this._size = this.maxPageSize;\n    } else {\n      this._size = value;\n    }\n  }\n\n  /**\n   * The maximum number of pages to be clickable\n   * in the paging control\n   *\n   * @type {number}\n   * @memberof MgtSearchResults\n   */\n  @property({\n    attribute: 'paging-max',\n    reflect: true,\n    type: Number\n  })\n  public pagingMax = 7;\n\n  /**\n   * Sets whether the result thumbnail should be fetched\n   * from the Microsoft Graph\n   *\n   * @type {boolean}\n   * @memberof MgtSearchResults\n   */\n  @property({\n    attribute: 'fetch-thumbnail',\n    type: Boolean\n  })\n  public fetchThumbnail: boolean;\n\n  /**\n   * Contains the fields to be returned for each resource\n   *\n   * @type {string[]}\n   * @memberof MgtSearchResults\n   */\n  @property({\n    attribute: 'fields',\n    converter: value => {\n      return value.split(',').map(v => v.trim());\n    },\n    type: String\n  })\n  public fields: string[];\n\n  /**\n   * This triggers hybrid sort for messages : the first 3 messages are the most relevant.\n   * This property is only applicable to entityType=message\n   *\n   * @type {boolean}\n   * @memberof MgtSearchResults\n   */\n  @property({\n    attribute: 'enable-top-results',\n    reflect: true,\n    type: Boolean\n  })\n  public enableTopResults = false;\n\n  /**\n   * Enables cache on the response from the specified resource\n   * default = false\n   *\n   * @type {boolean}\n   * @memberof MgtSearchResults\n   */\n  @property({\n    attribute: 'cache-enabled',\n    reflect: true,\n    type: Boolean\n  })\n  public cacheEnabled = false;\n\n  /**\n   * Invalidation period of the cache for the responses in milliseconds\n   *\n   * @type {number}\n   * @memberof MgtSearchResults\n   */\n  @property({\n    attribute: 'cache-invalidation-period',\n    reflect: true,\n    type: Number\n  })\n  public cacheInvalidationPeriod = 30000;\n\n  /**\n   * Gets or sets the response of the request\n   *\n   * @type any\n   * @memberof MgtSearchResults\n   */\n  @state() private response: SearchResponseCollection;\n\n  private isRefreshing = false;\n  private get searchEndpoint() {\n    return '/search/query';\n  }\n  private get maxPageSize() {\n    return 1000;\n  }\n  private readonly defaultFields: string[] = [\n    'webUrl',\n    'lastModifiedBy',\n    'lastModifiedDateTime',\n    'summary',\n    'displayName',\n    'name'\n  ];\n\n  @property({ attribute: false })\n  public currentPage = 1;\n\n  constructor() {\n    super();\n  }\n\n  protected args(): unknown[] {\n    return [\n      this.providerState,\n      this.queryString,\n      this.queryTemplate,\n      this.entityTypes,\n      this.contentSources,\n      this.scopes,\n      this.version,\n      this.size,\n      this.fetchThumbnail,\n      this.fields,\n      this.enableTopResults,\n      this.currentPage\n    ];\n  }\n\n  /**\n   * Refresh the data\n   *\n   * @param {boolean} [hardRefresh=false]\n   * if false (default), the component will only update if the data changed\n   * if true, the data will be first cleared and reloaded completely\n   * @memberof MgtSearchResults\n   */\n  public refresh(hardRefresh = false) {\n    this.isRefreshing = true;\n    if (hardRefresh) {\n      this.clearState();\n    }\n    void this._task.run();\n  }\n\n  /**\n   * Clears state of the component\n   *\n   * @protected\n   * @memberof MgtSearchResults\n   */\n  protected clearState(): void {\n    this.response = null;\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method must return\n   * a lit-html TemplateResult. Setting properties inside this method will *not*\n   * trigger the element to update.\n   */\n  protected renderContent = (): TemplateResult => {\n    let renderedTemplate: TemplateResult = null;\n    let headerTemplate: TemplateResult = null;\n    let footerTemplate: TemplateResult = null;\n\n    if (this.hasTemplate('header')) {\n      headerTemplate = this.renderTemplate('header', this.response);\n    }\n\n    footerTemplate = this.renderFooter(this.response?.value[0]?.hitsContainers[0]);\n\n    if (this.response && this.hasTemplate('default')) {\n      renderedTemplate = this.renderTemplate('default', this.response) || html``;\n    } else if (this.response?.value[0]?.hitsContainers[0]) {\n      renderedTemplate = html`${this.response?.value[0]?.hitsContainers[0]?.hits?.map(result =>\n        this.renderResult(result)\n      )}`;\n    } else if (this.hasTemplate('no-data')) {\n      renderedTemplate = this.renderTemplate('no-data', null);\n    } else {\n      renderedTemplate = html``;\n    }\n\n    return html`\n      ${headerTemplate}\n      <div class=\"search-results\">\n        ${renderedTemplate}\n      </div>\n      ${footerTemplate}`;\n  };\n\n  /**\n   * load state into the component.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtSearchResults\n   */\n  protected async loadState() {\n    const provider = Providers.globalProvider;\n\n    this.error = null;\n\n    if (!provider || provider.state !== ProviderState.SignedIn) {\n      return;\n    }\n\n    if (this.queryString) {\n      try {\n        const requestOptions = this.getRequestOptions();\n\n        let cache: CacheStore<CacheResponse>;\n        const key = JSON.stringify({\n          endpoint: `${this.version}${this.searchEndpoint}`,\n          requestOptions\n        });\n        let response: SearchResponseCollection = null;\n\n        if (this.shouldRetrieveCache()) {\n          cache = CacheService.getCache<CacheResponse>(schemas.search, schemas.search.stores.responses);\n          const result: CacheResponse = getIsResponseCacheEnabled() ? await cache.getValue(key) : null;\n          if (result && getResponseInvalidationTime(this.cacheInvalidationPeriod) > Date.now() - result.timeCached) {\n            response = JSON.parse(result.response) as SearchResponseCollection;\n          }\n        }\n\n        if (!response) {\n          const graph = provider.graph.forComponent(this);\n          let request = graph.api(this.searchEndpoint).version(this.version);\n\n          if (this.scopes?.length) {\n            request = request.middlewareOptions(prepScopes(this.scopes));\n          }\n\n          response = (await request.post({ requests: [requestOptions] })) as SearchResponseCollection;\n\n          if (this.fetchThumbnail) {\n            const thumbnailBatch = graph.createBatch<BinaryThumbnail>();\n            const thumbnailBatchBeta = BetaGraph.fromGraph(graph).createBatch<BinaryThumbnail>();\n\n            const hits =\n              response.value?.length && response.value[0].hitsContainers?.length\n                ? response.value[0].hitsContainers[0]?.hits ?? []\n                : [];\n            for (const element of hits) {\n              const resource = element.resource as SearchResource;\n              if (\n                (resource.size > 0 || resource.webUrl?.endsWith('.aspx')) &&\n                (resource['@odata.type'] === '#microsoft.graph.driveItem' ||\n                  resource['@odata.type'] === '#microsoft.graph.listItem')\n              ) {\n                if (resource['@odata.type'] === '#microsoft.graph.listItem') {\n                  thumbnailBatchBeta.get(\n                    element.hitId.toString(),\n                    `/sites/${resource.parentReference.siteId}/pages/${resource.id}`\n                  );\n                } else {\n                  thumbnailBatch.get(\n                    element.hitId.toString(),\n                    `/drives/${resource.parentReference.driveId}/items/${resource.id}/thumbnails/0/medium`\n                  );\n                }\n              }\n            }\n\n            /**\n             * Based on the batch response, augment the search result resource with the thumbnail url\n             *\n             * @param thumbnailResponse\n             */\n            const augmentResponse = (thumbnailResponse: Map<string, BatchResponse<BinaryThumbnail>>) => {\n              if (thumbnailResponse && thumbnailResponse.size > 0) {\n                for (const [k, value] of thumbnailResponse) {\n                  const result: SearchHit = response.value[0].hitsContainers[0].hits[k] as SearchHit;\n                  const thumbnail: Thumbnail =\n                    result.resource['@odata.type'] === '#microsoft.graph.listItem'\n                      ? { url: value.content.thumbnailWebUrl }\n                      : { url: value.content.url };\n                  (result.resource as SearchResource).thumbnail = thumbnail;\n                }\n              }\n            };\n\n            try {\n              augmentResponse(await thumbnailBatch.executeAll());\n              augmentResponse(await thumbnailBatchBeta.executeAll());\n            } catch {\n              // no-op\n            }\n          }\n\n          if (this.shouldUpdateCache() && response) {\n            cache = CacheService.getCache<CacheResponse>(schemas.search, schemas.search.stores.responses);\n            await cache.putValue(key, { response: JSON.stringify(response) });\n          }\n        }\n\n        if (!equals(this.response, response)) {\n          this.response = response;\n        }\n      } catch (e: unknown) {\n        this.error = e as Error;\n      }\n\n      if (this.response) {\n        this.error = null;\n      }\n    } else {\n      this.response = null;\n    }\n    this.isRefreshing = false;\n    this.fireCustomEvent('dataChange', { response: this.response, error: this.error as Error });\n  }\n\n  /**\n   * Render the loading state.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtSearchResults\n   */\n  protected readonly renderLoading = (): TemplateResult => {\n    return (\n      this.renderTemplate('loading', null) ||\n      // creates an array of n items where n is the current max number of results, this builds a shimmer for that many results\n      html`\n        ${[...Array<number>(this.size)].map(() => {\n          return html`\n            <div class=\"search-result\">\n              <div class=\"search-result-grid\">\n                <div class=\"search-result-icon\">\n                  <fluent-skeleton class=\"search-result-icon__shimmer\" shape=\"rect\" shimmer></fluent-skeleton>\n                </div>\n                <div class=\"searc-result-content\">\n                  <div class=\"search-result-name\">\n                    <fluent-skeleton class=\"search-result-name__shimmer\" shape=\"rect\" shimmer></fluent-skeleton>\n                  </div>\n                  <div class=\"search-result-info\">\n                    <div class=\"search-result-author\">\n                      <fluent-skeleton class=\"search-result-author__shimmer\" shape=\"circle\" shimmer></fluent-skeleton>\n                    </div>\n                    <div class=\"search-result-date\">\n                      <fluent-skeleton class=\"search-result-date__shimmer\" shape=\"rect\" shimmer></fluent-skeleton>\n                    </div>\n                  </div>\n                  <fluent-skeleton class=\"search-result-content__shimmer\" shape=\"rect\" shimmer></fluent-skeleton>\n                  <fluent-skeleton class=\"search-result-content__shimmer\" shape=\"rect\" shimmer></fluent-skeleton>\n                </div>\n                ${\n                  this.fetchThumbnail &&\n                  html`\n                    <div class=\"search-result-thumbnail\">\n                      <fluent-skeleton class=\"search-result-thumbnail__shimmer\" shape=\"rect\" shimmer></fluent-skeleton>\n                    </div>\n                  `\n                }\n              </div>\n              <fluent-divider></fluent-divider>\n            </div>\n          `;\n        })}\n       `\n    );\n  };\n\n  /**\n   * Render the result item.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtSearchResults\n   */\n  protected renderResult(result: SearchHit): TemplateResult {\n    const type = this.getResourceType(result.resource);\n    if (this.hasTemplate(`result-${type}`)) {\n      return this.renderTemplate(`result-${type}`, result, result.hitId);\n    } else {\n      switch (result.resource['@odata.type']) {\n        case '#microsoft.graph.driveItem':\n          return this.renderDriveItem(result);\n        case '#microsoft.graph.site':\n          return this.renderSite(result);\n        case '#microsoft.graph.person':\n          return this.renderPerson(result);\n        case '#microsoft.graph.drive':\n        case '#microsoft.graph.list':\n          return this.renderList(result);\n        case '#microsoft.graph.listItem':\n          return this.renderListItem(result);\n        case '#microsoft.graph.search.bookmark':\n          return this.renderBookmark(result);\n        case '#microsoft.graph.search.acronym':\n          return this.renderAcronym(result);\n        case '#microsoft.graph.search.qna':\n          return this.renderQnA(result);\n        default:\n          return this.renderDefault(result);\n      }\n    }\n  }\n\n  /**\n   * Renders the footer with pages if required\n   *\n   * @param hitsContainer Search results\n   */\n  private renderFooter(hitsContainer: SearchHitsContainer) {\n    if (this.pagingRequired(hitsContainer)) {\n      const pages = this.getActivePages(hitsContainer.total);\n\n      return html`\n        <div class=\"search-results-pages\">\n          ${this.renderPreviousPage()}\n          ${this.renderFirstPage(pages)}\n          ${this.renderAllPages(pages)}\n          ${this.renderNextPage()}\n        </div>\n      `;\n    }\n  }\n\n  /**\n   * Validates if paging is required based on the provided results\n   *\n   * @param hitsContainer\n   */\n  private pagingRequired(hitsContainer: SearchHitsContainer) {\n    return hitsContainer?.moreResultsAvailable || this.currentPage * this.size < hitsContainer?.total;\n  }\n\n  /**\n   * Gets a list of active pages to render for paging purposes\n   *\n   * @param totalResults Total number of results of the search query\n   */\n  private getActivePages(totalResults: number) {\n    const getFirstPage = () => {\n      const medianPage = this.currentPage - Math.floor(this.pagingMax / 2) - 1;\n\n      if (medianPage >= Math.floor(this.pagingMax / 2)) {\n        return medianPage;\n      } else {\n        return 0;\n      }\n    };\n\n    const pages: number[] = [];\n    const firstPage = getFirstPage();\n\n    if (firstPage + 1 > this.pagingMax - this.currentPage || this.pagingMax === this.currentPage) {\n      for (\n        let i = firstPage + 1;\n        i < Math.ceil(totalResults / this.size) &&\n        i < this.pagingMax + (this.currentPage - 1) &&\n        pages.length < this.pagingMax - 2;\n        ++i\n      ) {\n        pages.push(i + 1);\n      }\n    } else {\n      for (let i = firstPage; i < this.pagingMax; ++i) {\n        pages.push(i + 1);\n      }\n    }\n\n    return pages;\n  }\n\n  /**\n   * Renders all sequential pages buttons\n   *\n   * @param pages\n   */\n  private renderAllPages(pages: number[]) {\n    return html`\n      ${pages.map(\n        page =>\n          html`\n            <fluent-button\n              title=\"${strings.page} ${page}\"\n              appearance=\"stealth\"\n              class=\"${page === this.currentPage ? 'search-results-page-active' : 'search-results-page'}\"\n              @click=\"${() => this.onPageClick(page)}\">\n                ${page}\n            </fluent-button>`\n      )}`;\n  }\n\n  /**\n   * Renders the \"First page\" button\n   *\n   * @param pages\n   */\n  private renderFirstPage(pages: number[]) {\n    return html`\n      ${\n        pages.some(page => page === 1)\n          ? nothing\n          : html`\n              <fluent-button\n                 title=\"${strings.page} 1\"\n                 appearance=\"stealth\"\n                 class=\"search-results-page\"\n                 @click=\"${this.onFirstPageClick}\">\n                 1\n               </fluent-button>`\n          ? html`\n              <fluent-button\n                id=\"page-back-dot\"\n                appearance=\"stealth\"\n                class=\"search-results-page\"\n                title=\"${this.getDotButtonTitle()}\"\n                @click=\"${() => this.onPageClick(this.currentPage - Math.ceil(this.pagingMax / 2))}\"\n              >\n                ...\n              </fluent-button>`\n          : nothing\n      }`;\n  }\n\n  /**\n   * Constructs the \"dot dot dot\" button title\n   */\n  private getDotButtonTitle() {\n    return `${strings.back} ${Math.ceil(this.pagingMax / 2)} ${strings.pages}`;\n  }\n\n  /**\n   * Renders the \"Previous page\" button\n   */\n  private renderPreviousPage() {\n    return this.currentPage > 1\n      ? html`\n          <fluent-button\n            appearance=\"stealth\"\n            class=\"search-results-page\"\n            title=\"${strings.back}\"\n            @click=\"${this.onPageBackClick}\">\n              ${getSvg(SvgIcon.ChevronLeft)}\n            </fluent-button>`\n      : nothing;\n  }\n\n  /**\n   * Renders the \"Next page\" button\n   */\n  private renderNextPage() {\n    return !this.isLastPage()\n      ? html`\n          <fluent-button\n            appearance=\"stealth\"\n            class=\"search-results-page\"\n            title=\"${strings.next}\"\n            aria-label=\"${strings.next}\"\n            @click=\"${this.onPageNextClick}\">\n              ${getSvg(SvgIcon.ChevronRight)}\n            </fluent-button>`\n      : nothing;\n  }\n\n  /**\n   * Triggers a specific page click\n   *\n   * @param pageNumber\n   */\n  private onPageClick(pageNumber: number) {\n    this.currentPage = pageNumber;\n    this.scrollToFirstResult();\n  }\n\n  /**\n   * Triggers a first page click\n   *\n   */\n  private readonly onFirstPageClick = () => {\n    this.currentPage = 1;\n    this.scrollToFirstResult();\n  };\n\n  /**\n   * Triggers a previous page click\n   */\n  private readonly onPageBackClick = () => {\n    this.currentPage--;\n    this.scrollToFirstResult();\n  };\n\n  /**\n   * Triggers a next page click\n   */\n  private readonly onPageNextClick = () => {\n    this.currentPage++;\n    this.scrollToFirstResult();\n  };\n\n  /**\n   * Validates if the current page is the last page of the collection\n   */\n  private isLastPage() {\n    return this.currentPage === Math.ceil(this.response.value[0].hitsContainers[0].total / this.size);\n  }\n\n  /**\n   * Scroll to the top of the search results\n   */\n  private scrollToFirstResult() {\n    const target = this.renderRoot.querySelector('.search-results');\n    target.scrollIntoView({\n      block: 'start',\n      behavior: 'smooth'\n    });\n  }\n\n  /**\n   * Gets the resource type (entity) of a search result\n   *\n   * @param resource\n   */\n  private getResourceType(resource: SearchResource) {\n    return resource['@odata.type'].split('.').pop();\n  }\n\n  /**\n   * Renders a driveItem entity\n   *\n   * @param result\n   */\n  private renderDriveItem(result: SearchHit) {\n    const resource = result.resource as SearchResource;\n    return mgtHtml`\n      <div class=\"search-result-grid\">\n        <div class=\"search-result-icon\">\n          <mgt-file\n            .fileDetails=\"${result.resource}\"\n            view=\"image\"\n            class=\"file-icon\">\n          </mgt-file>\n        </div>\n        <div class=\"search-result-content\">\n          <div class=\"search-result-name\">\n            <a href=\"${resource.webUrl}?Web=1\" target=\"_blank\">${trimFileExtension(resource.name)}</a>\n          </div>\n          <div class=\"search-result-info\">\n            <div class=\"search-result-author\">\n              <mgt-person\n                person-query=${resource.lastModifiedBy.user.email}\n                view=\"oneline\"\n                person-card=\"hover\"\n                show-presence=\"true\">\n              </mgt-person>\n            </div>\n            <div class=\"search-result-date\">\n              &nbsp; ${strings.modified} ${getRelativeDisplayDate(new Date(resource.lastModifiedDateTime))}\n            </div>\n          </div>\n          <div class=\"search-result-summary\" .innerHTML=\"${sanitizeSummary(result.summary)}\"></div>\n        </div>\n        ${\n          resource.thumbnail?.url &&\n          html`\n          <div class=\"search-result-thumbnail\">\n            <a href=\"${resource.webUrl}\" target=\"_blank\"><img alt=\"${resource.name}\" src=\"${resource.thumbnail?.url}\" /></a>\n          </div>`\n        }\n\n      </div>\n      <fluent-divider></fluent-divider>\n    `;\n  }\n\n  /**\n   * Renders a site entity\n   *\n   * @param result\n   * @returns\n   */\n  private renderSite(result: SearchHit): HTMLTemplateResult {\n    const resource = result.resource as SearchResource;\n    return html`\n      <div class=\"search-result-grid\">\n        <div class=\"search-result-icon\">\n          ${this.getResourceIcon(resource)}\n        </div>\n        <div class=\"searc-result-content\">\n          <div class=\"search-result-name\">\n            <a href=\"${resource.webUrl}\" target=\"_blank\">${resource.displayName}</a>\n          </div>\n          <div class=\"search-result-info\">\n            <div class=\"search-result-url\">\n              <a href=\"${resource.webUrl}\" target=\"_blank\">${resource.webUrl}</a>\n            </div>\n          </div>\n          <div class=\"search-result-summary\" .innerHTML=\"${sanitizeSummary(result.summary)}\"></div>\n        </div>\n      </div>\n      <fluent-divider></fluent-divider>\n    `;\n  }\n\n  /**\n   * Renders a list entity\n   *\n   * @param result\n   * @returns\n   */\n  private renderList(result: SearchHit): HTMLTemplateResult {\n    const resource = result.resource as SearchResource;\n    return mgtHtml`\n      <div class=\"search-result-grid\">\n        <div class=\"search-result-icon\">\n          <mgt-file\n            .fileDetails=\"${result.resource}\"\n            view=\"image\">\n          </mgt-file>\n        </div>\n        <div class=\"search-result-content\">\n          <div class=\"search-result-name\">\n            <a href=\"${resource.webUrl}?Web=1\" target=\"_blank\">\n              ${trimFileExtension(resource.name || getNameFromUrl(resource.webUrl))}\n            </a>\n          </div>\n          <div class=\"search-result-summary\" .innerHTML=\"${sanitizeSummary(result.summary)}\"></div>\n        </div>\n      </div>\n      <fluent-divider></fluent-divider>\n    `;\n  }\n\n  /**\n   * Renders a listItem entity\n   *\n   * @param result\n   * @returns\n   */\n  private renderListItem(result: SearchHit): HTMLTemplateResult {\n    const resource = result.resource as SearchResource;\n    return mgtHtml`\n      <div class=\"search-result-grid\">\n        <div class=\"search-result-icon\">\n          ${resource.webUrl.endsWith('.aspx') ? getSvg(SvgIcon.News) : getSvg(SvgIcon.FileOuter)}\n        </div>\n        <div class=\"search-result-content\">\n          <div class=\"search-result-name\">\n            <a href=\"${resource.webUrl}?Web=1\" target=\"_blank\">\n              ${trimFileExtension(resource.name || getNameFromUrl(resource.webUrl))}\n            </a>\n          </div>\n          <div class=\"search-result-info\">\n            <div class=\"search-result-author\">\n              <mgt-person\n                person-query=${resource.lastModifiedBy.user.email}\n                view=\"oneline\"\n                person-card=\"hover\"\n                show-presence=\"true\">\n              </mgt-person>\n            </div>\n            <div class=\"search-result-date\">\n              &nbsp; ${strings.modified} ${getRelativeDisplayDate(new Date(resource.lastModifiedDateTime))}\n            </div>\n          </div>\n          <div class=\"search-result-summary\" .innerHTML=\"${sanitizeSummary(result.summary)}\"></div>\n        </div>\n        ${\n          resource.thumbnail?.url &&\n          html`\n          <div class=\"search-result-thumbnail\">\n            <a href=\"${resource.webUrl}\" target=\"_blank\"><img alt=\"${trimFileExtension(\n              resource.name || getNameFromUrl(resource.webUrl)\n            )}\" src=\"${resource.thumbnail?.url || nothing}\" /></a>\n          </div>`\n        }\n      </div>\n      <fluent-divider></fluent-divider>\n    `;\n  }\n\n  /**\n   * Renders a person entity\n   *\n   * @param result\n   * @returns\n   */\n  private renderPerson(result: SearchHit): HTMLTemplateResult {\n    const resource = result.resource as SearchResource;\n    return mgtHtml`\n      <div class=\"search-result\">\n        <mgt-person\n          view=\"fourlines\"\n          person-query=${resource.userPrincipalName}\n          person-card=\"hover\"\n          show-presence=\"true\">\n        </mgt-person>\n      </div>\n      <fluent-divider></fluent-divider>\n    `;\n  }\n\n  /**\n   * Renders a bookmark entity\n   *\n   * @param result\n   */\n  private renderBookmark(result: SearchHit) {\n    return this.renderAnswer(result, SvgIcon.DoubleBookmark);\n  }\n\n  /**\n   * Renders an acronym entity\n   *\n   * @param result\n   */\n  private renderAcronym(result: SearchHit) {\n    return this.renderAnswer(result, SvgIcon.BookOpen);\n  }\n\n  /**\n   * Renders a qna entity\n   *\n   * @param result\n   */\n  private renderQnA(result: SearchHit) {\n    return this.renderAnswer(result, SvgIcon.BookQuestion);\n  }\n\n  /**\n   * Renders an answer entity\n   *\n   * @param result\n   */\n  private renderAnswer(result: SearchHit, icon: SvgIcon) {\n    const resource = result.resource as SearchResource;\n    return html`\n      <div class=\"search-result-grid search-result-answer\">\n        <div class=\"search-result-icon\">\n          ${getSvg(icon)}\n        </div>\n        <div class=\"search-result-content\">\n          <div class=\"search-result-name\">\n            <a href=\"${this.getResourceUrl(resource)}?Web=1\" target=\"_blank\">${resource.displayName}</a>\n          </div>\n          <div class=\"search-result-summary\">${resource.description}</div>\n        </div>\n      </div>\n      <fluent-divider></fluent-divider>\n    `;\n  }\n\n  /**\n   * Renders any entity\n   *\n   * @param result\n   */\n  private renderDefault(result: SearchHit) {\n    const resource = result.resource as SearchResource;\n    const resourceUrl = this.getResourceUrl(resource);\n    return html`\n      <div class=\"search-result-grid\">\n        <div class=\"search-result-icon\">\n          ${this.getResourceIcon(resource)}\n        </div>\n        <div class=\"search-result-content\">\n          <div class=\"search-result-name\">\n            ${\n              resourceUrl\n                ? html`\n                  <a href=\"${resourceUrl}?Web=1\" target=\"_blank\">${this.getResourceName(resource)}</a>\n                `\n                : html`\n                  ${this.getResourceName(resource)}\n                `\n            }\n          </div>\n          <div class=\"search-result-summary\" .innerHTML=\"${this.getResultSummary(result)}\"></div>\n        </div>\n      </div>\n      <fluent-divider></fluent-divider>\n    `;\n  }\n\n  /**\n   * Gets default resource URLs\n   *\n   * @param resource\n   */\n  private getResourceUrl(resource: SearchResource) {\n    return resource.webUrl || /* resource.url ||*/ resource.webLink || null;\n  }\n\n  /**\n   * Gets default resource Names\n   *\n   * @param resource\n   */\n  private getResourceName(resource: SearchResource) {\n    return resource.displayName || resource.subject || trimFileExtension(resource.name);\n  }\n\n  /**\n   * Gets default result summary\n   *\n   * @param resource\n   */\n  private getResultSummary(result: SearchHit) {\n    return sanitizeSummary(result.summary || (result.resource as SearchResource)?.description || null);\n  }\n\n  /**\n   * Gets default resource icon\n   *\n   * @param resource\n   */\n  private getResourceIcon(resource: SearchResource) {\n    switch (resource['@odata.type']) {\n      case '#microsoft.graph.site':\n        return getSvg(SvgIcon.Globe);\n      case '#microsoft.graph.message':\n        return getSvg(SvgIcon.Email);\n      case '#microsoft.graph.event':\n        return getSvg(SvgIcon.Event);\n      case 'microsoft.graph.chatMessage':\n        return getSvg(SvgIcon.SmallChat);\n      default:\n        return getSvg(SvgIcon.FileOuter);\n    }\n  }\n\n  /**\n   * Validates if cache should be retrieved\n   *\n   * @returns\n   */\n  private shouldRetrieveCache(): boolean {\n    return getIsResponseCacheEnabled() && this.cacheEnabled && !this.isRefreshing;\n  }\n\n  /**\n   * Validates if cache should be updated\n   *\n   * @returns\n   */\n  private shouldUpdateCache(): boolean {\n    return getIsResponseCacheEnabled() && this.cacheEnabled;\n  }\n\n  /**\n   * Builds the appropriate RequestOption for the search query\n   *\n   * @returns\n   */\n  private getRequestOptions(): SearchRequest | BetaSearchRequest {\n    const requestOptions: SearchRequest = {\n      entityTypes: this.entityTypes as EntityType[],\n      query: {\n        queryString: this.queryString\n      },\n      from: this.from ? this.from : undefined,\n      size: this.size ? this.size : undefined,\n      fields: this.getFields(),\n      enableTopResults: this.enableTopResults ? this.enableTopResults : undefined\n    };\n\n    if (this.entityTypes.includes('externalItem')) {\n      requestOptions.contentSources = this.contentSources;\n    }\n\n    if (this.version === 'beta') {\n      (requestOptions as BetaSearchRequest).query.queryTemplate = this.queryTemplate ? this.queryTemplate : undefined;\n    }\n\n    return requestOptions;\n  }\n\n  /**\n   * Gets the fields and default fields for default render methods\n   *\n   * @returns\n   */\n  private getFields(): string[] {\n    if (this.fields) {\n      return this.defaultFields.concat(this.fields);\n    }\n\n    return undefined;\n  }\n}\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { provideFluentDesignSystem } from '@fluentui/web-components';\n\n/**\n * Provides a design system to the fluent components\n */\nconst designSystem = provideFluentDesignSystem();\n\n/**\n * Registers fluent components to the design system\n *\n * @param fluentComponents array of fluent components to register\n * @returns\n */\nexport const registerFluentComponents = (...fluentComponents: (() => unknown)[]) => {\n  if (!fluentComponents?.length) {\n    return;\n  }\n\n  for (const component of fluentComponents) {\n    designSystem.register(component());\n  }\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\n/**\n * Defines icon used by svgHelper\n *\n * @export\n * @enum {number}\n */\nexport enum SvgIcon {\n  /**\n   * Arrow Icon pointing down\n   */\n  ArrowDown,\n\n  /**\n   * Icon separates team from channel in selection\n   */\n  TeamSeparator,\n\n  /**\n   * Search icon\n   */\n  Search,\n\n  /**\n   * Skype Arrow icon (out of office status)\n   */\n  SkypeArrow,\n\n  /**\n   * Smaller email icon used in top of person card\n   */\n  SmallEmail,\n\n  /**\n   * Smaller email, hovered version, icon used in top of person card\n   */\n  SmallEmailHovered,\n\n  /**\n   * Smaller chat icon used in top of person card\n   */\n  SmallChat,\n\n  /**\n   * Small chat icon, hover version, used in top of person card\n   */\n  SmallChatHovered,\n\n  /**\n   * Video icon used in top of person card\n   */\n  Video,\n\n  /**\n   * Videoicon, hovered version used in top of person card\n   */\n  VideoHovered,\n\n  /**\n   * Downward chevron\n   */\n  ExpandDown,\n\n  /**\n   * Overview icon\n   */\n  Overview,\n\n  /**\n   * Paper plane\n   */\n  Send,\n\n  /**\n   * Phone/Mail icon\n   */\n  Contact,\n\n  /**\n   * Copy to clipboard\n   */\n  Copy,\n\n  /**\n   * A phone handset\n   */\n  Phone,\n\n  /**\n   * A cellphone\n   */\n  CellPhone,\n\n  /**\n   * Chat message\n   */\n  Chat,\n\n  /**\n   * Call icon\n   */\n  Call,\n\n  /**\n   * Call icon, hovered version\n   */\n  CallHovered,\n\n  /**\n   * Confirmation icon\n   */\n  Confirmation,\n  /**\n   * Company department\n   */\n  Department,\n\n  /**\n   *\n   * Dot Icon\n   */\n  Dot,\n\n  /**\n   * Email message\n   */\n  Email,\n\n  /**\n   * Location indicator\n   */\n  OfficeLocation,\n\n  /**\n   * A person\n   */\n  Person,\n\n  /**\n   * Messages\n   */\n  Messages,\n\n  /**\n   * Organization tree\n   */\n  Organization,\n\n  /**\n   * Right facing chevron\n   */\n  ExpandRight,\n\n  /**\n   * Person profile\n   */\n  Profile,\n\n  /**\n   * Balloon\n   */\n  Birthday,\n\n  /**\n   * File icon\n   */\n  File,\n\n  /**\n   * Files icon\n   */\n  Files,\n\n  /**\n   * Back arrow\n   */\n  Back,\n\n  /**\n   * Close icon\n   */\n  Close,\n\n  /**\n   * Upload icon\n   */\n  Upload,\n\n  /**\n   * File Cloud icon\n   */\n  FileCloud,\n\n  /**\n   * Drag File Mouse Icon\n   */\n  DragFile,\n\n  /**\n   *\n   * Cancel icon\n   */\n  Cancel,\n\n  /**\n   *\n   * Checkmark icon\n   *\n   */\n  CheckMark,\n\n  /**\n   *\n   * Radio icon\n   *\n   */\n  Radio,\n\n  /**\n   *\n   * Success icon\n   */\n  Success,\n\n  /**\n   *\n   * Fail icon\n   */\n  Fail,\n\n  /**\n   *\n   * account selection\n   */\n  SelectAccount,\n\n  /**\n   * News\n   */\n  News,\n\n  /**\n   * Bookmark\n   */\n  DoubleBookmark,\n\n  /**\n   * Left chevron\n   */\n  ChevronLeft,\n\n  /**\n   * Right chevron\n   */\n  ChevronRight,\n\n  /**\n   * Event\n   */\n  Event,\n\n  /**\n   * Q&A\n   */\n  BookOpen,\n\n  /**\n   * File outer icon\n   */\n  FileOuter,\n\n  /**\n   * Book question icon\n   */\n  BookQuestion,\n\n  /**\n   * Globe icon\n   */\n  Globe,\n  /**\n   * Delete icon\n   */\n  Delete,\n\n  /**\n   *\n   * Add icon\n   */\n  Add,\n\n  /**\n   *\n   * Calendar icon\n   */\n  Calendar,\n  Planner,\n  Milestone,\n  PersonAdd,\n  PresenceAvailable,\n  PresenceOofAvailable,\n  PresenceBusy,\n  PresenceOofBusy,\n  PresenceDnd,\n  PresenceOofDnd,\n  PresenceAway,\n  PresenceOofAway,\n  PresenceOffline,\n  PresenceStatusUnknown\n}\n\nimport { html } from 'lit';\n\n/**\n * returns an svg\n *\n * @param svgIcon defined by name\n * @param color hex value\n */\nexport const getSvg = (svgIcon: SvgIcon, color?: string) => {\n  switch (svgIcon) {\n    case SvgIcon.ArrowDown:\n      return html`\n        <svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M6 9L2.46447 5.46447H6H9.53553L6 9Z\" />\n        </svg>\n      `;\n\n    case SvgIcon.TeamSeparator:\n      return html`\n        <svg width=\"6\" height=\"10\" viewBox=\"0 0 6 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            fill-rule=\"evenodd\"\n            clip-rule=\"evenodd\"\n            d=\"M5.70711 5L1.49999 9.20711L0.792886 8.50001L4.29289 5L0.792887 1.49999L1.49999 0.792885L5.70711 5Z\"\n            fill=${color}\n          />\n        </svg>\n      `;\n\n    case SvgIcon.Search:\n      return html`\n        <svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M7.30887 8.01596C6.53903 8.63179 5.56252 9.00004 4.5 9.00004C2.01472 9.00004 0 6.98531 0 4.50002C0 2.01473 2.01472 0 4.5 0C6.98528 0 9 2.01473 9 4.50002C9 5.56252 8.63177 6.53901 8.01597 7.30885L11.8536 11.1464C12.0488 11.3417 12.0488 11.6583 11.8536 11.8536C11.6583 12.0488 11.3417 12.0488 11.1464 11.8536L7.30887 8.01596ZM8 4.50002C8 2.56701 6.433 1 4.5 1C2.567 1 1 2.56701 1 4.50002C1 6.43302 2.567 8.00003 4.5 8.00003C6.433 8.00003 8 6.43302 8 4.50002Z\" fill=\"currentColor\"/>\n        </svg>`;\n\n    case SvgIcon.SkypeArrow:\n      return html`\n        <svg viewBox=\"0 0 12 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            d=\"M3.95184 0.480534C4.23385 0.10452 4.70926 -0.0724722 5.1685 0.0275755C5.62775 0.127623 5.98645 0.486329 6.0865 0.945575C6.18655 1.40482 6.00956 1.88023 5.63354 2.16224L4.07196 3.72623H10.7988C11.4622 3.72623 12 4.26403 12 4.92744C12 5.59086 11.4622 6.12866 10.7988 6.12866H4.07196L5.63114 7.68784C6.0955 8.15225 6.0955 8.90515 5.63114 9.36955C5.51655 9.48381 5.38119 9.57514 5.23234 9.63862C5.09341 9.69857 4.94399 9.73042 4.79269 9.73232C4.63498 9.73233 4.4789 9.70046 4.33382 9.63862C4.18765 9.57669 4.05593 9.48507 3.94703 9.36955L0.343377 5.7659C-0.114459 5.29881 -0.114459 4.55128 0.343377 4.08419L3.95184 0.480534Z\"\n            fill=\"#B4009E\"\n          />\n        </svg>\n      `;\n\n    case SvgIcon.SmallEmail:\n      return html`\n        <svg width=\"17\" height=\"14\" viewBox=\"0 0 17 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path class=\"filled\" d=\"M16 3.373V10.5C16 11.8807 14.8807 13 13.5 13H2.5C1.11929 13 -7.62939e-05 11.8807 -7.62939e-05 10.5V3.373L7.74649 7.93097C7.90297 8.02301 8.09704 8.02301 8.25351 7.93097L16 3.373ZM13.5 0C14.7871 0 15.847 0.972604 15.9848 2.22293L8 6.91991L0.0151832 2.22293C0.15304 0.972604 1.21294 0 2.5 0H13.5Z\" fill=\"currentColor\"/>\n          <path class=\"regular\" d=\"M13.608 0.833496C14.9887 0.833496 16.108 1.95278 16.108 3.3335V11.3335C16.108 12.7142 14.9887 13.8335 13.608 13.8335H2.60803C1.22732 13.8335 0.108032 12.7142 0.108032 11.3335V3.3335C0.108032 1.95278 1.22732 0.833496 2.60803 0.833496H13.608ZM15.108 4.7945L8.36154 8.76446C8.23115 8.84117 8.07464 8.85395 7.93554 8.80281L7.85452 8.76446L1.10803 4.7965V11.3335C1.10803 12.1619 1.77961 12.8335 2.60803 12.8335H13.608C14.4365 12.8335 15.108 12.1619 15.108 11.3335V4.7945ZM13.608 1.8335H2.60803C1.77961 1.8335 1.10803 2.50507 1.10803 3.3335V3.6355L8.10803 7.75341L15.108 3.6345V3.3335C15.108 2.50507 14.4365 1.8335 13.608 1.8335Z\" fill=\"currentColor\"/>\n        </svg>\n      `;\n\n    case SvgIcon.SmallChat:\n      return html`\n        <svg width=\"17\" height=\"17\" viewBox=\"0 0 17 17\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path class=\"filled\" d=\"M8 0C12.4183 0 16 3.58172 16 8C16 12.4183 12.4183 16 8 16C6.72679 16 5.49591 15.7018 4.38669 15.1393L4.266 15.075L0.621091 15.9851C0.311269 16.0625 0.0262241 15.8369 0.00130987 15.5438L0.00114131 15.4624L0.0149329 15.3787L0.925 11.735L0.86169 11.6153C0.406602 10.7186 0.124331 9.74223 0.0327466 8.72826L0.00737596 8.34634L0 8C0 3.58172 3.58172 0 8 0ZM8.5 9H5.5L5.41012 9.00806C5.17688 9.05039 5 9.25454 5 9.5C5 9.74546 5.17688 9.94961 5.41012 9.99194L5.5 10H8.5L8.58988 9.99194C8.82312 9.94961 9 9.74546 9 9.5C9 9.25454 8.82312 9.05039 8.58988 9.00806L8.5 9ZM10.5 6H5.5L5.41012 6.00806C5.17688 6.05039 5 6.25454 5 6.5C5 6.74546 5.17688 6.94961 5.41012 6.99194L5.5 7H10.5L10.5899 6.99194C10.8231 6.94961 11 6.74546 11 6.5C11 6.25454 10.8231 6.05039 10.5899 6.00806L10.5 6Z\" fill=\"currentColor\"/>\n          <path class=\"regular\" d=\"M8.38599 0.833496C12.8043 0.833496 16.386 4.41522 16.386 8.8335C16.386 13.2518 12.8043 16.8335 8.38599 16.8335C7.11277 16.8335 5.8819 16.5353 4.77267 15.9728L4.65199 15.9085L1.00708 16.8186C0.697255 16.8959 0.41221 16.6704 0.387296 16.3773L0.387128 16.2959L0.400919 16.2122L1.31099 12.5685L1.24768 12.4488C0.792589 11.5521 0.510317 10.5757 0.418733 9.56176L0.393362 9.17984L0.385986 8.8335C0.385986 4.41522 3.96771 0.833496 8.38599 0.833496ZM8.38599 1.8335C4.51999 1.8335 1.38599 4.9675 1.38599 8.8335C1.38599 10.0505 1.69653 11.2213 2.27951 12.2584C2.32645 12.3419 2.34809 12.4365 2.34291 12.5308L2.32873 12.6247L1.57299 15.6455L4.59703 14.8918C4.65892 14.8764 4.72261 14.8731 4.78472 14.8814L4.87629 14.9026L4.963 14.941C5.9996 15.5233 7.16969 15.8335 8.38599 15.8335C12.252 15.8335 15.386 12.6995 15.386 8.8335C15.386 4.9675 12.252 1.8335 8.38599 1.8335ZM8.88599 9.8335C9.16213 9.8335 9.38599 10.0574 9.38599 10.3335C9.38599 10.579 9.20911 10.7831 8.97586 10.8254L8.88599 10.8335H5.88599C5.60984 10.8335 5.38599 10.6096 5.38599 10.3335C5.38599 10.088 5.56286 9.88389 5.79611 9.84155L5.88599 9.8335H8.88599ZM10.886 6.8335C11.1621 6.8335 11.386 7.05735 11.386 7.3335C11.386 7.57896 11.2091 7.7831 10.9759 7.82544L10.886 7.8335L5.88599 7.8335C5.60984 7.8335 5.38599 7.60964 5.38599 7.3335C5.38599 7.08804 5.56286 6.88389 5.79611 6.84155L5.88599 6.8335L10.886 6.8335Z\" fill=\"currentColor\"/>\n        </svg>\n      `;\n\n    case SvgIcon.Video:\n      return html`\n        <svg width=\"17\" height=\"13\" viewBox=\"0 0 17 13\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path class=\"filled\" d=\"M11 2.5C11 1.11929 9.88071 0 8.5 0H2.5C1.11929 0 0 1.11929 0 2.5V9.5C0 10.8807 1.11929 12 2.5 12H8.5C9.88071 12 11 10.8807 11 9.5V2.5ZM12 3.93082V8.08149L14.7642 10.4319C15.2512 10.8461 16 10.4999 16 9.86055V2.19315C16 1.55685 15.2575 1.20962 14.7692 1.61756L12 3.93082Z\" fill=\"currentColor\"/>\n          <path class=\"regular\" d=\"M2.72095 0.833496C1.34024 0.833496 0.220947 1.95278 0.220947 3.3335V10.3335C0.220947 11.7142 1.34024 12.8335 2.72095 12.8335H9.72095C11.1017 12.8335 12.2209 11.7142 12.2209 10.3335V9.33348L14.6209 11.1335C15.2802 11.6279 16.2209 11.1575 16.2209 10.3335V3.33348C16.2209 2.50944 15.2802 2.03905 14.6209 2.53348L12.2209 4.33348V3.3335C12.2209 1.95278 11.1017 0.833496 9.72095 0.833496H2.72095ZM12.2209 5.58348L15.2209 3.33348V10.3335L12.2209 8.08348V5.58348ZM11.2209 3.3335V10.3335C11.2209 11.1619 10.5494 11.8335 9.72095 11.8335H2.72095C1.89252 11.8335 1.22095 11.1619 1.22095 10.3335V3.3335C1.22095 2.50507 1.89252 1.8335 2.72095 1.8335H9.72095C10.5494 1.8335 11.2209 2.50507 11.2209 3.3335Z\" fill=\"currentColor\"/>\n        </svg>\n      `;\n\n    case SvgIcon.ExpandDown: {\n      return html`\n        <svg width=\"15\" height=\"8\" viewBox=\"0 0 15 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M14 1L7.5 7L1 1\" stroke=\"currentColor\" />\n        </svg>\n      `;\n    }\n\n    case SvgIcon.Overview:\n      return html`\n        <svg width=\"16\" height=\"13\" viewBox=\"0 0 16 13\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M3.5 10.5C2.67157 10.5 2 9.82843 2 9V4C2 3.17157 2.67157 2.5 3.5 2.5H12.5C13.3284 2.5 14 3.17157 14 4V9C14 9.82843 13.3284 10.5 12.5 10.5H3.5ZM3.5 3.5C3.22386 3.5 3 3.72386 3 4V5.5H13V4C13 3.72386 12.7761 3.5 12.5 3.5H3.5ZM5 6.5H3V9C3 9.27614 3.22386 9.5 3.5 9.5H5V6.5ZM6 9.5H12.5C12.7761 9.5 13 9.27614 13 9V6.5H6V9.5ZM0 3C0 1.61929 1.11929 0.5 2.5 0.5H13.5C14.8807 0.5 16 1.61929 16 3V10C16 11.3807 14.8807 12.5 13.5 12.5H2.5C1.11929 12.5 0 11.3807 0 10V3ZM2.5 1.5C1.67157 1.5 1 2.17157 1 3V10C1 10.8284 1.67157 11.5 2.5 11.5H13.5C14.3284 11.5 15 10.8284 15 10V3C15 2.17157 14.3284 1.5 13.5 1.5H2.5Z\" fill=\"#717171\"/>\n        </svg>\n      `;\n\n    case SvgIcon.Send:\n      return html`\n        <svg xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            d=\"M4.27144 8.99999L1.72572 2.45387C1.54854 1.99826 1.9928 1.56256 2.43227 1.71743L2.50153 1.74688L16.0015 8.49688C16.3902 8.69122 16.4145 9.22336 16.0744 9.45992L16.0015 9.50311L2.50153 16.2531C2.0643 16.4717 1.58932 16.0697 1.70282 15.6178L1.72572 15.5461L4.27144 8.99999L1.72572 2.45387L4.27144 8.99999ZM3.3028 3.4053L5.25954 8.43705L10.2302 8.43749C10.515 8.43749 10.7503 8.64911 10.7876 8.92367L10.7927 8.99999C10.7927 9.28476 10.5811 9.52011 10.3065 9.55736L10.2302 9.56249L5.25954 9.56205L3.3028 14.5947L14.4922 8.99999L3.3028 3.4053Z\"\n          />\n        </svg>\n      `;\n\n    case SvgIcon.Contact:\n      return html`\n        <svg width=\"16\" height=\"12\" viewBox=\"0 0 16 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M6 4.5C6 5.32843 5.32843 6 4.5 6C3.67157 6 3 5.32843 3 4.5C3 3.67157 3.67157 3 4.5 3C5.32843 3 6 3.67157 6 4.5ZM2 7.69879C2 7.17479 2.42479 6.75 2.94879 6.75H6.05121C6.57521 6.75 7 7.17479 7 7.69879C7 8.54603 6.42338 9.28454 5.60144 9.49003L5.54243 9.50478C4.85801 9.67589 4.14199 9.67589 3.45757 9.50478L3.39856 9.49003C2.57661 9.28454 2 8.54603 2 7.69879ZM9.5 4C9.22386 4 9 4.22386 9 4.5C9 4.77614 9.22386 5 9.5 5H12.5C12.7761 5 13 4.77614 13 4.5C13 4.22386 12.7761 4 12.5 4H9.5ZM9.5 7C9.22386 7 9 7.22386 9 7.5C9 7.77614 9.22386 8 9.5 8H12.5C12.7761 8 13 7.77614 13 7.5C13 7.22386 12.7761 7 12.5 7H9.5ZM0 1.75C0 0.783502 0.783502 0 1.75 0H14.25C15.2165 0 16 0.783502 16 1.75V10.25C16 11.2165 15.2165 12 14.25 12H1.75C0.783501 12 0 11.2165 0 10.25V1.75ZM1.75 1C1.33579 1 1 1.33579 1 1.75V10.25C1 10.6642 1.33579 11 1.75 11H14.25C14.6642 11 15 10.6642 15 10.25V1.75C15 1.33579 14.6642 1 14.25 1H1.75Z\" fill=\"#717171\"/>\n        </svg>\n      `;\n\n    case SvgIcon.Call:\n      return html`\n        <svg width=\"13\" height=\"17\" viewBox=\"0 0 13 17\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path class=\"filled\" d=\"M3.98706 1.06589C4.89545 0.792081 5.86254 1.19479 6.31418 2.01224L6.38841 2.16075L7.04987 3.63213C7.46246 4.54992 7.28209 5.61908 6.60754 6.3496L6.47529 6.48248L5.43194 7.45541C5.24417 7.63298 5.38512 8.32181 6.06527 9.49986C6.67716 10.5597 7.17487 11.0552 7.41986 11.0823L7.4628 11.082L7.5158 11.0716L9.56651 10.4446C10.1332 10.2713 10.7438 10.4487 11.1298 10.8865L11.2215 11.0014L12.5781 12.8815C13.1299 13.6462 13.0689 14.6842 12.4533 15.378L12.3314 15.5039L11.7886 16.018C10.7948 16.9592 9.34348 17.2346 8.07389 16.7231C6.13867 15.9433 4.38077 14.1607 2.78368 11.3945C1.18323 8.62242 0.519004 6.20438 0.815977 4.13565C0.99977 2.85539 1.87301 1.78674 3.07748 1.3462L3.27036 1.28192L3.98706 1.06589Z\" fill=\"currentColor\"/>\n          <path class=\"regular\" d=\"M3.9292 0.399388L3.2125 0.615419C1.90898 1.00834 0.951582 2.1215 0.758116 3.46915C0.461142 5.53787 1.12537 7.95591 2.72582 10.728C4.32291 13.4942 6.0808 15.2768 8.01603 16.0565C9.28562 16.5681 10.7369 16.2927 11.7308 15.3515L12.2736 14.8374C13.0011 14.1485 13.1065 13.0275 12.5202 12.215L11.1636 10.3349C10.788 9.81423 10.1226 9.59039 9.50865 9.7781L7.45794 10.4051L7.40494 10.4154C7.17877 10.4485 6.65754 9.95942 6.00741 8.83335C5.32726 7.65531 5.1863 6.96648 5.37408 6.7889L6.41743 5.81598C7.19937 5.08681 7.43039 3.94078 6.99201 2.96562L6.33055 1.49424C5.91866 0.578005 4.89102 0.109471 3.9292 0.399388ZM5.41847 1.90427L6.07993 3.37564C6.34277 3.96031 6.20426 4.64744 5.73543 5.08463L4.68953 6.05994C4.02044 6.69268 4.24206 7.77567 5.14138 9.33335C5.98759 10.799 6.75958 11.5233 7.58908 11.3977L7.71341 11.3711L9.80102 10.7344C10.0057 10.6718 10.2275 10.7464 10.3527 10.92L11.7093 12.8001C12.0024 13.2064 11.9497 13.7669 11.586 14.1113L11.0432 14.6254C10.3333 15.2977 9.29663 15.4944 8.38977 15.129C6.6917 14.4448 5.08689 12.8175 3.59185 10.228C2.09375 7.63319 1.48745 5.42604 1.74797 3.61125C1.88616 2.64864 2.57001 1.85352 3.5011 1.57287L4.2178 1.35684C4.69871 1.21188 5.21253 1.44615 5.41847 1.90427Z\" fill=\"currentColor\"/>\n        </svg>\n      `;\n\n    case SvgIcon.Confirmation:\n      return html`\n      <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M7.03212 13.9072L3.56056 10.0017C3.28538 9.69214 2.81132 9.66425 2.50174 9.93944C2.19215 10.2146 2.16426 10.6887 2.43945 10.9983L6.43945 15.4983C6.72614 15.8208 7.2252 15.8355 7.53034 15.5303L18.0303 5.03033C18.3232 4.73744 18.3232 4.26256 18.0303 3.96967C17.7374 3.67678 17.2626 3.67678 16.9697 3.96967L7.03212 13.9072Z\" fill=\"#009E00\"/>\n      </svg>\n      `;\n\n    case SvgIcon.Copy:\n      return html`\n        <svg width=\"13\" height=\"14\" viewBox=\"0 0 13 14\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            d=\"M12.625 5.50293V14H3.875V11.375H0.375V0H6.24707L8.87207 2.625H9.74707L12.625 5.50293ZM10 5.25H11.1279L10 4.12207V5.25ZM3.875 2.625H7.62793L5.87793 0.875H1.25V10.5H3.875V2.625ZM11.75 6.125H9.125V3.5H4.75V13.125H11.75V6.125Z\"\n          />\n        </svg>\n      `;\n\n    case SvgIcon.Phone:\n      return html`\n        <svg width=\"15\" height=\"15\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 2048 2048\" fill=\"none\">\n            <path d=\"M1607 1213q44 0 84 16t72 48l220 220q31 31 47 71t17 85q0 44-16 84t-48 72l-14 14q-54 54-99 96t-94 70-109 44-143 15q-125 0-257-39t-262-108-256-164-237-207-206-238-162-256T38 775 0 523q0-83 14-142t43-108 70-93 96-99l16-16q31-31 71-48t85-17q44 0 84 17t72 48l220 220q31 31 47 71t17 85q0 44-15 78t-37 63-48 51-49 45-37 44-15 49q0 38 27 65l551 551q27 27 65 27 26 0 48-15t45-37 45-48 51-49 62-37 79-15zm-83 707q72 0 120-13t88-39 76-64 85-86q27-27 27-65 0-18-14-42t-38-52-51-55-56-54-51-47-37-35q-27-27-66-27-26 0-48 15t-44 37-45 48-52 49-62 37-79 15q-44 0-84-16t-72-48L570 927q-31-31-47-71t-17-85q0-44 15-78t37-63 48-51 49-46 37-44 15-48q0-39-27-66-13-13-34-36t-47-51-54-56-56-52-51-37-43-15q-38 0-65 27l-85 85q-37 37-64 76t-40 87-14 120q0 112 36 231t101 238 153 234 192 219 219 190 234 150 236 99 226 36z\" fill=\"${color}\"></path>\n        </svg>\n      `;\n\n    case SvgIcon.CellPhone:\n      return html`\n        <svg width=\"10\" height=\"16\" viewBox=\"0 0 10 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M4 12C3.72386 12 3.5 12.2239 3.5 12.5C3.5 12.7761 3.72386 13 4 13H6C6.27614 13 6.5 12.7761 6.5 12.5C6.5 12.2239 6.27614 12 6 12H4ZM2 0C0.89543 0 0 0.895431 0 2V14C0 15.1046 0.895431 16 2 16H8C9.10457 16 10 15.1046 10 14V2C10 0.89543 9.10457 0 8 0H2ZM1 2C1 1.44772 1.44772 1 2 1H8C8.55228 1 9 1.44772 9 2V14C9 14.5523 8.55228 15 8 15H2C1.44772 15 1 14.5523 1 14V2Z\" fill=\"#717171\"/>\n        </svg>\n      `;\n\n    case SvgIcon.Chat:\n      return html`\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M8 0C12.4183 0 16 3.58172 16 8C16 12.4183 12.4183 16 8 16C6.72679 16 5.49591 15.7018 4.38669 15.1393L4.266 15.075L0.621091 15.9851C0.311269 16.0625 0.0262241 15.8369 0.00130987 15.5438L0.00114131 15.4624L0.0149329 15.3787L0.925 11.735L0.86169 11.6153C0.406602 10.7186 0.124331 9.74223 0.0327466 8.72826L0.00737596 8.34634L0 8C0 3.58172 3.58172 0 8 0ZM8 1C4.13401 1 1 4.13401 1 8C1 9.21704 1.31054 10.3878 1.89352 11.4249C1.94046 11.5084 1.9621 11.603 1.95692 11.6973L1.94274 11.7912L1.187 14.812L4.21104 14.0583C4.27294 14.0429 4.33662 14.0396 4.39873 14.0479L4.4903 14.0691L4.57701 14.1075C5.61362 14.6898 6.7837 15 8 15C11.866 15 15 11.866 15 8C15 4.13401 11.866 1 8 1ZM8.5 9C8.77614 9 9 9.22386 9 9.5C9 9.74546 8.82312 9.94961 8.58988 9.99194L8.5 10H5.5C5.22386 10 5 9.77614 5 9.5C5 9.25454 5.17688 9.05039 5.41012 9.00806L5.5 9H8.5ZM10.5 6C10.7761 6 11 6.22386 11 6.5C11 6.74546 10.8231 6.94961 10.5899 6.99194L10.5 7L5.5 7C5.22386 7 5 6.77614 5 6.5C5 6.25454 5.17688 6.05039 5.41012 6.00806L5.5 6L10.5 6Z\" fill=\"#717171\"/>\n        </svg>\n      `;\n\n    case SvgIcon.Department:\n      return html`\n        <svg width=\"17\" height=\"14\" viewBox=\"0 0 17 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M4 1.5V3H2C0.895431 3 0 3.89543 0 5V12C0 13.1046 0.895432 14 2 14H14.0026C15.1071 14 16.0026 13.1046 16.0026 12V5C16.0026 3.89543 15.1071 3 14.0026 3H12V1.5C12 0.671573 11.3284 0 10.5 0H5.5C4.67157 0 4 0.671573 4 1.5ZM5.5 1H10.5C10.7761 1 11 1.22386 11 1.5V3H5V1.5C5 1.22386 5.22386 1 5.5 1ZM2 4H14.0026C14.5549 4 15.0026 4.44772 15.0026 5V7H12L12 6.50073C12 6.22459 11.7761 6.00073 11.5 6.00073C11.2239 6.00073 11 6.22459 11 6.50074L11 7H5V6.50073C5 6.22459 4.77614 6.00073 4.5 6.00073C4.22386 6.00073 4 6.22459 4 6.50073V7H1V5C1 4.44772 1.44772 4 2 4ZM11 8L11 8.5C11 8.77615 11.2239 9 11.5 9C11.7762 9 12 8.77614 12 8.5L12 8H15.0026V12C15.0026 12.5523 14.5549 13 14.0026 13H2C1.44772 13 1 12.5523 1 12V8H4V8.5C4 8.77614 4.22386 9 4.5 9C4.77614 9 5 8.77614 5 8.5V8H11Z\" fill=\"#717171\"/>\n        </svg>\n      `;\n\n    case SvgIcon.Dot:\n      return html`\n        <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M6.25 10C6.25 10.6904 5.69036 11.25 5 11.25C4.30964 11.25 3.75 10.6904 3.75 10C3.75 9.30964 4.30964 8.75 5 8.75C5.69036 8.75 6.25 9.30964 6.25 10ZM11.25 10C11.25 10.6904 10.6904 11.25 10 11.25C9.30964 11.25 8.75 10.6904 8.75 10C8.75 9.30964 9.30964 8.75 10 8.75C10.6904 8.75 11.25 9.30964 11.25 10ZM15 11.25C15.6904 11.25 16.25 10.6904 16.25 10C16.25 9.30964 15.6904 8.75 15 8.75C14.3096 8.75 13.75 9.30964 13.75 10C13.75 10.6904 14.3096 11.25 15 11.25Z\" fill=\"#242424\"/>\n        </svg>\n        `;\n\n    case SvgIcon.Email:\n      return html`\n        <svg width=\"16\" height=\"13\" viewBox=\"0 0 16 13\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M13.5 0C14.8807 0 16 1.11929 16 2.5V10.5C16 11.8807 14.8807 13 13.5 13H2.5C1.11929 13 0 11.8807 0 10.5V2.5C0 1.11929 1.11929 0 2.5 0H13.5ZM15 3.961L8.25351 7.93097C8.12311 8.00767 7.96661 8.02045 7.82751 7.96932L7.74649 7.93097L1 3.963V10.5C1 11.3284 1.67157 12 2.5 12H13.5C14.3284 12 15 11.3284 15 10.5V3.961ZM13.5 1H2.5C1.67157 1 1 1.67157 1 2.5V2.802L8 6.91991L15 2.801V2.5C15 1.67157 14.3284 1 13.5 1Z\" fill=\"#717171\"/>\n        </svg>\n      `;\n\n    case SvgIcon.OfficeLocation:\n      return html`\n        <svg width=\"14\" height=\"16\" viewBox=\"0 0 14 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <title>Location icon</title>\n          <path d=\"M10 7C10 8.65685 8.65685 10 7 10C5.34315 10 4 8.65685 4 7C4 5.34315 5.34315 4 7 4C8.65685 4 10 5.34315 10 7ZM9 7C9 5.89543 8.10457 5 7 5C5.89543 5 5 5.89543 5 7C5 8.10457 5.89543 9 7 9C8.10457 9 9 8.10457 9 7ZM11.9497 11.955C14.6834 9.2201 14.6834 4.78601 11.9497 2.05115C9.21608 -0.683716 4.78392 -0.683716 2.05025 2.05115C-0.683418 4.78601 -0.683418 9.2201 2.05025 11.955L3.57128 13.4538L5.61408 15.4389L5.74691 15.5567C6.52168 16.1847 7.65623 16.1455 8.38611 15.4391L10.8223 13.0691L11.9497 11.955ZM2.75499 2.75619C5.09944 0.410715 8.90055 0.410715 11.245 2.75619C13.5294 5.04153 13.5879 8.71039 11.4207 11.0667L11.245 11.2499L9.92371 12.5539L7.69315 14.7225L7.60016 14.8021C7.24594 15.0699 6.7543 15.0698 6.40012 14.802L6.30713 14.7224L3.3263 11.817L2.75499 11.2499L2.57927 11.0667C0.412077 8.71039 0.47065 5.04153 2.75499 2.75619Z\" fill=\"#717171\"/>\n        </svg>\n      `;\n\n    case SvgIcon.Birthday:\n      return html`\n        <svg width=\"14\" height=\"13\" viewBox=\"0 0 14 13\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M5.81357 0.667333C6.07581 0.320242 6.48151 0 7 0C7.51849 0 7.92419 0.320242 8.18643 0.667333C8.45471 1.0224 8.63508 1.47991 8.69561 1.93392C8.75552 2.3832 8.70532 2.89341 8.42852 3.3086C8.134 3.75039 7.63965 4 7 4C6.36035 4 5.866 3.75039 5.57148 3.3086C5.29468 2.89341 5.24448 2.3832 5.30439 1.93392C5.36492 1.47991 5.54529 1.0224 5.81357 0.667333ZM6.40353 2.7539C6.484 2.87461 6.63965 3 7 3C7.36035 3 7.516 2.87461 7.59647 2.7539C7.69468 2.60659 7.74448 2.3668 7.70439 2.06608C7.66492 1.77009 7.54529 1.4776 7.38857 1.27017C7.22581 1.05476 7.08151 1 7 1C6.91849 1 6.77419 1.05476 6.61143 1.27017C6.45471 1.4776 6.33508 1.77009 6.29561 2.06608C6.25552 2.3668 6.30532 2.60659 6.40353 2.7539ZM1 7C1 5.89543 1.89543 5 3 5H11C12.1046 5 13 5.89543 13 7V12H13.5C13.7761 12 14 12.2239 14 12.5C14 12.7761 13.7761 13 13.5 13H0.5C0.223858 13 0 12.7761 0 12.5C0 12.2239 0.223858 12 0.5 12H1V7ZM2 12H12V9.01931C11.9109 9.10285 11.8174 9.18842 11.7208 9.27412C11.4006 9.55804 11.0346 9.85319 10.6715 10.0802C10.3274 10.2953 9.90815 10.5 9.5 10.5C8.77182 10.5 8.30806 9.98986 8.00471 9.65617C7.9834 9.63273 7.96289 9.61016 7.94312 9.58869C7.5876 9.20261 7.35769 9 7 9C6.64231 9 6.4124 9.20261 6.05688 9.58869C6.03711 9.61016 6.0166 9.63273 5.99529 9.65617C5.69194 9.98986 5.22818 10.5 4.5 10.5C4.10587 10.5 3.69263 10.2897 3.35907 10.0789C3.00198 9.85313 2.63516 9.55951 2.31117 9.27666C2.20329 9.18247 2.09896 9.08844 2 8.9971V12ZM2 7.59993C2.05039 7.65198 2.11363 7.71652 2.1873 7.7902C2.38843 7.99132 2.6649 8.25801 2.96883 8.52334C3.27484 8.79049 3.59802 9.04687 3.89343 9.23362C4.21237 9.43525 4.41413 9.5 4.5 9.5C4.75817 9.5 4.93171 9.33433 5.32125 8.91131L5.32447 8.90781C5.65956 8.5439 6.16039 8 7 8C7.83961 8 8.34044 8.5439 8.67553 8.90781L8.67875 8.91131C9.06828 9.33433 9.24183 9.5 9.5 9.5C9.6106 9.5 9.82569 9.42967 10.1414 9.23229C10.4381 9.04681 10.7573 8.79196 11.0573 8.52588C11.3554 8.26163 11.6238 7.99594 11.8184 7.7955C11.89 7.72165 11.9513 7.65703 12 7.60506V7C12 6.44772 11.5523 6 11 6H3C2.44772 6 2 6.44772 2 7V7.59993Z\" fill=\"#717171\"/>\n        </svg>\n      `;\n\n    case SvgIcon.Person:\n      return html`\n        <svg width=\"14\" height=\"16\" viewBox=\"0 0 14 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M7 0C4.79086 0 3 1.79086 3 4C3 6.20914 4.79086 8 7 8C9.20914 8 11 6.20914 11 4C11 1.79086 9.20914 0 7 0ZM4 4C4 2.34315 5.34315 1 7 1C8.65685 1 10 2.34315 10 4C10 5.65685 8.65685 7 7 7C5.34315 7 4 5.65685 4 4ZM2.00873 9C0.903151 9 0 9.88687 0 11C0 12.6912 0.83281 13.9663 2.13499 14.7966C3.41697 15.614 5.14526 16 7 16C8.85474 16 10.583 15.614 11.865 14.7966C13.1672 13.9663 14 12.6912 14 11C14 9.89557 13.1045 9.00001 12 9.00001L2.00873 9ZM1 11C1 10.4467 1.44786 10 2.00873 10L12 10C12.5522 10 13 10.4478 13 11C13 12.3088 12.3777 13.2837 11.3274 13.9534C10.2568 14.636 8.73511 15 7 15C5.26489 15 3.74318 14.636 2.67262 13.9534C1.62226 13.2837 1 12.3088 1 11Z\" fill=\"#717171\"/>\n        </svg>\n      `;\n\n    case SvgIcon.Messages:\n      return html`\n        <svg width=\"16\" height=\"13\" viewBox=\"0 0 16 13\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M13.5 0C14.8807 0 16 1.11929 16 2.5V10.5C16 11.8807 14.8807 13 13.5 13H2.5C1.11929 13 0 11.8807 0 10.5V2.5C0 1.11929 1.11929 0 2.5 0H13.5ZM15 3.961L8.25351 7.93097C8.12311 8.00767 7.96661 8.02045 7.82751 7.96932L7.74649 7.93097L1 3.963V10.5C1 11.3284 1.67157 12 2.5 12H13.5C14.3284 12 15 11.3284 15 10.5V3.961ZM13.5 1H2.5C1.67157 1 1 1.67157 1 2.5V2.802L8 6.91991L15 2.801V2.5C15 1.67157 14.3284 1 13.5 1Z\" fill=\"#717171\"/>\n        </svg>\n      `;\n\n    case SvgIcon.Organization:\n      return html`\n        <svg width=\"16\" height=\"17\" viewBox=\"0 0 16 17\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M7.99992 0C6.34271 0 4.99927 1.34344 4.99927 3.00066C4.99927 4.48754 6.08073 5.72183 7.49999 5.95985V7.5H4.5C3.67157 7.5 3 8.17157 3 9V10.0416C1.5811 10.2799 0.5 11.514 0.5 13.0007C0.5 14.6579 1.84344 16.0013 3.50066 16.0013C5.15787 16.0013 6.50131 14.6579 6.50131 13.0007C6.50131 11.5136 5.41954 10.2791 4 10.0414V9C4 8.72386 4.22386 8.5 4.5 8.5H11.5C11.7761 8.5 12 8.72386 12 9V10.0416C10.5811 10.2799 9.5 11.514 9.5 13.0007C9.5 14.6579 10.8434 16.0013 12.5007 16.0013C14.1579 16.0013 15.5013 14.6579 15.5013 13.0007C15.5013 11.5136 14.4195 10.2791 13 10.0414V9C13 8.17157 12.3284 7.5 11.5 7.5H8.49999V5.95983C9.91918 5.72176 11.0006 4.48749 11.0006 3.00066C11.0006 1.34344 9.65714 0 7.99992 0ZM5.99927 3.00066C5.99927 1.89572 6.89499 1 7.99992 1C9.10485 1 10.0006 1.89572 10.0006 3.00066C10.0006 4.10559 9.10485 5.00131 7.99992 5.00131C6.89499 5.00131 5.99927 4.10559 5.99927 3.00066ZM1.5 13.0007C1.5 11.8957 2.39572 11 3.50066 11C4.60559 11 5.50131 11.8957 5.50131 13.0007C5.50131 14.1056 4.60559 15.0013 3.50066 15.0013C2.39572 15.0013 1.5 14.1056 1.5 13.0007ZM12.5007 11C13.6056 11 14.5013 11.8957 14.5013 13.0007C14.5013 14.1056 13.6056 15.0013 12.5007 15.0013C11.3957 15.0013 10.5 14.1056 10.5 13.0007C10.5 11.8957 11.3957 11 12.5007 11Z\" fill=\"#717171\"/>\n        </svg>\n      `;\n\n    case SvgIcon.ExpandRight:\n      return html`\n        <svg width=\"8\" height=\"13\" viewBox=\"0 0 8 13\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M1 12L6.5 6.5L1 1\" stroke=\"#B8B8B8\" stroke-width=\"2\" />\n        </svg>\n      `;\n\n    case SvgIcon.Profile:\n      return html`\n        <svg width=\"14\" height=\"16\" viewBox=\"0 0 14 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M7 0C4.79086 0 3 1.79086 3 4C3 6.20914 4.79086 8 7 8C9.20914 8 11 6.20914 11 4C11 1.79086 9.20914 0 7 0ZM4 4C4 2.34315 5.34315 1 7 1C8.65685 1 10 2.34315 10 4C10 5.65685 8.65685 7 7 7C5.34315 7 4 5.65685 4 4ZM2.00873 9C0.903151 9 0 9.88687 0 11C0 12.6912 0.83281 13.9663 2.13499 14.7966C3.41697 15.614 5.14526 16 7 16C8.85474 16 10.583 15.614 11.865 14.7966C13.1672 13.9663 14 12.6912 14 11C14 9.89557 13.1045 9.00001 12 9.00001L2.00873 9ZM1 11C1 10.4467 1.44786 10 2.00873 10L12 10C12.5522 10 13 10.4478 13 11C13 12.3088 12.3777 13.2837 11.3274 13.9534C10.2568 14.636 8.73511 15 7 15C5.26489 15 3.74318 14.636 2.67262 13.9534C1.62226 13.2837 1 12.3088 1 11Z\" fill=\"#717171\"/>\n        </svg>\n      `;\n\n    case SvgIcon.File:\n      return html`\n        <svg width=\"28\" height=\"28\" viewBox=\"0 0 20 28\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            opacity=\"0.64\"\n            d=\"M19.613 6.993L13.018 0.421C12.7473 0.15221 12.3815 0.000947397 12 0H1.4C0.628 0 0 0.615 0 1.372V24.642C0 25.391 0.622 26 1.386 26H18.6C19.372 26 20 25.385 20 24.628V7.923C20 7.577 19.86 7.237 19.613 6.993Z\"\n            fill=\"#605E5C\"\n          />\n          <path\n            d=\"M19 24.628C19 24.83 18.816 25 18.6 25H1.386C1.173 25 1 24.84 1 24.642V1.372C1 1.17 1.184 1 1.4 1H12V6.6C12 7.372 12.628 8 13.4 8H19V24.628Z\"\n            fill=\"white\"\n          />\n          <path d=\"M18.204 6.99994L13 1.81494V6.59994C13 6.81994 13.18 6.99994 13.4 6.99994H18.204Z\" fill=\"white\" />\n        </svg>\n      `;\n\n    case SvgIcon.Files:\n      return html`\n        <svg width=\"17\" height=\"15\" viewBox=\"0 0 17 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M14.9956 4.07309V4C14.9956 2.61929 13.8763 1.5 12.4956 1.5H7.66418L6.06391 0.299946C5.80428 0.105247 5.48851 0 5.16399 0H2.5C1.11916 0 -0.000181445 1.11949 2.20615e-08 2.50033L0.0011832 11.4978C0.00135142 12.7772 0.962583 13.8321 2.2023 13.9798C2.2867 13.9945 2.37375 14.0021 2.46289 14.0021H13.1798C13.8981 14.0021 14.5156 13.4929 14.6524 12.7877L16.0097 5.78769C16.1587 5.01967 15.696 4.29703 14.9956 4.07309ZM2.5 1H5.16399C5.27216 1 5.37742 1.03508 5.46396 1.09998L7.19756 2.40002C7.2841 2.46492 7.38936 2.5 7.49753 2.5H12.4956C13.324 2.5 13.9956 3.17157 13.9956 4V4.00214H3.824C3.10596 4.00214 2.48863 4.511 2.35158 5.21583L1.05351 11.8916C1.01941 11.7661 1.0012 11.634 1.00118 11.4976L1 2.5002C0.999891 1.67169 1.6715 1 2.5 1ZM3.33319 5.4067C3.37888 5.17176 3.58465 5.00214 3.824 5.00214H14.5372C14.8515 5.00214 15.0879 5.28874 15.028 5.59732L13.6706 12.5973C13.6251 12.8324 13.4192 13.0021 13.1798 13.0021H2.46289C2.14845 13.0021 1.91206 12.7154 1.97208 12.4067L3.33319 5.4067Z\" fill=\"#717171\"/>\n        </svg>\n      `;\n\n    case SvgIcon.Back:\n      return html`\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            d=\"M16 8.5H1.95312L8.10156 14.6484L7.39844 15.3516L0.046875 8L7.39844 0.648438L8.10156 1.35156L1.95312 7.5H16V8.5Z\"\n          />\n        </svg>\n      `;\n\n    case SvgIcon.Close:\n      return html`\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M5.73838 5.032L9.70337 1.067L8.99638 0.360001L5.03137 4.325L1.06637 0.360001L0.359375 1.067L4.32438 5.032L0.359375 8.997L1.06637 9.704L5.03137 5.739L8.99638 9.704L9.70337 8.997L5.73838 5.032Z\" fill=\"currentColor\"/>\n        </svg>\n     `;\n    case SvgIcon.Upload:\n      return html`\n        <svg class=\"upload-icon\" width=\"21\" height=\"12\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M4.5 2C4.08579 2 3.75 2.33579 3.75 2.75C3.75 3.16421 4.08579 3.5 4.5 3.5H15C15.4142 3.5 15.75 3.16421 15.75 2.75C15.75 2.33579 15.4142 2 15 2H4.5ZM10.4963 17.3493C10.4466 17.7154 10.1328 17.9976 9.75311 17.9976C9.3389 17.9976 9.00311 17.6618 9.00311 17.2476L9.00249 7.05856L6.02995 10.026L5.94578 10.0986C5.65202 10.3162 5.23537 10.2917 4.96929 10.0253C4.67661 9.73215 4.67695 9.25728 4.97005 8.96459L9.25962 4.67989C9.33377 4.61512 9.42089 4.56485 9.5169 4.53385L9.59777 4.51072C9.64749 4.50019 9.69837 4.4947 9.74849 4.4947L9.80855 4.49661L9.87781 4.50451L9.99828 4.53462L10.0895 4.57254L10.1259 4.59371L10.2169 4.6523L10.2875 4.71481L14.5303 8.96546L14.6029 9.04964C14.8205 9.34345 14.7959 9.7601 14.5294 10.0261L14.4452 10.0987C14.1514 10.3162 13.7347 10.2917 13.4687 10.0251L10.5025 7.05456L10.5031 17.2476L10.4963 17.3493Z\" fill=\"#ffffff\"/>\n        </svg>\n      `;\n\n    case SvgIcon.FileCloud:\n      return html`\n        <svg width=\"16\" height=\"16\"  xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            d=\"m8,0c2.8166,0 4.4145,1.9233 4.6469,4.246l0.071,0c1.8127,0 3.2821,1.5119 3.2821,3.377c0,0.0953 -0.0038,0.1897 -0.0114,0.283c-0.322,-0.4017 -0.6967,-0.7591 -1.1138,-1.062c-0.3104,-0.9329 -1.1627,-1.598 -2.1568,-1.598l-0.0711,0c-0.5137,0 -0.9439,-0.3893 -0.9951,-0.9005c-0.2021,-2.0206 -1.5433,-3.3455 -3.6518,-3.3455c-2.1139,0 -3.4489,1.3159 -3.6518,3.3455c-0.0511,0.5112 -0.4813,0.9005 -0.9951,0.9005l-0.071,0c-1.2539,0 -2.2821,1.0579 -2.2821,2.377c0,1.3191 1.0282,2.377 2.2821,2.377l2.6655,0c-0.087,0.323 -0.1466,0.6572 -0.1762,1l-2.4893,0c-1.8127,0 -3.2821,-1.5119 -3.2821,-3.377c0,-1.8029 1.3731,-3.2758 3.102,-3.372l0.2511,-0.005c0.2338,-2.338 1.8303,-4.246 4.6469,-4.246zm3.5,16c2.4853,0 4.5,-2.0147 4.5,-4.5c0,-2.4853 -2.0147,-4.5 -4.5,-4.5c-2.4853,0 -4.5,2.0147 -4.5,4.5c0,2.4853 2.0147,4.5 4.5,4.5zm0,-7c0.2761,0 0.5,0.2239 0.5,0.5l0,1.5l1.5,0c0.2761,0 0.5,0.2239 0.5,0.5c0,0.2761 -0.2239,0.5 -0.5,0.5l-1.5,0l0,1.5c0,0.2761 -0.2239,0.5 -0.5,0.5c-0.2761,0 -0.5,-0.2239 -0.5,-0.5l0,-1.5l-1.5,0c-0.2761,0 -0.5,-0.2239 -0.5,-0.5c0,-0.2761 0.2239,-0.5 0.5,-0.5l1.5,0l0,-1.5c0,-0.2761 0.2239,-0.5 0.5,-0.5z\" fill=\"#0078D4\"\n          />\n        </svg>\n      `;\n\n    case SvgIcon.DragFile:\n      return html`\n        <svg width=\"13\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            d=\"m0,1.00189c0,-0.8451 0.983,-1.3091 1.636,-0.772l11.006,9.0622c0.724,0.5964 0.302,1.772 -0.636,1.772l-5.592,0c-0.435,0 -0.849,0.1892 -1.134,0.5185l-3.524,4.0725c-0.606,0.7003 -1.756,0.2717 -1.756,-0.6544l0,-13.9988zm12.006,9.0622l-11.006,-9.0622l0,13.9988l3.524,-4.0724c0.475,-0.5488 1.164,-0.8642 1.89,-0.8642l5.592,0z\"\n          />\n        </svg>\n      `;\n\n    case SvgIcon.Cancel:\n      return html`\n        <svg width=\"11\" height=\"11\" viewBox=\"0 0 11 11\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M0.588591 0.715694L0.646447 0.646447C0.820013 0.47288 1.08944 0.453595 1.28431 0.588591L1.35355 0.646447L6 5.293L10.6464 0.646447C10.8417 0.451185 11.1583 0.451185 11.3536 0.646447C11.5488 0.841709 11.5488 1.15829 11.3536 1.35355L6.707 6L11.3536 10.6464C11.5271 10.82 11.5464 11.0894 11.4114 11.2843L11.3536 11.3536C11.18 11.5271 10.9106 11.5464 10.7157 11.4114L10.6464 11.3536L6 6.707L1.35355 11.3536C1.15829 11.5488 0.841709 11.5488 0.646447 11.3536C0.451185 11.1583 0.451185 10.8417 0.646447 10.6464L5.293 6L0.646447 1.35355C0.47288 1.17999 0.453595 0.910563 0.588591 0.715694L0.646447 0.646447L0.588591 0.715694Z\" fill=\"currentColor\"/>\n        </svg>\n     `;\n\n    case SvgIcon.Success:\n      return html`\n        <svg width=\"12\" height=\"12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path fill=\"#009E00\" d=\"m6.322,12c3.492,0 6.323,-2.6863 6.323,-6c0,-3.3137 -2.831,-6 -6.323,-6c-3.491,0 -6.322,2.6863 -6.322,6c0,3.3137 2.831,6 6.322,6z\"/>\n          <path fill=\"white\" d=\"m9.629,3.7509c-0.131,-0.125 -0.31,-0.1952 -0.496,-0.1952c-0.187,0 -0.365,0.0702 -0.497,0.1952l-3.267,3.1l-1.393,-1.3222c-0.177,-0.1695 -0.436,-0.2361 -0.68,-0.1746c-0.243,0.0615 -0.433,0.2418 -0.497,0.4725c-0.065,0.2307 0.005,0.4767 0.184,0.6449l1.807,1.7154c0.019,0.0331 0.041,0.0646 0.066,0.094c0.289,0.2562 0.738,0.2562 1.027,0c0.024,-0.0294 0.047,-0.0609 0.065,-0.0941l3.681,-3.4931c0.275,-0.2603 0.275,-0.6824 0,-0.9428z\"/>\n        </svg>\n      `;\n\n    case SvgIcon.CheckMark:\n      return html`\n      <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path class=\"filled\" d=\"M10 0C15.5228 0 20 4.47715 20 10C20 15.5228 15.5228 20 10 20C4.47715 20 0 15.5228 0 10C0 4.47715 4.47715 0 10 0ZM13.2197 6.96967L8.75 11.4393L6.78033 9.46967C6.48744 9.17678 6.01256 9.17678 5.71967 9.46967C5.42678 9.76256 5.42678 10.2374 5.71967 10.5303L8.21967 13.0303C8.51256 13.3232 8.98744 13.3232 9.28033 13.0303L14.2803 8.03033C14.5732 7.73744 14.5732 7.26256 14.2803 6.96967C13.9874 6.67678 13.5126 6.67678 13.2197 6.96967Z\" fill=\"currentColor\"/>\n        <path class=\"regular\" d=\"M10 1.5C5.30558 1.5 1.5 5.30558 1.5 10C1.5 14.6944 5.30558 18.5 10 18.5C14.6944 18.5 18.5 14.6944 18.5 10C18.5 5.30558 14.6944 1.5 10 1.5ZM0 10C0 4.47715 4.47715 0 10 0C15.5228 0 20 4.47715 20 10C20 15.5228 15.5228 20 10 20C4.47715 20 0 15.5228 0 10Z\" fill=\"currentColor\"/>\n      </svg>\n      `;\n\n    case SvgIcon.Radio:\n      return html`\n      <svg width=\"66\" height=\"20\" viewBox=\"0 0 66 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <rect x=\"0.5\" y=\"0.5\" width=\"19\" height=\"19\" rx=\"9.5\" fill=\"#F3F3F3\"/>\n        <rect x=\"0.5\" y=\"0.5\" width=\"19\" height=\"19\" rx=\"9.5\" stroke=\"#636363\"/>\n        <path d=\"M36.5596 16H35.1924L33.5107 13.2178C33.1963 12.6982 32.9274 12.3656 32.7041 12.2197C32.4808 12.0693 32.2096 11.9941 31.8906 11.9941H30.7627V16H29.6143V6.19727H32.54C33.3923 6.19727 34.1009 6.42285 34.666 6.87402C35.2357 7.3252 35.5205 7.99056 35.5205 8.87012C35.5205 9.56283 35.3405 10.1439 34.9805 10.6133C34.6204 11.0827 34.126 11.4222 33.4971 11.6318V11.6592C33.7021 11.7822 33.8822 11.9167 34.0371 12.0625C34.1921 12.2083 34.3561 12.4225 34.5293 12.7051L36.5596 16ZM30.7627 7.23633V10.9551H32.3213C32.891 10.9551 33.3649 10.7705 33.7432 10.4014C34.126 10.0322 34.3174 9.55371 34.3174 8.96582C34.3174 8.44173 34.1465 8.02246 33.8047 7.70801C33.4674 7.39355 32.9775 7.23633 32.335 7.23633H30.7627ZM42.8008 16H41.6797V14.9062H41.6523C41.4108 15.3255 41.1123 15.64 40.7568 15.8496C40.4059 16.0592 39.9958 16.1641 39.5264 16.1641C38.8701 16.1641 38.3392 15.9727 37.9336 15.5898C37.528 15.207 37.3252 14.6989 37.3252 14.0654C37.3252 13.4684 37.5303 12.974 37.9404 12.582C38.3506 12.1901 38.9316 11.9395 39.6836 11.8301L41.6797 11.5635V11.4062C41.6797 10.8184 41.543 10.4014 41.2695 10.1553C40.9961 9.90462 40.6315 9.7793 40.1758 9.7793C39.8112 9.7793 39.4603 9.84766 39.123 9.98438C38.7858 10.1211 38.4691 10.3307 38.1729 10.6133L37.5166 9.93652C37.9085 9.55827 38.3255 9.28027 38.7676 9.10254C39.2096 8.9248 39.7018 8.83594 40.2441 8.83594C41.0918 8.83594 41.7298 9.05469 42.1582 9.49219C42.5866 9.92513 42.8008 10.5768 42.8008 11.4473V16ZM41.6797 13.1562V12.459L39.9912 12.6914C39.4762 12.7643 39.0889 12.8942 38.8291 13.0811C38.5693 13.2679 38.4395 13.5618 38.4395 13.9629C38.4395 14.3822 38.5602 14.7035 38.8018 14.9268C39.0479 15.1455 39.3464 15.2549 39.6973 15.2549C40.3034 15.2549 40.7842 15.0566 41.1396 14.6602C41.4997 14.2637 41.6797 13.7624 41.6797 13.1562ZM49.7939 14.8105C49.5342 15.2617 49.2038 15.6012 48.8027 15.8291C48.4062 16.0524 47.9346 16.1641 47.3877 16.1641C46.5081 16.1641 45.804 15.8519 45.2754 15.2275C44.7513 14.5986 44.4893 13.7441 44.4893 12.6641C44.4893 11.5065 44.7809 10.5791 45.3643 9.88184C45.9476 9.18457 46.7246 8.83594 47.6953 8.83594C48.1784 8.83594 48.5931 8.93164 48.9395 9.12305C49.2904 9.3099 49.5752 9.59245 49.7939 9.9707H49.8213V5.63672H50.9424V16H49.8213V14.8105H49.7939ZM45.6377 12.6094C45.6377 13.416 45.8245 14.054 46.1982 14.5234C46.5765 14.9883 47.0824 15.2207 47.7158 15.2207C48.3447 15.2207 48.8529 14.9951 49.2402 14.5439C49.6276 14.0928 49.8213 13.5231 49.8213 12.835V11.8027C49.8213 11.2376 49.6322 10.7591 49.2539 10.3672C48.8802 9.97526 48.4085 9.7793 47.8389 9.7793C47.1553 9.7793 46.6175 10.0299 46.2256 10.5312C45.8337 11.0326 45.6377 11.7253 45.6377 12.6094ZM53.7861 7.3252C53.5583 7.3252 53.3669 7.25 53.2119 7.09961C53.057 6.94466 52.9795 6.75553 52.9795 6.53223C52.9795 6.30892 53.057 6.12207 53.2119 5.97168C53.3669 5.81673 53.5583 5.73926 53.7861 5.73926C54.014 5.73926 54.2054 5.81673 54.3604 5.97168C54.5153 6.12207 54.5928 6.30892 54.5928 6.53223C54.5928 6.75553 54.5153 6.94466 54.3604 7.09961C54.2054 7.25 54.014 7.3252 53.7861 7.3252ZM54.333 16H53.2119V9H54.333V16ZM59.5283 16.1641C58.4938 16.1641 57.6667 15.8382 57.0469 15.1865C56.4316 14.5303 56.124 13.6621 56.124 12.582C56.124 11.4108 56.443 10.4948 57.0811 9.83398C57.7191 9.17318 58.5895 8.84049 59.6924 8.83594C60.736 8.83138 61.5495 9.15267 62.1328 9.7998C62.7207 10.4469 63.0146 11.3379 63.0146 12.4727C63.0146 13.5938 62.6979 14.4893 62.0645 15.1592C61.4355 15.8291 60.5902 16.1641 59.5283 16.1641ZM59.6104 15.2207C60.335 15.2207 60.891 14.986 61.2783 14.5166C61.6702 14.0426 61.8662 13.375 61.8662 12.5137C61.8662 11.6341 61.6702 10.9596 61.2783 10.4902C60.8864 10.0163 60.3304 9.7793 59.6104 9.7793C58.8903 9.7793 58.3206 10.0254 57.9014 10.5176C57.4821 11.0098 57.2725 11.6842 57.2725 12.541C57.2725 13.3704 57.4844 14.0244 57.9082 14.5029C58.332 14.9814 58.8994 15.2207 59.6104 15.2207Z\" fill=\"#1A1A1A\"/>\n      </svg>\n      `;\n\n    case SvgIcon.Fail:\n      return html`\n        <svg width=\"12\" height=\"12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path fill=\"#EF355D\" d=\"m6,12c3.314,0 6,-2.6863 6,-6c0,-3.3137 -2.686,-6 -6,-6c-3.314,0 -6,2.6863 -6,6c0,3.3137 2.686,6 6,6z\"/>\n          <path fill=\"white\" d=\"m6.943,6.0004l1.544,-1.5444c0.169,-0.1683 0.236,-0.4142 0.174,-0.6448c-0.061,-0.2306 -0.241,-0.4107 -0.472,-0.4722c-0.231,-0.0616 -0.477,0.0049 -0.645,0.1742l-1.544,1.5443l-1.545,-1.5443c-0.26,-0.259 -0.681,-0.2583 -0.941,0.0014c-0.26,0.2598 -0.26,0.6808 -0.001,0.9414l1.544,1.5444l-1.544,1.5444c-0.259,0.2606 -0.259,0.6815 0.001,0.9413c0.26,0.2598 0.681,0.2604 0.941,0.0015l1.545,-1.5444l1.544,1.5444c0.261,0.2589 0.682,0.2583 0.942,-0.0015c0.259,-0.2598 0.26,-0.6807 0.001,-0.9413l-1.544,-1.5444z\" />\n        </svg>\n      `;\n\n    case SvgIcon.SelectAccount:\n      return html`\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"17\" height=\"17\" viewBox=\"0 0 17 17\" fill=\"none\">\n      <path fill=${color} d=\"M6.22176 13.9567C3.55468 13.653 2 11.8026 2 10V9.5C2 8.67157 2.67157 8 3.5 8H5.59971C5.43777 8.31679 5.30564 8.65136 5.20703 9H3.5C3.22386 9 3 9.22386 3 9.5V10C3 11.1281 3.88187 12.333 5.50235 12.7996C5.69426 13.216 5.93668 13.6043 6.22176 13.9567ZM9.62596 5.06907C9.70657 4.81036 9.75 4.53525 9.75 4.25C9.75 2.73122 8.51878 1.5 7 1.5C5.48122 1.5 4.25 2.73122 4.25 4.25C4.25 5.53662 5.13357 6.61687 6.32704 6.91706C6.64202 6.55055 7.00446 6.226 7.40482 5.95294C7.27488 5.98371 7.13934 6 7 6C6.0335 6 5.25 5.2165 5.25 4.25C5.25 3.2835 6.0335 2.5 7 2.5C7.9665 2.5 8.75 3.2835 8.75 4.25C8.75 4.73141 8.55561 5.16743 8.24104 5.48382C8.67558 5.28783 9.14016 5.14664 9.62596 5.06907ZM10.5 15C12.9853 15 15 12.9853 15 10.5C15 8.01472 12.9853 6 10.5 6C8.01472 6 6 8.01472 6 10.5C6 12.9853 8.01472 15 10.5 15ZM10.5 8C10.7761 8 11 8.22386 11 8.5V10H12.5C12.7761 10 13 10.2239 13 10.5C13 10.7761 12.7761 11 12.5 11H11V12.5C11 12.7761 10.7761 13 10.5 13C10.2239 13 10 12.7761 10 12.5V11H8.5C8.22386 11 8 10.7761 8 10.5C8 10.2239 8.22386 10 8.5 10H10V8.5C10 8.22386 10.2239 8 10.5 8Z\"/>\n    </svg>\n  `;\n\n    case SvgIcon.News:\n      return html`\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M18.75 20H5.25C3.51697 20 2.10075 18.6435 2.00514 16.9344L2 16.75V6.25C2 5.05914 2.92516 4.08436 4.09595 4.00519L4.25 4H16.75C17.9409 4 18.9156 4.92516 18.9948 6.09595L19 6.25V7H19.75C20.9409 7 21.9156 7.92516 21.9948 9.09595L22 9.25V16.75C22 18.483 20.6435 19.8992 18.9344 19.9949L18.75 20H5.25H18.75ZM5.25 18.5H18.75C19.6682 18.5 20.4212 17.7929 20.4942 16.8935L20.5 16.75V9.25C20.5 8.8703 20.2178 8.55651 19.8518 8.50685L19.75 8.5H19V16.25C19 16.6297 18.7178 16.9435 18.3518 16.9932L18.25 17C17.8703 17 17.5565 16.7178 17.5068 16.3518L17.5 16.25V6.25C17.5 5.8703 17.2178 5.55651 16.8518 5.50685L16.75 5.5H4.25C3.8703 5.5 3.55651 5.78215 3.50685 6.14823L3.5 6.25V16.75C3.5 17.6682 4.20711 18.4212 5.10647 18.4942L5.25 18.5H18.75H5.25ZM12.246 14.5H15.2522C15.6665 14.5 16.0022 14.8358 16.0022 15.25C16.0022 15.6297 15.7201 15.9435 15.354 15.9932L15.2522 16H12.246C11.8318 16 11.496 15.6642 11.496 15.25C11.496 14.8703 11.7782 14.5565 12.1442 14.5068L12.246 14.5H15.2522H12.246ZM9.24328 11.0045C9.6575 11.0045 9.99328 11.3403 9.99328 11.7545V15.25C9.99328 15.6642 9.6575 16 9.24328 16H5.74776C5.33355 16 4.99776 15.6642 4.99776 15.25V11.7545C4.99776 11.3403 5.33355 11.0045 5.74776 11.0045H9.24328ZM8.49328 12.5045H6.49776V14.5H8.49328V12.5045ZM12.246 11.0045H15.2522C15.6665 11.0045 16.0022 11.3403 16.0022 11.7545C16.0022 12.1342 15.7201 12.448 15.354 12.4976L15.2522 12.5045H12.246C11.8318 12.5045 11.496 12.1687 11.496 11.7545C11.496 11.3748 11.7782 11.061 12.1442 11.0113L12.246 11.0045H15.2522H12.246ZM5.74776 7.50247H15.2522C15.6665 7.50247 16.0022 7.83826 16.0022 8.25247C16.0022 8.63217 15.7201 8.94596 15.354 8.99563L15.2522 9.00247H5.74776C5.33355 9.00247 4.99776 8.66669 4.99776 8.25247C4.99776 7.87278 5.27991 7.55898 5.64599 7.50932L5.74776 7.50247H15.2522H5.74776Z\" fill=\"none\" />\n      </svg>\n      `;\n\n    case SvgIcon.DoubleBookmark:\n      return html`\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M4 6.74814C4 5.50535 5.00742 4.49786 6.25013 4.49786H15.2506C16.4933 4.49786 17.5008 5.50535 17.5008 6.74814V21.2499C17.5008 21.5185 17.3572 21.7666 17.1243 21.9003C16.8914 22.0341 16.6048 22.0332 16.3728 21.8978L10.7504 18.6179L5.12797 21.8978C4.89599 22.0332 4.60936 22.0341 4.37648 21.9003C4.14359 21.7666 4 21.5185 4 21.2499V6.74814ZM6.25013 5.99805C5.83589 5.99805 5.50008 6.33387 5.50008 6.74814V19.944L10.3725 17.1016C10.606 16.9653 10.8948 16.9653 11.1283 17.1016L16.0007 19.944V6.74814C16.0007 6.33387 15.6649 5.99805 15.2506 5.99805H6.25013ZM15.2497 2C17.8732 2 20 4.12691 20 6.75058V18.6232C20 19.0374 19.6642 19.3733 19.25 19.3733C18.8357 19.3733 18.4999 19.0374 18.4999 18.6232V6.75058C18.4999 4.95543 17.0448 3.50018 15.2497 3.50018H6.63687C6.63687 3.50018 6.75016 2.94339 7.43379 2.41948C8.00023 2 8.60182 2 8.60182 2H15.2497Z\" fill=\"none\" />\n        </svg>\n      `;\n\n    case SvgIcon.ChevronLeft:\n      return html`\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M15.5303 4.21967C15.8232 4.51256 15.8232 4.98744 15.5303 5.28033L8.81066 12L15.5303 18.7197C15.8232 19.0126 15.8232 19.4874 15.5303 19.7803C15.2374 20.0732 14.7626 20.0732 14.4697 19.7803L7.21967 12.5303C6.92678 12.2374 6.92678 11.7626 7.21967 11.4697L14.4697 4.21967C14.7626 3.92678 15.2374 3.92678 15.5303 4.21967Z\" fill=\"none\" />\n        </svg>`;\n\n    case SvgIcon.ChevronRight:\n      return html`\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M8.46967 4.21967C8.17678 4.51256 8.17678 4.98744 8.46967 5.28033L15.1893 12L8.46967 18.7197C8.17678 19.0126 8.17678 19.4874 8.46967 19.7803C8.76256 20.0732 9.23744 20.0732 9.53033 19.7803L16.7803 12.5303C17.0732 12.2374 17.0732 11.7626 16.7803 11.4697L9.53033 4.21967C9.23744 3.92678 8.76256 3.92678 8.46967 4.21967Z\" fill=\"currentColor\" />\n        </svg>`;\n\n    case SvgIcon.Delete:\n      return html`\n        <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M8.5 4H11.5C11.5 3.17157 10.8284 2.5 10 2.5C9.17157 2.5 8.5 3.17157 8.5 4ZM7.5 4C7.5 2.61929 8.61929 1.5 10 1.5C11.3807 1.5 12.5 2.61929 12.5 4H17.5C17.7761 4 18 4.22386 18 4.5C18 4.77614 17.7761 5 17.5 5H16.4456L15.2521 15.3439C15.0774 16.8576 13.7957 18 12.2719 18H7.72813C6.20431 18 4.92256 16.8576 4.7479 15.3439L3.55437 5H2.5C2.22386 5 2 4.77614 2 4.5C2 4.22386 2.22386 4 2.5 4H7.5ZM5.74131 15.2292C5.85775 16.2384 6.71225 17 7.72813 17H12.2719C13.2878 17 14.1422 16.2384 14.2587 15.2292L15.439 5H4.56101L5.74131 15.2292ZM8.5 7.5C8.77614 7.5 9 7.72386 9 8V14C9 14.2761 8.77614 14.5 8.5 14.5C8.22386 14.5 8 14.2761 8 14V8C8 7.72386 8.22386 7.5 8.5 7.5ZM12 8C12 7.72386 11.7761 7.5 11.5 7.5C11.2239 7.5 11 7.72386 11 8V14C11 14.2761 11.2239 14.5 11.5 14.5C11.7761 14.5 12 14.2761 12 14V8Z\" fill=\"currentColor\"/>\n        </svg>\n    `;\n\n    case SvgIcon.Add:\n      return html`\n        <svg width=\"16\" height=\"15\" viewBox=\"0 0 16 15\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M8.39563 0.5C8.39563 0.223858 8.17177 0 7.89563 0C7.61949 0 7.39563 0.223858 7.39563 0.5V7H0.89563C0.619487 7 0.39563 7.22386 0.39563 7.5C0.39563 7.77614 0.619487 8 0.89563 8H7.39563V14.5C7.39563 14.7761 7.61949 15 7.89563 15C8.17177 15 8.39563 14.7761 8.39563 14.5V8H14.8956C15.1718 8 15.3956 7.77614 15.3956 7.5C15.3956 7.22386 15.1718 7 14.8956 7H8.39563V0.5Z\" fill=\"${color}\"/>\n        </svg>`;\n\n    case SvgIcon.Calendar:\n      return html`\n        <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M7 11C7.55228 11 8 10.5523 8 10C8 9.44771 7.55228 9 7 9C6.44772 9 6 9.44771 6 10C6 10.5523 6.44772 11 7 11ZM8 13C8 13.5523 7.55228 14 7 14C6.44772 14 6 13.5523 6 13C6 12.4477 6.44772 12 7 12C7.55228 12 8 12.4477 8 13ZM10 11C10.5523 11 11 10.5523 11 10C11 9.44771 10.5523 9 10 9C9.44771 9 9 9.44771 9 10C9 10.5523 9.44771 11 10 11ZM11 13C11 13.5523 10.5523 14 10 14C9.44771 14 9 13.5523 9 13C9 12.4477 9.44771 12 10 12C10.5523 12 11 12.4477 11 13ZM13 11C13.5523 11 14 10.5523 14 10C14 9.44771 13.5523 9 13 9C12.4477 9 12 9.44771 12 10C12 10.5523 12.4477 11 13 11ZM17 5.5C17 4.11929 15.8807 3 14.5 3H5.5C4.11929 3 3 4.11929 3 5.5V14.5C3 15.8807 4.11929 17 5.5 17H14.5C15.8807 17 17 15.8807 17 14.5V5.5ZM4 7H16V14.5C16 15.3284 15.3284 16 14.5 16H5.5C4.67157 16 4 15.3284 4 14.5V7ZM5.5 4H14.5C15.3284 4 16 4.67157 16 5.5V6H4V5.5C4 4.67157 4.67157 4 5.5 4Z\" fill=${color}/>\n        </svg>\n    `;\n\n    case SvgIcon.Planner:\n      return html`\n        <svg width=\"24\" height=\"24\" fill=\"none\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M17.75 3A3.25 3.25 0 0 1 21 6.25v11.5A3.25 3.25 0 0 1 17.75 21H6.25A3.25 3.25 0 0 1 3 17.75V6.25A3.25 3.25 0 0 1 6.25 3h11.5Zm1.75 5.5h-15v9.25c0 .966.784 1.75 1.75 1.75h11.5a1.75 1.75 0 0 0 1.75-1.75V8.5Zm-11.75 6a1.25 1.25 0 1 1 0 2.5 1.25 1.25 0 0 1 0-2.5Zm4.25 0a1.25 1.25 0 1 1 0 2.5 1.25 1.25 0 0 1 0-2.5Zm-4.25-4a1.25 1.25 0 1 1 0 2.5 1.25 1.25 0 0 1 0-2.5Zm4.25 0a1.25 1.25 0 1 1 0 2.5 1.25 1.25 0 0 1 0-2.5Zm4.25 0a1.25 1.25 0 1 1 0 2.5 1.25 1.25 0 0 1 0-2.5Zm1.5-6H6.25A1.75 1.75 0 0 0 4.5 6.25V7h15v-.75a1.75 1.75 0 0 0-1.75-1.75Z\" fill=\"${color}\"/>\n        </svg>`;\n\n    case SvgIcon.Milestone:\n      return html`\n        <svg width=\"24\" height=\"24\" fill=\"${color}\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M15.25 13c.966 0 1.75.784 1.75 1.75v4.5A1.75 1.75 0 0 1 15.25 21H3.75A1.75 1.75 0 0 1 2 19.25v-4.5c0-.966.783-1.75 1.75-1.75h11.5ZM21 14.899v5.351a.75.75 0 0 1-1.494.102l-.006-.102v-5.338a3.006 3.006 0 0 0 1.5-.013Zm-5.75-.399H3.75a.25.25 0 0 0-.25.25v4.5c0 .138.111.25.25.25h11.5a.25.25 0 0 0 .25-.25v-4.5a.25.25 0 0 0-.25-.25Zm5-4.408a1.908 1.908 0 1 1 0 3.816 1.908 1.908 0 0 1 0-3.816ZM15.244 3c.967 0 1.75.784 1.75 1.75v4.5a1.75 1.75 0 0 1-1.75 1.75h-11.5a1.75 1.75 0 0 1-1.75-1.75v-4.5a1.75 1.75 0 0 1 1.607-1.744L3.745 3h11.5Zm0 1.5h-11.5l-.057.007a.25.25 0 0 0-.193.243v4.5c0 .138.112.25.25.25h11.5a.25.25 0 0 0 .25-.25v-4.5a.25.25 0 0 0-.25-.25ZM20.25 3a.75.75 0 0 1 .743.648L21 3.75v5.351a3.004 3.004 0 0 0-1.5-.013V3.75a.75.75 0 0 1 .75-.75Z\" fill=\"${color}\"/>\n        </svg>`;\n\n    case SvgIcon.PersonAdd:\n      return html`\n        <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\" class=\"svg\" fill=\"currentColor\">\n          <path d=\"M9 2a4 4 0 100 8 4 4 0 000-8zM6 6a3 3 0 116 0 3 3 0 01-6 0z\"></path>\n          <path d=\"M4 11a2 2 0 00-2 2c0 1.7.83 2.97 2.13 3.8A9.14 9.14 0 009 18c.41 0 .82-.02 1.21-.06A5.5 5.5 0 019.6 17 12 12 0 019 17a8.16 8.16 0 01-4.33-1.05A3.36 3.36 0 013 13a1 1 0 011-1h5.6c.18-.36.4-.7.66-1H4z\"></path>\n          <path d=\"M14.5 19a4.5 4.5 0 100-9 4.5 4.5 0 000 9zm0-7c.28 0 .5.22.5.5V14h1.5a.5.5 0 010 1H15v1.5a.5.5 0 01-1 0V15h-1.5a.5.5 0 010-1H14v-1.5c0-.28.22-.5.5-.5z\"></path>\n        </svg>`;\n    case SvgIcon.Event:\n      return html`\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M17.75 3C19.5449 3 21 4.45507 21 6.25V17.75C21 19.5449 19.5449 21 17.75 21H6.25C4.45507 21 3 19.5449 3 17.75V6.25C3 4.45507 4.45507 3 6.25 3H17.75ZM19.5 8.5H4.5V17.75C4.5 18.7165 5.2835 19.5 6.25 19.5H17.75C18.7165 19.5 19.5 18.7165 19.5 17.75V8.5ZM7.75 14.5C8.44036 14.5 9 15.0596 9 15.75C9 16.4404 8.44036 17 7.75 17C7.05964 17 6.5 16.4404 6.5 15.75C6.5 15.0596 7.05964 14.5 7.75 14.5ZM12 14.5C12.6904 14.5 13.25 15.0596 13.25 15.75C13.25 16.4404 12.6904 17 12 17C11.3096 17 10.75 16.4404 10.75 15.75C10.75 15.0596 11.3096 14.5 12 14.5ZM7.75 10.5C8.44036 10.5 9 11.0596 9 11.75C9 12.4404 8.44036 13 7.75 13C7.05964 13 6.5 12.4404 6.5 11.75C6.5 11.0596 7.05964 10.5 7.75 10.5ZM12 10.5C12.6904 10.5 13.25 11.0596 13.25 11.75C13.25 12.4404 12.6904 13 12 13C11.3096 13 10.75 12.4404 10.75 11.75C10.75 11.0596 11.3096 10.5 12 10.5ZM16.25 10.5C16.9404 10.5 17.5 11.0596 17.5 11.75C17.5 12.4404 16.9404 13 16.25 13C15.5596 13 15 12.4404 15 11.75C15 11.0596 15.5596 10.5 16.25 10.5ZM17.75 4.5H6.25C5.2835 4.5 4.5 5.2835 4.5 6.25V7H19.5V6.25C19.5 5.2835 18.7165 4.5 17.75 4.5Z\" fill=\"none\" />\n        </svg>\n      `;\n\n    case SvgIcon.BookOpen:\n      return html`\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M12 19.1375C11.4986 19.6686 10.788 20 10 20H3.75C2.7835 20 2 19.2165 2 18.25V5.75C2 4.7835 2.7835 4 3.75 4H10C10.788 4 11.4986 4.33145 12 4.86253C12.5014 4.33145 13.212 4 14 4H20.25C21.2165 4 22 4.7835 22 5.75V18.25C22 19.2165 21.2165 20 20.25 20H14C13.212 20 12.5014 19.6686 12 19.1375ZM3.5 5.75V18.25C3.5 18.3881 3.61193 18.5 3.75 18.5H10C10.6904 18.5 11.25 17.9404 11.25 17.25V6.75C11.25 6.05964 10.6904 5.5 10 5.5H3.75C3.61193 5.5 3.5 5.61193 3.5 5.75ZM12.75 17.25C12.75 17.9404 13.3096 18.5 14 18.5H20.25C20.3881 18.5 20.5 18.3881 20.5 18.25V5.75C20.5 5.61193 20.3881 5.5 20.25 5.5H14C13.3096 5.5 12.75 6.05964 12.75 6.75V17.25Z\" fill=\"none\" />\n        </svg>\n      `;\n\n    case SvgIcon.FileOuter:\n      return html`\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M6 2C4.89543 2 4 2.89543 4 4V20C4 21.1046 4.89543 22 6 22H18C19.1046 22 20 21.1046 20 20V9.82777C20 9.29733 19.7893 8.78863 19.4142 8.41355L13.5864 2.58579C13.2114 2.21071 12.7027 2 12.1722 2H6ZM5.5 4C5.5 3.72386 5.72386 3.5 6 3.5H12V8C12 9.10457 12.8954 10 14 10H18.5V20C18.5 20.2761 18.2761 20.5 18 20.5H6C5.72386 20.5 5.5 20.2761 5.5 20V4ZM17.3793 8.5H14C13.7239 8.5 13.5 8.27614 13.5 8V4.62066L17.3793 8.5Z\" fill=\"none\" />\n        </svg>\n      `;\n\n    case SvgIcon.BookQuestion:\n      return html`\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M10.9998 8.01752C10.9905 8.42363 10.6584 8.74999 10.25 8.74999C9.5 8.74999 9.5 7.9989 9.5 7.9989L9.5 7.99777L9.50001 7.99539L9.50006 7.99017C9.50032 7.9755 9.50072 7.96084 9.50144 7.94618C9.50262 7.92198 9.50473 7.89159 9.50846 7.8559C9.51591 7.78477 9.52996 7.69092 9.55665 7.58186C9.60973 7.36492 9.71565 7.07652 9.92848 6.78906C10.3825 6.17582 11.1982 5.72727 12.513 5.7501C13.4627 5.76659 14.3059 6.16497 14.834 6.82047C15.371 7.48704 15.5517 8.3902 15.1964 9.27853C14.8342 10.1839 14.0149 10.5437 13.5442 10.7503L13.4932 10.7728C13.2147 10.8957 13.0813 10.9599 13.0013 11.024L13 11.0251L13 11.7492C13.0001 12.1634 12.6643 12.4999 12.2501 12.5C11.8359 12.5 11.5001 12.1643 11.5 11.7501L11.5 11C11.5 10.4769 11.752 10.1029 12.0633 9.85345C12.3134 9.65303 12.6276 9.51483 12.8491 9.4174L12.8875 9.40049C13.4292 9.16137 13.6868 9.01346 13.8036 8.72145C13.9483 8.35977 13.8789 8.02596 13.6659 7.76153C13.4439 7.48604 13.0371 7.25943 12.487 7.24988C11.5518 7.23364 11.2425 7.53509 11.134 7.68162C11.0656 7.77404 11.0309 7.86797 11.0137 7.93838C11.0052 7.973 11.0017 7.99908 11.0003 8.01197L10.9998 8.01752ZM12.25 15.5C12.8023 15.5 13.25 15.0523 13.25 14.5C13.25 13.9477 12.8023 13.5 12.25 13.5C11.6977 13.5 11.25 13.9477 11.25 14.5C11.25 15.0523 11.6977 15.5 12.25 15.5ZM4 4.5C4 3.11929 5.11929 2 6.5 2H18C19.3807 2 20.5 3.11929 20.5 4.5V18.75C20.5 19.1642 20.1642 19.5 19.75 19.5H5.5C5.5 20.0523 5.94772 20.5 6.5 20.5H19.75C20.1642 20.5 20.5 20.8358 20.5 21.25C20.5 21.6642 20.1642 22 19.75 22H6.5C5.11929 22 4 20.8807 4 19.5V4.5ZM5.5 4.5V18H19V4.5C19 3.94772 18.5523 3.5 18 3.5H6.5C5.94772 3.5 5.5 3.94772 5.5 4.5Z\" fill=\"none\" />\n        </svg>\n      `;\n\n    case SvgIcon.Globe:\n      return html`\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M12.0001 1.99805C17.5238 1.99805 22.0016 6.47589 22.0016 11.9996C22.0016 17.5233 17.5238 22.0011 12.0001 22.0011C6.47638 22.0011 1.99854 17.5233 1.99854 11.9996C1.99854 6.47589 6.47638 1.99805 12.0001 1.99805ZM14.939 16.4993H9.06118C9.71322 18.9135 10.8466 20.5011 12.0001 20.5011C13.1536 20.5011 14.2869 18.9135 14.939 16.4993ZM7.5084 16.4999L4.78591 16.4998C5.74425 18.0328 7.1777 19.2384 8.88008 19.9104C8.3578 19.0906 7.92681 18.0643 7.60981 16.8949L7.5084 16.4999ZM19.2143 16.4998L16.4918 16.4999C16.168 17.8337 15.7004 18.9995 15.119 19.9104C16.716 19.2804 18.0757 18.1814 19.0291 16.7833L19.2143 16.4998ZM7.09351 9.99895H3.7359L3.73115 10.0162C3.57906 10.6525 3.49854 11.3166 3.49854 11.9996C3.49854 13.0558 3.69112 14.0669 4.0431 14.9999L7.21626 14.9995C7.07396 14.0504 6.99854 13.0422 6.99854 11.9996C6.99854 11.3156 7.031 10.6464 7.09351 9.99895ZM15.397 9.99901H8.60316C8.53514 10.6393 8.49853 11.309 8.49853 11.9996C8.49853 13.0591 8.58468 14.0694 8.73827 14.9997H15.2619C15.4155 14.0694 15.5016 13.0591 15.5016 11.9996C15.5016 11.309 15.465 10.6393 15.397 9.99901ZM20.2647 9.99811L16.9067 9.99897C16.9692 10.6464 17.0016 11.3156 17.0016 11.9996C17.0016 13.0422 16.9262 14.0504 16.7839 14.9995L19.9571 14.9999C20.309 14.0669 20.5016 13.0558 20.5016 11.9996C20.5016 11.3102 20.4196 10.64 20.2647 9.99811ZM8.88114 4.08875L8.85823 4.09747C6.81092 4.91218 5.1549 6.49949 4.25023 8.49935L7.29835 8.49972C7.61171 6.74693 8.15855 5.221 8.88114 4.08875ZM12.0001 3.49805L11.8844 3.50335C10.619 3.6191 9.39651 5.62107 8.8288 8.4993H15.1714C14.6052 5.62914 13.388 3.63033 12.1264 3.50436L12.0001 3.49805ZM15.1201 4.08881L15.2269 4.2629C15.8961 5.37537 16.4043 6.83525 16.7018 8.49972L19.7499 8.49935C18.8853 6.58795 17.3343 5.05341 15.4113 4.21008L15.1201 4.08881Z\" />\n        </svg>\n      `;\n\n    case SvgIcon.PresenceAvailable:\n      return html`\n        <svg fill=\"#13a10e\" aria-hidden=\"true\" width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M5 10A5 5 0 1 0 5 0a5 5 0 0 0 0 10Zm2.1-5.9L4.85 6.35a.5.5 0 0 1-.7 0l-1-1a.5.5 0 0 1 .7-.7l.65.64 1.9-1.9a.5.5 0 0 1 .7.71Z\" fill=\"#13a10e\"></path>\n        </svg>`;\n\n    case SvgIcon.PresenceOofAvailable:\n      return html`\n        <svg fill=\"#13a10e\" aria-hidden=\"true\" width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M5 0a5 5 0 1 0 0 10A5 5 0 0 0 5 0ZM1 5a4 4 0 1 1 8 0 4 4 0 0 1-8 0Zm6.1-1.6c.2.2.2.5 0 .7L4.85 6.35a.5.5 0 0 1-.7 0l-1-1a.5.5 0 1 1 .7-.7l.65.64 1.9-1.9c.2-.19.5-.19.7 0Z\" fill=\"#13a10e\"></path>\n        </svg>`;\n\n    case SvgIcon.PresenceBusy:\n      return html`\n        <svg fill=\"#d13438\" aria-hidden=\"true\" width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M10 5A5 5 0 1 1 0 5a5 5 0 0 1 10 0Z\" fill=\"#d13438\"></path>\n        </svg>`;\n\n    case SvgIcon.PresenceOofBusy:\n      return html`\n        <svg fill=\"#d13438\" aria-hidden=\"true\" width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M5 1a4 4 0 1 0 0 8 4 4 0 0 0 0-8ZM0 5a5 5 0 1 1 10 0A5 5 0 0 1 0 5Z\" fill=\"#d13438\"></path>\n        </svg>\n      `;\n\n    case SvgIcon.PresenceDnd:\n      return html`\n        <svg fill=\"#d13438\" aria-hidden=\"true\" width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M5 10A5 5 0 1 0 5 0a5 5 0 0 0 0 10ZM3.5 4.5h3a.5.5 0 0 1 0 1h-3a.5.5 0 0 1 0-1Z\" fill=\"#d13438\"></path>\n        </svg>`;\n\n    case SvgIcon.PresenceOofDnd:\n      return html`\n        <svg fill=\"#d13438\" aria-hidden=\"true\" width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M5 0a5 5 0 1 0 0 10A5 5 0 0 0 5 0ZM1 5a4 4 0 1 1 8 0 4 4 0 0 1-8 0Zm2 0c0-.28.22-.5.5-.5h3a.5.5 0 0 1 0 1h-3A.5.5 0 0 1 3 5Z\" fill=\"#d13438\"></path>\n        </svg>`;\n\n    case SvgIcon.PresenceAway:\n      return html`\n        <svg fill=\"#eaa300\" aria-hidden=\"true\" width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M5 10A5 5 0 1 0 5 0a5 5 0 0 0 0 10Zm0-7v1.8l1.35 1.35a.5.5 0 1 1-.7.7l-1.5-1.5A.5.5 0 0 1 4 5V3a.5.5 0 0 1 1 0Z\" fill=\"#eaa300\"></path>\n        </svg>`;\n\n    case SvgIcon.PresenceOofAway:\n      return html`\n        <svg fill=\"#c239b3\" aria-hidden=\"true\" width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M5.35 3.85a.5.5 0 1 0-.7-.7l-1.5 1.5a.5.5 0 0 0 0 .7l1.5 1.5a.5.5 0 1 0 .7-.7L4.7 5.5h1.8a.5.5 0 1 0 0-1H4.7l.65-.65ZM5 0a5 5 0 1 0 0 10A5 5 0 0 0 5 0ZM1 5a4 4 0 1 1 8 0 4 4 0 0 1-8 0Z\" fill=\"#c239b3\"></path>\n        </svg>`;\n\n    case SvgIcon.PresenceOffline:\n      return html`\n        <svg fill=\"#929292\" aria-hidden=\"true\" width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M6.85 3.15c.2.2.2.5 0 .7L5.71 5l1.14 1.15a.5.5 0 1 1-.7.7L5 5.71 3.85 6.85a.5.5 0 1 1-.7-.7L4.29 5 3.15 3.85a.5.5 0 1 1 .7-.7L5 4.29l1.15-1.14c.2-.2.5-.2.7 0ZM0 5a5 5 0 1 1 10 0A5 5 0 0 1 0 5Zm5-4a4 4 0 1 0 0 8 4 4 0 0 0 0-8Z\" fill=\"#929292\"></path>\n        </svg>`;\n\n    case SvgIcon.PresenceStatusUnknown:\n      return html`\n        <svg fill=\"#d13438\" aria-hidden=\"true\" width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M5 1a4 4 0 1 0 0 8 4 4 0 0 0 0-8ZM0 5a5 5 0 1 1 10 0A5 5 0 0 1 0 5Z\" fill=\"#d13438\"></path>\n        </svg>`;\n  }\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { CacheService } from '@microsoft/mgt-element';\n\nexport const getRelativeDisplayDate = (date: Date): string => {\n  const now = new Date();\n\n  // Today -> 5:23 PM\n  const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n  if (date >= today) {\n    return date.toLocaleString('default', {\n      hour: 'numeric',\n      minute: 'numeric'\n    });\n  }\n\n  // This week -> Sun 3:04 PM\n  const sunday = new Date(today);\n  sunday.setDate(now.getDate() - now.getDay());\n  if (date >= sunday) {\n    return date.toLocaleString('default', {\n      hour: 'numeric',\n      minute: 'numeric',\n      weekday: 'short'\n    });\n  }\n\n  // Last two week -> Sun 8/2\n  const lastTwoWeeks = new Date(sunday);\n  lastTwoWeeks.setDate(sunday.getDate() - 7);\n  if (date >= lastTwoWeeks) {\n    return date.toLocaleString('default', {\n      day: 'numeric',\n      month: 'numeric',\n      weekday: 'short'\n    });\n  }\n\n  // More than two weeks ago -> 8/1/2020\n  return date.toLocaleString('default', {\n    day: 'numeric',\n    month: 'numeric',\n    year: 'numeric'\n  });\n};\n\n/**\n * returns day, month and year\n *\n * @export\n * @param {Date} date\n * @returns\n */\nexport const getDateString = (date: Date) => {\n  const month = date.getMonth();\n  const day = date.getDate();\n  const year = date.getFullYear();\n\n  return `${day} / ${month} / ${year}`;\n};\n\n/**\n * returns month and day\n *\n * @export\n * @param {Date} date\n * @returns\n */\nexport const getShortDateString = (date: Date) => {\n  const month = date.getMonth();\n  const day = date.getDate();\n\n  return `${getMonthString(month)} ${day}`;\n};\n\n/**\n * returns month string based on number\n *\n * @export\n * @param {number} month\n * @returns {string}\n */\nexport const getMonthString = (month: number): string => {\n  switch (month) {\n    case 0:\n      return 'January';\n    case 1:\n      return 'February';\n    case 2:\n      return 'March';\n    case 3:\n      return 'April';\n    case 4:\n      return 'May';\n    case 5:\n      return 'June';\n    case 6:\n      return 'July';\n    case 7:\n      return 'August';\n    case 8:\n      return 'September';\n    case 9:\n      return 'October';\n    case 10:\n      return 'November';\n    case 11:\n      return 'December';\n    default:\n      return 'Month';\n  }\n};\n\n/**\n * returns day of week string based on number\n * where 0 === Sunday\n *\n * @export\n * @param {number} day\n * @returns {string}\n */\nexport const getDayOfWeekString = (day: number): string => {\n  switch (day) {\n    case 0:\n      return 'Sunday';\n    case 1:\n      return 'Monday';\n    case 2:\n      return 'Tuesday';\n    case 3:\n      return 'Wednesday';\n    case 4:\n      return 'Thursday';\n    case 5:\n      return 'Friday';\n    case 6:\n      return 'Saturday';\n    default:\n      return 'Day';\n  }\n};\n\n/**\n * retrieve the days in the month provided by number\n *\n * @export\n * @param {number} monthNum\n * @returns {number}\n */\nexport const getDaysInMonth = (monthNum: number): number => {\n  switch (monthNum) {\n    case 1:\n      return 28;\n\n    case 3:\n    case 5:\n    case 8:\n    case 10:\n    default:\n      return 30;\n\n    case 0:\n    case 2:\n    case 4:\n    case 6:\n    case 7:\n    case 9:\n    case 11:\n      return 31;\n  }\n};\n\n/**\n * returns serialized date from month number and year number\n *\n * @export\n * @param {number} month\n * @param {number} year\n * @returns\n */\nexport const getDateFromMonthYear = (month: number, year: number) => {\n  const yearStr = `${year}`;\n\n  let monthStr = `${month}`;\n  if (monthStr.length < 2) {\n    monthStr = '0' + monthStr;\n  }\n\n  return new Date(`${yearStr}-${monthStr}-1T12:00:00-${new Date().getTimezoneOffset() / 60}`);\n};\n\n/**\n * ensures one call at a time\n *\n * @export\n * @param {*} func\n * @param {*} time\n * @returns\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport const debounce = (func: Function, time: number) => {\n  let timeout: number;\n\n  return function () {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return, prefer-rest-params\n    const functionCall = () => func.apply(this, arguments);\n\n    window.clearTimeout(timeout);\n    timeout = window.setTimeout(functionCall, time);\n  };\n};\n\n/**\n * converts a blob to base64 encoding\n *\n * @param {Blob} blob\n * @returns {Promise<string>}\n */\nexport const blobToBase64 = (blob: Blob): Promise<string> => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onerror = reject;\n    reader.onload = () => {\n      resolve(reader.result as string);\n    };\n    reader.readAsDataURL(blob);\n  });\n};\n\n/**\n * extracts an email address from a string\n *\n * @param {string} emailString\n * @returns {string}\n */\nexport const extractEmailAddress = (emailString: string): string => {\n  if (emailString.startsWith('[')) {\n    return emailString.match(/([a-zA-Z0-9+._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9_-]+)/gi).toString();\n  } else return emailString;\n};\n\n/**\n * checks if the email string is a valid email\n *\n * @param {string} emailString\n * @returns {boolean}\n */\nexport const isValidEmail = (emailString: string): boolean => {\n  const emailRx =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return emailRx.test(emailString);\n};\n\n/**\n * Convert bytes to human readable.\n *\n * @param bytes\n * @param decimals\n * @returns\n */\nexport const formatBytes = (bytes: number, decimals = 2) => {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(dm))} ${sizes[i]}`;\n};\n\n/**\n * Formats the a provided summary to valid html\n *\n * @param summary\n * @returns string\n */\nexport const sanitizeSummary = (summary: string) => {\n  if (summary) {\n    summary = summary?.replace(/<ddd\\/>/gi, '...');\n    summary = summary?.replace(/<c0>/gi, '<b>');\n    summary = summary?.replace(/<\\/c0>/gi, '</b>');\n  }\n\n  return summary;\n};\n\n/**\n * Trims the file extension from a file name\n *\n * @param fileName\n * @returns\n */\nexport const trimFileExtension = (fileName: string) => {\n  return fileName?.replace(/\\.[^/.]+$/, '');\n};\n\n/**\n * Get the name of a piece of content from the url\n *\n * @param webUrl\n * @returns\n */\nexport const getNameFromUrl = (webUrl: string) => {\n  const url = new URL(webUrl);\n  const name = url.pathname.split('/').pop();\n  return name.replace(/-/g, ' ');\n};\n\n/**\n * Defines the expiration time\n *\n * @param currentInvalidationPeriod\n * @returns number\n */\nexport const getResponseInvalidationTime = (currentInvalidationPeriod: number) => {\n  return (\n    currentInvalidationPeriod ||\n    CacheService.config.response.invalidationPeriod ||\n    CacheService.config.defaultInvalidationPeriod\n  );\n};\n\n/**\n * Whether the response store is enabled\n *\n * @returns boolean\n */\nexport const getIsResponseCacheEnabled = () => {\n  return CacheService.config.response.isEnabled && CacheService.config.isEnabled;\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { LitElement, PropertyValueMap, PropertyValues } from 'lit';\nimport { state } from 'lit/decorators.js';\nimport { ProviderState } from '../providers/IProvider';\nimport { Providers } from '../providers/Providers';\nimport { LocalizationHelper } from '../utils/LocalizationHelper';\nimport { PACKAGE_VERSION } from '../utils/version';\n\n/**\n * Defines media query based on component width\n *\n * @export\n * @enum {string}\n */\nexport enum ComponentMediaQuery {\n  /**\n   * devices with width < 768\n   */\n  mobile = '',\n\n  /**\n   * devices with width < 1200\n   */\n  tablet = 'tablet',\n\n  /**\n   * devices with width > 1200\n   */\n  desktop = 'desktop'\n}\n\n/**\n * BaseComponent extends LitElement adding mgt specific features to all components\n *\n * @export  MgtBaseComponent\n * @abstract\n * @class MgtBaseComponent\n * @extends {LitElement}\n * @deprecated Use MgtBaseTaskComponent instead\n */\nexport abstract class MgtBaseComponent extends LitElement {\n  @state()\n  protected providerState: ProviderState = ProviderState.Loading;\n  /**\n   * Exposes the semver of the library the component is part of\n   *\n   * @readonly\n   * @static\n   * @memberof MgtBaseComponent\n   */\n  public static get packageVersion() {\n    return PACKAGE_VERSION;\n  }\n\n  /**\n   * Gets or sets the direction of the component\n   *\n   * @protected\n   * @memberof MgtBaseComponent\n   */\n  @state() protected direction: 'ltr' | 'rtl' | 'auto' = 'ltr';\n\n  /**\n   * Gets the ComponentMediaQuery of the component\n   *\n   * @readonly\n   * @type {MgtElement.ComponentMediaQuery}\n   * @memberof MgtBaseComponent\n   */\n  public get mediaQuery(): ComponentMediaQuery {\n    if (this.offsetWidth < 768) {\n      return ComponentMediaQuery.mobile;\n    } else if (this.offsetWidth < 1200) {\n      return ComponentMediaQuery.tablet;\n    } else {\n      return ComponentMediaQuery.desktop;\n    }\n  }\n\n  /**\n   * A flag to check if the component is loading data state.\n   *\n   * @protected\n   * @memberof MgtBaseComponent\n   */\n  protected get isLoadingState(): boolean {\n    return this._isLoadingState;\n  }\n\n  /**\n   * A flag to check if the component has updated once.\n   *\n   * @readonly\n   * @protected\n   * @type {boolean}\n   * @memberof MgtBaseComponent\n   */\n  protected get isFirstUpdated(): boolean {\n    return this._isFirstUpdated;\n  }\n\n  /**\n   * returns component strings\n   *\n   * @readonly\n   * @protected\n   * @memberof MgtBaseComponent\n   */\n  protected get strings(): Record<string, string> {\n    return {};\n  }\n\n  /**\n   * determines if login component is in loading state\n   *\n   * @type {boolean}\n   */\n  private _isLoadingState = false;\n\n  private _isFirstUpdated = false;\n  private _currentLoadStatePromise: Promise<unknown>;\n\n  constructor() {\n    super();\n    this.handleDirectionChanged();\n    this.handleLocalizationChanged();\n  }\n\n  /**\n   * Invoked each time the custom element is appended into a document-connected element\n   *\n   * @memberof MgtBaseComponent\n   */\n  public connectedCallback() {\n    super.connectedCallback();\n    LocalizationHelper.onStringsUpdated(this.handleLocalizationChanged);\n    LocalizationHelper.onDirectionUpdated(this.handleDirectionChanged);\n  }\n\n  /**\n   * Invoked each time the custom element is removed from a document-connected element\n   *\n   * @memberof MgtBaseComponent\n   */\n  public disconnectedCallback() {\n    super.disconnectedCallback();\n    LocalizationHelper.removeOnStringsUpdated(this.handleLocalizationChanged);\n    LocalizationHelper.removeOnDirectionUpdated(this.handleDirectionChanged);\n    Providers.removeProviderUpdatedListener(this.handleProviderUpdates);\n    Providers.removeActiveAccountChangedListener(this.handleActiveAccountUpdates);\n  }\n\n  /**\n   * Invoked when the element is first updated. Implement to perform one time\n   * work on the element after update.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   */\n  protected firstUpdated(changedProperties: PropertyValueMap<unknown> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(changedProperties);\n    this._isFirstUpdated = true;\n    Providers.onProviderUpdated(this.handleProviderUpdates);\n    Providers.onActiveAccountChanged(this.handleActiveAccountUpdates);\n    void this.requestStateUpdate();\n  }\n\n  /**\n   * load state into the component.\n   * Override this function to provide additional loading logic.\n   */\n  protected loadState(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  /**\n   * Used to clear state in inherited components\n   */\n  protected clearState(): void {\n    // no-op\n  }\n\n  /**\n   * helps facilitate creation of events across components\n   *\n   * @protected\n   * @param {string} eventName\n   * @param {*} [detail]\n   * @param {boolean} [bubbles=false]\n   * @param {boolean} [cancelable=false]\n   * @param {boolean} [composed=false]\n   * @return {*}  {boolean}\n   * @memberof MgtBaseComponent\n   */\n  protected fireCustomEvent(\n    eventName: string,\n    detail?: unknown,\n    bubbles = false,\n    cancelable = false,\n    composed = false\n  ): boolean {\n    const event = new CustomEvent(eventName, {\n      bubbles,\n      cancelable,\n      composed,\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      detail\n    });\n    return this.dispatchEvent(event);\n  }\n\n  /**\n   * Invoked whenever the element is updated. Implement to perform\n   * post-updating tasks via DOM APIs, for example, focusing an element.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * * @param changedProperties Map of changed properties with old values\n   */\n  protected updated(changedProperties: PropertyValues) {\n    super.updated(changedProperties);\n    const event = new CustomEvent('updated', {\n      bubbles: true,\n      cancelable: true\n    });\n    this.dispatchEvent(event);\n  }\n\n  /**\n   * Request to reload the state.\n   * Use reload instead of load to ensure loading events are fired.\n   *\n   * @protected\n   * @memberof MgtBaseComponent\n   */\n  protected async requestStateUpdate(force = false): Promise<unknown> {\n    // the component is still bootstraping - wait until first updated\n    if (!this._isFirstUpdated) {\n      return;\n    }\n\n    // Wait for the current load promise to complete (unless forced).\n    if (this.isLoadingState && !force) {\n      await this._currentLoadStatePromise;\n    }\n\n    const provider = Providers.globalProvider;\n\n    if (!provider) {\n      return Promise.resolve();\n    }\n\n    if (provider.state === ProviderState.SignedOut) {\n      // Signed out, clear the component state\n      this.clearState();\n      return;\n    } else if (provider.state === ProviderState.Loading) {\n      // The provider state is indeterminate. Do nothing.\n      return Promise.resolve();\n    } else {\n      // Signed in, load the internal component state\n      // eslint-disable-next-line @typescript-eslint/no-misused-promises, no-async-promise-executor\n      const loadStatePromise = new Promise<void>(async (resolve, reject) => {\n        try {\n          this.setLoadingState(true);\n          this.fireCustomEvent('loadingInitiated');\n\n          await this.loadState();\n\n          this.setLoadingState(false);\n          this.fireCustomEvent('loadingCompleted');\n          resolve();\n        } catch (e) {\n          // Loading failed. Clear any partially set data.\n          this.clearState();\n\n          this.setLoadingState(false);\n          this.fireCustomEvent('loadingFailed');\n          reject(e);\n        }\n\n        // Return the load state promise.\n        // If loading + forced, chain the promises.\n        // This is to account for the lack of a cancellation token concept.\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-assignment\n        return (this._currentLoadStatePromise =\n          // eslint-disable-next-line @typescript-eslint/no-misused-promises\n          this.isLoadingState && !!this._currentLoadStatePromise && force\n            ? // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n              this._currentLoadStatePromise.then(() => loadStatePromise)\n            : loadStatePromise);\n      });\n    }\n  }\n\n  protected setLoadingState = (value: boolean) => {\n    if (this._isLoadingState === value) {\n      return;\n    }\n\n    this._isLoadingState = value;\n    this.requestUpdate('isLoadingState');\n  };\n\n  private readonly handleProviderUpdates = () => {\n    this.providerState = Providers.globalProvider?.state ?? ProviderState.Loading;\n    void this.requestStateUpdate();\n  };\n\n  private readonly handleActiveAccountUpdates = () => {\n    this.clearState();\n    void this.requestStateUpdate();\n  };\n\n  private readonly handleLocalizationChanged = () => {\n    LocalizationHelper.updateStringsForTag(this.tagName, this.strings);\n    this.requestUpdate();\n  };\n\n  private readonly handleDirectionChanged = () => {\n    this.direction = LocalizationHelper.getDocumentDirection();\n  };\n}\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { Task } from '@lit/task';\n\nimport { LitElement, PropertyValueMap, PropertyValues, TemplateResult, html } from 'lit';\nimport { state } from 'lit/decorators.js';\nimport { ProviderState } from '../providers/IProvider';\nimport { Providers } from '../providers/Providers';\nimport { LocalizationHelper } from '../utils/LocalizationHelper';\nimport { PACKAGE_VERSION } from '../utils/version';\nimport { ComponentMediaQuery } from './baseComponent';\n\n/**\n * BaseComponent extends LitElement adding mgt specific features to all components\n *\n * @export  MgtBaseTaskComponent\n * @abstract\n * @class MgtBaseTaskComponent\n * @extends {LitElement}\n */\nexport abstract class MgtBaseTaskComponent extends LitElement {\n  /**\n   * Supplies the component with a reactive property based on the current provider state\n   *\n   * @protected\n   * @memberof MgtBaseTaskComponent\n   */\n  @state() protected providerState: ProviderState = ProviderState.Loading;\n  /**\n   * Exposes the semver of the library the component is part of\n   *\n   * @readonly\n   * @static\n   * @memberof MgtBaseTaskComponent\n   */\n  public static get packageVersion() {\n    return PACKAGE_VERSION;\n  }\n\n  /**\n   * Gets or sets the direction of the component\n   *\n   * @protected\n   * @memberof MgtBaseTaskComponent\n   */\n  @state() protected direction: 'ltr' | 'rtl' | 'auto' = 'ltr';\n\n  /**\n   * Gets the ComponentMediaQuery of the component\n   *\n   * @readonly\n   * @type {MgtElement.ComponentMediaQuery}\n   * @memberof MgtBaseTaskComponent\n   */\n  public get mediaQuery(): ComponentMediaQuery {\n    if (this.offsetWidth < 768) {\n      return ComponentMediaQuery.mobile;\n    } else if (this.offsetWidth < 1200) {\n      return ComponentMediaQuery.tablet;\n    } else {\n      return ComponentMediaQuery.desktop;\n    }\n  }\n\n  /**\n   * A flag to check if the component has updated once.\n   *\n   * @readonly\n   * @protected\n   * @type {boolean}\n   * @memberof MgtBaseTaskComponent\n   */\n  protected get isFirstUpdated(): boolean {\n    return this._isFirstUpdated;\n  }\n\n  /**\n   * returns component strings\n   *\n   * @readonly\n   * @protected\n   * @memberof MgtBaseTaskComponent\n   */\n  protected get strings(): Record<string, string> {\n    return {};\n  }\n\n  private _isFirstUpdated = false;\n\n  constructor() {\n    super();\n    this.handleDirectionChanged();\n    this.handleLocalizationChanged();\n  }\n\n  /**\n   * Invoked each time the custom element is appended into a document-connected element\n   *\n   * @memberof MgtBaseTaskComponent\n   */\n  public connectedCallback() {\n    super.connectedCallback();\n    LocalizationHelper.onStringsUpdated(this.handleLocalizationChanged);\n    LocalizationHelper.onDirectionUpdated(this.handleDirectionChanged);\n  }\n\n  /**\n   * Invoked each time the custom element is removed from a document-connected element\n   *\n   * @memberof MgtBaseTaskComponent\n   */\n  public disconnectedCallback() {\n    super.disconnectedCallback();\n    LocalizationHelper.removeOnStringsUpdated(this.handleLocalizationChanged);\n    LocalizationHelper.removeOnDirectionUpdated(this.handleDirectionChanged);\n    Providers.removeProviderUpdatedListener(this.handleProviderUpdates);\n    Providers.removeActiveAccountChangedListener(this.handleActiveAccountUpdates);\n  }\n\n  /**\n   * Invoked when the element is first updated. Implement to perform one time\n   * work on the element after update.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   */\n  protected firstUpdated(changedProperties: PropertyValueMap<unknown> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(changedProperties);\n    this._isFirstUpdated = true;\n    Providers.onProviderUpdated(this.handleProviderUpdates);\n    Providers.onActiveAccountChanged(this.handleActiveAccountUpdates);\n  }\n\n  /**\n   * Used to clear state in inherited components\n   */\n  protected clearState(): void {\n    // no-op\n  }\n\n  /**\n   * helps facilitate creation of events across components\n   *\n   * @protected\n   * @param {string} eventName\n   * @param {*} [detail]\n   * @param {boolean} [bubbles=false]\n   * @param {boolean} [cancelable=false]\n   * @param {boolean} [composed=false]\n   * @return {*}  {boolean}\n   * @memberof MgtBaseTaskComponent\n   */\n  protected fireCustomEvent(\n    eventName: string,\n    detail?: unknown,\n    bubbles = false,\n    cancelable = false,\n    composed = false\n  ): boolean {\n    const event = new CustomEvent(eventName, {\n      bubbles,\n      cancelable,\n      composed,\n      detail\n    });\n    return this.dispatchEvent(event);\n  }\n\n  /**\n   * Invoked whenever the element is updated. Implement to perform\n   * post-updating tasks via DOM APIs, for example, focusing an element.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * * @param changedProperties Map of changed properties with old values\n   */\n  protected updated(changedProperties: PropertyValues) {\n    super.updated(changedProperties);\n    this.fireCustomEvent('updated', undefined, true, false);\n  }\n\n  /**\n   * load state into the component.\n   * Override this function to provide actual loading logic.\n   */\n  protected async loadState() {\n    return Promise.resolve();\n  }\n\n  /**\n   * Override this function to provide the actual list of properties to trigger the task to run.\n   * The default implementation returns an array with the providerState.\n   * @returns {unknown[]} the properties when changed which trigger the Task to run\n   */\n  protected args(): unknown[] {\n    return [this.providerState];\n  }\n\n  /**\n   * Task that is run whenever one of the args changes\n   * By default this task will call loadState\n   */\n  protected _task = new Task(this, {\n    task: () => this.loadState(),\n    args: () => this.args()\n  });\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method must return\n   * a lit-html TemplateResult. Setting properties inside this method will *not*\n   * trigger the element to update.\n   */\n  protected render() {\n    return this._task.render({\n      pending: this.renderLoading,\n      complete: this.renderContent,\n      error: this.renderError\n    });\n  }\n\n  /**\n   * A default loading template.\n   * @returns default loading template\n   */\n  protected renderLoading = (): TemplateResult => {\n    return html`<span>Loading...</span>`;\n  };\n\n  protected renderError = (e: unknown): TemplateResult => {\n    return html`<p>Error: ${e}</p>`;\n  };\n\n  protected renderContent = (): TemplateResult => {\n    return html`<!-- baseTaskComponent, please implement renderContent -->`;\n  };\n\n  private readonly handleProviderUpdates = () => {\n    this.providerState = Providers.globalProvider?.state ?? ProviderState.Loading;\n  };\n\n  private readonly handleActiveAccountUpdates = () => {\n    this.clearState();\n  };\n\n  private readonly handleLocalizationChanged = () => {\n    LocalizationHelper.updateStringsForTag(this.tagName, this.strings);\n    this.requestUpdate();\n  };\n\n  private readonly handleDirectionChanged = () => {\n    this.direction = LocalizationHelper.getDocumentDirection();\n  };\n}\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\ntype ContextualTemplateElement = HTMLTemplateElement & {\n  /**\n   * The data context of the parent template\n   */\n  $parentTemplateContext?: object;\n};\n\n/**\n * Helper class for Template Instantiation\n *\n * @export\n * @class TemplateHelper\n */\nexport class TemplateHelper {\n  /**\n   * Render a template into a HTMLElement with the appropriate data context\n   *\n   * Ex:\n   * ```\n   * <template>\n   *  <div>{{myObj.someStr}}</div>\n   *  <div data-for=\"key in myObj.list\">\n   *    <div>{{key.anotherStr}}</div>\n   *  </div>\n   * </template>\n   * ```\n   *\n   * @param root the root element to parent the rendered content\n   * @param template the template to render\n   * @param context the data context to be applied\n   */\n  public static renderTemplate(root: HTMLElement, template: ContextualTemplateElement, context: object) {\n    // inherit context from parent template\n    if (template.$parentTemplateContext) {\n      context = { ...context, $parent: template.$parentTemplateContext };\n    }\n\n    let rendered: Node;\n\n    if (template.content?.childNodes.length) {\n      const templateContent = template.content.cloneNode(true);\n      rendered = this.renderNode(templateContent, root, context);\n    } else if (template.childNodes.length) {\n      const div = document.createElement('div');\n\n      for (const node of template.childNodes) {\n        div.appendChild(this.simpleCloneNode(node));\n      }\n      rendered = this.renderNode(div, root, context);\n    }\n\n    if (rendered) {\n      root.appendChild(rendered);\n    }\n  }\n\n  /**\n   * Set an alternative binding syntax. Default is {{ <value> }}\n   *\n   * @static\n   * @param {string} startStr start of binding syntax\n   * @param {string} endStr end of binding syntax\n   * @memberof TemplateHelper\n   */\n  public static setBindingSyntax(startStr: string, endStr: string) {\n    this._startExpression = startStr;\n    this._endExpression = endStr;\n\n    const start = this.escapeRegex(this._startExpression);\n    const end = this.escapeRegex(this._endExpression);\n\n    this._expression = new RegExp(`${start}\\\\s*([$\\\\w\\\\.,'\"\\\\s()\\\\[\\\\]]+)\\\\s*${end}`, 'g');\n  }\n\n  /**\n   * Global context containing data or functions available to\n   * all templates for binding\n   *\n   * @readonly\n   * @static\n   * @memberof TemplateHelper\n   */\n  public static get globalContext() {\n    return this._globalContext;\n  }\n\n  private static readonly _globalContext = {};\n\n  private static get expression() {\n    if (!this._expression) {\n      this.setBindingSyntax('{{', '}}');\n    }\n\n    return this._expression;\n  }\n\n  private static _startExpression: string;\n  private static _endExpression: string;\n  private static _expression: RegExp;\n\n  private static escapeRegex(string: string) {\n    return string.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  // simple implementation of deep cloneNode\n  // required for nested templates in polyfilled browsers\n  private static simpleCloneNode(node: ChildNode) {\n    if (!node) {\n      return null;\n    }\n\n    const clone = node.cloneNode(false);\n\n    for (const child of node.childNodes) {\n      const childClone = this.simpleCloneNode(child);\n      if (childClone) {\n        clone.appendChild(childClone);\n      }\n    }\n\n    return clone;\n  }\n\n  private static expandExpressionsAsString(str: string, context: object) {\n    return str.replace(this.expression, (match: string, p1: string) => {\n      const value = this.evalInContext(p1 || this.trimExpression(match), context);\n      if (value) {\n        if (typeof value === 'object') {\n          return JSON.stringify(value);\n        } else {\n          // eslint-disable-next-line @typescript-eslint/no-base-to-string\n          return value.toString();\n        }\n      }\n      return '';\n    });\n  }\n\n  private static renderNode(node: Node, root: HTMLElement, context: object) {\n    if (node.nodeName === '#text') {\n      node.textContent = this.expandExpressionsAsString(node.textContent, context);\n      return node;\n    } else if (node.nodeName === 'TEMPLATE') {\n      (node as ContextualTemplateElement).$parentTemplateContext = context;\n      return node;\n    }\n\n    const nodeElement = node as HTMLElement;\n\n    // replace attribute values\n    if (nodeElement.attributes) {\n      for (const attribute of nodeElement.attributes) {\n        if (attribute.name === 'data-props') {\n          const propsValue = this.trimExpression(attribute.value);\n          for (const prop of propsValue.split(',')) {\n            const keyValue = prop.trim().split(':');\n            if (keyValue.length === 2) {\n              const key = keyValue[0].trim();\n              const value = this.evalInContext(keyValue[1].trim(), context);\n\n              if (key.startsWith('@')) {\n                // event\n                if (typeof value === 'function') {\n                  // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                  nodeElement.addEventListener(key.substring(1), e => value(e, context, root));\n                }\n              } else {\n                nodeElement[key] = value;\n              }\n            }\n          }\n        } else {\n          nodeElement.setAttribute(attribute.name, this.expandExpressionsAsString(attribute.value, context));\n        }\n      }\n    }\n\n    // don't process nodes that will loop yet, but\n    // keep a reference of them\n    const loopChildren: HTMLElement[] = [];\n\n    // list of children to remove (ex, when data-if == false)\n    const removeChildren = [];\n    let previousChildWasIfAndTrue = false;\n\n    for (const childNode of node.childNodes) {\n      const childElement = childNode as HTMLElement;\n      let previousChildWasIfAndTrueSet = false;\n\n      if (childElement.dataset) {\n        let childWillBeRemoved = false;\n\n        if (childElement.dataset.if) {\n          const expression = childElement.dataset.if;\n          if (!this.evalBoolInContext(this.trimExpression(expression), context)) {\n            removeChildren.push(childElement);\n            childWillBeRemoved = true;\n          } else {\n            childElement.removeAttribute('data-if');\n            previousChildWasIfAndTrue = true;\n            previousChildWasIfAndTrueSet = true;\n          }\n        } else if (typeof childElement.dataset.else !== 'undefined') {\n          if (previousChildWasIfAndTrue) {\n            removeChildren.push(childElement);\n            childWillBeRemoved = true;\n          } else {\n            childElement.removeAttribute('data-else');\n          }\n        }\n\n        if (childElement.dataset.for && !childWillBeRemoved) {\n          loopChildren.push(childElement);\n        } else if (!childWillBeRemoved) {\n          this.renderNode(childNode, root, context);\n        }\n      } else {\n        this.renderNode(childNode, root, context);\n      }\n\n      // clear the flag if the current node wasn't data-if\n      // or if it was data-if but it wasn't true\n      if (!previousChildWasIfAndTrueSet && childNode.nodeName !== '#text') {\n        previousChildWasIfAndTrue = false;\n      }\n    }\n\n    // now handle nodes that need to be removed\n    for (const child of removeChildren) {\n      nodeElement.removeChild(child);\n    }\n\n    // now handle nodes that should loop\n    for (const childElement of loopChildren) {\n      const loopExpression = childElement.dataset.for;\n      const loopTokens = this.trimExpression(loopExpression).split(/\\s(in|of)\\s/i);\n\n      if (loopTokens.length === 3) {\n        // don't really care what's in the middle at this point\n        const itemName = loopTokens[0].trim();\n        const listKey = loopTokens[2].trim();\n\n        const list = this.evalInContext(listKey, context);\n        if (Array.isArray(list)) {\n          // first remove the child\n          // we will need to make copy of the child for\n          // each element in the list\n          childElement.removeAttribute('data-for');\n\n          for (let j = 0; j < list.length; j++) {\n            const newContext = {\n              $index: j,\n              ...context\n            };\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            newContext[itemName] = list[j];\n\n            const clone = childElement.cloneNode(true);\n            this.renderNode(clone, root, newContext);\n            nodeElement.insertBefore(clone, childElement);\n          }\n        }\n        nodeElement.removeChild(childElement);\n      }\n    }\n\n    return node;\n  }\n\n  private static evalBoolInContext(expression: string, context: object): boolean {\n    context = { ...context, ...this.globalContext };\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-implied-eval\n    return new Function('with(this) { return !!(' + expression + ')}').call(context);\n  }\n\n  private static evalInContext(expression: string, context: object): unknown {\n    context = { ...context, ...this.globalContext };\n    // eslint-disable-next-line @typescript-eslint/no-implied-eval\n    const func = new Function('with(this) { return ' + expression + ';}');\n    let result: unknown;\n    try {\n      result = func.call(context);\n    } catch (e) {\n      /* empty */\n    }\n    return result;\n  }\n\n  private static trimExpression(expression: string) {\n    expression = expression.trim();\n\n    if (expression.startsWith(this._startExpression) && expression.endsWith(this._endExpression)) {\n      expression = expression.substr(\n        this._startExpression.length,\n        expression.length - this._startExpression.length - this._endExpression.length\n      );\n      expression = expression.trim();\n    }\n\n    return expression;\n  }\n}\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { property, state } from 'lit/decorators.js';\nimport { html, PropertyValueMap, PropertyValues, TemplateResult } from 'lit';\n\nimport { equals } from '../utils/equals';\nimport { TemplateContext } from '../utils/TemplateContext';\nimport { TemplateHelper } from '../utils/TemplateHelper';\nimport { MgtBaseTaskComponent } from './baseTaskComponent';\nimport { OrderedHtmlTemplate, RenderedTemplates, TemplateRenderedData } from './templatedComponent';\n\n/**\n * An abstract class that defines a templatable web component\n *\n * @export\n * @abstract\n * @class MgtTemplatedTaskComponent\n * @extends {MgtBaseTaskComponent}\n *\n * @fires {CustomEvent<MgtElement.TemplateRenderedData>} templateRendered - fires when a template is rendered\n */\nexport abstract class MgtTemplatedTaskComponent extends MgtBaseTaskComponent {\n  /**\n   * Additional data context to be used in template binding\n   * Use this to add event listeners or value converters\n   *\n   * @type {MgtElement.TemplateContext}\n   * @memberof MgtTemplatedTaskComponent\n   */\n  @property({ attribute: false }) public templateContext: TemplateContext;\n\n  /**\n   *\n   * Gets or sets the error (if any) of the request\n   *\n   * @type object\n   * @memberof MgtSearchResults\n   */\n  @state() protected error: object;\n\n  /**\n   * Holds all templates defined by developer\n   *\n   * @protected\n   * @memberof MgtTemplatedTaskComponent\n   */\n  protected templates: Record<string, OrderedHtmlTemplate> = {};\n\n  private _renderedSlots = false;\n  private _renderedTemplates: RenderedTemplates = {};\n  private _slotNamesAddedDuringRender = [];\n\n  constructor() {\n    super();\n\n    this.templateContext = this.templateContext || {};\n  }\n\n  /**\n   * Render the loading state\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtFile\n   */\n  protected renderLoading = (): TemplateResult => {\n    return this.renderTemplate('loading', null) || html``;\n  };\n\n  /**\n   * Updates the element. This method reflects property values to attributes.\n   * It can be overridden to render and keep updated element DOM.\n   * Setting properties inside this method will *not* trigger\n   * another update.\n   *\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected update(changedProperties: PropertyValueMap<unknown> | Map<PropertyKey, unknown>) {\n    this.templates = this.getTemplates();\n    this._slotNamesAddedDuringRender = [];\n    super.update(changedProperties);\n  }\n\n  /**\n   * Invoked whenever the element is updated. Implement to perform\n   * post-updating tasks via DOM APIs, for example, focusing an element.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * * @param changedProperties Map of changed properties with old values\n   */\n  protected updated(changedProperties: PropertyValues) {\n    super.updated(changedProperties);\n    this.removeUnusedSlottedElements();\n  }\n\n  /**\n   * Render a <template> by type and return content to render\n   *\n   * @param templateType type of template (indicated by the data-type attribute)\n   * @param context the data context that should be expanded in template\n   * @param slotName the slot name that will be used to host the new rendered template. set to a unique value if multiple templates of this type will be rendered. default is templateType\n   */\n  protected renderTemplate(templateType: string, context: object, slotName?: string): TemplateResult {\n    if (!this.hasTemplate(templateType)) {\n      return null;\n    }\n\n    slotName = slotName || templateType;\n    this._slotNamesAddedDuringRender.push(slotName);\n    this._renderedSlots = true;\n\n    const template = html`\n      <slot name=${slotName}></slot>\n    `;\n\n    const dataContext = { ...context, ...this.templateContext };\n\n    if (Object.prototype.hasOwnProperty.call(this._renderedTemplates, slotName)) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      const { context: existingContext, slot } = this._renderedTemplates[slotName];\n      if (equals(existingContext, dataContext)) {\n        return template;\n      }\n      this.removeChild(slot);\n    }\n\n    const div = document.createElement('div');\n    div.slot = slotName;\n    div.dataset.generated = 'template';\n\n    TemplateHelper.renderTemplate(div, this.templates[templateType], dataContext);\n\n    this.appendChild(div);\n\n    this._renderedTemplates[slotName] = { context: dataContext, slot: div };\n\n    const templateRenderedData: TemplateRenderedData = { templateType, context: dataContext, element: div };\n    this.fireCustomEvent('templateRendered', templateRenderedData);\n\n    return template;\n  }\n\n  /**\n   * Check if a specific template has been provided.\n   *\n   * @protected\n   * @param {string} templateName\n   * @returns {boolean}\n   * @memberof MgtTemplatedTaskComponent\n   */\n  protected hasTemplate(templateName: string): boolean {\n    return Boolean(this.templates?.[templateName]);\n  }\n\n  private getTemplates() {\n    const templates: Record<string, OrderedHtmlTemplate> = {};\n\n    for (let i = 0; i < this.children.length; i++) {\n      const child = this.children[i];\n      if (child.nodeName === 'TEMPLATE') {\n        const template = child as OrderedHtmlTemplate;\n        if (template.dataset.type) {\n          templates[template.dataset.type] = template;\n        } else {\n          templates.default = template;\n        }\n\n        template.templateOrder = i;\n      }\n    }\n\n    return templates;\n  }\n\n  /**\n   * Renders an error\n   *\n   * @returns\n   */\n  protected renderError = (e: unknown): TemplateResult => {\n    if (this.hasTemplate('error')) {\n      return this.renderTemplate('error', e as object);\n    }\n\n    return html`\n      <div class=\"error\">\n        ${e}\n      </div>\n    `;\n  };\n\n  private removeUnusedSlottedElements() {\n    if (this._renderedSlots) {\n      for (let i = 0; i < this.children.length; i++) {\n        const child = this.children[i] as HTMLElement;\n        if (child.dataset?.generated && !this._slotNamesAddedDuringRender.includes(child.slot)) {\n          this.removeChild(child);\n          delete this._renderedTemplates[child.slot];\n          i--;\n        }\n      }\n      this._renderedSlots = false;\n    }\n  }\n}\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\n/**\n * Localstorage key for storing names of cache databases\n *\n * @type {string}\n *\n */\n\nexport const dbListKey = 'mgt-db-list';\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { openDB } from 'idb';\nimport { Providers } from '../providers/Providers';\nimport { dbListKey } from './dbListKey';\nimport { CacheItem } from './CacheItem';\nimport { CacheSchema } from './CacheSchema';\n\n/**\n * Represents a store in the cache\n *\n * @class CacheStore\n * @template T\n */\n\nexport class CacheStore<T extends CacheItem> {\n  private readonly schema: CacheSchema;\n  private readonly store: string;\n\n  public constructor(schema: CacheSchema, store: string) {\n    if (!(store in schema.stores)) {\n      throw Error('\"store\" must be defined in the \"schema\"');\n    }\n\n    this.schema = schema;\n    this.store = store;\n  }\n\n  /**\n   * gets value from cache for the given key\n   *\n   * @param {string} key\n   * @returns {Promise<T>}\n   * @memberof Cache\n   */\n  public async getValue(key: string): Promise<T> {\n    if (!window.indexedDB) {\n      return null;\n    }\n    try {\n      const db = await this.getDb();\n      return db.get(this.store, key) as unknown as T;\n    } catch (e) {\n      return null;\n    }\n  }\n\n  /**\n   * inserts value into cache for the given key\n   *\n   * @param {string} key\n   * @param {T} item\n   * @returns\n   * @memberof Cache\n   */\n  public async putValue(key: string, item: T) {\n    if (!window.indexedDB) {\n      return;\n    }\n    try {\n      await (await this.getDb()).put(this.store, { ...item, timeCached: Date.now() }, key);\n    } catch (e) {\n      return;\n    }\n  }\n\n  /**\n   * Clears the store of all stored values\n   *\n   * @returns\n   * @memberof Cache\n   */\n  public async clearStore() {\n    if (!window.indexedDB) {\n      return;\n    }\n    try {\n      await (await this.getDb()).clear(this.store);\n    } catch (e) {\n      return;\n    }\n  }\n\n  /**\n   * Returns the name of the parent DB that the cache store belongs to\n   */\n  public async getDBName() {\n    const id = await Providers.getCacheId();\n    if (id) {\n      return `mgt-${this.schema.name}` + `-${id}`;\n    }\n  }\n\n  private async getDb() {\n    const dbName = await this.getDBName();\n    if (dbName) {\n      return openDB(dbName, this.schema.version, {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        upgrade: (db, _oldVersion, _newVersion, _transaction) => {\n          const dbArray: string[] = (JSON.parse(localStorage.getItem(dbListKey)) as string[]) || [];\n          if (!dbArray.includes(dbName)) {\n            dbArray.push(dbName);\n          }\n          localStorage.setItem(dbListKey, JSON.stringify(dbArray));\n          for (const storeName in this.schema.stores) {\n            if (\n              Object.prototype.hasOwnProperty.call(this.schema.stores, storeName) &&\n              !db.objectStoreNames.contains(storeName)\n            ) {\n              db.createObjectStore(storeName);\n            }\n          }\n        }\n      });\n    }\n  }\n}\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { Providers } from '../providers/Providers';\nimport { ProviderState } from '../providers/IProvider';\nimport { CacheStore } from './CacheStore';\nimport { CacheSchema } from './CacheSchema';\nimport { CacheItem } from './CacheItem';\nimport { dbListKey } from './dbListKey';\n\n/**\n * Holds the cache options for cache store\n *\n * @export\n * @interface CacheConfig\n */\nexport interface CacheConfig {\n  /**\n   * Default global invalidation period\n   *\n   * @type {number}\n   * @memberof CacheConfig\n   */\n  defaultInvalidationPeriod: number;\n  /**\n   * Controls whether the cache is enabled globally\n   *\n   * @type {boolean}\n   * @memberof CacheConfig\n   */\n  isEnabled: boolean;\n  /**\n   * Cache options for groups store\n   *\n   * @type {CacheOptions}\n   * @memberof CacheConfig\n   */\n  groups: CacheOptions;\n  /**\n   * Cache options for people store\n   *\n   * @type {CacheOptions}\n   * @memberof CacheConfig\n   */\n  people: CacheOptions;\n  /**\n   * Cache options for photos store\n   *\n   * @type {CacheOptions}\n   * @memberof CacheConfig\n   */\n  photos: CacheOptions;\n  /**\n   * Cache options for presence store\n   *\n   * @type {CacheOptions}\n   * @memberof CacheConfig\n   */\n\n  presence: CacheOptions;\n  /**\n   * Cache options for users store\n   *\n   * @type {CacheOptions}\n   * @memberof CacheConfig\n   */\n  users: CacheOptions;\n\n  /**\n   * Cache options for a generic response store\n   *\n   * @type {CacheOptions}\n   * @memberof CacheConfig\n   */\n  response: CacheOptions;\n\n  /**\n   * Cache options for files store\n   *\n   * @type {CacheOptions}\n   * @memberof CacheConfig\n   */\n  files: CacheOptions;\n  /**\n   * Cache options for fileLists store\n   *\n   * @type {CacheOptions}\n   * @memberof CacheConfig\n   */\n  fileLists: CacheOptions;\n}\n\n/**\n * Options for each store\n *\n * @export\n * @interface CacheOptions\n */\nexport interface CacheOptions {\n  /**\n   * Defines the time (in ms) for objects in the store to expire\n   *\n   * @type {number}\n   * @memberof CacheOptions\n   */\n  invalidationPeriod: number;\n  /**\n   * Whether the store is enabled or not\n   *\n   * @type {boolean}\n   * @memberof CacheOptions\n   */\n  isEnabled: boolean;\n}\n\n/**\n * class in charge of managing all the caches and their stores\n *\n * @export\n * @class CacheService\n */\nexport class CacheService {\n  /**\n   * Looks for existing cache, otherwise creates a new one\n   *\n   * @static\n   * @template T\n   * @param {CacheSchema} schema\n   * @param {string} storeName\n   * @returns {CacheStore<T>}\n   * @memberof CacheService\n   */\n  public static getCache<T extends CacheItem>(schema: CacheSchema, storeName: string): CacheStore<T> {\n    const key = `${schema.name}/${storeName}`;\n\n    if (!this.isInitialized) {\n      this.init();\n    }\n\n    if (!this.cacheStore.has(storeName)) {\n      this.cacheStore.set(key, new CacheStore<T>(schema, storeName));\n    }\n    return this.cacheStore.get(key) as CacheStore<T>;\n  }\n\n  /**\n   * Clears cache for a single user when ID is passed\n   *\n   * @static\n   * @param {string} id\n   * @memberof CacheService\n   */\n  public static clearCacheById(id: string): Promise<unknown> {\n    const work: Promise<void>[] = [];\n    const oldDbArray: string[] = JSON.parse(localStorage.getItem(dbListKey)) as string[];\n    if (oldDbArray) {\n      const newDbArray: string[] = [];\n      oldDbArray.forEach(x => {\n        if (x.includes(id)) {\n          work.push(\n            new Promise<void>((resolve, reject) => {\n              const delReq = indexedDB.deleteDatabase(x);\n              delReq.onsuccess = () => resolve();\n              delReq.onerror = () => {\n                console.error(`🦒: ${delReq.error.name} occurred deleting cache: ${x}`, delReq.error.message);\n                reject();\n              };\n            })\n          );\n        } else {\n          newDbArray.push(x);\n        }\n      });\n      if (newDbArray.length > 0) {\n        localStorage.setItem(dbListKey, JSON.stringify(newDbArray));\n      } else {\n        localStorage.removeItem(dbListKey);\n      }\n    }\n    return Promise.all(work);\n  }\n\n  private static readonly cacheStore = new Map<string, CacheStore<CacheItem>>();\n  private static isInitialized = false;\n\n  private static readonly cacheConfig: CacheConfig = {\n    defaultInvalidationPeriod: 3600000,\n    groups: {\n      invalidationPeriod: null,\n      isEnabled: true\n    },\n    isEnabled: true,\n    people: {\n      invalidationPeriod: null,\n      isEnabled: true\n    },\n    photos: {\n      invalidationPeriod: null,\n      isEnabled: true\n    },\n    presence: {\n      invalidationPeriod: 300000,\n      isEnabled: true\n    },\n    users: {\n      invalidationPeriod: null,\n      isEnabled: true\n    },\n    response: {\n      invalidationPeriod: null,\n      isEnabled: true\n    },\n    files: {\n      invalidationPeriod: null,\n      isEnabled: true\n    },\n    fileLists: {\n      invalidationPeriod: null,\n      isEnabled: true\n    }\n  };\n\n  /**\n   * returns the cacheconfig object\n   *\n   * @readonly\n   * @static\n   * @type {CacheConfig}\n   * @memberof CacheService\n   */\n  public static get config(): CacheConfig {\n    return this.cacheConfig;\n  }\n\n  /**\n   * Checks for current sign in state and see if it has changed from signed-in to signed out\n   *\n   *\n   * @private\n   * @static\n   * @memberof CacheService\n   */\n  private static init() {\n    let previousState: ProviderState;\n    if (Providers.globalProvider) {\n      previousState = Providers.globalProvider.state;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    Providers.onProviderUpdated(async () => {\n      if (previousState === ProviderState.SignedIn && Providers.globalProvider.state === ProviderState.SignedOut) {\n        const id = await Providers.getCacheId();\n        if (id !== null) {\n          await this.clearCacheById(id);\n        }\n      }\n      previousState = Providers.globalProvider.state;\n    });\n    this.isInitialized = true;\n  }\n}\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { GraphRequest } from '@microsoft/microsoft-graph-client';\nimport { IGraph } from '../IGraph';\nimport { CollectionResponse } from '../CollectionResponse';\n\n/**\n * A helper class to assist in getting multiple pages from a resource\n *\n * @export\n * @class GraphPageIterator\n * @template T\n */\nexport class GraphPageIterator<T> {\n  /**\n   * Gets all the items already fetched for this request\n   *\n   * @readonly\n   * @type {T[]}\n   * @memberof GraphPageIterator\n   */\n  public get value(): T[] {\n    return this._value;\n  }\n\n  /**\n   * Gets wheather this request has more pages\n   *\n   * @readonly\n   * @type {boolean}\n   * @memberof GraphPageIterator\n   */\n  public get hasNext(): boolean {\n    return Boolean(this._nextLink);\n  }\n\n  /**\n   * Creates a new GraphPageIterator\n   *\n   * @static\n   * @template T - the type of entities expected from this request\n   * @param {IGraph} graph - the graph instance to use for making requests\n   * @param {GraphRequest} request - the initial request\n   * @param {string} [version] - optional version to use for the requests - by default uses the default version\n   * from the graph parameter\n   * @returns a GraphPageIterator\n   * @memberof GraphPageIterator\n   */\n  public static async create<T>(graph: IGraph, request: GraphRequest, version?: string): Promise<GraphPageIterator<T>> {\n    const response = (await request.get()) as CollectionResponse<T>;\n    if (response?.value) {\n      const iterator = new GraphPageIterator<T>();\n      iterator._graph = graph;\n      iterator._value = response.value;\n      iterator._nextLink = response['@odata.nextLink'] as string;\n      iterator._version = version || graph.version;\n      return iterator;\n    }\n\n    return null;\n  }\n\n  /**\n   * Creates a new GraphPageIterator from existing value\n   *\n   * @static\n   * @template T - the type of entities expected from this request\n   * @param {IGraph} graph - the graph instance to use for making requests\n   * @param value - the existing value\n   * @param nextLink - optional nextLink to use to get the next page\n   * from the graph parameter\n   * @returns a GraphPageIterator\n   * @memberof GraphPageIterator\n   */\n  public static createFromValue<T>(graph: IGraph, value: T[], nextLink: string = null): GraphPageIterator<T> {\n    const iterator = new GraphPageIterator<T>();\n\n    // create iterator from values\n    iterator._graph = graph;\n    iterator._value = value;\n    iterator._nextLink = nextLink;\n    iterator._version = graph.version;\n\n    return iterator;\n  }\n\n  private _graph: IGraph;\n  private _nextLink: string;\n  /**\n   * Gets the next link for this request\n   *\n   * @readonly\n   * @type {string}\n   * @memberof GraphPageIterator\n   */\n  public get nextLink(): string {\n    return this._nextLink || '';\n  }\n  private _version: string;\n  private _value: T[];\n\n  /**\n   * Gets the next page for this request\n   *\n   * @returns {Promise<T[]>}\n   * @memberof GraphPageIterator\n   */\n  public async next(): Promise<T[]> {\n    if (this._nextLink) {\n      const nextResource = this._nextLink.split(this._version)[1];\n      const response = (await this._graph.api(nextResource).version(this._version).get()) as CollectionResponse<T>;\n      if (response?.value?.length) {\n        this._value = this._value.concat(response.value);\n        this._nextLink = response['@odata.nextLink'] as string;\n        return response.value;\n      }\n    }\n    return null;\n  }\n}\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { EventDispatcher, EventHandler } from './EventDispatcher';\n\ntype ComponentLocalizationRecord = Record<string, string>;\ntype LocalizationRecord = Record<string, ComponentLocalizationRecord>;\n\ntype LocalizationStorage = {\n  _components: LocalizationRecord;\n} & Record<string, string>;\n\n/**\n * Helper class for Localization\n *\n *\n * @export\n * @class LocalizationHelper\n */\nexport class LocalizationHelper {\n  static _strings: LocalizationStorage;\n\n  static _stringsEventDispatcher = new EventDispatcher<unknown>();\n\n  static _directionEventDispatcher = new EventDispatcher<unknown>();\n\n  private static mutationObserver: MutationObserver;\n\n  public static get strings() {\n    return this._strings;\n  }\n\n  /**\n   * Set strings to be localized\n   *\n   * @static\n   * @memberof LocalizationHelper\n   */\n  public static set strings(value: LocalizationStorage) {\n    this._strings = value;\n    this._stringsEventDispatcher.fire(null);\n  }\n\n  /**\n   * returns body dir attribute to determine rtl or ltr\n   *\n   * @static\n   * @returns {string} dir\n   * @memberof LocalizationHelper\n   */\n  public static getDocumentDirection(): 'rtl' | 'ltr' | 'auto' {\n    // Re-set the dir to ltr if the dir attribute is already loaded and the first two options\n    // are returning null values.\n    const parsed = document.body?.getAttribute('dir') || document.documentElement?.getAttribute('dir');\n    switch (parsed) {\n      case 'rtl':\n        return 'rtl';\n      case 'auto':\n        return 'auto';\n      case 'ltr':\n      default:\n        return 'ltr';\n    }\n  }\n\n  /**\n   * Fires event when LocalizationHelper changes state\n   *\n   * @static\n   * @param {EventHandler<ProvidersChangedState>} event\n   * @memberof LocalizationHelper\n   */\n  public static onStringsUpdated(event: EventHandler<unknown>) {\n    this._stringsEventDispatcher.add(event);\n  }\n\n  public static removeOnStringsUpdated(event: EventHandler<unknown>) {\n    this._stringsEventDispatcher.remove(event);\n  }\n\n  public static onDirectionUpdated(event: EventHandler<unknown>) {\n    this._directionEventDispatcher.add(event);\n    this.initDirection();\n  }\n\n  public static removeOnDirectionUpdated(event: EventHandler<unknown>) {\n    this._directionEventDispatcher.remove(event);\n  }\n\n  private static _isDirectionInit = false;\n\n  /**\n   * Checks for direction setup and adds mutationObserver\n   *\n   * @private\n   * @static\n   * @returns\n   * @memberof LocalizationHelper\n   */\n  private static initDirection() {\n    if (this._isDirectionInit) {\n      return;\n    }\n    this._isDirectionInit = true;\n    this.mutationObserver = new MutationObserver(mutations => {\n      mutations.forEach(mutation => {\n        if (mutation.attributeName === 'dir') {\n          this._directionEventDispatcher.fire(null);\n        }\n      });\n    });\n    const options = { attributes: true, attributeFilter: ['dir'] };\n    this.mutationObserver.observe(document.body, options);\n    this.mutationObserver.observe(document.documentElement, options);\n  }\n\n  /**\n   * Provided helper method to determine localized or defaultString for specific string is returned\n   *\n   * @static updateStringsForTag\n   * @param {string} tagName\n   * @param  stringsObj\n   * @returns\n   * @memberof LocalizationHelper\n   */\n  public static updateStringsForTag(tagName: string, stringObj: Record<string, string>) {\n    tagName = tagName.toLowerCase();\n\n    if (tagName.startsWith('mgt-')) {\n      tagName = tagName.substring(4);\n    }\n\n    if (this._strings && stringObj) {\n      // check for top level strings, applied per component, overridden by specific component def\n      for (const prop of Object.entries(stringObj)) {\n        const overrideValue = this._strings[prop[0]];\n        if (typeof overrideValue === 'string') {\n          stringObj[prop[0]] = overrideValue;\n        }\n      }\n\n      // strings defined component specific\n      if (this._strings._components?.[tagName]) {\n        const strings = this._strings._components[tagName];\n        for (const key of Object.keys(strings)) {\n          if (stringObj[key]) {\n            stringObj[key] = strings[key];\n          }\n        }\n      }\n    }\n\n    return stringObj;\n  }\n}\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\n/**\n * Crude implementation of equivalence between the two specified arguments.\n *\n * The primary intent of this function is for comparing data contexts, which\n * are expected to be object literals with potentially nested structures and\n * where leaf values are primitives.\n */\nexport const equals = (o1: unknown, o2: unknown) => {\n  return equalsInternal(o1, o2, new Set());\n};\n\n/**\n * Not exposed as it would undesirably leak implementation detail (`refs` argument).\n *\n * The `refs` argument is used to avoid infinite recursion due to circular references.\n *\n * @see equals\n */\nconst equalsInternal = (o1: unknown, o2: unknown, refs: Set<unknown>) => {\n  const o1Label = Object.prototype.toString.call(o1) as string;\n  const o2Label = Object.prototype.toString.call(o2) as string;\n  if (\n    typeof o1 === 'object' &&\n    typeof o2 === 'object' &&\n    o1Label === o2Label &&\n    o1Label === '[object Object]' &&\n    !refs.has(o1)\n  ) {\n    refs.add(o1);\n    for (const k in o1) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      if (!equalsInternal(o1[k], o2[k], refs)) {\n        return false;\n      }\n    }\n    for (const k in o2) {\n      if (!Object.prototype.hasOwnProperty.call(o1, k)) {\n        return false;\n      }\n    }\n    return true;\n  }\n  if (Array.isArray(o1) && Array.isArray(o2) && !refs.has(o1)) {\n    refs.add(o1);\n    if (o1.length !== o2.length) {\n      return false;\n    }\n    for (let i = 0; i < o1.length; i++) {\n      if (!equalsInternal(o1[i], o2[i], refs)) {\n        return false;\n      }\n    }\n    return true;\n  }\n  // Everything else requires strict equality (e.g. primitives, functions, dates)\n  return o1 === o2;\n};\n\n/**\n * Compares two arrays if the elements are equals\n * Should be used for arrays of primitive types\n *\n * @export\n * @template T the type of the elements in the array (should be primitive)\n * @param {T[]} arr1\n * @param {T[]} arr2\n * @returns true if both arrays contain the same items or if both arrays are null or empty\n */\nexport const arraysAreEqual = <T>(arr1: T[], arr2: T[]) => {\n  if (arr1 === arr2) {\n    return true;\n  }\n\n  if (!arr1 || !arr2) {\n    return false;\n  }\n\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n\n  if (arr1.length === 0) {\n    return true;\n  }\n\n  const setArr1 = new Set(arr1);\n\n  for (const i of arr2) {\n    if (!setArr1.has(i)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { HTMLTemplateResult, html } from 'lit';\nimport { customElementHelper } from '../components/customElementHelper';\n\n/**\n * stringsCache ensures that the same TemplateStringsArray object is returned on subsequent calls\n * This is needed as lit-html internally uses the TemplateStringsArray object as a cache key.\n *\n * @type {WeakMap}\n */\nconst stringsCache = new WeakMap<TemplateStringsArray, TemplateStringsArray>();\n\n/**\n * Rewrites strings in an array using the supplied matcher RegExp\n * Assumes that the RegExp returns a group on matches\n *\n * @param strings The array of strings to be re-written\n * @param matcher A RegExp to be used for matching strings for replacement\n */\nconst rewriteStrings = (strings: readonly string[], matcher: RegExp, replacement: string): readonly string[] => {\n  const temp: string[] = [];\n  for (const s of strings) {\n    temp.push(s.replace(matcher, replacement));\n  }\n  return temp;\n};\n\n/**\n * Generates a template literal tag function that returns an HTMLTemplateResult.\n */\nconst tag = (strings: TemplateStringsArray, ...values: unknown[]): HTMLTemplateResult => {\n  // re-write <mgt-([a-z]+) if necessary\n  if (customElementHelper.isDisambiguated) {\n    let cached = stringsCache.get(strings);\n    if (!cached) {\n      const matcher = new RegExp('(</?)mgt-(?!' + customElementHelper.disambiguation + '-)');\n      const newPrefix = `$1${customElementHelper.prefix}-`;\n      cached = Object.assign(rewriteStrings(strings, matcher, newPrefix), {\n        raw: rewriteStrings(strings.raw, matcher, newPrefix)\n      });\n      stringsCache.set(strings, cached);\n    }\n    strings = cached;\n  }\n\n  return html(strings, ...values);\n};\n\n/**\n * Interprets a template literal and dynamically rewrites `<mgt-` tags with the\n * configured disambiguation if necessary.\n *\n * ```ts\n * const header = (title: string) => mgtHtml`<mgt-flyout>${title}</mgt-flyout>`;\n * ```\n *\n * The `mgtHtml` tag is a wrapper for the `html` tag from `lit` which provides for dynamic tag re-writing\n */\nexport const mgtHtml = tag;\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { customElementHelper } from '../components/customElementHelper';\n\nexport const buildComponentName = (tagBase: string) => `${customElementHelper.prefix}-${tagBase}`;\n\nexport const registerComponent = (\n  tagBase: string,\n  constructor: CustomElementConstructor,\n  options?: ElementDefinitionOptions\n) => {\n  const tagName = buildComponentName(tagBase);\n  if (!customElements.get(tagName)) customElements.define(tagName, constructor, options);\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport React, { ReactNode, ReactElement } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Wc, WcProps, WcTypeProps } from 'wc-react';\nimport { customElementHelper, TemplateRenderedData } from '@microsoft/mgt-element';\n\nexport class Mgt extends Wc {\n  private _templates: Record<string, ReactElement>;\n\n  constructor(props: WcTypeProps) {\n    super(props);\n  }\n\n  protected getTag(): string {\n    let tag: string = super.getTag() as string;\n    const tagPrefix = `${customElementHelper.prefix}-`;\n    if (!tag.startsWith(tagPrefix)) {\n      tag = tagPrefix + tag;\n    }\n\n    return tag;\n  }\n\n  // type mismatch due to version drift\n  // @ts-expect-error - TS2416: Property 'render' in type 'Mgt' is not assignable to the same property in base type 'Wc'\n  public render(): React.DOMElement<React.DOMAttributes<HTMLElement>, HTMLElement> {\n    const tag = this.getTag();\n    if (!tag) {\n      throw new Error('\"wcType\" must be set!');\n    }\n\n    this.processTemplates(this.props.children);\n\n    const templateElements = [];\n\n    if (this._templates) {\n      for (const t in this._templates) {\n        if (Object.prototype.hasOwnProperty.call(this._templates, t)) {\n          const element = React.createElement('template', { key: t, 'data-type': t }, null);\n          templateElements.push(element);\n        }\n      }\n    }\n\n    return React.createElement(tag, { ref: (element: HTMLElement) => this.setRef(element) }, templateElements);\n  }\n\n  /**\n   * Sets the web component reference and syncs the props\n   *\n   * @protected\n   * @param {HTMLElement} element\n   * @memberof Wc\n   */\n  protected setRef(component: HTMLElement) {\n    if (component) {\n      component.addEventListener('templateRendered', this.handleTemplateRendered);\n    }\n    super.setRef(component);\n  }\n\n  /**\n   * Removes all event listeners from web component element\n   *\n   * @protected\n   * @returns\n   * @memberof Mgt\n   */\n  protected cleanUp() {\n    if (!this.element) {\n      return;\n    }\n\n    this.element.removeEventListener('templateRendered', this.handleTemplateRendered);\n\n    super.cleanUp();\n  }\n\n  /**\n   * Renders a template\n   *\n   * @protected\n   * @param {*} e\n   * @returns\n   * @memberof Mgt\n   */\n  protected handleTemplateRendered = (e: CustomEvent<TemplateRenderedData>) => {\n    if (!this._templates) {\n      return;\n    }\n\n    const templateType = e.detail.templateType;\n    const dataContext = e.detail.context;\n    const element = e.detail.element;\n\n    let template = this._templates[templateType];\n\n    if (template) {\n      template = React.cloneElement(template, { dataContext });\n      ReactDOM.render(template, element);\n    }\n  };\n\n  /**\n   * Prepares templates for rendering\n   *\n   * @protected\n   * @param {ReactNode} children\n   * @returns\n   * @memberof Mgt\n   */\n  protected processTemplates(children: ReactNode) {\n    if (!children) {\n      return;\n    }\n\n    const templates: Record<string, ReactElement> = {};\n\n    React.Children.forEach(children, child => {\n      const element = child as ReactElement<{ template: string }>;\n      const template = element?.props?.template;\n      if (template) {\n        templates[template] = element;\n      } else {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/dot-notation\n        templates['default'] = element;\n      }\n    });\n\n    this._templates = templates;\n  }\n}\n\n/**\n * Creates a new React Functional Component that wraps the\n * web component with the specified tag name\n *\n * @template T - optional props type for component\n * @param {(string | Function)} tag\n * @returns React component\n */\nexport const wrapMgt = <T = WcProps>(tag: string, registerElementFunction: () => void) => {\n  registerElementFunction();\n  const WrapMgt = (props: T, ref: React.ForwardedRef<unknown>): React.CElement<WcTypeProps, Mgt> =>\n    React.createElement(Mgt, { wcType: tag, innerRef: ref, ...props });\n  const component: React.ForwardRefExoticComponent<\n    React.PropsWithoutRef<T & React.HTMLAttributes<unknown>> & React.RefAttributes<unknown>\n  > = React.forwardRef(WrapMgt);\n  return component;\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/consistent-type-definitions */\nimport { IDynamicPerson,AvatarSize,AvatarType,PersonCardInteraction,ViewType } from '@microsoft/mgt-components';\nimport { registerMgtPersonComponent } from '@microsoft/mgt-components';\nimport { TemplateContext,TemplateRenderedData } from '@microsoft/mgt-element';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraph from '@microsoft/microsoft-graph-types';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraphBeta from '@microsoft/microsoft-graph-types-beta';\nimport {wrapMgt} from '../Mgt';\n\nexport type PersonProps = {\n\tpersonQuery?: string;\n\tfallbackDetails?: IDynamicPerson;\n\tuserId?: string;\n\tusage?: string;\n\tshowPresence?: boolean;\n\tavatarSize?: AvatarSize;\n\tpersonDetails?: IDynamicPerson;\n\tpersonImage?: string;\n\tfetchImage?: boolean;\n\tdisableImageFetch?: boolean;\n\tverticalLayout?: boolean;\n\tavatarType?: AvatarType;\n\tpersonPresence?: MicrosoftGraph.Presence;\n\tpersonCardInteraction?: PersonCardInteraction;\n\tline1Property?: string;\n\tline2Property?: string;\n\tline3Property?: string;\n\tline4Property?: string;\n\tview?: ViewType;\n\ttemplateContext?: TemplateContext;\n\tline1clicked?: (e: CustomEvent<IDynamicPerson>) => void;\n\tline2clicked?: (e: CustomEvent<IDynamicPerson>) => void;\n\tline3clicked?: (e: CustomEvent<IDynamicPerson>) => void;\n\tline4clicked?: (e: CustomEvent<IDynamicPerson>) => void;\n\ttemplateRendered?: (e: CustomEvent<TemplateRenderedData>) => void;\n}\n\nexport const Person = wrapMgt<PersonProps>('person', registerMgtPersonComponent);\n\n"],"names":["SearchBox","wrapMgt","registerMgtSearchBoxComponent","Login","registerMgtLoginComponent","useStyles","makeStyles","simpleLogin","SimpleLogin","props","styles","personDetails","dataContext","_jsx","Person","userId","id","avatarSize","className","useIsSignedIn","_useState","useState","_useState2","_slicedToArray","isSignedIn","setIsSignedIn","useEffect","updateState","stateEvent","ProvidersChangedState","ProviderStateChanged","Providers","globalProvider","state","ProviderState","SignedIn","onProviderUpdated","removeProviderUpdatedListener","availableThemes","key","displayName","icon","BrightnessHighRegular","WeatherMoonFilled","PeopleTeamRegular","PeopleTeamFilled","ThemeSwitcher","_React$useState","React","_React$useState2","selectedTheme","setSelectedTheme","appContext","useAppContext","_jsxs","Menu","children","MenuTrigger","MenuButton","MenuPopover","MenuList","map","theme","MenuItem","onClick","setState","_objectSpread","fluentTheme","teamsLightTheme","teamsDarkTheme","webLightTheme","webDarkTheme","onThemeChanged","root","header","display","flexDirection","flexWrap","width","height","boxSizing","alignItems","backgroundColor","tokens","colorNeutralForeground1Static","zIndex","minHeight","name","color","colorNeutralForegroundOnBrand","fontWeight","fontWeightSemibold","fontSize","fontSizeBase400","paddingLeft","wafffleIcon","fontSizeBase600","paddingTop","waffle","flexGrow","minWidth","waffleLogo","shorthands","flex","waffleTitle","search","justifyContent","searchBox","maxWidth","paddingRight","infoIcon","login","signedOut","padding","signedIn","HeaderComponent","_useIsSignedIn","setAppContext","location","useLocation","navigate","useNavigate","pathname","searchTerm","decodeURI","replace","previous","href","target","rel","GridDotsRegular","Label","process","InfoButton","size","info","_Fragment","PACKAGE_VERSION","searchTermChanged","e","detail","mergeClasses","template","Header","tab","paddingBottom","activeTab","colorSubtleBackgroundHover","SideNavigation","items","selectedTab","setSelectedTab","_React$useState3","_React$useState4","isMinimized","setIsMinimized","substring","TabList","appearance","vertical","onTabSelect","event","data","value","futureIsMinimized","sidebar","relative","selectedValue","Tab","NavigationRegular","item","index","url","DashboardPage","lazy","OutlookPage","SearchPage","HomePage","FilesPage","TaxonomyPage","secondaryTextDefault","secondaryTextColor","DesignToken","create","withDefault","secondaryTextHoverDefault","secondaryTextHoverColor","applyColorScheme","settings","element","arguments","length","undefined","document","body","accentBaseColor","setValueFor","SwatchRGB","from","parseColorHexRGB","neutralBaseColor","baseLayerLuminance","_a","designTokenOverrides","call","getThemeSettings","StandardLuminance","DarkMode","LightMode","accentFillRest","accentFillHover","accentFillActive","accentFillFocus","accentForegroundRest","accentForegroundHover","accentForegroundActive","accentForegroundFocus","accentStrokeControlRest","accentStrokeControlHover","accentStrokeControlActive","accentStrokeControlFocus","foregroundOnAccentActive","foregroundOnAccentRest","foregroundOnAccentHover","foregroundOnAccentFocus","colorNeutralBackground6","main","colorNeutralBackground1","minimized","page","content","margin","overflow","Layout","_process$env$REACT_AP","navigationItems","setNavigationItems","navItems","push","HomeRegular","requiresLogin","component","Suspense","fallback","exact","TextBulletListSquareRegular","CalendarMailRegular","DocumentRegular","TagMultipleRegular","pattern","SearchRegular","getNavigation","applyTheme","FluentProvider","BrowserRouter","basename","concat","Routes","Route","path","AppContext","Provider","Error","interactions","personCardConverter","defaultValue","includes","isPersonCardInteraction","css","_templateObject","_taggedTemplateLiteral","strings","showMoreSubtitle","filesSectionTitle","sharedTextSubtitle","failUploadFile","cancelUploadFile","buttonUploadFile","maximumFilesTitle","maximumFiles","maximumFileSizeTitle","maximumFileSize","fileTypeTitle","fileType","checkAgain","checkApplyAll","buttonOk","buttonCancel","buttonUpload","buttonKeep","buttonReplace","buttonReselect","fileReplaceTitle","fileReplace","uploadButtonLabel","isFileSystemDirectoryEntry","entry","isDirectory","isFutureDataTransferItem","getAsEntry","MgtFileUpload","_MgtBaseComponent","_this","_classCallCheck","_callSuper","_dragCounter","_maxChunkSize","_dialogTitle","_dialogContent","_dialogPrimaryButton","_dialogSecondaryButton","_dialogCheckBox","_applyAll","_applyAllConflictBehavior","_maximumFileSize","_excludedFileType","onFileUploadChange","inputElement","files","readUploadedFiles","onFileUploadClick","renderRoot","querySelector","click","handleonDragOver","preventDefault","stopPropagation","dataTransfer","dropEffect","_dropEffect","handleonDragEnter","classList","add","handleonDragLeave","remove","handleonDrop","clearData","filesToUpload","_inherits","_createClass","get","this","parentElement","addEventListener","html","getSvg","SvgIcon","Cancel","Upload","renderFolderTemplate","fileItems","_this2","folderStructure","templateFileItems","fileItem","indexOf","fullPath","lastIndexOf","endsWith","_templateObject3","renderFileTemplate","mgtHtml","_templateObject2","folder","_templateObject4","_templateObject5","_templateObject6","folderTabStyle","completed","classMap","upload","fieldUploadResponse","description","completedTemplate","_templateObject7","renderFileUploadTemplate","_templateObject8","iconStatus","driveItem","view","_this3","_templateObject9","file","percent","deleteFileUploadSession","uploadUrl","_context","next","deleteSessionFile","fileUploadList","graph","setUploadFail","prev","t0","stop","_callee","uploaded","onCompleteCallback","getFilesFromUploadArea","_context2","sent","getSelectedFiles","_callee2","fileItemsCompleted","forEach","_iterator","_createForOfIteratorHelper","_context4","_loop","_regeneratorRuntime","mark","acceptFile","excludedFileType","conflictBehavior","wrap","_context3","_step","filter","_this4","maxFileSize","getFileUploadStatus","excludedFileExtensions","fileExtension","toLowerCase","Boolean","behavior","maxSize","minSize","s","n","done","delegateYield","t1","f","finish","sort","firstFile","secondFile","localeCompare","findIndex","splice","_fileItems","apply","promises","sendFileItemGraph","Promise","all","_callee3","DialogStatus","_this5","fileUploadDialog","_context5","getGraphfile","getGrapQuery","abrupt","_super","requestStateUpdate","resolve","fileUploadDialogClose","_this6","fileUploadDialogOk","fileUploadDialogCancel","fileUploadDialogCheck","checked","onOkDialogClick","onCancelDialogClick","onCloseDialogClick","removeEventListener","join","formatBytes","_callee4","itemPath","startsWith","itemId","groupId","driveId","siteId","graphQuery","_context6","sendFileContent","setUploadSuccess","getUploadSession","response","sendSessionUrlGraph","_callee5","_this7","_context7","mimeStreamString","readFileContent","fileSlice","Blob","slice","Math","round","sendFileChunk","isUploadSession","parseInt","nextExpectedRanges","split","_callee6","fileUpload","_this8","_get","_getPrototypeOf","prototype","setTimeout","Success","clearFilesCache","errorMessage","_this9","Fail","reject","myReader","FileReader","onloadend","result","onerror","readAsArrayBuffer","filesItems","folders","collectFilesItems","_iterator2","_step2","uploadFileItem","getAsFile","webkitGetAsEntry","writeFilePath","err","_context8","getFolderFiles","folderFiles","_toConsumableArray","_callee7","_this10","reading","contents","readEntry","readReaderContent","createReader","isFile","isFileSystemFileEntry","reader","readEntries","entries","_step3","_iterator3","Set","MgtBaseComponent","__decorate","property","type","Object","registerMgtFileListComponent","registerFluentComponents","fluentProgressRing","registerMgtFileComponent","fluentProgress","fluentButton","fluentCheckbox","fluentDialog","registerComponent","MgtFileList","_MgtTemplatedTaskComp","_isCompact","fileQueries","itemView","fileExtensions","pageSize","disableOpenOnClick","hideMoreFilesButton","enableFileUpload","maxUploadFile","_preloadedFiles","_focusedItemIndex","renderLoading","renderContent","renderTemplate","renderCompactView","renderFullView","renderNoData","onFocusFirstItem","onFileListKeyDown","focusedItem","fileList","code","updateItemBackgroundColor","fireCustomEvent","fileDetails","handleFileClick","Files","providerState","fileListQuery","insightType","renderFiles","direction","renderFileUpload","handleItemSelect","renderFile","repeat","pageIterator","hasNext","renderMoreFileButton","_isLoadingMore","renderNextPage","fileUploadConfig","forComponent","provider","Loading","SignedOut","getFromMyDrive","getFilesByListQueryIterator","getFilesByQueries","getFilesByIdIterator","getFilesByPathIterator","getMyInsightsFiles","getFilesIterator","getDriveFilesByIdIterator","getDriveFilesByPathIterator","getGroupFilesByIdIterator","getGroupFilesByPathIterator","getSiteFilesByIdIterator","getSiteFilesByPathIterator","getUserFilesByIdIterator","getUserFilesByPathIterator","getUserInsightsFiles","_b","fetchNextAndCacheForFilesPageIterator","filteredByFileExtension","getFileExtension","nodes","Array","li","closest","clickedItem","min","animate","transformOrigin","duration","easing","fill","requestUpdate","webUrl","window","open","exec","node","removeAttribute","scrollIntoView","block","inline","setAttribute","focus","_task","run","MgtFile","requiredScopes","MgtTemplatedTaskComponent","attribute","converter","_type","v","trim","viewTypeConverter","Number","fileTypeMap","PowerPoint","Word","Excel","Pdf","OneNote","OneNotePage","InfoPath","Visio","Publisher","Project","Access","Mail","Csv","Archive","Xps","Audio","Video","Image","Web","Text","Xml","Story","ExternalContent","Folder","Spsite","Other","baseUri","modifiedSubtitle","sizeSubtitle","fileTemplate","fileDetailsTemplate","renderDetails","fileTypeIconTemplate","renderFileTypeIcon","line1Property","line2Property","line3Property","fileQuery","listId","insightId","fileIcon","fileIconSrc","extension","re","package","keys","find","toString","File","details","text","getTextFromProperty","_templateObject10","_templateObject11","getDriveItemByQuery","getMyDriveItemById","getMyDriveItemByPath","getUserDriveItemById","getUserDriveItemByPath","getUserInsightsDriveItemById","getDriveItemById","getDriveItemByPath","getSiteDriveItemById","getSiteDriveItemByPath","getListDriveItemById","getGroupDriveItemById","getGroupDriveItemByPath","getMyInsightsDriveItemById","properties","propertyList","i","current","relativeDateString","lastModifiedString","lastModifiedDateTime","Date","getRelativeDisplayDate","avatarTypes","avatarTypeConverter","isAvatarType","assign","Available","Away","BeRightBack","Busy","DoNotDisturb","InACall","InAConferenceCall","Inactive","InAMeeting","Offline","OffWork","OutOfOffice","PresenceUnknown","Presenting","UrgentInterruptionsOnly","photoFor","emailAddress","initials","defaultPersonProperties","registerMgtPersonComponent","MgtPerson","registerMgtFlyoutComponent","avatarType","personCardInteraction","_hasLoadedPersonCard","_mouseLeaveTimeout","_mouseEnterTimeout","person","personDetailsInternal","fallbackDetails","image","getImage","presence","personPresence","_fetchedPresence","personImage","personTemplate","detailsTemplate","imageWithPresenceTemplate","renderAvatar","renderFlyout","rootClasses","small","isThreeLines","isFourLines","isLargeAvatar","large","noline","isNoLine","oneline","isOneLine","twolines","isTwoLines","threelines","fourlines","isVertical","handleMouseClick","handleMouseEnter","handleMouseLeave","handleKeyDown","ifDefined","tagName","customElementHelper","prefix","toUpperCase","showPersonCard","clearTimeout","hidePersonCard","flyout","close","personCard","isExpanded","clearHistory","loadPersonCardResources","__awaiter","_assertThisInitialized","_yield$import","registerMgtPersonCardComponent","customElements","buildComponentName","_personCardShouldRender","line4Property","disableImageFetch","_isInvalidImageSrc","verticalLayout","_personQuery","set","_personDetails","_fallbackDetails","_userId","_usage","_personDetailsInternal","_fetchedImage","_personImage","_personPresence","noDataTemplate","avatarClasses","imageSrc","altText","hasImage","imageOnly","titleText","getEmailFromGraphEntity","imageTemplate","getInitials","hasInitials","textClasses","contactIconTemplate","renderPersonIcon","textTemplate","presenceIcon","showPresence","activity","availability","PresenceOofAvailable","PresenceAvailable","PresenceOofBusy","PresenceBusy","PresenceOofDnd","PresenceDnd","PresenceOofAway","PresenceAway","PresenceOffline","PresenceStatusUnknown","presenceWrapperClasses","formattedActivity","nothing","title","renderImage","presenceTemplate","renderPresence","personProps","presenceActivity","presenceAvailability","line1text","hasTemplate","_templateObject12","handleLine1Clicked","_templateObject13","_templateObject14","handleLine2Clicked","_templateObject15","_templateObject16","handleLine3Clicked","_templateObject17","_templateObject18","handleLine4Clicked","_templateObject19","detailsClasses","_templateObject20","anchor","flyoutContent","_templateObject21","renderFlyoutContent","_templateObject22","slotClasses","_templateObject23","_templateObject24","fetchImage","personQuery","email","getGroupImage","getPersonImage","config","useContactApis","getUserWithPhoto","getMe","getUser","findPeople","people","findUsers","defaultPresence","getUserPresence","isContact","isUser","_c","givenName","_f","_e","_d","surname","isLetter","char","match","RegExp","prop","currentProp","scopes","String","isWindowSegmentAware","getWindowSegments","MgtFlyout","_MgtBaseTaskComponent","_renderedOnce","_isOpen","_smallView","handleWindowEvent","_flyout","composedPath","currentElem","handleResize","handleKeyUp","handleFlyoutWheel","avoidHidingAnchor","requestAnimationFrame","updateFlyout","oldValue","setupWindowEvents","isOpen","style","setProperty","maxHeight","top","left","bottom","dispatchEvent","Event","changedProps","flyoutClasses","visible","anchorTemplate","renderAnchor","flyoutTemplate","_windowHeight","innerHeight","documentElement","clientHeight","smallFlyoutClasses","firstPass","_anchor","windowWidth","innerWidth","clientWidth","flyoutRect","getBoundingClientRect","anchorRect","topScoutRect","_topScout","bottomScoutRect","_bottomScout","windowRect","anchorSegment","screenSegments","anchorCenterX","anchorCenterY","segment","_edgePadding","anchorRectBottomToWindowBottom","anchorRectTopToWindowTop","max","offsetLeft","isLightDismiss","MgtBaseTaskComponent","registerMgtSpinnerComponent","MgtSpinner","schemas","stores","version","users","usersQuery","userFilters","photos","contacts","groups","teams","groupPeople","peopleQuery","groupsQuery","responses","driveFiles","groupFiles","siteFiles","userFiles","insightFiles","fileLists","insightfileLists","obj","session","isArray","cache","CacheService","getCache","clearStore","getFileInvalidationTime","invalidationPeriod","defaultInvalidationPeriod","getIsFilesCacheEnabled","isEnabled","getIsFileListsCacheEnabled","validDriveItemScopes","validInsightScopes","validFileUploadScopes","resource","storeName","cachedFile","getFileFromCache","api","middlewareOptions","prepScopes","putValue","JSON","stringify","endpoint","_callee8","_callee9","_context9","_callee10","_context10","_callee11","_context11","_callee12","_context12","_callee13","_context13","_callee14","_context14","_callee15","_context15","getIterator","_callee16","filesPageIterator","request","nextLink","_context16","getFileListFromCache","getFilesPageIteratorFromCache","getFilesPageIteratorFromRequest","_callee17","cacheStore","_context17","_callee18","_context18","_callee19","_context19","_callee20","_context20","_callee21","_context21","_callee22","_context22","_callee23","_context23","_callee24","_context24","_callee25","_context25","_callee26","_context26","_callee27","_context27","listQuery","_callee28","_context28","_callee29","insightResponse","_context29","parse","getDriveItemsByInsights","_callee30","_context30","_callee32","batch","_fileQuery","_context32","createBatch","getValue","now","timeCached","executeAll","t2","_callee31","_context31","t3","_callee34","insightItems","driveItems","_item","driveItemId","driveItemResponses","_iterator4","_step4","driveItemResponse","_context34","resourceReference","insightItem","_callee33","_context33","_callee35","_context35","GraphPageIterator","createFromValue","_callee36","_context36","store","_callee37","_context37","_callee38","matches","_context38","getDocumentThumbnail","_callee39","eTag","blob","_context39","responseType","ResponseType","RAW","status","thumbnail","ok","headers","blobToBase64","_callee40","_context40","_callee41","sessionOptions","_context41","post","contentLength","contentRange","_callee42","_context42","client","put","_callee43","_context43","_callee44","_context44","delete","getPeopleInvalidationTime","getIsPeopleCacheEnabled","validPeopleQueryScopes","validContactQueryScopes","query","userType","filters","cacheKey","graphResult","graphRequest","results","peopleStr","maxResults","personStr","getPeople","peopleFilters","cacheRes","ppl","entity","user","contact","mail","extractEmailAddress","scoredEmailAddresses","address","emailAddresses","findContactsByEmail","encodedEmail","getPeopleFromResource","nextResource","getPhotoInvalidationTime","getIsPhotosCacheEnabled","anyUserValidPhotoScopes","currentUserValidPhotoScopes","getPhotoForResource","photo","getContactPhoto","contactId","photoDetails","validContactPhotoScopes","getUserPhoto","useContactsApis","contactMail","personType","subclass","userPrincipalName","group","validGroupPhotoScopes","getPhotoFromCache","storePhotoInCache","getPresenceInvalidationTime","getIsPresenceCacheEnabled","validScopes","getUsersPresenceByPeople","peoplePresence","peoplePresenceToQuery","presenceResult","r","_r","ids","getUserInvalidationTime","getIsUsersCacheEnabled","allValidMeScopes","requestedProps","me","cachedData","uniqueProps","apiString","validUserByIdScopes","userPrincipleName","getUsersForUserIds","userIds","searchInput","peopleDict","peopleSearchMatches","notInCache","apiUrl","cacheUser","ConsistencyLevel","hasRequests","values","t4","t5","getUsersForPeopleQueries","peopleQueries","allValidPeopleScopes","_loop2","personArray","encodedQuery","graphBuilder","userStr","count","findGroupMembers","transitive","allValidScopes","graphClient","isGraphError","test","statusCode","date","anyUserValidScopes","currentUserValidScopes","requiredUserScopes","requiredPhotoScopes","cachedPhoto","cachedUser","fullResource","_response","photoResponse","userResponse","_cache","_response2","_response3","_cache2","viewTypes","isViewType","getEventsQueryPageIterator","additionalScopes","orderby","getEventsPageIterator","startDateTime","endDateTime","sdt","edt","uri","toISOString","MgtPeople","_peoplePresence","_arrowKeyLocation","showMax","renderPeople","peopleContainer","shadowRoot","peopleElements","el","blur","childElementCount","keyName","mgtPerson","maxPeople","pple","p","renderPerson","renderOverflow","extra","reflect","registerMgtAgendaComponent","fluentCard","MgtAgenda","days","events","renderedTemplate","agendaClasses","agenda","grouped","groupByDay","renderGroups","renderEvents","onResize","_isNarrow","offsetWidth","loadEvents","eventClasses","narrow","getEventTimeString","renderTitle","renderLocation","renderAttendees","renderOther","subject","OfficeLocation","attendees","attendee","dateString","start","dateTime","end","timeZone","getDateHeaderFromDateTimeString","renderHeader","eventClicked","renderEvent","preferredTimezone","eventQuery","isAllDay","startString","endString","prettyPrintTimeFromDateTime","scope","iterator","getTime","setDate","getDate","toLocaleTimeString","navigator","language","timeStyle","dateTimeString","toLocaleDateString","dateStyle","hasChanged","newVal","oldVal","comboboxPlaceholder","isCollectionResponse","responseTypes","responseTypeConverter","isResponseType","getIsResponseCacheEnabled","registerMgtGetComponent","MgtGet","maxPages","pollingRate","cacheEnabled","cacheInvalidationPeriod","isPolling","isRefreshing","loading","renderValueContentWithDefaultTemplate","valueContent","hardRefresh","clearState","defaultContent","templates","templateOrder","error","shouldRetrieveCache","isDeltaLink","URL","responseValues","equals","pageCount","sanitizedResource","imageResponse","shouldUpdateCache","loadState","finally","registerMgtPickerComponent","fluentCombobox","fluentOption","MgtPicker","renderPicker","renderGet","handleComboboxKeydown","fluentOptionEl","getAttribute","res","pop","placeholder","entityType","handleClick","getNestedPropertyValue","console","warn","changedProperties","parent","handleDataChange","termsetIdRequired","noTermsFound","loadingMessage","registerMgtTaxonomyPickerComponent","MgtTaxonomyPicker","position","selectedTerm","terms","renderError","noTerms","renderTaxonomyPicker","disabled","term","renderTaxonomyPickerItem","selected","defaultSelectedTermId","labels","termsetId","termId","locale","label","l","languageTag","signInLinkSubtitle","signOutLinkSubtitle","signInWithADifferentAccount","fluentListbox","MgtLogin","loginView","logout","isMultiAccountSupportedAndEnabled","localStorage","removeItem","getActiveAccount","_userDetailsKey","userDetails","hideFlyout","renderButton","flyoutOpened","_isFlyoutOpen","flyoutClosed","onUserKeyDown","focusableEls","querySelectorAll","firstFocusableEl","lastFocusableEl","shiftKey","loginButton","fluentCardEl","handleAccountListKeyDown","list","listItems","showFlyout","_image","setItem","loginClasses","showSignedInState","buttonContentTemplate","renderSignedInButtonContent","renderSignedOutButtonContent","expandedState","TaskStatus","PENDING","renderFlyoutCommands","renderFlyoutPersonDetails","renderAccounts","renderAddAccountContent","getAllAccounts","hasMultipleAccounts","usesVerticalPersonCard","handleSignOut","SelectAccount","displayConfig","parsePersonDisplayConfiguration","accounts","ariaLabel","a","account","getItem","setActiveAccount","teamReadScopes","channelReadScopes","teamPhotoReadScopes","getAllMyTeams","select","getTeamsPhotosForPhotoIds","teamIds","photoDetail","_id","_photoDetail","getChannelsForTeams","team","_team","channelsForTeam","channels","c","inputPlaceholderText","noResultsFound","teamsChannels","closeButtonAriaLabel","registerMgtTeamsChannelPickerComponent","fluentBreadcrumb","fluentBreadcrumbItem","fluentTreeView","fluentTreeItem","fluentTextField","MgtTeamsChannelPicker","teamsPhotos","_inputValue","_treeViewState","_focusList","dropdownClasses","dropdown","_isDropdownVisible","lostFocus","_selectedItemState","handleFocus","handleInputChanged","handleInputClick","handleInputKeydown","renderSelected","renderChevrons","renderCloseButton","renderDropdown","gainedFocus","onClickCloseButton","removeSelectedChannel","onKeydownCloseButton","renderLoadingIndicator","onKeydownTreeView","handleTeamTreeItemClick","stopImmediatePropagation","debouncedSearch","debounce","filterList","loadTeamsIfNotLoaded","handleWindowClick","input","_input","toggleChevron","resetFocusState","textContent","wrapper","_inputWrapper","showCloseIcon","handleUpChevronClick","channel","_items","generateTreeViewState","ownerDocument","channelId","selectChannel","markSelectedChannelInDropdown","treeItem","renderSearchIcon","src","parentName","channelName","TeamSeparator","Search","downChevron","upChevron","closeIcon","renderUpChevron","renderDownChevron","renderDropdownList","itemObj","renderItem","itemState","handleItemClick","t","isArchived","teamsIds","treeItems","tree","filterString","treeView","stateItem","newStateItem","array","generateFocusList","selectedItem","hideCloseIcon","writeTaskScopes","readTaskScopes","getTodoTasks","tasks","getTodoTaskLists","taskLists","getTodoTaskList","createTodoTask","taskData","deleteTodoTask","taskId","updateTodoTask","patch","cancelNewTaskSubtitle","newTaskPlaceholder","newTaskLabel","editTaskLabel","addTaskButtonSubtitle","deleteTaskOption","editTaskOption","dueDate","newTaskDateInputLabel","changeTaskDateInputLabel","newTaskNameInputLabel","cancelAddingTask","removeTaskSubtitle","MgtTasksBase","renderLoadingTask","picker","newTaskTemplate","renderNewTask","tasksTemplate","renderTasks","handleTaskClick","task","mediaQuery","_previousMediaQuery","fluentCalendar","targetId","initialId","getTimezoneOffset","registerMgtTodoComponent","fluentRadioGroup","MgtTodo","_MgtTasksBase","_thisSuper","_isChangedDueDate","_isDarkMode","luminance","getValueFor","isDark","isElementDark","addIcon","_newTaskName","addTask","Add","cancelIcon","clearNewTaskData","dateClass","dark","calendarTemplate","dateToInputValue","_newTaskDueDate","handleDateChange","newTaskDetails","readOnly","handleInput","currentList","handleSelectionChanged","loadTasks","renderTaskDetails","context","taskDetailsTemplate","taskDeleteTemplate","removeTask","Delete","dueDateTime","_taskBeingUpdated","handleDateUpdate","updatingTask","handleBlur","changeTaskDetailsTemplate","_changedTaskName","handleChange","renderTask","isCompleted","taskClasses","complete","checkboxClasses","taskCheckContent","CheckMark","Radio","handleTaskCheckClick","handleTaskCheckKeydown","lists","defaultList","_graph","wellknownListName","_tasks","_isNewTaskBeingAdded","createNewTask","updateTask","updateTaskItem","updateTaskStatus","taskStatus","taskIndex","_updatingTaskDate","targets","taskFilter","completedTasks","taskTemplates","completedTaskTemplates","b","unshift","updatedTask","fluentSearch","MgtSearchBox","_searchTerm","onInputChanged","debounceDelay","fireSearchTermChanged","debouncedSearchTermChanged","BetaGraph","_Graph","setComponent","betaGraph","componentName","Graph","modified","back","pages","registerMgtSearchResultsComponent","fluentSkeleton","fluentTooltip","fluentDivider","MgtSearchResults","_size","entityTypes","contentSources","pagingMax","enableTopResults","defaultFields","currentPage","footerTemplate","headerTemplate","renderFooter","hitsContainers","_h","_g","hits","renderResult","fetchThumbnail","onFirstPageClick","scrollToFirstResult","onPageBackClick","onPageNextClick","_queryString","maxPageSize","queryString","queryTemplate","fields","requestOptions","getRequestOptions","searchEndpoint","getResponseInvalidationTime","requests","thumbnailBatch","thumbnailBatchBeta","fromGraph","hitId","parentReference","augmentResponse","thumbnailResponse","_step2$value","k","thumbnailWebUrl","t6","getResourceType","renderDriveItem","renderSite","renderList","renderListItem","renderBookmark","renderAcronym","renderQnA","renderDefault","hitsContainer","pagingRequired","getActivePages","total","renderPreviousPage","renderFirstPage","renderAllPages","moreResultsAvailable","totalResults","firstPage","medianPage","floor","getFirstPage","ceil","onPageClick","some","getDotButtonTitle","ChevronLeft","isLastPage","ChevronRight","pageNumber","trimFileExtension","lastModifiedBy","sanitizeSummary","summary","getResourceIcon","getNameFromUrl","News","FileOuter","renderAnswer","DoubleBookmark","BookOpen","BookQuestion","getResourceUrl","resourceUrl","_templateObject25","getResourceName","_templateObject26","getResultSummary","webLink","Globe","Email","SmallChat","getFields","designSystem","provideFluentDesignSystem","_len","fluentComponents","_key","_i","_fluentComponents","register","svgIcon","ArrowDown","SkypeArrow","SmallEmail","ExpandDown","Overview","Send","Contact","Call","Confirmation","Copy","Phone","CellPhone","Chat","Department","Dot","Birthday","Messages","Organization","ExpandRight","Profile","_templateObject27","_templateObject28","_templateObject29","Back","_templateObject30","Close","_templateObject31","_templateObject32","FileCloud","_templateObject33","DragFile","_templateObject34","_templateObject35","_templateObject36","_templateObject37","_templateObject38","_templateObject39","_templateObject40","_templateObject41","_templateObject42","_templateObject43","_templateObject44","_templateObject45","_templateObject46","Calendar","_templateObject47","Planner","_templateObject48","Milestone","_templateObject49","PersonAdd","_templateObject50","_templateObject51","_templateObject52","_templateObject53","_templateObject54","_templateObject55","_templateObject56","_templateObject57","_templateObject58","_templateObject59","_templateObject60","_templateObject61","_templateObject62","_templateObject63","_templateObject64","_templateObject65","today","getFullYear","getMonth","toLocaleString","hour","minute","sunday","getDay","weekday","lastTwoWeeks","day","month","year","func","time","timeout","_arguments","onload","readAsDataURL","emailString","bytes","decimals","dm","log","parseFloat","pow","toFixed","fileName","currentInvalidationPeriod","ComponentMediaQuery","_LitElement","_isLoadingState","_isFirstUpdated","setLoadingState","handleProviderUpdates","handleActiveAccountUpdates","handleLocalizationChanged","LocalizationHelper","updateStringsForTag","handleDirectionChanged","getDocumentDirection","mobile","tablet","desktop","onStringsUpdated","onDirectionUpdated","removeOnStringsUpdated","removeOnDirectionUpdated","removeActiveAccountChangedListener","onActiveAccountChanged","eventName","CustomEvent","bubbles","cancelable","composed","force","isLoadingState","_currentLoadStatePromise","loadStatePromise","then","LitElement","Task","args","render","pending","TemplateHelper","rendered","$parentTemplateContext","$parent","childNodes","templateContent","cloneNode","renderNode","div","createElement","appendChild","simpleCloneNode","startStr","endStr","_startExpression","_endExpression","escapeRegex","_expression","_globalContext","setBindingSyntax","string","clone","child","childClone","str","expression","p1","evalInContext","trimExpression","nodeName","expandExpressionsAsString","nodeElement","attributes","propsValue","keyValue","_step5","loopChildren","removeChildren","previousChildWasIfAndTrue","_iterator5","childNode","childElement","previousChildWasIfAndTrueSet","dataset","childWillBeRemoved","if","evalBoolInContext","else","for","_removeChildren","removeChild","_i2","_loopChildren","loopExpression","loopTokens","itemName","listKey","j","newContext","$index","insertBefore","globalContext","Function","substr","_renderedSlots","_renderedTemplates","_slotNamesAddedDuringRender","templateContext","getTemplates","removeUnusedSlottedElements","templateType","slotName","hasOwnProperty","_this$_renderedTempla","existingContext","slot","generated","templateRenderedData","templateName","default","dbListKey","CacheStore","schema","indexedDB","getDb","db","clear","getCacheId","getDBName","dbName","openDB","upgrade","_oldVersion","_newVersion","_transaction","dbArray","objectStoreNames","contains","createObjectStore","isInitialized","init","has","work","oldDbArray","newDbArray","x","delReq","deleteDatabase","onsuccess","message","cacheConfig","previousState","clearCacheById","Map","_value","_nextLink","_version","_strings","_stringsEventDispatcher","fire","_directionEventDispatcher","initDirection","_isDirectionInit","mutationObserver","MutationObserver","mutations","mutation","attributeName","options","attributeFilter","observe","stringObj","_Object$entries","overrideValue","_components","_Object$keys","EventDispatcher","o1","o2","equalsInternal","refs","o1Label","o2Label","stringsCache","WeakMap","rewriteStrings","matcher","replacement","temp","isDisambiguated","cached","disambiguation","newPrefix","raw","tagBase","constructor","define","Mgt","_Wc","handleTemplateRendered","_templates","ReactDOM","tag","tagPrefix","getTag","processTemplates","templateElements","ref","setRef","Wc","registerElementFunction","wcType","innerRef"],"sourceRoot":""}