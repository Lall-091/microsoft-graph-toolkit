{"version":3,"file":"static/js/350.c1487d0b.chunk.js","mappings":"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","sources":["../../../packages/mgt-components/dist/es6/components/mgt-agenda/src/components/mgt-agenda/mgt-agenda-css.ts","../../../packages/mgt-components/dist/es6/components/mgt-agenda/src/components/mgt-agenda/mgt-agenda.graph.ts","../../../packages/mgt-components/dist/es6/components/mgt-people/src/components/mgt-people/mgt-people-css.ts","../../../packages/mgt-components/dist/es6/components/mgt-people/src/components/mgt-people/mgt-people.ts","../../../packages/mgt-components/dist/es6/components/mgt-agenda/src/components/mgt-agenda/mgt-agenda.ts","../../../packages/mgt-react/src/generated/agenda.ts","components/Messages.tsx","../../../packages/mgt-react/src/generated/spinner.ts","components/Loading.tsx","pages/OutlookPage.tsx","../../../node_modules/@fluentui/react-divider/lib/components/Divider/useDividerStyles.styles.js","../../../node_modules/@fluentui/react-divider/lib/components/Divider/Divider.js","../../../node_modules/@fluentui/react-divider/lib/components/Divider/useDivider.js","../../../node_modules/@fluentui/react-divider/lib/components/Divider/renderDivider.js","../../../packages/mgt-components/dist/es6/components/sub-components/mgt-spinner/src/components/sub-components/mgt-spinner/mgt-spinner-css.ts","../../../packages/mgt-components/dist/es6/components/sub-components/mgt-spinner/src/components/sub-components/mgt-spinner/mgt-spinner.ts","../../../packages/mgt-react/src/generated/get.ts","../../../node_modules/lit-html/src/directive-helpers.ts","../../../node_modules/lit-html/src/directives/repeat.ts"],"sourcesContent":["// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\n\nimport { css, CSSResult } from 'lit';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles: CSSResult[] = [\n  css`\n:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host{--card-height:auto;--card-width:99%;background-color:var(--agenda-background-color,transparent)}:host .header{margin:var(--agenda-header-margin,18px 0 12px 10px);font-size:var(--agenda-header-font-size,24px);font-style:normal;font-weight:400;line-height:32px;color:var(--agenda-header-color,var(--neutral-foreground-rest));opacity:.9}:host .agenda,:host .group{display:flex;flex-direction:column;row-gap:var(--agenda-event-row-gap,14px)}:host .agenda>.group:first-child>.header,:host .group>.group:first-child>.header{margin-top:0}:host .agenda .event,:host .group .event{background:var(--agenda-event-background-color,var(--fill-color));border:var(--agenda-event-border,solid 2px transparent);box-shadow:var(--agenda-event-box-shadow,var(--elevation-shadow-card-rest));padding:var(--agenda-event-padding,12px);position:relative;display:flex;flex:1 1 auto;content-visibility:visible;contain:none}:host .agenda .event-container,:host .group .event-container{border-radius:calc(var(--layer-corner-radius) * 1px);padding:1px}:host .agenda .event.narrow,:host .group .event.narrow{display:flex;flex-direction:column;inset:0}:host .agenda .event-time-container,:host .group .event-time-container{font-style:normal;font-weight:600;font-size:12px;color:var(--agenda-event-time-color,var(--neutral-foreground-rest));width:112px;height:16px}:host .agenda .event-time-container.narrow,:host .group .event-time-container.narrow{margin-bottom:1px;width:100%}:host .agenda .event-time,:host .group .event-time{font-size:var(--agenda-event-time-font-size,12px);color:var(--agenda-event-time-color,var(--neutral-foreground-rest));font-weight:600}:host .agenda .event-details-container,:host .group .event-details-container{display:flex;flex-direction:column;position:relative;bottom:8px;top:0;padding-inline-start:32px}:host .agenda .event-details-container.narrow,:host .group .event-details-container.narrow{position:inherit;left:6px;display:flex;flex-direction:column;padding-inline-start:0}:host .agenda .event-subject,:host .group .event-subject{font-style:normal;font-weight:400;font-size:var(--agenda-event-subject-font-size,20px);line-height:28px;color:var(--agenda-event-subject-color,var(--neutral-foreground-rest));mix-blend-mode:normal;position:inherit;bottom:8px}:host .agenda .event-location-container,:host .group .event-location-container{display:inline-flex;flex-direction:row}:host .agenda .event-location-container .event-location,:host .group .event-location-container .event-location{padding-inline-start:3px;font-style:normal;font-weight:400;font-size:var(--agenda-event-location-font-size,12px);line-height:16px;color:var(--agenda-event-location-color,var(--neutral-foreground-rest))}:host .agenda .event-location-container .event-location-loading,:host .group .event-location-container .event-location-loading{width:90px;height:10px;margin:2px 0 0 4px}:host .agenda .event-location-container .event-location-icon,:host .group .event-location-container .event-location-icon{display:inline-flex}:host .agenda .event-location-container .event-location-icon svg,:host .group .event-location-container .event-location-icon svg{position:relative;top:2px;width:12px;height:12px}:host .agenda .event-location-container .event-location-icon svg path,:host .group .event-location-container .event-location-icon svg path{stroke:var(--agenda-event-location-color,var(--neutral-foreground-rest))}:host .agenda .event-location-container .event-location-icon-loading,:host .group .event-location-container .event-location-icon-loading{width:14px;height:14px}:host .agenda .event-location-container .event-attendee-loading,:host .group .event-location-container .event-attendee-loading{width:20px;height:20px;border-radius:10px;margin:0 2px 0 0}:host .agenda .event-attendees,:host .group .event-attendees{--list-margin:8px 0 0 0;--avatar-size-s:20px}fluent-card.event.event-loading{--card-height:90px}:host .event-attendees{--color:$agenda-event-attendees-color}:host fluent-tooltip{width:auto;contain:inline-size}[dir=rtl] :host{direction:rtl}[dir=rtl] .event-time-container{direction:ltr;display:flex;justify-content:flex-end}@media (forced-colors:active) and (prefers-color-scheme:dark){:host .agenda .event-location-container .event-location-icon svg path{stroke:#fff!important}}@media (forced-colors:active) and (prefers-color-scheme:light){:host .agenda .event-location-container .event-location-icon svg path{stroke:#000!important}}\n`];","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { GraphPageIterator, IGraph, prepScopes } from '@microsoft/mgt-element';\nimport * as MicrosoftGraph from '@microsoft/microsoft-graph-types';\n\nexport const getEventsQueryPageIterator = async (\n  graph: IGraph,\n  query: string,\n  scopes = 'calendars.read'\n): Promise<GraphPageIterator<MicrosoftGraph.Event>> => {\n  const request = graph.api(query).middlewareOptions(prepScopes(scopes)).orderby('start/dateTime');\n\n  return GraphPageIterator.create<MicrosoftGraph.Event>(graph, request);\n};\n\n/**\n * returns Calender events iterator associated with either the logged in user or a specific groupId\n *\n * @param {Date} startDateTime\n * @param {Date} endDateTime\n * @param {string} [groupId]\n * @param {string} preferredTimezone\n * @returns {(Promise<Event[]>)}\n * @memberof Graph\n */\nexport const getEventsPageIterator = async (\n  graph: IGraph,\n  startDateTime: Date,\n  endDateTime: Date,\n  groupId?: string\n): Promise<GraphPageIterator<MicrosoftGraph.Event>> => {\n  const sdt = `startdatetime=${startDateTime.toISOString()}`;\n  const edt = `enddatetime=${endDateTime.toISOString()}`;\n\n  let uri: string;\n\n  if (groupId) {\n    uri = `groups/${groupId}/calendar`;\n  } else {\n    uri = 'me';\n  }\n\n  uri += `/calendarview?${sdt}&${edt}`;\n\n  return getEventsQueryPageIterator(graph, uri);\n};\n","// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\n\nimport { css, CSSResult } from 'lit';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles: CSSResult[] = [\n  css`\n:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host .people-list{list-style:none;margin:var(--people-list-margin,8px 4px 8px 8px);padding:unset;display:flex;align-items:center;gap:var(--people-avatar-gap,4px)}:host .overflow span{vertical-align:middle;color:var(--people-overflow-font-color,currentColor);font-size:var(--people-overflow-font-size,12px);font-weight:var(--people-overflow-font-weight,400)}\n`];","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport * as MicrosoftGraph from '@microsoft/microsoft-graph-types';\nimport { html, TemplateResult } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport { repeat } from 'lit/directives/repeat.js';\nimport { getPeople, getPeopleFromResource, PersonType } from '../../graph/graph.people';\nimport { getUsersPresenceByPeople } from '../../graph/graph.presence';\nimport { findGroupMembers, getUsersForPeopleQueries, getUsersForUserIds } from '../../graph/graph.user';\nimport { IDynamicPerson } from '../../graph/types';\nimport { Providers, ProviderState, MgtTemplatedComponent, arraysAreEqual, mgtHtml } from '@microsoft/mgt-element';\nimport '../../styles/style-helper';\nimport { PersonCardInteraction } from './../PersonCardInteraction';\nimport { styles } from './mgt-people-css';\nimport { MgtPerson, registerMgtPersonComponent } from '../mgt-person/mgt-person';\nimport { registerComponent } from '@microsoft/mgt-element';\n\nexport { PersonCardInteraction } from './../PersonCardInteraction';\n\n/**\n * web component to display a group of people or contacts by using their photos or initials.\n *\n * @export\n * @class MgtPeople\n * @extends {MgtTemplatedComponent}\n *\n * @cssprop --people-list-margin- {String} the margin around the list of people. Default is 8px 4px 8px 8px.\n * @cssprop --people-avatar-gap - {String} the gap between the people in the list. Default is 4px.\n * @cssprop --people-overflow-font-color - {Color} the color of the overflow text.\n * @cssprop --people-overflow-font-size - {String} the text color of the overflow text. Default is 12px.\n * @cssprop --people-overflow-font-weight - {String} the font weight of the overflow text. Default is 400.\n */\n\nexport const registerMgtPeopleComponent = () => {\n  registerMgtPersonComponent();\n  registerComponent('people', MgtPeople);\n};\n\nexport class MgtPeople extends MgtTemplatedComponent {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  /**\n   * determines if agenda events come from specific group\n   *\n   * @type {string}\n   */\n  @property({\n    attribute: 'group-id',\n    type: String\n  })\n  public get groupId(): string {\n    return this._groupId;\n  }\n  public set groupId(value) {\n    if (this._groupId === value) {\n      return;\n    }\n    this._groupId = value;\n    void this.requestStateUpdate(true);\n  }\n\n  /**\n   * user id array\n   *\n   * @memberof MgtPeople\n   */\n  @property({\n    attribute: 'user-ids',\n    converter: (value, _type) => {\n      return value.split(',').map(v => v.trim());\n    }\n  })\n  public get userIds(): string[] {\n    return this._userIds;\n  }\n  public set userIds(value: string[]) {\n    if (arraysAreEqual(this._userIds, value)) {\n      return;\n    }\n    this._userIds = value;\n    void this.requestStateUpdate(true);\n  }\n\n  /**\n   * containing array of people used in the component.\n   *\n   * @type {IDynamicPerson[]}\n   */\n  @property({\n    attribute: 'people',\n    type: Object\n  })\n  public people: IDynamicPerson[];\n\n  /**\n   * allows developer to define queries of people for component\n   *\n   * @type {string[]}\n   */\n\n  @property({\n    attribute: 'people-queries',\n    converter: (value, _type) => {\n      return value.split(',').map(v => v.trim());\n    }\n  })\n  public get peopleQueries(): string[] {\n    return this._peopleQueries;\n  }\n  public set peopleQueries(value: string[]) {\n    if (arraysAreEqual(this._peopleQueries, value)) {\n      return;\n    }\n    this._peopleQueries = value;\n    void this.requestStateUpdate(true);\n  }\n\n  /**\n   * developer determined max people shown in component\n   *\n   * @type {number}\n   */\n  @property({\n    attribute: 'show-max',\n    type: Number\n  })\n  public showMax: number;\n\n  /**\n   * determines if person component renders presence\n   *\n   * @type {boolean}\n   */\n  @property({\n    attribute: 'show-presence',\n    type: Boolean\n  })\n  public showPresence: boolean;\n\n  /**\n   * Sets how the person-card is invoked\n   * Set to PersonCardInteraction.none to not show the card\n   *\n   * @type {PersonCardInteraction}\n   * @memberof MgtPerson\n   */\n  @property({\n    attribute: 'person-card',\n    converter: (value, _type) => {\n      value = value.toLowerCase();\n      if (typeof PersonCardInteraction[value] === 'undefined') {\n        return PersonCardInteraction.hover;\n      } else {\n        return PersonCardInteraction[value] as PersonCardInteraction;\n      }\n    }\n  })\n  public personCardInteraction: PersonCardInteraction = PersonCardInteraction.hover;\n\n  /**\n   * The resource to get\n   *\n   * @type {string}\n   * @memberof MgtPeople\n   */\n  @property({\n    attribute: 'resource',\n    type: String\n  })\n  public get resource(): string {\n    return this._resource;\n  }\n  public set resource(value) {\n    if (this._resource === value) {\n      return;\n    }\n    this._resource = value;\n    void this.requestStateUpdate(true);\n  }\n\n  /**\n   * Api version to use for request\n   *\n   * @type {string}\n   * @memberof MgtPeople\n   */\n  @property({\n    attribute: 'version',\n    type: String\n  })\n  public get version(): string {\n    return this._version;\n  }\n  public set version(value) {\n    if (this._version === value) {\n      return;\n    }\n    this._version = value;\n    void this.requestStateUpdate(true);\n  }\n\n  /**\n   * The scopes to request\n   *\n   * @type {string[]}\n   * @memberof MgtPeople\n   */\n  @property({\n    attribute: 'scopes',\n    converter: value => {\n      return value ? value.toLowerCase().split(',') : null;\n    },\n    reflect: true\n  })\n  public scopes: string[] = [];\n\n  /**\n   * Fallback when no user is found\n   *\n   * @type {IDynamicPerson[]}\n   */\n  @property({\n    attribute: 'fallback-details',\n    type: Array\n  })\n  public get fallbackDetails(): IDynamicPerson[] {\n    return this._fallbackDetails;\n  }\n  public set fallbackDetails(value: IDynamicPerson[]) {\n    if (value === this._fallbackDetails) {\n      return;\n    }\n\n    this._fallbackDetails = value;\n\n    void this.requestStateUpdate();\n  }\n\n  /**\n   * Get the scopes required for people\n   *\n   * @static\n   * @return {*}  {string[]}\n   * @memberof MgtPeople\n   */\n  public static get requiredScopes(): string[] {\n    return [\n      ...new Set([\n        'user.read.all',\n        'people.read',\n        'user.readbasic.all',\n        'presence.read.all',\n        'contacts.read',\n        ...MgtPerson.requiredScopes\n      ])\n    ];\n  }\n\n  private _groupId: string;\n  private _userIds: string[];\n  private _peopleQueries: string[];\n  private _peoplePresence: Record<string, MicrosoftGraph.Presence> = {};\n  private _resource: string;\n  private _version = 'v1.0';\n  private _fallbackDetails: IDynamicPerson[];\n  @state() private _arrowKeyLocation = -1;\n\n  constructor() {\n    super();\n    this.showMax = 3;\n  }\n\n  /**\n   * Clears the state of the component\n   *\n   * @protected\n   * @memberof MgtPeople\n   */\n  protected clearState(): void {\n    this.people = null;\n  }\n\n  /**\n   * Request to reload the state.\n   * Use reload instead of load to ensure loading events are fired.\n   *\n   * @protected\n   * @memberof MgtBaseComponent\n   */\n  protected requestStateUpdate(force?: boolean) {\n    if (force) {\n      this.people = null;\n    }\n    return super.requestStateUpdate(force);\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method must return\n   * a lit-html TemplateResult. Setting properties inside this method will *not*\n   * trigger the element to update.\n   */\n  protected render() {\n    if (this.isLoadingState) {\n      return this.renderLoading();\n    }\n\n    if (!this.people || this.people.length === 0) {\n      return this.renderNoData();\n    }\n\n    return this.renderTemplate('default', { people: this.people, max: this.showMax }) || this.renderPeople();\n  }\n\n  /**\n   * Render the loading state.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtPeople\n   */\n  protected renderLoading() {\n    return this.renderTemplate('loading', null) || html``;\n  }\n\n  /**\n   * Render the list of people.\n   *\n   * @protected\n   * @param {*} people\n   * @returns {TemplateResult}\n   * @memberof MgtPeople\n   */\n  protected renderPeople(): TemplateResult {\n    const maxPeople = this.people.slice(0, this.showMax).filter(pple => pple);\n    return html`\n      <ul\n        tabindex=\"0\"\n        class=\"people-list\"\n        aria-label=\"people\"\n        @keydown=${this.handleKeyDown}>\n        ${repeat(\n          maxPeople,\n          p => (p.id ? p.id : p.displayName),\n          p => html`\n            <li tabindex=\"-1\" class=\"people-person\">\n              ${this.renderPerson(p)}\n            </li>\n          `\n        )}\n        ${this.people.length > this.showMax ? this.renderOverflow() : null}\n      </ul>\n    `;\n  }\n\n  /**\n   * Render the overflow content to represent any extra people, beyond the max.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPeople\n   */\n  protected renderOverflow(): TemplateResult {\n    const extra = this.people.length - this.showMax;\n    return (\n      this.renderTemplate('overflow', {\n        extra,\n        max: this.showMax,\n        people: this.people\n      }) ||\n      html`\n        <li tabindex=\"-1\" aria-label=\"and ${extra} more attendees\" class=\"overflow\"><span>+${extra}</span></li>\n      `\n    );\n  }\n\n  /**\n   * Handles the keypresses on a keyboard for the listed people.\n   *\n   * @param event is a KeyboardEvent.\n   */\n  protected handleKeyDown = (event: KeyboardEvent) => {\n    const peopleContainer: HTMLElement = this.shadowRoot.querySelector('.people-list');\n    let person: HTMLElement;\n    const peopleElements: HTMLCollection = peopleContainer?.children;\n    // Default all tabindex values in li nodes to -1\n    for (const element of peopleElements) {\n      const el: HTMLElement = element as HTMLElement;\n      el.setAttribute('tabindex', '-1');\n      el.blur();\n    }\n\n    const childElementCount = peopleContainer.childElementCount;\n    const keyName = event.key;\n    if (keyName === 'ArrowRight') {\n      this._arrowKeyLocation = (this._arrowKeyLocation + 1 + childElementCount) % childElementCount;\n    } else if (keyName === 'ArrowLeft') {\n      this._arrowKeyLocation = (this._arrowKeyLocation - 1 + childElementCount) % childElementCount;\n    } else if (keyName === 'Tab' || keyName === 'Escape') {\n      this._arrowKeyLocation = -1;\n      peopleContainer.blur();\n    } else if (['Enter', 'space', ' '].includes(keyName)) {\n      if (this.personCardInteraction !== PersonCardInteraction.none) {\n        const personEl = peopleElements[this._arrowKeyLocation] as HTMLElement;\n        const mgtPerson = personEl.querySelector<MgtPerson>('mgt-person');\n        if (mgtPerson) {\n          mgtPerson.showPersonCard();\n        }\n      }\n    }\n\n    if (this._arrowKeyLocation > -1) {\n      person = peopleElements[this._arrowKeyLocation] as HTMLElement;\n      person.setAttribute('tabindex', '1');\n      person.focus();\n    }\n  };\n\n  /**\n   * Render an individual person.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPeople\n   */\n  protected renderPerson(person: MicrosoftGraph.User | MicrosoftGraph.Person | MicrosoftGraph.Contact): TemplateResult {\n    let personPresence: MicrosoftGraph.Presence = {\n      // set up default presence\n      activity: 'Offline',\n      availability: 'Offline',\n      id: null\n    };\n    if (this.showPresence && this._peoplePresence) {\n      personPresence = this._peoplePresence[person.id];\n    }\n    const avatarSize = 'small';\n    return (\n      this.renderTemplate('person', { person }, person.id) ||\n      // set image to @ to flag the mgt-person component to\n      // query the image from the graph\n      mgtHtml`\n        <mgt-person\n          .personDetails=${person}\n          .fetchImage=${true}\n          .avatarSize=${avatarSize}\n          .personCardInteraction=${this.personCardInteraction}\n          .showPresence=${this.showPresence}\n          .personPresence=${personPresence}\n          .usage=${'people'}\n        ></mgt-person>\n      `\n    );\n  }\n\n  /**\n   * render the no data state.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPeople\n   */\n  protected renderNoData(): TemplateResult {\n    return this.renderTemplate('no-data', null) || html``;\n  }\n\n  /**\n   * load state into the component.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtPeople\n   */\n  protected async loadState() {\n    if (!this.people) {\n      const provider = Providers.globalProvider;\n\n      if (provider && provider.state === ProviderState.SignedIn) {\n        const graph = provider.graph.forComponent(this);\n\n        // populate people\n        if (this.groupId) {\n          this.people = await findGroupMembers(graph, null, this.groupId, this.showMax, PersonType.person);\n        } else if (this.userIds || this.peopleQueries) {\n          this.people = this.userIds\n            ? await getUsersForUserIds(graph, this.userIds, '', '', this._fallbackDetails)\n            : await getUsersForPeopleQueries(graph, this.peopleQueries, this._fallbackDetails);\n        } else if (this.resource) {\n          this.people = await getPeopleFromResource(graph, this.version, this.resource, this.scopes);\n        } else {\n          this.people = await getPeople(graph);\n        }\n\n        // populate presence for people\n        if (this.showPresence) {\n          this._peoplePresence = await getUsersPresenceByPeople(graph, this.people);\n        } else {\n          this._peoplePresence = null;\n        }\n      }\n    }\n  }\n}\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport * as MicrosoftGraph from '@microsoft/microsoft-graph-types';\nimport { html, TemplateResult } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { Providers, ProviderState, MgtTemplatedComponent, mgtHtml } from '@microsoft/mgt-element';\nimport '../../styles/style-helper';\nimport '../mgt-person/mgt-person';\nimport { styles } from './mgt-agenda-css';\nimport { getEventsPageIterator, getEventsQueryPageIterator } from './mgt-agenda.graph';\nimport { SvgIcon, getSvg } from '../../utils/SvgHelper';\nimport { MgtPeople, registerMgtPeopleComponent } from '../mgt-people/mgt-people';\nimport { registerFluentComponents } from '../../utils/FluentComponents';\nimport { fluentCard } from '@fluentui/web-components';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { registerComponent } from '@microsoft/mgt-element';\n\n/**\n * Web Component which represents events in a user or group calendar.\n *\n * @export\n * @class MgtAgenda\n * @extends {MgtTemplatedComponent}\n *\n * @fires {CustomEvent<MicrosoftGraph.Event>} eventClick - Fired when user click an event\n *\n * @cssprop --event-box-shadow - {String} Event box shadow color and size\n * @cssprop --event-row-gap - {String} The size of the gap between two event elements\n * @cssprop --event-padding - {String} Event padding\n * @cssprop --event-background-color - {Color} Event background color\n * @cssprop --event-border - {String} Event border style\n * @cssprop --agenda-header-margin - {String} Agenda header margin size\n * @cssprop --agenda-header-font-size - {Length} Agenda header font size\n * @cssprop --agenda-header-color - {Color} Agenda header color\n * @cssprop --event-time-font-size - {Length} Event time font size\n * @cssprop --event-time-color - {Color} Event time color\n * @cssprop --event-subject-font-size - {Length} Event subject font size\n * @cssprop --event-subject-color - {Color} Event subject color\n * @cssprop --event-location-font-size - {Length} Event location font size\n * @cssprop --event-location-color - {Color} Event location color\n * @cssprop --event-attendees-color - {Color} Event attendees color\n */\n\nexport const registerMgtAgendaComponent = () => {\n  registerFluentComponents(fluentCard);\n  // register dependent components\n  registerMgtPeopleComponent();\n  // register self\n  registerComponent('agenda', MgtAgenda);\n};\n\nexport class MgtAgenda extends MgtTemplatedComponent {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  /**\n   * stores current date for initial calender selection in events.\n   *\n   * @type {string}\n   */\n  @property({\n    attribute: 'date',\n    type: String\n  })\n  public get date(): string {\n    return this._date;\n  }\n  public set date(value) {\n    if (this._date === value) {\n      return;\n    }\n\n    this._date = value;\n    void this.reloadState();\n  }\n\n  /**\n   * determines if agenda events come from specific group\n   *\n   * @type {string}\n   */\n  @property({\n    attribute: 'group-id',\n    type: String\n  })\n  public get groupId(): string {\n    return this._groupId;\n  }\n  public set groupId(value) {\n    if (this._groupId === value) {\n      return;\n    }\n\n    this._groupId = value;\n    void this.reloadState();\n  }\n\n  /**\n   * sets number of days until end date, 3 is the default\n   *\n   * @type {number}\n   */\n  @property({\n    attribute: 'days',\n    type: Number\n  })\n  public get days(): number {\n    return this._days;\n  }\n  public set days(value) {\n    if (this._days === value) {\n      return;\n    }\n\n    this._days = value;\n    void this.reloadState();\n  }\n\n  /**\n   * allows developer to specify a different graph query that retrieves events\n   *\n   * @type {string}\n   */\n  @property({\n    attribute: 'event-query',\n    type: String\n  })\n  public get eventQuery(): string {\n    return this._eventQuery;\n  }\n  public set eventQuery(value) {\n    if (this._eventQuery === value) {\n      return;\n    }\n\n    this._eventQuery = value;\n    void this.reloadState();\n  }\n\n  /**\n   * array containing events from user agenda.\n   *\n   * @type {MicrosoftGraph.Event[]}\n   */\n  @property({\n    attribute: 'events',\n    type: Array\n  })\n  public events: MicrosoftGraph.Event[];\n\n  /**\n   * allows developer to define max number of events shown\n   *\n   * @type {number}\n   */\n  @property({\n    attribute: 'show-max',\n    type: Number\n  })\n  public showMax: number;\n\n  /**\n   * allows developer to define agenda to group events by day.\n   *\n   * @type {boolean}\n   */\n  @property({\n    attribute: 'group-by-day',\n    type: Boolean\n  })\n  public groupByDay: boolean;\n\n  /**\n   * allows developer to specify preferred timezone that should be used for\n   * rendering events retrieved from Graph, eg. `America/Los_Angeles`.\n   * By default events are rendered using the current timezone of the\n   * device being used.\n   *\n   * @type {string}\n   */\n  @property({\n    attribute: 'preferred-timezone',\n    type: String\n  })\n  public get preferredTimezone(): string {\n    return this._preferredTimezone;\n  }\n  public set preferredTimezone(value) {\n    if (this._preferredTimezone === value) {\n      return;\n    }\n\n    this._preferredTimezone = value;\n    void this.reloadState();\n  }\n\n  /**\n   * Get the scopes required for agenda\n   *\n   * @static\n   * @return {*}  {string[]}\n   * @memberof MgtAgenda\n   */\n  public static get requiredScopes(): string[] {\n    return [...new Set(['calendars.read', ...MgtPeople.requiredScopes])];\n  }\n\n  /**\n   * determines width available for agenda component.\n   *\n   * @type {boolean}\n   */\n  @property({ attribute: false }) private _isNarrow: boolean;\n\n  private _eventQuery: string;\n  private _days = 3;\n  private _groupId: string;\n  private _date: string;\n  private _preferredTimezone: string;\n\n  /**\n   * Determines width available if resize is necessary, adds onResize event listener to window\n   *\n   * @memberof MgtAgenda\n   */\n  public connectedCallback() {\n    this._isNarrow = this.offsetWidth < 600;\n    super.connectedCallback();\n    window.addEventListener('resize', this.onResize);\n  }\n\n  /**\n   * Removes onResize event listener from window\n   *\n   * @memberof MgtAgenda\n   */\n  public disconnectedCallback() {\n    window.removeEventListener('resize', this.onResize);\n    super.disconnectedCallback();\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method must return a lit-html TemplateResult.\n   * Setting properties inside this method will not trigger the element to update\n   *\n   * @returns\n   * @memberof MgtAgenda\n   */\n  public render(): TemplateResult {\n    // Loading\n    if (!this.events && this.isLoadingState) {\n      return this.renderLoading();\n    }\n\n    // No data\n    if (!this.events || this.events.length === 0) {\n      return this.renderNoData();\n    }\n\n    // Prep data\n    const events = this.showMax && this.showMax > 0 ? this.events.slice(0, this.showMax) : this.events;\n\n    // Default template\n    const renderedTemplate = this.renderTemplate('default', { events });\n    if (renderedTemplate) {\n      return renderedTemplate;\n    }\n\n    const agendaClasses = {\n      agenda: true,\n      grouped: this.groupByDay\n    };\n\n    // Render list\n    return html`\n      <div dir=${this.direction} class=\"${classMap(agendaClasses)}\">\n        ${this.groupByDay ? this.renderGroups(events) : this.renderEvents(events)}\n        ${this.isLoadingState ? this.renderLoading() : html``}\n      </div>\n    `;\n  }\n\n  /**\n   * Reloads the component with its current settings and potential new data\n   *\n   * @memberof MgtAgenda\n   */\n  public async reload() {\n    this.events = await this.loadEvents();\n  }\n\n  /**\n   * Render the loading state\n   *\n   * @protected\n   * @returns\n   * @memberof MgtAgenda\n   */\n  protected renderLoading(): TemplateResult {\n    return (\n      this.renderTemplate('loading', null) ||\n      html`\n        <fluent-card class=\"event event-loading\">\n          <div class=\"event-time-container\">\n            <div class=\"event-time-loading loading-element\"></div>\n          </div>\n          <div class=\"event-details-container\">\n            <div class=\"event-subject-loading loading-element\"></div>\n            <div class=\"event-location-container\">\n              <div class=\"event-location-icon-loading loading-element\"></div>\n              <div class=\"event-location-loading loading-element\"></div>\n            </div>\n            <div class=\"event-location-container\">\n              <div class=\"event-attendee-loading loading-element\"></div>\n              <div class=\"event-attendee-loading loading-element\"></div>\n              <div class=\"event-attendee-loading loading-element\"></div>\n            </div>\n          </div>\n        </fluent-card>`\n    );\n  }\n\n  /**\n   * Clears state of the component\n   *\n   * @protected\n   * @memberof MgtAgenda\n   */\n  protected clearState(): void {\n    this.events = null;\n  }\n\n  /**\n   * Render the no-data state.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtAgenda\n   */\n  protected renderNoData(): TemplateResult {\n    return this.renderTemplate('no-data', null) || html``;\n  }\n\n  /**\n   * Render an individual Event.\n   *\n   * @protected\n   * @param {MicrosoftGraph.Event} event\n   * @returns\n   * @memberof MgtAgenda\n   */\n  protected renderEvent(event: MicrosoftGraph.Event): TemplateResult {\n    // Update narrow state\n    this._isNarrow = this.offsetWidth < 600;\n\n    const eventClasses = {\n      narrow: this._isNarrow\n    };\n\n    return html`\n      <fluent-card class=\"${classMap({ event: true, ...eventClasses })}\">\n        <div class=\"${classMap({ 'event-time-container': true, ...eventClasses })}\">\n          <div class=\"event-time\" aria-label=\"${this.getEventTimeString(event)}\">${this.getEventTimeString(event)}</div>\n        </div>\n        <div class=\"${classMap({ 'event-details-container': true, ...eventClasses })}\">\n          ${this.renderTitle(event)} ${this.renderLocation(event)} ${this.renderAttendees(event)}\n        </div>\n        <div class=\"event-other-container\">${this.renderOther(event)}</div>\n      </fluent-card>\n    `;\n  }\n\n  /**\n   * Render the header for a group.\n   * Only relevant for grouped Events.\n   *\n   * @protected\n   * @param {Date} date\n   * @returns\n   * @memberof MgtAgenda\n   */\n  protected renderHeader(header: string): TemplateResult {\n    return (\n      this.renderTemplate('header', { header }, 'header-' + header) ||\n      html`\n        <div class=\"header\" aria-label=\"${header}\">${header}</div>\n      `\n    );\n  }\n\n  /**\n   * Render the title field of an Event\n   *\n   * @protected\n   * @param {MicrosoftGraph.Event} event\n   * @returns\n   * @memberof MgtAgenda\n   */\n  protected renderTitle(event: MicrosoftGraph.Event): TemplateResult {\n    return html`\n      <div\n        aria-label=${event.subject}\n        class=\"${classMap({\n          'event-subject': true,\n          narrow: this._isNarrow\n        })}\"\n      >\n        ${event.subject}\n      </div>`;\n  }\n\n  /**\n   * Render the location field of an Event\n   *\n   * @protected\n   * @param {MicrosoftGraph.Event} event\n   * @returns\n   * @memberof MgtAgenda\n   */\n  protected renderLocation(event: MicrosoftGraph.Event): TemplateResult {\n    if (!event.location.displayName) {\n      return null;\n    }\n\n    return html`\n      <div class=\"event-location-container\">\n        <div class=\"event-location-icon\">${getSvg(SvgIcon.OfficeLocation)}</div>\n        <div class=\"event-location\" aria-label=\"${event.location.displayName}\">${event.location.displayName}</div>\n      </div>\n    `;\n  }\n\n  /**\n   * Render the attendees field of an Event\n   *\n   * @protected\n   * @param {MicrosoftGraph.Event} event\n   * @returns\n   * @memberof MgtAgenda\n   */\n  protected renderAttendees(event: MicrosoftGraph.Event): TemplateResult {\n    if (!event.attendees.length) {\n      return null;\n    }\n    return mgtHtml`\n      <mgt-people\n        show-max=\"5\"\n        show-presence\n        class=\"event-attendees\"\n        .peopleQueries=${event.attendees.map(attendee => {\n          return attendee.emailAddress.address;\n        })}\n      ></mgt-people>\n    `;\n  }\n\n  /**\n   * Render the event other field of an Event\n   *\n   * @protected\n   * @param {MicrosoftGraph.Event} event\n   * @returns\n   * @memberof MgtAgenda\n   */\n  protected renderOther(event: MicrosoftGraph.Event): TemplateResult {\n    return this.hasTemplate('event-other')\n      ? html`\n          ${this.renderTemplate('event-other', { event }, event.id + '-other')}\n        `\n      : null;\n  }\n\n  /**\n   * Render the events in groups, each with a header.\n   *\n   * @protected\n   * @param {MicrosoftGraph.Event[]} events\n   * @returns {TemplateResult}\n   * @memberof MgtAgenda\n   */\n  protected renderGroups(events: MicrosoftGraph.Event[]): TemplateResult {\n    // Render list, grouped by day\n    const grouped: Record<string, MicrosoftGraph.Event[]> = {};\n\n    events.forEach(event => {\n      let dateString = event?.start?.dateTime;\n      if (event.end.timeZone === 'UTC') {\n        dateString += 'Z';\n      }\n\n      const header = this.getDateHeaderFromDateTimeString(dateString);\n      grouped[header] = grouped[header] || [];\n      grouped[header].push(event);\n    });\n\n    return html`\n      ${Object.keys(grouped).map(\n        header =>\n          html`\n            <div class=\"group\">${this.renderHeader(header)} ${this.renderEvents(grouped[header])}</div>\n          `\n      )}\n    `;\n  }\n\n  /**\n   * Render a list of events.\n   *\n   * @protected\n   * @param {MicrosoftGraph.Event[]} events\n   * @returns {TemplateResult}\n   * @memberof MgtAgenda\n   */\n  protected renderEvents(events: MicrosoftGraph.Event[]): TemplateResult {\n    return html`\n        ${events.map(\n          event =>\n            html`\n              <div\n                class=\"event-container\"\n                tabindex=\"0\"\n                @focus=${() => this.eventClicked(event)}>\n                ${this.renderTemplate('event', { event }, event.id) || this.renderEvent(event)}\n              </div>`\n        )}`;\n  }\n\n  /**\n   * Load state into the component\n   *\n   * @protected\n   * @returns\n   * @memberof MgtAgenda\n   */\n  protected async loadState() {\n    if (this.events) {\n      return;\n    }\n\n    const events = await this.loadEvents();\n    if (events?.length > 0) {\n      this.events = events;\n    }\n  }\n\n  private async reloadState() {\n    this.events = null;\n    await this.requestStateUpdate(true);\n  }\n\n  private readonly onResize = () => {\n    this._isNarrow = this.offsetWidth < 600;\n  };\n\n  private eventClicked(event: MicrosoftGraph.Event) {\n    this.fireCustomEvent('eventClick', event);\n  }\n\n  private getEventTimeString(event: MicrosoftGraph.Event) {\n    if (event.isAllDay) {\n      return 'ALL DAY';\n    }\n\n    // #937 When not specifying a preferred time zone using the\n    // preferred-timezone attribute, MGT treats the dates retrieved from\n    // Microsoft Graph as local time, rather than UTC.\n    let startString = event.start.dateTime;\n    if (event.start.timeZone === 'UTC') {\n      startString += 'Z';\n    }\n    let endString = event.end.dateTime;\n    if (event.end.timeZone === 'UTC') {\n      endString += 'Z';\n    }\n\n    const start = this.prettyPrintTimeFromDateTime(new Date(startString));\n    const end = this.prettyPrintTimeFromDateTime(new Date(endString));\n\n    return `${start} - ${end}`;\n  }\n\n  private async loadEvents(): Promise<MicrosoftGraph.Event[]> {\n    const p = Providers.globalProvider;\n    let events: MicrosoftGraph.Event[] = [];\n\n    if (p?.state === ProviderState.SignedIn) {\n      const graph = p.graph.forComponent(this);\n\n      if (this.eventQuery) {\n        try {\n          const tokens = this.eventQuery.split('|');\n          let scope: string;\n          let query: string;\n          if (tokens.length > 1) {\n            query = tokens[0].trim();\n            scope = tokens[1].trim();\n          } else {\n            query = this.eventQuery;\n          }\n          const iterator = await getEventsQueryPageIterator(graph, query, scope);\n          if (iterator?.value) {\n            events = iterator.value;\n\n            while (iterator.hasNext) {\n              await iterator.next();\n              events = iterator.value;\n            }\n          }\n          // eslint-disable-next-line no-empty\n        } catch (e) {}\n      } else {\n        const start = this.date ? new Date(this.date) : new Date();\n        const end = new Date(start.getTime());\n        end.setDate(start.getDate() + this.days);\n\n        try {\n          const iterator = await getEventsPageIterator(graph, start, end, this.groupId);\n          if (iterator?.value) {\n            events = iterator.value;\n\n            while (iterator.hasNext) {\n              await iterator.next();\n              events = iterator.value;\n            }\n          }\n        } catch (error) {\n          // noop - possible error with graph\n        }\n      }\n    }\n\n    return events;\n  }\n\n  private prettyPrintTimeFromDateTime(date: Date) {\n    return date.toLocaleTimeString(navigator.language, {\n      timeStyle: 'short',\n      timeZone: this.preferredTimezone\n    });\n  }\n\n  private getDateHeaderFromDateTimeString(dateTimeString: string) {\n    const date = new Date(dateTimeString);\n    return date.toLocaleDateString(navigator.language, {\n      dateStyle: 'full',\n      timeZone: this.preferredTimezone\n    });\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/consistent-type-definitions */\nimport { registerMgtAgendaComponent } from '@microsoft/mgt-components/dist/es6/components/components';\nimport { TemplateContext,ComponentMediaQuery,TemplateRenderedData } from '@microsoft/mgt-element';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraph from '@microsoft/microsoft-graph-types';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraphBeta from '@microsoft/microsoft-graph-types-beta';\nimport {wrapMgt} from '../Mgt';\n\nexport type AgendaProps = {\n\tdate?: string;\n\tgroupId?: string;\n\tdays?: number;\n\teventQuery?: string;\n\tevents?: MicrosoftGraph.Event[];\n\tshowMax?: number;\n\tgroupByDay?: boolean;\n\tpreferredTimezone?: string;\n\ttemplateContext?: TemplateContext;\n\tmediaQuery?: ComponentMediaQuery;\n\ttemplateRendered?: (e: CustomEvent<TemplateRenderedData>) => void;\n}\n\nexport const Agenda = wrapMgt<AgendaProps>('agenda', registerMgtAgendaComponent);\n\n","import { MgtTemplateProps, Person, PersonCardInteraction, PersonViewType } from '@microsoft/mgt-react';\nimport { makeStyles, mergeClasses, shorthands } from '@fluentui/react-components';\n\nconst useStyles = makeStyles({\n  email: {\n    boxShadow: 'var(--box-shadow)',\n    ...shorthands.padding('10px'),\n    ...shorthands.margin('8px'),\n    ':hover': {\n      borderLeftWidth: '4px',\n      borderLeftColor: 'var(--input-border-color--hover)',\n      borderLeftStyle: 'solid',\n      paddingLeft: '6px'\n    },\n    'mgt-person': {\n      '--font-size': '12px',\n      '--avatar-size-s': '16px'\n    }\n  },\n\n  link: {\n    color: 'var(--color-sub1)',\n    textDecorationLine: 'none'\n  },\n\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n\n  subject: {\n    color: 'var(--color-sub1)',\n    fontSize: '14px',\n    ...shorthands.gridArea('1 / 1 / auto / 3'),\n    ...shorthands.margin('0')\n  },\n\n  title: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    marginBottom: '4px',\n    color: 'var(--color-sub1)'\n  },\n\n  date: {\n    fontSize: '12px',\n    paddingLeft: '4px',\n    float: 'right'\n  },\n\n  body: {\n    fontSize: '13px',\n    textOverflow: 'ellipsis',\n    wordWrap: 'break-word',\n    ...shorthands.overflow('hidden'),\n    maxHeight: '2.8em',\n    lineHeight: '1.4em',\n    color: 'var(--color-sub2)'\n  },\n\n  emptyBody: {\n    fontStyle: 'italic'\n  }\n});\n\nexport function Messages(props: MgtTemplateProps) {\n  const styles = useStyles();\n  const email = props.dataContext;\n  return (\n    <div className={styles.email}>\n      <a className={styles.link} href={email.webLink} target=\"_blank\" rel=\"noreferrer\">\n        <div className={styles.header}>\n          <div>\n            <Person\n              personQuery={email.sender.emailAddress.address}\n              view={PersonViewType.oneline}\n              personCardInteraction={PersonCardInteraction.hover}\n            />\n          </div>\n        </div>\n        <div className={styles.title}>\n          <h3 className={styles.subject}>{email.subject}</h3>\n          <span className={styles.date}>{new Date(email.receivedDateTime).toLocaleDateString()}</span>\n        </div>\n        {email.bodyPreview ?? <div className={styles.body}>{email.bodyPreview}</div>}\n        {!email.bodyPreview ?? <div className={mergeClasses(styles.body, styles.emptyBody)}>...</div>}\n      </a>\n    </div>\n  );\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/consistent-type-definitions */\nimport { registerMgtSpinnerComponent } from '@microsoft/mgt-components/dist/es6/components/components';\nimport { ComponentMediaQuery } from '@microsoft/mgt-element';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraph from '@microsoft/microsoft-graph-types';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraphBeta from '@microsoft/microsoft-graph-types-beta';\nimport {wrapMgt} from '../Mgt';\n\nexport type SpinnerProps = {\n\tmediaQuery?: ComponentMediaQuery;\n}\n\nexport const Spinner = wrapMgt<SpinnerProps>('spinner', registerMgtSpinnerComponent);\n\n","import * as React from 'react';\nimport { MgtTemplateProps, Spinner } from '@microsoft/mgt-react';\nimport { makeStyles } from '@fluentui/react-components';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 'calc(100vh - 300px)'\n  },\n  message: {\n    paddingLeft: '10px'\n  }\n});\n\nexport interface ILoadingProps extends MgtTemplateProps {\n  message?: string;\n}\n\nexport const Loading: React.FunctionComponent<ILoadingProps> = (props: ILoadingProps) => {\n  const styles = useStyles();\n  return (\n    <div className={styles.root}>\n      <Spinner />\n      <div className={styles.message}>\n        <span>{props.message || 'Loading...'}</span>\n      </div>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { PageHeader } from '../components/PageHeader';\nimport { Agenda, Get } from '@microsoft/mgt-react';\nimport { Messages } from '../components/Messages';\nimport { Loading } from '../components/Loading';\nimport {\n  SelectTabData,\n  SelectTabEvent,\n  Tab,\n  TabList,\n  TabValue,\n  shorthands,\n  makeStyles,\n  mergeClasses\n} from '@fluentui/react-components';\n\nconst useStyles = makeStyles({\n  container: {\n    display: 'flex',\n    flexDirection: 'row'\n  },\n  panels: {\n    ...shorthands.padding('10px')\n  },\n  main: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'nowrap',\n    width: '70%'\n  },\n  side: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'nowrap',\n    width: '30%'\n  }\n});\n\nconst OutlookPage: React.FunctionComponent = () => {\n  const styles = useStyles();\n  const [selectedTab, setSelectedTab] = React.useState<TabValue>('focused');\n\n  const onTabSelect = (event: SelectTabEvent, data: SelectTabData) => {\n    setSelectedTab(data.value);\n  };\n\n  return (\n    <>\n      <PageHeader\n        title={'Mail and Calendar'}\n        description={'Stay productive and navigate your emails and your calendar appointments'}\n      ></PageHeader>\n\n      <TabList selectedValue={selectedTab} onTabSelect={onTabSelect} className={styles.container}>\n        <Tab value=\"focused\">Focused</Tab>\n        <Tab value=\"others\">Others</Tab>\n      </TabList>\n      <div className={styles.container}>\n        <div className={mergeClasses(styles.panels, styles.main)}>\n          {selectedTab === 'focused' && (\n            <Get\n              resource=\"/me/mailFolders/Inbox/messages?$orderby=InferenceClassification, createdDateTime DESC&filter=InferenceClassification eq 'Focused'\"\n              maxPages={3}\n              scopes={['Mail.Read']}\n            >\n              <Messages template=\"value\"></Messages>\n              <Loading template=\"loading\" message={'Loading your focused inbox...'}></Loading>\n            </Get>\n          )}\n          {selectedTab === 'others' && (\n            <Get\n              resource=\"/me/mailFolders/Inbox/messages?$orderby=InferenceClassification, createdDateTime DESC&filter=InferenceClassification eq 'Other'\"\n              maxPages={3}\n              scopes={['Mail.Read']}\n            >\n              <Messages template=\"value\"></Messages>\n              <Loading template=\"loading\" message={'Loading your other inbox...'}></Loading>\n            </Get>\n          )}\n        </div>\n        <div className={styles.side}>\n          <Agenda groupByDay={true}></Agenda>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default OutlookPage;\n","import { mergeClasses, shorthands, makeStyles } from '@griffel/react';\nimport { tokens } from '@fluentui/react-theme';\nexport const dividerClassNames = {\n    root: 'fui-Divider',\n    wrapper: 'fui-Divider__wrapper'\n};\nconst contentSpacing = '12px';\nconst insetSpacing = '12px';\nconst maxStartEndLength = '8px';\nconst minStartEndLength = '8px;';\nconst useBaseStyles = makeStyles({\n    // Base styles\n    base: {\n        alignItems: 'center',\n        boxSizing: 'border-box',\n        display: 'flex',\n        flexDirection: 'row',\n        flexGrow: 1,\n        position: 'relative',\n        fontFamily: tokens.fontFamilyBase,\n        fontSize: tokens.fontSizeBase200,\n        fontWeight: tokens.fontWeightRegular,\n        lineHeight: tokens.lineHeightBase200,\n        textAlign: 'center',\n        '::before': {\n            boxSizing: 'border-box',\n            display: 'flex',\n            flexGrow: 1\n        },\n        '::after': {\n            boxSizing: 'border-box',\n            display: 'flex',\n            flexGrow: 1\n        }\n    },\n    // Childless styles\n    childless: {\n        '::before': {\n            marginBottom: 0,\n            marginRight: 0\n        },\n        '::after': {\n            marginLeft: 0,\n            marginTop: 0\n        }\n    },\n    // Alignment variations\n    start: {\n        '::after': {\n            content: '\"\"'\n        }\n    },\n    center: {\n        '::before': {\n            content: '\"\"'\n        },\n        '::after': {\n            content: '\"\"'\n        }\n    },\n    end: {\n        '::before': {\n            content: '\"\"'\n        }\n    },\n    // Appearance variations\n    brand: {\n        color: tokens.colorBrandForeground1,\n        '::before': {\n            ...shorthands.borderColor(tokens.colorBrandStroke1)\n        },\n        '::after': {\n            ...shorthands.borderColor(tokens.colorBrandStroke1)\n        }\n    },\n    default: {\n        color: tokens.colorNeutralForeground2,\n        '::before': {\n            ...shorthands.borderColor(tokens.colorNeutralStroke2)\n        },\n        '::after': {\n            ...shorthands.borderColor(tokens.colorNeutralStroke2)\n        }\n    },\n    subtle: {\n        color: tokens.colorNeutralForeground2,\n        '::before': {\n            ...shorthands.borderColor(tokens.colorNeutralStroke3)\n        },\n        '::after': {\n            ...shorthands.borderColor(tokens.colorNeutralStroke3)\n        }\n    },\n    strong: {\n        color: tokens.colorNeutralForeground2,\n        '::before': {\n            ...shorthands.borderColor(tokens.colorNeutralStroke1)\n        },\n        '::after': {\n            ...shorthands.borderColor(tokens.colorNeutralStroke1)\n        }\n    }\n});\nconst useHorizontalStyles = makeStyles({\n    // Base styles\n    base: {\n        width: '100%',\n        '::before': {\n            borderTopStyle: 'solid',\n            borderTopWidth: tokens.strokeWidthThin,\n            minWidth: minStartEndLength\n        },\n        '::after': {\n            borderTopStyle: 'solid',\n            borderTopWidth: tokens.strokeWidthThin,\n            minWidth: minStartEndLength\n        }\n    },\n    // Inset styles\n    inset: {\n        paddingLeft: insetSpacing,\n        paddingRight: insetSpacing\n    },\n    // Alignment variations\n    start: {\n        '::before': {\n            content: '\"\"',\n            marginRight: contentSpacing,\n            maxWidth: maxStartEndLength\n        },\n        '::after': {\n            marginLeft: contentSpacing\n        }\n    },\n    center: {\n        '::before': {\n            marginRight: contentSpacing\n        },\n        '::after': {\n            marginLeft: contentSpacing\n        }\n    },\n    end: {\n        '::before': {\n            marginRight: contentSpacing\n        },\n        '::after': {\n            content: '\"\"',\n            marginLeft: contentSpacing,\n            maxWidth: maxStartEndLength\n        }\n    }\n});\nconst useVerticalStyles = makeStyles({\n    // Base styles\n    base: {\n        flexDirection: 'column',\n        minHeight: '20px',\n        '::before': {\n            borderRightStyle: 'solid',\n            borderRightWidth: tokens.strokeWidthThin,\n            minHeight: minStartEndLength\n        },\n        '::after': {\n            borderRightStyle: 'solid',\n            borderRightWidth: tokens.strokeWidthThin,\n            minHeight: minStartEndLength\n        }\n    },\n    // Inset styles\n    inset: {\n        marginTop: insetSpacing,\n        marginBottom: insetSpacing\n    },\n    // With children styles\n    withChildren: {\n        minHeight: '84px'\n    },\n    // Alignment variations\n    start: {\n        '::before': {\n            content: '\"\"',\n            marginBottom: contentSpacing,\n            maxHeight: maxStartEndLength\n        },\n        '::after': {\n            marginTop: contentSpacing\n        }\n    },\n    center: {\n        '::before': {\n            marginBottom: contentSpacing\n        },\n        '::after': {\n            marginTop: contentSpacing\n        }\n    },\n    end: {\n        '::before': {\n            marginBottom: contentSpacing\n        },\n        '::after': {\n            content: '\"\"',\n            marginTop: contentSpacing,\n            maxHeight: maxStartEndLength\n        }\n    }\n});\nexport const useDividerStyles_unstable = (state)=>{\n    const baseStyles = useBaseStyles();\n    const horizontalStyles = useHorizontalStyles();\n    const verticalStyles = useVerticalStyles();\n    const { alignContent, appearance, inset, vertical } = state;\n    state.root.className = mergeClasses(dividerClassNames.root, // Base styles\n    baseStyles.base, baseStyles[alignContent], appearance && baseStyles[appearance], // Horizontal styles\n    !vertical && horizontalStyles.base, !vertical && inset && horizontalStyles.inset, !vertical && horizontalStyles[alignContent], // Vertical styles\n    vertical && verticalStyles.base, vertical && inset && verticalStyles.inset, vertical && verticalStyles[alignContent], vertical && state.root.children !== undefined && verticalStyles.withChildren, // Childless styles\n    state.root.children === undefined && baseStyles.childless, // User provided class name\n    state.root.className);\n    if (state.wrapper) {\n        state.wrapper.className = mergeClasses(dividerClassNames.wrapper, state.wrapper.className);\n    }\n    return state;\n};\n","import * as React from 'react';\nimport { renderDivider_unstable } from './renderDivider';\nimport { useDivider_unstable } from './useDivider';\nimport { useDividerStyles_unstable } from './useDividerStyles.styles';\nimport { useCustomStyleHook_unstable } from '@fluentui/react-shared-contexts';\n/**\n * A divider visually segments content into groups.\n */ export const Divider = /*#__PURE__*/ React.forwardRef((props, ref)=>{\n    const state = useDivider_unstable(props, ref);\n    useDividerStyles_unstable(state);\n    useCustomStyleHook_unstable('useDividerStyles_unstable')(state);\n    return renderDivider_unstable(state);\n});\nDivider.displayName = 'Divider';\n","import * as React from 'react';\nimport { getIntrinsicElementProps, useId, slot } from '@fluentui/react-utilities';\n/**\n * Returns the props and state required to render the component\n * @param props - User-provided props to the Divider component.\n * @param ref - User-provided ref to be passed to the Divider component.\n */ export const useDivider_unstable = (props, ref)=>{\n    const { alignContent = 'center', appearance = 'default', inset = false, vertical = false, wrapper } = props;\n    const dividerId = useId('divider-');\n    return {\n        // Props passed at the top-level\n        alignContent,\n        appearance,\n        inset,\n        vertical,\n        // Slots definition\n        components: {\n            root: 'div',\n            wrapper: 'div'\n        },\n        root: slot.always(getIntrinsicElementProps('div', {\n            role: 'separator',\n            'aria-orientation': vertical ? 'vertical' : 'horizontal',\n            'aria-labelledby': props.children ? dividerId : undefined,\n            ...props,\n            // FIXME:\n            // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`\n            // but since it would be a breaking change to fix it, we are casting ref to it's proper type\n            ref: ref\n        }), {\n            elementType: 'div'\n        }),\n        wrapper: slot.always(wrapper, {\n            defaultProps: {\n                id: dividerId,\n                children: props.children\n            },\n            elementType: 'div'\n        })\n    };\n};\n","  import { jsx as _jsx } from \"@fluentui/react-jsx-runtime/jsx-runtime\";\nimport { assertSlots } from '@fluentui/react-utilities';\n/**\n * Renders a Divider component by passing the slot props (defined in `state`) to the appropriate slots.\n */ export const renderDivider_unstable = (state)=>{\n    assertSlots(state);\n    return /*#__PURE__*/ _jsx(state.root, {\n        children: state.root.children !== undefined && /*#__PURE__*/ _jsx(state.wrapper, {\n            children: state.root.children\n        })\n    });\n};\n","// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\n\nimport { css, CSSResult } from 'lit';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles: CSSResult[] = [\n  css`\n:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}\n`];","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { html } from 'lit';\nimport { MgtBaseComponent } from '@microsoft/mgt-element';\nimport { styles } from './mgt-spinner-css';\nimport { registerComponent } from '@microsoft/mgt-element';\n\nexport const registerMgtSpinnerComponent = () => registerComponent('spinner', MgtSpinner);\n\n/**\n * Custom Component used to handle loading state in components.\n *\n * @export MgtSpinner\n * @class MgtSpinner\n * @extends {MgtBaseComponent}\n */\nexport class MgtSpinner extends MgtBaseComponent {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * user the `css` tag function.\n   */\n  public static get styles() {\n    return styles;\n  }\n\n  /**\n   * Render the loading spinner\n   *\n   * @returns\n   * @memberof MgtSpinner\n   */\n  public render() {\n    return html`<fluent-progress-ring title=\"spinner\"></fluent-progress-ring>`;\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/consistent-type-definitions */\nimport { ResponseType,DataChangedDetail } from '@microsoft/mgt-components/dist/es6/exports';\nimport { registerMgtGetComponent } from '@microsoft/mgt-components/dist/es6/components/components';\nimport { TemplateContext,ComponentMediaQuery,TemplateRenderedData } from '@microsoft/mgt-element';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraph from '@microsoft/microsoft-graph-types';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraphBeta from '@microsoft/microsoft-graph-types-beta';\nimport {wrapMgt} from '../Mgt';\n\nexport type GetProps = {\n\tresource?: string;\n\tscopes?: string[];\n\tversion?: string;\n\ttype?: ResponseType;\n\tmaxPages?: number;\n\tpollingRate?: number;\n\tcacheEnabled?: boolean;\n\tcacheInvalidationPeriod?: number;\n\tresponse?: any;\n\ttemplateContext?: TemplateContext;\n\tmediaQuery?: ComponentMediaQuery;\n\tdataChange?: (e: CustomEvent<DataChangedDetail>) => void;\n\ttemplateRendered?: (e: CustomEvent<TemplateRenderedData>) => void;\n}\n\nexport const Get = wrapMgt<GetProps>('get', registerMgtGetComponent);\n\n","/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {\n  _$LH,\n  Part,\n  DirectiveParent,\n  TemplateResult,\n  CompiledTemplateResult,\n} from './lit-html.js';\nimport {\n  DirectiveResult,\n  DirectiveClass,\n  PartInfo,\n  AttributePartInfo,\n} from './directive.js';\ntype Primitive = null | undefined | boolean | number | string | symbol | bigint;\n\nconst {_ChildPart: ChildPart} = _$LH;\n\ntype ChildPart = InstanceType<typeof ChildPart>;\n\nconst ENABLE_SHADYDOM_NOPATCH = true;\n\nconst wrap =\n  ENABLE_SHADYDOM_NOPATCH &&\n  window.ShadyDOM?.inUse &&\n  window.ShadyDOM?.noPatch === true\n    ? window.ShadyDOM!.wrap\n    : (node: Node) => node;\n\n/**\n * Tests if a value is a primitive value.\n *\n * See https://tc39.github.io/ecma262/#sec-typeof-operator\n */\nexport const isPrimitive = (value: unknown): value is Primitive =>\n  value === null || (typeof value != 'object' && typeof value != 'function');\n\nexport const TemplateResultType = {\n  HTML: 1,\n  SVG: 2,\n} as const;\n\nexport type TemplateResultType =\n  (typeof TemplateResultType)[keyof typeof TemplateResultType];\n\ntype IsTemplateResult = {\n  (val: unknown): val is TemplateResult | CompiledTemplateResult;\n  <T extends TemplateResultType>(\n    val: unknown,\n    type: T\n  ): val is TemplateResult<T>;\n};\n\n/**\n * Tests if a value is a TemplateResult or a CompiledTemplateResult.\n */\nexport const isTemplateResult: IsTemplateResult = (\n  value: unknown,\n  type?: TemplateResultType\n): value is TemplateResult =>\n  type === undefined\n    ? // This property needs to remain unminified.\n      (value as TemplateResult)?.['_$litType$'] !== undefined\n    : (value as TemplateResult)?.['_$litType$'] === type;\n\n/**\n * Tests if a value is a CompiledTemplateResult.\n */\nexport const isCompiledTemplateResult = (\n  value: unknown\n): value is CompiledTemplateResult => {\n  return (value as CompiledTemplateResult)?.['_$litType$']?.h != null;\n};\n\n/**\n * Tests if a value is a DirectiveResult.\n */\nexport const isDirectiveResult = (value: unknown): value is DirectiveResult =>\n  // This property needs to remain unminified.\n  (value as DirectiveResult)?.['_$litDirective$'] !== undefined;\n\n/**\n * Retrieves the Directive class for a DirectiveResult\n */\nexport const getDirectiveClass = (value: unknown): DirectiveClass | undefined =>\n  // This property needs to remain unminified.\n  (value as DirectiveResult)?.['_$litDirective$'];\n\n/**\n * Tests whether a part has only a single-expression with no strings to\n * interpolate between.\n *\n * Only AttributePart and PropertyPart can have multiple expressions.\n * Multi-expression parts have a `strings` property and single-expression\n * parts do not.\n */\nexport const isSingleExpression = (part: PartInfo) =>\n  (part as AttributePartInfo).strings === undefined;\n\nconst createMarker = () => document.createComment('');\n\n/**\n * Inserts a ChildPart into the given container ChildPart's DOM, either at the\n * end of the container ChildPart, or before the optional `refPart`.\n *\n * This does not add the part to the containerPart's committed value. That must\n * be done by callers.\n *\n * @param containerPart Part within which to add the new ChildPart\n * @param refPart Part before which to add the new ChildPart; when omitted the\n *     part added to the end of the `containerPart`\n * @param part Part to insert, or undefined to create a new part\n */\nexport const insertPart = (\n  containerPart: ChildPart,\n  refPart?: ChildPart,\n  part?: ChildPart\n): ChildPart => {\n  const container = wrap(containerPart._$startNode).parentNode!;\n\n  const refNode =\n    refPart === undefined ? containerPart._$endNode : refPart._$startNode;\n\n  if (part === undefined) {\n    const startNode = wrap(container).insertBefore(createMarker(), refNode);\n    const endNode = wrap(container).insertBefore(createMarker(), refNode);\n    part = new ChildPart(\n      startNode,\n      endNode,\n      containerPart,\n      containerPart.options\n    );\n  } else {\n    const endNode = wrap(part._$endNode!).nextSibling;\n    const oldParent = part._$parent;\n    const parentChanged = oldParent !== containerPart;\n    if (parentChanged) {\n      part._$reparentDisconnectables?.(containerPart);\n      // Note that although `_$reparentDisconnectables` updates the part's\n      // `_$parent` reference after unlinking from its current parent, that\n      // method only exists if Disconnectables are present, so we need to\n      // unconditionally set it here\n      part._$parent = containerPart;\n      // Since the _$isConnected getter is somewhat costly, only\n      // read it once we know the subtree has directives that need\n      // to be notified\n      let newConnectionState;\n      if (\n        part._$notifyConnectionChanged !== undefined &&\n        (newConnectionState = containerPart._$isConnected) !==\n          oldParent!._$isConnected\n      ) {\n        part._$notifyConnectionChanged(newConnectionState);\n      }\n    }\n    if (endNode !== refNode || parentChanged) {\n      let start: Node | null = part._$startNode;\n      while (start !== endNode) {\n        const n: Node | null = wrap(start!).nextSibling;\n        wrap(container).insertBefore(start!, refNode);\n        start = n;\n      }\n    }\n  }\n\n  return part;\n};\n\n/**\n * Sets the value of a Part.\n *\n * Note that this should only be used to set/update the value of user-created\n * parts (i.e. those created using `insertPart`); it should not be used\n * by directives to set the value of the directive's container part. Directives\n * should return a value from `update`/`render` to update their part state.\n *\n * For directives that require setting their part value asynchronously, they\n * should extend `AsyncDirective` and call `this.setValue()`.\n *\n * @param part Part to set\n * @param value Value to set\n * @param index For `AttributePart`s, the index to set\n * @param directiveParent Used internally; should not be set by user\n */\nexport const setChildPartValue = <T extends ChildPart>(\n  part: T,\n  value: unknown,\n  directiveParent: DirectiveParent = part\n): T => {\n  part._$setValue(value, directiveParent);\n  return part;\n};\n\n// A sentinel value that can never appear as a part value except when set by\n// live(). Used to force a dirty-check to fail and cause a re-render.\nconst RESET_VALUE = {};\n\n/**\n * Sets the committed value of a ChildPart directly without triggering the\n * commit stage of the part.\n *\n * This is useful in cases where a directive needs to update the part such\n * that the next update detects a value change or not. When value is omitted,\n * the next update will be guaranteed to be detected as a change.\n *\n * @param part\n * @param value\n */\nexport const setCommittedValue = (part: Part, value: unknown = RESET_VALUE) =>\n  (part._$committedValue = value);\n\n/**\n * Returns the committed value of a ChildPart.\n *\n * The committed value is used for change detection and efficient updates of\n * the part. It can differ from the value set by the template or directive in\n * cases where the template value is transformed before being committed.\n *\n * - `TemplateResult`s are committed as a `TemplateInstance`\n * - Iterables are committed as `Array<ChildPart>`\n * - All other types are committed as the template value or value returned or\n *   set by a directive.\n *\n * @param part\n */\nexport const getCommittedValue = (part: ChildPart) => part._$committedValue;\n\n/**\n * Removes a ChildPart from the DOM, including any of its content.\n *\n * @param part The Part to remove\n */\nexport const removePart = (part: ChildPart) => {\n  part._$notifyConnectionChanged?.(false, true);\n  let start: ChildNode | null = part._$startNode;\n  const end: ChildNode | null = wrap(part._$endNode!).nextSibling;\n  while (start !== end) {\n    const n: ChildNode | null = wrap(start!).nextSibling;\n    (wrap(start!) as ChildNode).remove();\n    start = n;\n  }\n};\n\nexport const clearPart = (part: ChildPart) => {\n  part._$clear();\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {ChildPart, noChange} from '../lit-html.js';\nimport {directive, Directive, PartInfo, PartType} from '../directive.js';\nimport {\n  insertPart,\n  getCommittedValue,\n  removePart,\n  setCommittedValue,\n  setChildPartValue,\n} from '../directive-helpers.js';\n\nexport type KeyFn<T> = (item: T, index: number) => unknown;\nexport type ItemTemplate<T> = (item: T, index: number) => unknown;\n\n// Helper for generating a map of array item to its index over a subset\n// of an array (used to lazily generate `newKeyToIndexMap` and\n// `oldKeyToIndexMap`)\nconst generateMap = (list: unknown[], start: number, end: number) => {\n  const map = new Map<unknown, number>();\n  for (let i = start; i <= end; i++) {\n    map.set(list[i], i);\n  }\n  return map;\n};\n\nclass RepeatDirective extends Directive {\n  private _itemKeys?: unknown[];\n\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (partInfo.type !== PartType.CHILD) {\n      throw new Error('repeat() can only be used in text expressions');\n    }\n  }\n\n  private _getValuesAndKeys<T>(\n    items: Iterable<T>,\n    keyFnOrTemplate: KeyFn<T> | ItemTemplate<T>,\n    template?: ItemTemplate<T>\n  ) {\n    let keyFn: KeyFn<T> | undefined;\n    if (template === undefined) {\n      template = keyFnOrTemplate;\n    } else if (keyFnOrTemplate !== undefined) {\n      keyFn = keyFnOrTemplate as KeyFn<T>;\n    }\n    const keys = [];\n    const values = [];\n    let index = 0;\n    for (const item of items) {\n      keys[index] = keyFn ? keyFn(item, index) : index;\n      values[index] = template!(item, index);\n      index++;\n    }\n    return {\n      values,\n      keys,\n    };\n  }\n\n  render<T>(items: Iterable<T>, template: ItemTemplate<T>): Array<unknown>;\n  render<T>(\n    items: Iterable<T>,\n    keyFn: KeyFn<T> | ItemTemplate<T>,\n    template: ItemTemplate<T>\n  ): Array<unknown>;\n  render<T>(\n    items: Iterable<T>,\n    keyFnOrTemplate: KeyFn<T> | ItemTemplate<T>,\n    template?: ItemTemplate<T>\n  ) {\n    return this._getValuesAndKeys(items, keyFnOrTemplate, template).values;\n  }\n\n  override update<T>(\n    containerPart: ChildPart,\n    [items, keyFnOrTemplate, template]: [\n      Iterable<T>,\n      KeyFn<T> | ItemTemplate<T>,\n      ItemTemplate<T>\n    ]\n  ) {\n    // Old part & key lists are retrieved from the last update (which may\n    // be primed by hydration)\n    const oldParts = getCommittedValue(\n      containerPart\n    ) as Array<ChildPart | null>;\n    const {values: newValues, keys: newKeys} = this._getValuesAndKeys(\n      items,\n      keyFnOrTemplate,\n      template\n    );\n\n    // We check that oldParts, the committed value, is an Array as an\n    // indicator that the previous value came from a repeat() call. If\n    // oldParts is not an Array then this is the first render and we return\n    // an array for lit-html's array handling to render, and remember the\n    // keys.\n    if (!Array.isArray(oldParts)) {\n      this._itemKeys = newKeys;\n      return newValues;\n    }\n\n    // In SSR hydration it's possible for oldParts to be an array but for us\n    // to not have item keys because the update() hasn't run yet. We set the\n    // keys to an empty array. This will cause all oldKey/newKey comparisons\n    // to fail and execution to fall to the last nested brach below which\n    // reuses the oldPart.\n    const oldKeys = (this._itemKeys ??= []);\n\n    // New part list will be built up as we go (either reused from\n    // old parts or created for new keys in this update). This is\n    // saved in the above cache at the end of the update.\n    const newParts: ChildPart[] = [];\n\n    // Maps from key to index for current and previous update; these\n    // are generated lazily only when needed as a performance\n    // optimization, since they are only required for multiple\n    // non-contiguous changes in the list, which are less common.\n    let newKeyToIndexMap!: Map<unknown, number>;\n    let oldKeyToIndexMap!: Map<unknown, number>;\n\n    // Head and tail pointers to old parts and new values\n    let oldHead = 0;\n    let oldTail = oldParts.length - 1;\n    let newHead = 0;\n    let newTail = newValues.length - 1;\n\n    // Overview of O(n) reconciliation algorithm (general approach\n    // based on ideas found in ivi, vue, snabbdom, etc.):\n    //\n    // * We start with the list of old parts and new values (and\n    //   arrays of their respective keys), head/tail pointers into\n    //   each, and we build up the new list of parts by updating\n    //   (and when needed, moving) old parts or creating new ones.\n    //   The initial scenario might look like this (for brevity of\n    //   the diagrams, the numbers in the array reflect keys\n    //   associated with the old parts or new values, although keys\n    //   and parts/values are actually stored in parallel arrays\n    //   indexed using the same head/tail pointers):\n    //\n    //      oldHead v                 v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [ ,  ,  ,  ,  ,  ,  ]\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6] <- reflects the user's new\n    //                                      item order\n    //      newHead ^                 ^ newTail\n    //\n    // * Iterate old & new lists from both sides, updating,\n    //   swapping, or removing parts at the head/tail locations\n    //   until neither head nor tail can move.\n    //\n    // * Example below: keys at head pointers match, so update old\n    //   part 0 in-place (no need to move it) and record part 0 in\n    //   the `newParts` list. The last thing we do is advance the\n    //   `oldHead` and `newHead` pointers (will be reflected in the\n    //   next diagram).\n    //\n    //      oldHead v                 v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [0,  ,  ,  ,  ,  ,  ] <- heads matched: update 0\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n    //                                      & newHead\n    //      newHead ^                 ^ newTail\n    //\n    // * Example below: head pointers don't match, but tail\n    //   pointers do, so update part 6 in place (no need to move\n    //   it), and record part 6 in the `newParts` list. Last,\n    //   advance the `oldTail` and `oldHead` pointers.\n    //\n    //         oldHead v              v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [0,  ,  ,  ,  ,  , 6] <- tails matched: update 6\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldTail\n    //                                      & newTail\n    //         newHead ^              ^ newTail\n    //\n    // * If neither head nor tail match; next check if one of the\n    //   old head/tail items was removed. We first need to generate\n    //   the reverse map of new keys to index (`newKeyToIndexMap`),\n    //   which is done once lazily as a performance optimization,\n    //   since we only hit this case if multiple non-contiguous\n    //   changes were made. Note that for contiguous removal\n    //   anywhere in the list, the head and tails would advance\n    //   from either end and pass each other before we get to this\n    //   case and removals would be handled in the final while loop\n    //   without needing to generate the map.\n    //\n    // * Example below: The key at `oldTail` was removed (no longer\n    //   in the `newKeyToIndexMap`), so remove that part from the\n    //   DOM and advance just the `oldTail` pointer.\n    //\n    //         oldHead v           v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [0,  ,  ,  ,  ,  , 6] <- 5 not in new map: remove\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    5 and advance oldTail\n    //         newHead ^           ^ newTail\n    //\n    // * Once head and tail cannot move, any mismatches are due to\n    //   either new or moved items; if a new key is in the previous\n    //   \"old key to old index\" map, move the old part to the new\n    //   location, otherwise create and insert a new part. Note\n    //   that when moving an old part we null its position in the\n    //   oldParts array if it lies between the head and tail so we\n    //   know to skip it when the pointers get there.\n    //\n    // * Example below: neither head nor tail match, and neither\n    //   were removed; so find the `newHead` key in the\n    //   `oldKeyToIndexMap`, and move that old part's DOM into the\n    //   next head position (before `oldParts[oldHead]`). Last,\n    //   null the part in the `oldPart` array since it was\n    //   somewhere in the remaining oldParts still to be scanned\n    //   (between the head and tail pointers) so that we know to\n    //   skip that old part on future iterations.\n    //\n    //         oldHead v        v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2,  ,  ,  ,  , 6] <- stuck: update & move 2\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    into place and advance\n    //                                      newHead\n    //         newHead ^           ^ newTail\n    //\n    // * Note that for moves/insertions like the one above, a part\n    //   inserted at the head pointer is inserted before the\n    //   current `oldParts[oldHead]`, and a part inserted at the\n    //   tail pointer is inserted before `newParts[newTail+1]`. The\n    //   seeming asymmetry lies in the fact that new parts are\n    //   moved into place outside in, so to the right of the head\n    //   pointer are old parts, and to the right of the tail\n    //   pointer are new parts.\n    //\n    // * We always restart back from the top of the algorithm,\n    //   allowing matching and simple updates in place to\n    //   continue...\n    //\n    // * Example below: the head pointers once again match, so\n    //   simply update part 1 and record it in the `newParts`\n    //   array.  Last, advance both head pointers.\n    //\n    //         oldHead v        v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1,  ,  ,  , 6] <- heads matched: update 1\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n    //                                      & newHead\n    //            newHead ^        ^ newTail\n    //\n    // * As mentioned above, items that were moved as a result of\n    //   being stuck (the final else clause in the code below) are\n    //   marked with null, so we always advance old pointers over\n    //   these so we're comparing the next actual old value on\n    //   either end.\n    //\n    // * Example below: `oldHead` is null (already placed in\n    //   newParts), so advance `oldHead`.\n    //\n    //            oldHead v     v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6] <- old head already used:\n    //   newParts: [0, 2, 1,  ,  ,  , 6]    advance oldHead\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n    //               newHead ^     ^ newTail\n    //\n    // * Note it's not critical to mark old parts as null when they\n    //   are moved from head to tail or tail to head, since they\n    //   will be outside the pointer range and never visited again.\n    //\n    // * Example below: Here the old tail key matches the new head\n    //   key, so the part at the `oldTail` position and move its\n    //   DOM to the new head position (before `oldParts[oldHead]`).\n    //   Last, advance `oldTail` and `newHead` pointers.\n    //\n    //               oldHead v  v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1, 4,  ,  , 6] <- old tail matches new\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]   head: update & move 4,\n    //                                     advance oldTail & newHead\n    //               newHead ^     ^ newTail\n    //\n    // * Example below: Old and new head keys match, so update the\n    //   old head part in place, and advance the `oldHead` and\n    //   `newHead` pointers.\n    //\n    //               oldHead v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1, 4, 3,   ,6] <- heads match: update 3\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance oldHead &\n    //                                      newHead\n    //                  newHead ^  ^ newTail\n    //\n    // * Once the new or old pointers move past each other then all\n    //   we have left is additions (if old list exhausted) or\n    //   removals (if new list exhausted). Those are handled in the\n    //   final while loops at the end.\n    //\n    // * Example below: `oldHead` exceeded `oldTail`, so we're done\n    //   with the main loop.  Create the remaining part and insert\n    //   it at the new head position, and the update is complete.\n    //\n    //                   (oldHead > oldTail)\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1, 4, 3, 7 ,6] <- create and insert 7\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n    //                     newHead ^ newTail\n    //\n    // * Note that the order of the if/else clauses is not\n    //   important to the algorithm, as long as the null checks\n    //   come first (to ensure we're always working on valid old\n    //   parts) and that the final else clause comes last (since\n    //   that's where the expensive moves occur). The order of\n    //   remaining clauses is is just a simple guess at which cases\n    //   will be most common.\n    //\n    // * Note, we could calculate the longest\n    //   increasing subsequence (LIS) of old items in new position,\n    //   and only move those not in the LIS set. However that costs\n    //   O(nlogn) time and adds a bit more code, and only helps\n    //   make rare types of mutations require fewer moves. The\n    //   above handles removes, adds, reversal, swaps, and single\n    //   moves of contiguous items in linear time, in the minimum\n    //   number of moves. As the number of multiple moves where LIS\n    //   might help approaches a random shuffle, the LIS\n    //   optimization becomes less helpful, so it seems not worth\n    //   the code at this point. Could reconsider if a compelling\n    //   case arises.\n\n    while (oldHead <= oldTail && newHead <= newTail) {\n      if (oldParts[oldHead] === null) {\n        // `null` means old part at head has already been used\n        // below; skip\n        oldHead++;\n      } else if (oldParts[oldTail] === null) {\n        // `null` means old part at tail has already been used\n        // below; skip\n        oldTail--;\n      } else if (oldKeys[oldHead] === newKeys[newHead]) {\n        // Old head matches new head; update in place\n        newParts[newHead] = setChildPartValue(\n          oldParts[oldHead]!,\n          newValues[newHead]\n        );\n        oldHead++;\n        newHead++;\n      } else if (oldKeys[oldTail] === newKeys[newTail]) {\n        // Old tail matches new tail; update in place\n        newParts[newTail] = setChildPartValue(\n          oldParts[oldTail]!,\n          newValues[newTail]\n        );\n        oldTail--;\n        newTail--;\n      } else if (oldKeys[oldHead] === newKeys[newTail]) {\n        // Old head matches new tail; update and move to new tail\n        newParts[newTail] = setChildPartValue(\n          oldParts[oldHead]!,\n          newValues[newTail]\n        );\n        insertPart(containerPart, newParts[newTail + 1], oldParts[oldHead]!);\n        oldHead++;\n        newTail--;\n      } else if (oldKeys[oldTail] === newKeys[newHead]) {\n        // Old tail matches new head; update and move to new head\n        newParts[newHead] = setChildPartValue(\n          oldParts[oldTail]!,\n          newValues[newHead]\n        );\n        insertPart(containerPart, oldParts[oldHead]!, oldParts[oldTail]!);\n        oldTail--;\n        newHead++;\n      } else {\n        if (newKeyToIndexMap === undefined) {\n          // Lazily generate key-to-index maps, used for removals &\n          // moves below\n          newKeyToIndexMap = generateMap(newKeys, newHead, newTail);\n          oldKeyToIndexMap = generateMap(oldKeys, oldHead, oldTail);\n        }\n        if (!newKeyToIndexMap.has(oldKeys[oldHead])) {\n          // Old head is no longer in new list; remove\n          removePart(oldParts[oldHead]!);\n          oldHead++;\n        } else if (!newKeyToIndexMap.has(oldKeys[oldTail])) {\n          // Old tail is no longer in new list; remove\n          removePart(oldParts[oldTail]!);\n          oldTail--;\n        } else {\n          // Any mismatches at this point are due to additions or\n          // moves; see if we have an old part we can reuse and move\n          // into place\n          const oldIndex = oldKeyToIndexMap.get(newKeys[newHead]);\n          const oldPart = oldIndex !== undefined ? oldParts[oldIndex] : null;\n          if (oldPart === null) {\n            // No old part for this value; create a new one and\n            // insert it\n            const newPart = insertPart(containerPart, oldParts[oldHead]!);\n            setChildPartValue(newPart, newValues[newHead]);\n            newParts[newHead] = newPart;\n          } else {\n            // Reuse old part\n            newParts[newHead] = setChildPartValue(oldPart, newValues[newHead]);\n            insertPart(containerPart, oldParts[oldHead]!, oldPart);\n            // This marks the old part as having been used, so that\n            // it will be skipped in the first two checks above\n            oldParts[oldIndex as number] = null;\n          }\n          newHead++;\n        }\n      }\n    }\n    // Add parts for any remaining new values\n    while (newHead <= newTail) {\n      // For all remaining additions, we insert before last new\n      // tail, since old pointers are no longer valid\n      const newPart = insertPart(containerPart, newParts[newTail + 1]);\n      setChildPartValue(newPart, newValues[newHead]);\n      newParts[newHead++] = newPart;\n    }\n    // Remove any remaining unused old parts\n    while (oldHead <= oldTail) {\n      const oldPart = oldParts[oldHead++];\n      if (oldPart !== null) {\n        removePart(oldPart);\n      }\n    }\n\n    // Save order of new parts for next round\n    this._itemKeys = newKeys;\n    // Directly set part value, bypassing it's dirty-checking\n    setCommittedValue(containerPart, newParts);\n    return noChange;\n  }\n}\n\nexport interface RepeatDirectiveFn {\n  <T>(\n    items: Iterable<T>,\n    keyFnOrTemplate: KeyFn<T> | ItemTemplate<T>,\n    template?: ItemTemplate<T>\n  ): unknown;\n  <T>(items: Iterable<T>, template: ItemTemplate<T>): unknown;\n  <T>(\n    items: Iterable<T>,\n    keyFn: KeyFn<T> | ItemTemplate<T>,\n    template: ItemTemplate<T>\n  ): unknown;\n}\n\n/**\n * A directive that repeats a series of values (usually `TemplateResults`)\n * generated from an iterable, and updates those items efficiently when the\n * iterable changes based on user-provided `keys` associated with each item.\n *\n * Note that if a `keyFn` is provided, strict key-to-DOM mapping is maintained,\n * meaning previous DOM for a given key is moved into the new position if\n * needed, and DOM will never be reused with values for different keys (new DOM\n * will always be created for new keys). This is generally the most efficient\n * way to use `repeat` since it performs minimum unnecessary work for insertions\n * and removals.\n *\n * The `keyFn` takes two parameters, the item and its index, and returns a unique key value.\n *\n * ```js\n * html`\n *   <ol>\n *     ${repeat(this.items, (item) => item.id, (item, index) => {\n *       return html`<li>${index}: ${item.name}</li>`;\n *     })}\n *   </ol>\n * `\n * ```\n *\n * **Important**: If providing a `keyFn`, keys *must* be unique for all items in a\n * given call to `repeat`. The behavior when two or more items have the same key\n * is undefined.\n *\n * If no `keyFn` is provided, this directive will perform similar to mapping\n * items to values, and DOM will be reused against potentially different items.\n */\nexport const repeat = directive(RepeatDirective) as RepeatDirectiveFn;\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {RepeatDirective};\n"],"names":["styles","css","_templateObject","_taggedTemplateLiteral","getEventsQueryPageIterator","graph","query","scopes","arguments","length","undefined","__awaiter","_regeneratorRuntime","mark","_callee","request","wrap","_context","prev","next","api","middlewareOptions","prepScopes","orderby","abrupt","GraphPageIterator","create","stop","getEventsPageIterator","startDateTime","endDateTime","groupId","_callee2","sdt","edt","uri","_context2","concat","toISOString","MgtPeople","_MgtTemplatedComponen","_inherits","_super","_createSuper","_this","_classCallCheck","call","personCardInteraction","PersonCardInteraction","hover","_peoplePresence","_version","_arrowKeyLocation","handleKeyDown","event","person","_step","peopleContainer","shadowRoot","querySelector","peopleElements","children","_iterator","_createForOfIteratorHelper","s","n","done","el","value","setAttribute","blur","err","e","f","childElementCount","keyName","key","includes","none","mgtPerson","showPersonCard","focus","showMax","_createClass","get","this","_groupId","set","requestStateUpdate","_userIds","arraysAreEqual","_peopleQueries","_resource","_fallbackDetails","people","force","_get","_getPrototypeOf","prototype","isLoadingState","renderLoading","renderTemplate","max","renderPeople","renderNoData","html","_this2","maxPeople","slice","filter","pple","_templateObject2","repeat","p","id","displayName","_templateObject3","renderPerson","renderOverflow","extra","_templateObject4","personPresence","activity","availability","showPresence","mgtHtml","_templateObject5","_templateObject6","provider","Providers","globalProvider","state","ProviderState","SignedIn","forComponent","findGroupMembers","PersonType","sent","userIds","peopleQueries","getUsersForUserIds","t0","getUsersForPeopleQueries","resource","getPeopleFromResource","version","getPeople","getUsersPresenceByPeople","_toConsumableArray","Set","MgtPerson","requiredScopes","MgtTemplatedComponent","__decorate","property","attribute","type","String","converter","_type","split","map","v","trim","Object","Number","Boolean","toLowerCase","reflect","Array","MgtAgenda","_days","onResize","_isNarrow","offsetWidth","_date","reloadState","_eventQuery","_preferredTimezone","window","addEventListener","removeEventListener","events","renderedTemplate","agendaClasses","agenda","grouped","groupByDay","direction","classMap","renderGroups","renderEvents","loadEvents","eventClasses","narrow","assign","getEventTimeString","renderTitle","renderLocation","renderAttendees","renderOther","header","_templateObject7","subject","location","_templateObject8","getSvg","SvgIcon","OfficeLocation","attendees","_templateObject9","attendee","emailAddress","address","hasTemplate","_templateObject10","forEach","dateString","_a","start","dateTime","end","timeZone","getDateHeaderFromDateTimeString","push","_templateObject11","keys","_templateObject12","renderHeader","_this3","_templateObject13","_templateObject14","eventClicked","renderEvent","_context3","_callee3","fireCustomEvent","isAllDay","startString","endString","prettyPrintTimeFromDateTime","Date","_context4","eventQuery","tokens","scope","iterator","hasNext","date","getTime","setDate","getDate","days","t1","_callee4","toLocaleTimeString","navigator","language","timeStyle","preferredTimezone","dateTimeString","toLocaleDateString","dateStyle","Agenda","wrapMgt","registerFluentComponents","fluentCard","registerMgtPersonComponent","registerComponent","useStyles","makeStyles","email","_objectSpread","boxShadow","shorthands","padding","margin","borderLeftWidth","borderLeftColor","borderLeftStyle","paddingLeft","link","color","textDecorationLine","display","justifyContent","fontSize","gridArea","title","marginBottom","float","body","textOverflow","wordWrap","overflow","maxHeight","lineHeight","emptyBody","fontStyle","Messages","props","_email$bodyPreview","_email$bodyPreview2","dataContext","_jsx","className","_jsxs","href","webLink","target","rel","Person","personQuery","sender","view","PersonViewType","oneline","receivedDateTime","bodyPreview","mergeClasses","Spinner","registerMgtSpinnerComponent","root","alignItems","height","message","Loading","container","flexDirection","panels","main","flexWrap","width","side","_React$useState","React","_React$useState2","_slicedToArray","selectedTab","setSelectedTab","_Fragment","PageHeader","description","TabList","selectedValue","onTabSelect","data","Tab","Get","maxPages","template","dividerClassNames","useBaseStyles","__styles","base","Bt984gj","B7ck84d","mc9l5x","Beiy3e4","Bh6795r","qhf8xq","Bahqtrf","Be2twd7","Bhrd7zp","Bg96gwp","fsow6f","Bcvre1j","Br0sdwz","Bn78ew0","li1rpt","ap17g6","B771hl4","childless","susq4k","Bicfajf","jwcpgy","B4rk6o","Bsft5z2","center","Ftih45","brand","sj55zd","Bq4z7u6","Bk5zm6e","Bqjgrrk","Bm6vgfq","B0n5ga8","s924m2","B1q35kw","Gp14am","subtle","strong","d","useHorizontalStyles","a9b677","Bdkvgpv","B0qfbqy","pbipgd","Bm2nyyq","xrcqlc","i5u598","inset","uwmqm3","z189sj","Bxwl2t9","Iy66sp","useVerticalStyles","sshi5w","m598lv","B4f6apu","zkzzav","Barhvk9","Ihftqj","Bde111x","B6of3ja","jrapky","withChildren","Bbdr6tz","gn64ia","Divider","ref","_props$alignContent","alignContent","_props$appearance","appearance","_props$inset","_props$vertical","vertical","wrapper","dividerId","useId","components","slot","getIntrinsicElementProps","role","elementType","defaultProps","useDivider_unstable","baseStyles","horizontalStyles","verticalStyles","useDividerStyles_unstable","useCustomStyleHook_unstable","assertSlots","renderDivider_unstable","MgtSpinner","_MgtBaseComponent","apply","MgtBaseComponent","registerMgtGetComponent","l","o","I","r","document","createComment","c","i","t","_$AA","parentNode","_$AB","insertBefore","options","nextSibling","_$AM","u","_$AQ","_$AP","_$AU","_$AI","a","_$AH","remove","Map","_t","_class","CHILD","Error","_possibleConstructorReturn","values","ct","_ref","_ref2","_this$ct","isArray","ut","y","x","h","m","j","k","w","A","has"],"sourceRoot":""}