{"version":3,"file":"static/js/127.8f7236da.chunk.js","mappings":"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","sources":["../../../packages/mgt-element/dist/es6/utils/src/utils/TeamsHelper.ts","../../../packages/mgt-components/dist/es6/components/mgt-person-card/src/components/mgt-person-card/mgt-person-card.graph.ts","../../../packages/mgt-components/dist/es6/components/mgt-person-card/src/components/mgt-person-card/mgt-person-card-css.ts","../../../packages/mgt-components/dist/es6/components/src/components/BasePersonCardSection.ts","../../../packages/mgt-components/dist/es6/components/mgt-contact/src/components/mgt-contact/mgt-contact-css.ts","../../../packages/mgt-components/dist/es6/components/mgt-contact/src/components/mgt-contact/strings.ts","../../../packages/mgt-components/dist/es6/components/mgt-contact/src/components/mgt-contact/mgt-contact.ts","../../../packages/mgt-components/dist/es6/components/mgt-messages/src/components/mgt-messages/mgt-messages-css.ts","../../../packages/mgt-components/dist/es6/components/mgt-messages/src/components/mgt-messages/strings.ts","../../../packages/mgt-components/dist/es6/components/mgt-messages/src/components/mgt-messages/mgt-messages.ts","../../../packages/mgt-components/dist/es6/components/mgt-organization/src/components/mgt-organization/mgt-organization-css.ts","../../../packages/mgt-components/dist/es6/components/mgt-organization/src/components/mgt-organization/strings.ts","../../../packages/mgt-components/dist/es6/components/mgt-organization/src/components/mgt-organization/mgt-organization.ts","../../../packages/mgt-components/dist/es6/components/mgt-profile/src/components/mgt-profile/mgt-profile-css.ts","../../../packages/mgt-components/dist/es6/components/mgt-profile/src/components/mgt-profile/strings.ts","../../../packages/mgt-components/dist/es6/components/mgt-profile/src/components/mgt-profile/mgt-profile.ts","../../../packages/mgt-components/dist/es6/components/mgt-person-card/src/components/mgt-person-card/strings.ts","../../../packages/mgt-components/dist/es6/components/mgt-person-card/src/components/mgt-person-card/mgt-person-card.ts","../../../packages/mgt-components/dist/es6/components/mgt-person-card/src/components/mgt-person-card/getMgtPersonCardScopes.ts"],"sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nexport interface loginContext {\n  loginHint: string;\n}\n\nexport interface TeamsLib {\n  initialize(): void;\n  executeDeepLink(deeplink: string, onComplete?: (status: boolean, reason?: string) => void): void;\n  authentication: {\n    authenticate(authConfig: {\n      failureCallback: (reason) => void;\n      successCallback: (result) => void;\n      url: string;\n    }): void;\n    getAuthToken(authCallback: { failureCallback: (reason) => void; successCallback: (result) => void }): void;\n    notifySuccess(message?: string): void;\n    notifyFailure(message: string): void;\n  };\n  getContext(callback?: (context: loginContext) => void): Promise<loginContext>;\n}\n\n/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\ntype TeamsWindow = Window &\n  typeof globalThis & {\n    microsoftTeams: TeamsLib;\n    nativeInterface: unknown;\n  };\n\n/**\n * A helper class for interacting with the Teams Client SDK.\n *\n * @export\n * @class TeamsHelper\n */\nexport class TeamsHelper {\n  /**\n   * Optional entry point to the teams library\n   * If this value is not set, the provider will attempt to use\n   * the microsoftTeams global variable.\n   *\n   * @static\n   * @type {TeamsLib}\n   * @memberof TeamsHelper\n   */\n  public static get microsoftTeamsLib(): TeamsLib {\n    return this._microsoftTeamsLib || (window as TeamsWindow).microsoftTeams;\n  }\n  public static set microsoftTeamsLib(value: TeamsLib) {\n    this._microsoftTeamsLib = value;\n  }\n\n  /**\n   * Gets whether the Teams provider can be used in the current context\n   * (Whether the app is running in Microsoft Teams)\n   *\n   * @readonly\n   * @static\n   * @memberof TeamsHelper\n   */\n  public static get isAvailable(): boolean {\n    if (!this.microsoftTeamsLib) {\n      return false;\n    }\n    if (window.parent === window.self && (window as TeamsWindow).nativeInterface) {\n      // In Teams mobile client\n      return true;\n    } else if (window.name === 'embedded-page-container' || window.name === 'extension-tab-frame') {\n      // In Teams web/desktop client\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Execute a deeplink against the Teams lib.\n   *\n   * @static\n   * @param {string} deeplink\n   * @param {(status: boolean, reason?: string) => void} [onComplete]\n   * @memberof TeamsHelper\n   */\n  public static executeDeepLink(deeplink: string, onComplete?: (status: boolean, reason?: string) => void): void {\n    const teams: TeamsLib = this.microsoftTeamsLib;\n    teams.initialize();\n    teams.executeDeepLink(deeplink, onComplete);\n  }\n\n  private static _microsoftTeamsLib: TeamsLib;\n}\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { BatchResponse, IBatch, IGraph, prepScopes } from '@microsoft/mgt-element';\nimport { Chat, ChatMessage } from '@microsoft/microsoft-graph-types';\nimport { Profile } from '@microsoft/microsoft-graph-types-beta';\n\nimport { getEmailFromGraphEntity } from '../../graph/graph.people';\nimport { IDynamicPerson } from '../../graph/types';\nimport { MgtPersonCardState } from './mgt-person-card.types';\nimport { MgtPersonCardConfig } from './MgtPersonCardConfig';\n\nconst userProperties =\n  'businessPhones,companyName,department,displayName,givenName,jobTitle,mail,mobilePhone,officeLocation,preferredLanguage,surname,userPrincipalName,id,accountEnabled';\n\nconst batchKeys = {\n  directReports: 'directReports',\n  files: 'files',\n  messages: 'messages',\n  people: 'people',\n  person: 'person'\n};\n\n/**\n * Get data to populate the person card\n *\n * @export\n * @param {IGraph} graph\n * @param {IDynamicPerson} personDetails\n * @param {boolean} isMe\n * @param {MgtPersonCardConfig} config\n * @return {*}  {Promise<MgtPersonCardState>}\n */\nexport const getPersonCardGraphData = async (\n  graph: IGraph,\n  personDetails: IDynamicPerson,\n  isMe: boolean\n): Promise<MgtPersonCardState> => {\n  const userId = personDetails.id;\n  const email = getEmailFromGraphEntity(personDetails);\n\n  const isContactOrGroup =\n    'classification' in personDetails ||\n    ('personType' in personDetails &&\n      (personDetails.personType.subclass === 'PersonalContact' || personDetails.personType.class === 'Group'));\n\n  const batch = graph.createBatch();\n\n  if (!isContactOrGroup) {\n    if (MgtPersonCardConfig.sections.organization) {\n      buildOrgStructureRequest(batch, userId);\n\n      if (MgtPersonCardConfig.sections.organization.showWorksWith) {\n        buildWorksWithRequest(batch, userId);\n      }\n    }\n  }\n\n  if (MgtPersonCardConfig.sections.mailMessages && email) {\n    buildMessagesWithUserRequest(batch, email);\n  }\n\n  if (MgtPersonCardConfig.sections.files) {\n    buildFilesRequest(batch, isMe ? null : email);\n  }\n\n  let response: Map<string, BatchResponse>;\n  const data: MgtPersonCardState = {}; // TODO\n  try {\n    response = await batch.executeAll();\n  } catch {\n    // nop\n  }\n\n  if (response) {\n    for (const [key, value] of response) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n      data[key] = value.content?.value || value.content;\n    }\n  }\n\n  if (!isContactOrGroup && MgtPersonCardConfig.sections.profile) {\n    try {\n      const profile = await getProfile(graph, userId);\n      if (profile) {\n        data.profile = profile;\n      }\n    } catch {\n      // nop\n    }\n  }\n\n  // filter out disabled users from direct reports.\n  if (data.directReports && data.directReports.length > 0) {\n    data.directReports = data.directReports.filter(report => report.accountEnabled);\n  }\n\n  return data;\n};\n\nconst buildOrgStructureRequest = (batch: IBatch, userId: string) => {\n  const expandManagers = `manager($levels=max;$select=${userProperties})`;\n\n  batch.get(\n    batchKeys.person,\n    `users/${userId}?$expand=${expandManagers}&$select=${userProperties}&$count=true`,\n    ['user.read.all'],\n    {\n      ConsistencyLevel: 'eventual'\n    }\n  );\n\n  batch.get(batchKeys.directReports, `users/${userId}/directReports?$select=${userProperties}`);\n};\n\nconst buildWorksWithRequest = (batch: IBatch, userId: string) => {\n  batch.get(batchKeys.people, `users/${userId}/people?$filter=personType/class eq 'Person'`, ['People.Read.All']);\n};\n\nconst buildMessagesWithUserRequest = (batch: IBatch, emailAddress: string) => {\n  batch.get(batchKeys.messages, `me/messages?$search=\"from:${emailAddress}\"`, ['Mail.ReadBasic']);\n};\n\nconst buildFilesRequest = (batch: IBatch, emailAddress?: string) => {\n  let request: string;\n\n  if (emailAddress) {\n    request = `me/insights/shared?$filter=lastshared/sharedby/address eq '${emailAddress}'`;\n  } else {\n    request = 'me/insights/used';\n  }\n\n  batch.get(batchKeys.files, request, ['Sites.Read.All']);\n};\n\n/**\n * Get the profile for a user\n *\n * @param {IGraph} graph\n * @param {string} userId\n * @return {*}  {Promise<Profile>}\n */\nconst getProfile = async (graph: IGraph, userId: string): Promise<Profile> =>\n  (await graph.api(`/users/${userId}/profile`).version('beta').get()) as Profile;\n\n/**\n * Initiate a chat to a user\n *\n * @export\n * @param {IGraph} graph\n * @param {{ chatType: string; members: [{\"@odata.type\": string,\"roles\": [\"owner\"],\"user@odata.bind\": string},{\"@odata.type\": string,\"roles\": [\"owner\"],\"user@odata.bind\": string}]  }} chatData\n * @return {*}  {Promise<Chat>}\n */\nexport const createChat = async (graph: IGraph, person: string, user: string): Promise<Chat> => {\n  const chatData = {\n    chatType: 'oneonOne',\n    members: [\n      {\n        '@odata.type': '#microsoft.graph.aadUserConversationMember',\n        roles: ['owner'],\n        'user@odata.bind': `https://graph.microsoft.com/v1.0/users('${user}')`\n      },\n      {\n        '@odata.type': '#microsoft.graph.aadUserConversationMember',\n        roles: ['owner'],\n        'user@odata.bind': `https://graph.microsoft.com/v1.0/users('${person}')`\n      }\n    ]\n  };\n  return (await graph\n    .api('/chats')\n    .header('Cache-Control', 'no-store')\n    .middlewareOptions(prepScopes('Chat.Create', 'Chat.ReadWrite'))\n    .post(chatData)) as Chat;\n};\n\n/**\n * Send a chat message to a user\n *\n * @export\n * @param {IGraph} graph\n * @param {{ body: {\"content\": string}  }} messageData\n * @return {*}  {Promise<ChatMessage>}\n */\nexport const sendMessage = async (\n  graph: IGraph,\n  chatId: string,\n  messageData: Pick<ChatMessage, 'body'>\n): Promise<ChatMessage> =>\n  (await graph\n    .api(`/chats/${chatId}/messages`)\n    .header('Cache-Control', 'no-store')\n    .middlewareOptions(prepScopes('Chat.ReadWrite', 'ChatMessage.Send'))\n    .post(messageData)) as ChatMessage;\n","// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\n\nimport { css, CSSResult } from 'lit';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles: CSSResult[] = [\n  css`\n:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host{box-shadow:var(--person-card-box-shadow,var(--elevation-shadow-card-rest));width:var(--mgt-flyout-set-width,375px);overflow:hidden;user-select:none;border-radius:8px;background-color:var(--person-card-background-color,var(--neutral-layer-floating));--file-list-background-color:transparent;--file-list-box-shadow:none;--file-item-background-color:transparent}:host .small{max-height:100vh;overflow:hidden auto}:host .nav{height:0;position:relative;z-index:100}:host .nav__back{padding-top:18px;padding-inline-start:12px;height:32px;width:32px}:host .nav__back svg{fill:var(--person-card-icon-color,var(--accent-foreground-rest))}:host .nav__back:hover{cursor:pointer}:host .nav__back:hover svg{fill:var(--person-card-nav-back-arrow-hover-color,var(--neutral-foreground-rest))}:host .close-card-container{position:relative;z-index:100}:host .close-card-container .close-button{position:absolute;right:10px;margin-top:9px;z-index:1;border:1px solid transparent}:host .close-card-container .close-button svg path{fill:var(--person-card-icon-color,var(--accent-foreground-rest))}:host .close-card-container .close-button:hover svg path{fill:var(--person-card-close-button-hover-color,var(--neutral-foreground-rest))}:host .person-details-container{display:flex;flex-direction:column;padding-inline-start:22px;padding-block:36px;border-bottom:1px solid var(--person-card-border-color,var(--neutral-stroke-rest))}:host .person-details-container .person-image{--person-avatar-top-spacing:var(--person-card-avatar-top-spacing, 15px);--person-details-left-spacing:var(--person-card-details-left-spacing, 15px);--person-details-bottom-spacing:var(--person-card-details-bottom-spacing, 0);--person-background-color:var(--person-card-background-color, var(--neutral-layer-floating));--person-line1-font-size:var(--person-card-line1-font-size, 20px);--person-line1-font-weight:var(--person-card-line1-font-weight, 600);--person-line1-text-line-height:var(--person-card-line1-line-height, 28px);--person-line1-text-color:var(--person-card-line1-text-color, var(--neutral-foreground-rest));--person-line2-font-size:var(--person-card-line2-font-size, 14px);--person-line2-font-weight:var(--person-card-line2-font-weight, 400);--person-line2-text-line-height:var(--person-card-line2-line-height, 20px);--person-line2-text-color:var(--person-card-line2-text-color, var(--neutral-foreground-hint));--person-line3-font-size:var(--person-card-line3-font-size, 14px);--person-line3-font-weight:var(--person-card-line3-font-weight, 400);--person-line3-text-line-height:var(--person-card-line3-line-height, 19px);--person-line3-text-color:var(--person-card-line3-text-color, var(--neutral-foreground-hint));--person-avatar-size:var(--person-card-avatar-size, 75px);--person-presence-wrapper-bottom:-15px}:host .person-details-container .base-icons{display:flex;align-items:center;margin-inline-start:var(--person-card-base-icons-left-spacing,calc(var(--person-card-avatar-size,75px) + var(--person-card-details-left-spacing,15px) - 8px));z-index:1}:host .person-details-container .base-icons .icon{display:flex;align-items:center;font-size:13px;white-space:nowrap}:host .person-details-container .base-icons .icon:not(:last-child){margin-inline-end:28px}:host .person-details-container .base-icons .icon svg .filled{display:none}:host .person-details-container .base-icons .icon svg .regular{display:block}:host .person-details-container .base-icons .icon svg path{fill:var(--person-card-icon-color,var(--accent-foreground-rest))}:host .person-details-container .base-icons .icon:active svg .filled,:host .person-details-container .base-icons .icon:hover svg .filled{display:block}:host .person-details-container .base-icons .icon:active svg .regular,:host .person-details-container .base-icons .icon:hover svg .regular{display:none}:host .person-details-container .base-icons .icon:active svg path,:host .person-details-container .base-icons .icon:hover svg path{fill:var(--person-card-icon-hover-color,var(--accent-foreground-hover))}:host .expanded-details-container{display:flex;flex-direction:column;position:relative}:host .expanded-details-container .expanded-details-button{display:flex;justify-content:center;height:32px}:host .expanded-details-container .expanded-details-button svg path{stroke:var(--person-card-icon-color,var(--accent-foreground-rest))}:host .expanded-details-container .expanded-details-button:hover{cursor:pointer;background-color:var(--person-card-expanded-background-color-hover,var(--neutral-fill-hover))}:host .expanded-details-container .sections .section{padding:20px 0;display:flex;flex-direction:column;position:relative}:host .expanded-details-container .sections .section:not(:last-child)::after{position:absolute;content:\"\";width:90%;transform:translateX(-50%);border-bottom:1px solid var(--person-card-border-color,var(--neutral-stroke-rest));left:50%;bottom:0}:host .expanded-details-container .sections .section__header{display:flex;flex-direction:row;padding:0 20px}:host .expanded-details-container .sections .section__title{flex-grow:1;color:var(--person-card-line1-text-color,var(--neutral-foreground-rest));font-size:14px;font-weight:600;line-height:19px}:host .expanded-details-container .sections .section__show-more{font-size:12px;font-weight:600;align-self:center;vertical-align:top;--base-height-multiplier:6}:host .expanded-details-container .sections .section__show-more:hover{background-color:var(--person-card-fluent-background-color-hover,var(--neutral-fill-hover))}:host .expanded-details-container .sections .section__content{margin-top:14px}:host .expanded-details-container .sections .section .additional-details{padding:0 20px}:host .expanded-details-container .divider{z-index:100;position:relative;width:375px;margin:0;border-style:none;border-bottom:1px solid var(--person-card-border-color,var(--neutral-stroke-rest))}:host .expanded-details-container .section-nav{height:35px}:host .expanded-details-container .section-nav fluent-tabs{grid-template-columns:minmax(1px,.1fr)}:host .expanded-details-container .section-nav fluent-tabs.horizontal::part(activeIndicator){width:10px}:host .expanded-details-container .section-nav fluent-tabs fluent-tab-panel{max-height:360px;min-height:360px;overflow:hidden auto;padding:0;scrollbar-width:thin}:host .expanded-details-container .section-nav fluent-tabs fluent-tab-panel .inserted{padding:20px 0;max-width:var(--mgt-flyout-set-width,375px);min-width:var(--mgt-flyout-set-width,360px);--file-list-box-shadow:none;--file-list-padding:0}:host .expanded-details-container .section-nav fluent-tabs fluent-tab-panel .inserted .title{font-size:14px;font-weight:600;color:var(--title-color-subtitle,var(--neutral-foreground-rest,#1a1a1a));margin:0 20px 20px;line-height:19px}:host .expanded-details-container .section-nav fluent-tabs fluent-tab-panel .overview-panel{max-width:var(--mgt-flyout-set-width,375px)}:host .expanded-details-container .section-nav fluent-tabs fluent-tab-panel::-webkit-scrollbar{height:4em;width:4px;border-radius:11px}:host .expanded-details-container .section-nav fluent-tabs fluent-tab-panel::-webkit-scrollbar-button{height:1px}:host .expanded-details-container .section-nav fluent-tabs fluent-tab-panel::-webkit-scrollbar-track{border-radius:10px}:host .expanded-details-container .section-nav fluent-tabs fluent-tab-panel::-webkit-scrollbar-thumb{background:grey;border-radius:10px;height:4px}:host .expanded-details-container .section-nav fluent-tabs fluent-tab{padding-bottom:1px!important;border:1px solid transparent!important}:host .expanded-details-container .section-nav fluent-tabs fluent-tab:focus-visible{border:1px solid #2b2b2b!important}:host .expanded-details-container .section-nav fluent-tabs fluent-tab.section-nav__icon{cursor:pointer;box-sizing:border-box;width:53px;height:36px;display:flex;align-items:center;justify-content:center}:host .expanded-details-container .section-nav fluent-tabs fluent-tab.section-nav__icon svg{fill:var(--person-card-fluent-background-color,transparent)}:host .expanded-details-container .section-nav fluent-tabs fluent-tab.section-nav__icon:hover{background:var(--person-card-fluent-background-color-hover,var(--neutral-fill-hover));border-radius:4px;z-index:0;position:relative}:host .expanded-details-container .section-host{min-height:360px;overflow:hidden auto}:host .expanded-details-container .section-host::-webkit-scrollbar{height:4em;width:4px;border-radius:11px}:host .expanded-details-container .section-host::-webkit-scrollbar-button{background:#fff}:host .expanded-details-container .section-host::-webkit-scrollbar-track{background:#fff;border-radius:10px}:host .expanded-details-container .section-host::-webkit-scrollbar-track-piece{background:#fff}:host .expanded-details-container .section-host::-webkit-scrollbar-thumb{background:grey;border-radius:10px;height:4px}:host .expanded-details-container .section-host.small{overflow-y:hidden}:host .loading{margin:40px 20px;display:flex;justify-content:center;height:360px}:host .message-section{border-bottom:1px solid var(--person-card-chat-input-border-color,var(--neutral-foreground-hint));display:flex}:host .message-section fluent-text-field{margin:10px 10px 10px 16px;--neutral-fill-input-rest:$person-card-background-color;--neutral-fill-input-hover:$person-card-chat-input-hover-color;--neutral-fill-input-focus:$person-card-chat-input-focus-color;width:300px;margin-inline-start:16px;border-radius:4px;border:1px solid var(--person-card-chat-input-border-color,var(--neutral-foreground-hint))}:host .message-section .send-message-icon{max-width:15px;margin-top:10px}:host .message-section svg{height:17px;width:16px;fill:var(--person-card-chat-input-border-color,var(--neutral-foreground-hint))}:host .message-section svg:hover{filter:brightness(.5)}:host .message-section svg:disabled{filter:none}:host .person-root.large,:host .person-root.threelines{--person-avatar-size-3-lines:75px}:host fluent-button.close-button.lightweight::part(control),:host fluent-button.expanded-details-button::part(control),:host fluent-button.section__show-more.lightweight::part(control){background:var(--person-card-fluent-background-color,transparent)}:host fluent-button.icon::part(control),:host fluent-button.nav__back::part(control){border:none;padding:0;background:0 0}:host fluent-button.icon::part(control) :hover,:host fluent-button.nav__back::part(control) :hover{background:0 0}[dir=rtl] .base-icons{right:91px}[dir=rtl] .nav__back{width:20px!important;transform:scaleX(-1);filter:fliph;filter:FlipH}[dir=rtl] .close-card-container .close-button{right:auto;left:10px}[dir=rtl] .message-section svg{transform:scale(-1,1)}@media (forced-colors:active) and (prefers-color-scheme:dark){.root{border:1px solid #fff;border-radius:inherit}.root svg,.root svg>path{fill:#fff!important;fill-rule:nonzero!important;clip-rule:nonzero!important}.expanded-details-container>svg,.expanded-details-container>svg>path,svg,svg>path{fill:#fff!important;fill-rule:nonzero!important;clip-rule:nonzero!important}}@media (forced-colors:active) and (prefers-color-scheme:light){.root{border:1px solid #000;border-radius:inherit}.root svg,.root svg>path{fill:#000!important;fill-rule:nonzero!important;clip-rule:nonzero!important}.expanded-details-container>svg,.expanded-details-container>svg>path,svg,svg>path{fill:#000!important;fill-rule:nonzero!important;clip-rule:nonzero!important}}\n`];","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { MgtTemplatedTaskComponent, customElementHelper, mgtHtml } from '@microsoft/mgt-element';\nimport { html, TemplateResult } from 'lit';\nimport { property, state } from 'lit/decorators.js';\n\nimport { IDynamicPerson } from '../graph/types';\nimport { MgtPersonCard } from './mgt-person-card/mgt-person-card';\n\nimport './sub-components/mgt-spinner/mgt-spinner';\n\n/**\n * Defines the interface for a person card section.\n * This allows us to avoid forced inheritance and allow for more flexibility in the future.\n */\nexport interface CardSection {\n  readonly cardTitle: string;\n  tagName: string;\n  asCompactView(): CardSection;\n  asFullView(): CardSection;\n  renderIcon(): TemplateResult;\n}\n\n/**\n * A base class for building person card subsections.\n *\n * @export\n * @class BasePersonCardSection\n * @extends {MgtTemplatedComponent}\n */\nexport abstract class BasePersonCardSection extends MgtTemplatedTaskComponent implements CardSection {\n  /**\n   * Set the person details to render\n   *\n   * @type {IDynamicPerson}\n   * @memberof BasePersonCardSection\n   */\n  @property({\n    attribute: 'person-details',\n    type: Object\n  })\n  public personDetails: IDynamicPerson | null = null;\n\n  /**\n   * The name for display in the overview section.\n   *\n   * @abstract\n   * @type {string}\n   * @memberof BasePersonCardSection\n   */\n  public abstract get displayName(): string;\n\n  /**\n   * The title for using when rendering the full card.\n   *\n   * @readonly\n   * @abstract\n   * @memberof BasePersonCardSection\n   */\n  public abstract get cardTitle(): string;\n\n  /**\n   * Determines the appropriate view state: full or compact\n   *\n   * @protected\n   * @type {boolean}\n   * @memberof BasePersonCardSection\n   */\n  protected get isCompact(): boolean {\n    return this._isCompact;\n  }\n\n  @state()\n  private _isCompact: boolean;\n\n  constructor() {\n    super();\n    this._isCompact = false;\n  }\n\n  /**\n   * Render the icon for display in the navigation ribbon.\n   *\n   * @protected\n   * @abstract\n   * @returns {TemplateResult}\n   * @memberof BasePersonCardSection\n   */\n  public abstract renderIcon(): TemplateResult;\n\n  /**\n   * Set the section to compact view mode\n   *\n   * @returns\n   * @memberof BasePersonCardSection\n   */\n  public asCompactView() {\n    this._isCompact = true;\n    return this;\n  }\n\n  /**\n   * Set the section to full view mode\n   *\n   * @returns\n   * @memberof BasePersonCardSection\n   */\n  public asFullView() {\n    this._isCompact = false;\n    return this;\n  }\n\n  /**\n   * Reset any state in the section\n   *\n   * @protected\n   * @memberof BasePersonCardSection\n   */\n  protected clearState(): void {\n    this._isCompact = false;\n    this.personDetails = null;\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method must return\n   * a lit-html TemplateResult. Setting properties inside this method will *not*\n   * trigger the element to update.\n   */\n  protected render() {\n    return this.isCompact ? this.renderCompactView() : this.renderFullView();\n  }\n\n  /**\n   * Render a spinner while the component loads state\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof BasePersonCardSection\n   */\n  protected renderLoading = (): TemplateResult => {\n    return mgtHtml`\n      <div class=\"loading\">\n        <mgt-spinner></mgt-spinner>\n      </div>\n    `;\n  };\n\n  /**\n   * Render the section in a empty data state\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCardContact\n   */\n  protected renderNoData(): TemplateResult {\n    return html`\n      <div class=\"no-data\">No data</div>\n    `;\n  }\n\n  /**\n   * Render the compact view\n   *\n   * @protected\n   * @abstract\n   * @returns {TemplateResult}\n   * @memberof BasePersonCardSection\n   */\n  protected abstract renderCompactView(): TemplateResult;\n\n  /**\n   * Render the full view\n   *\n   * @protected\n   * @abstract\n   * @returns {TemplateResult}\n   * @memberof BasePersonCardSection\n   */\n  protected abstract renderFullView(): TemplateResult;\n\n  /**\n   * Navigate the card to a different user.\n   *\n   * @protected\n   * @memberof BasePersonCardSection\n   */\n  protected navigateCard(person: IDynamicPerson): void {\n    // Search for card parent and update it's personDetails object\n    let parent: ParentNode = this.parentNode;\n    while (parent) {\n      parent = parent.parentNode;\n\n      const shadowRoot = parent as ShadowRoot;\n      if (shadowRoot?.host?.tagName === `${customElementHelper.prefix}-PERSON-CARD`.toUpperCase()) {\n        parent = shadowRoot.host;\n        break;\n      }\n    }\n\n    const personCard = parent as MgtPersonCard;\n    personCard.navigate(person);\n  }\n}\n","// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\n\nimport { css, CSSResult } from 'lit';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles: CSSResult[] = [\n  css`\n:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host .loading,:host .no-data{margin:0 20px;display:flex;justify-content:center}:host .no-data{font-style:normal;font-weight:600;font-size:14px;color:var(--font-color,#323130);line-height:19px}:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host{position:relative;user-select:none}:host .root .part{display:grid;grid-template-columns:auto 1fr auto}:host .root .part .part__icon{display:flex;min-width:20px;width:20px;height:20px;align-items:center;justify-content:center;margin-left:20px;margin-top:10px;line-height:20px}:host .root .part .part__icon svg{fill:var(--contact-copy-icon-color,var(--neutral-foreground-hint))}:host .root .part .part__details{margin:10px 14px;overflow:hidden}:host .root .part .part__details .part__title{font-size:12px;color:var(--contact-title-color,var(--neutral-foreground-hint));line-height:16px}:host .root .part .part__details .part__value{grid-column:2;color:var(--contact-value-color,var(--neutral-foreground-rest));font-size:14px;font-weight:400;line-height:19px}:host .root .part .part__details .part__value .part__link{color:var(--contact-link-color,var(--accent-foreground-rest));font-size:14px;cursor:pointer;text-overflow:ellipsis;overflow:hidden;white-space:nowrap;width:100%;display:inline-block}:host .root .part .part__details .part__value .part__link:hover{color:var(--contact-link-hover-color,var(--accent-foreground-hover))}:host .root .part .part__copy{width:32px;height:100%;background-color:var(--contact-background-color,transparent);visibility:hidden;display:flex;align-items:center;justify-content:flex-start}:host .root .part .part__copy svg{fill:var(--contact-copy-icon-color,var(--neutral-foreground-hint));cursor:pointer}:host .root .part:hover .part__copy{visibility:visible}:host .root.compact{padding:0}:host .root.compact .part{height:30px;align-items:center}:host .root.compact .part__details{margin:0}:host .root.compact .part__title{display:none}:host .root.compact .part__icon{margin-top:0;margin-right:6px;margin-bottom:2px}[dir=rtl] .part__link.phone{text-align:right;direction:ltr}[dir=rtl] .part__icon{margin:10px 20px 0 0!important}[dir=rtl].compact .part__icon{margin-left:6px!important;margin-top:0!important}@media (forced-colors:active) and (prefers-color-scheme:dark){.root svg{fill:#fff!important;fill-rule:nonzero!important;clip-rule:nonzero!important}.root svg path,.root svg rect{fill:#fff!important;fill-rule:nonzero!important;clip-rule:nonzero!important}}@media (forced-colors:active) and (prefers-color-scheme:light){.root svg{fill:#000!important;fill-rule:nonzero!important;clip-rule:nonzero!important}.root svg path,.root svg rect{fill:#000!important;fill-rule:nonzero!important;clip-rule:nonzero!important}}\n`];","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nexport const strings = {\n  contactSectionTitle: 'Contact',\n  emailTitle: 'Email',\n  chatTitle: 'Teams',\n  businessPhoneTitle: 'Business Phone',\n  cellPhoneTitle: 'Mobile Phone',\n  departmentTitle: 'Department',\n  personTitle: 'Title',\n  officeLocationTitle: 'Office Location',\n  copyToClipboardButton: 'Copy to clipboard'\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { User } from '@microsoft/microsoft-graph-types';\nimport { html, TemplateResult } from 'lit';\nimport { TeamsHelper } from '@microsoft/mgt-element';\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport { getEmailFromGraphEntity } from '../../graph/graph.people';\nimport { BasePersonCardSection } from '../BasePersonCardSection';\nimport { styles } from './mgt-contact-css';\nimport { getSvg, SvgIcon } from '../../utils/SvgHelper';\nimport { strings } from './strings';\nimport { registerComponent } from '@microsoft/mgt-element';\n\n/**\n * Represents a contact part and its metadata\n *\n * @interface IContactPart\n */\ninterface IContactPart {\n  icon: TemplateResult;\n  title: string;\n  value?: string;\n  onClick?: (e: Event) => void;\n  showCompact: boolean;\n}\n\ntype Protocol = 'mailto:' | 'tel:';\n\nexport const registerMgtContactComponent = () => {\n  registerComponent('contact', MgtContact);\n};\n\n/**\n * The contact details subsection of the person card\n *\n * @export\n * @class MgtContact\n * @extends {MgtTemplatedComponent}\n */\nexport class MgtContact extends BasePersonCardSection {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  protected get strings() {\n    return strings;\n  }\n\n  /**\n   * Returns true if the component has data it can render\n   *\n   * @readonly\n   * @abstract\n   * @type {boolean}\n   * @memberof BasePersonCardSection\n   */\n  public get hasData(): boolean {\n    if (!this._contactParts) {\n      return false;\n    }\n\n    const availableParts: IContactPart[] = Object.values(this._contactParts).filter((p: IContactPart) => !!p.value);\n\n    return !!availableParts.length;\n  }\n\n  private readonly _person?: User;\n\n  private readonly _contactParts: Record<string, IContactPart> = {\n    email: {\n      icon: getSvg(SvgIcon.Email),\n      onClick: () => this.sendEmail(getEmailFromGraphEntity(this._person)),\n      showCompact: true,\n      title: this.strings.emailTitle\n    },\n    chat: {\n      icon: getSvg(SvgIcon.Chat),\n      onClick: () => this.sendChat(this._person?.userPrincipalName),\n      showCompact: false,\n      title: this.strings.chatTitle\n    },\n    businessPhone: {\n      icon: getSvg(SvgIcon.Phone),\n      onClick: () => this.sendCall(this._person?.businessPhones?.length > 0 ? this._person.businessPhones[0] : null),\n      showCompact: true,\n      title: this.strings.businessPhoneTitle\n    },\n    cellPhone: {\n      icon: getSvg(SvgIcon.CellPhone),\n      onClick: () => this.sendCall(this._person?.mobilePhone),\n      showCompact: true,\n      title: this.strings.cellPhoneTitle\n    },\n    department: {\n      icon: getSvg(SvgIcon.Department),\n      showCompact: false,\n      title: this.strings.departmentTitle\n    },\n    title: {\n      icon: getSvg(SvgIcon.Person),\n      showCompact: false,\n      title: this.strings.personTitle\n    },\n    officeLocation: {\n      icon: getSvg(SvgIcon.OfficeLocation),\n      showCompact: true,\n      title: this.strings.officeLocationTitle\n    }\n  };\n\n  public constructor(person: User) {\n    super();\n    this._person = person;\n\n    this._contactParts.email.value = getEmailFromGraphEntity(this._person);\n    this._contactParts.chat.value = this._person.userPrincipalName;\n    this._contactParts.cellPhone.value = this._person.mobilePhone;\n    this._contactParts.department.value = this._person.department;\n    this._contactParts.title.value = this._person.jobTitle;\n    this._contactParts.officeLocation.value = this._person.officeLocation;\n\n    if (this._person.businessPhones?.length) {\n      this._contactParts.businessPhone.value = this._person.businessPhones[0];\n    }\n  }\n\n  /**\n   * The name for display in the overview section.\n   *\n   * @readonly\n   * @type {string}\n   * @memberof MgtContact\n   */\n  public get displayName(): string {\n    return this.strings.contactSectionTitle;\n  }\n\n  /**\n   * The title for display when rendered as a full card.\n   *\n   * @readonly\n   * @type {string}\n   * @memberof MgtContact\n   */\n  public get cardTitle(): string {\n    return this.strings.contactSectionTitle;\n  }\n\n  // Defines the skeleton for what contact fields are available and what they do.\n\n  /**\n   * Render the icon for display in the navigation ribbon.\n   *\n   * @returns {TemplateResult}\n   * @memberof MgtContact\n   */\n  public renderIcon(): TemplateResult {\n    return getSvg(SvgIcon.Contact);\n  }\n\n  /**\n   * Reset any state in the section\n   *\n   * @protected\n   * @memberof MgtContact\n   */\n  public clearState() {\n    super.clearState();\n    for (const key of Object.keys(this._contactParts)) {\n      this._contactParts[key].value = null;\n    }\n  }\n\n  /**\n   * Render the compact view\n   *\n   * @returns {TemplateResult}\n   * @memberof MgtContact\n   */\n  protected renderCompactView(): TemplateResult {\n    if (!this.hasData) {\n      return null;\n    }\n\n    const availableParts: IContactPart[] = Object.values(this._contactParts).filter((p: IContactPart) => !!p.value);\n\n    // Filter for compact mode parts with values\n    let compactParts: IContactPart[] = Object.values(availableParts).filter(\n      (p: IContactPart) => !!p.value && p.showCompact\n    );\n\n    if (!compactParts?.length) {\n      compactParts = Object.values(availableParts).slice(0, 2);\n    }\n\n    const contentTemplate = html`\n      ${compactParts.map(p => this.renderContactPart(p))}\n    `;\n\n    return html`\n      <div class=\"root compact\" dir=${this.direction}>\n        ${contentTemplate}\n      </div>\n    `;\n  }\n\n  /**\n   * Render the full view\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtContact\n   */\n  protected renderFullView(): TemplateResult {\n    let contentTemplate: TemplateResult;\n\n    if (this.hasData) {\n      // Filter for parts with values only\n      const availableParts: IContactPart[] = Object.values(this._contactParts).filter((p: IContactPart) => !!p.value);\n      contentTemplate = html`\n        ${availableParts.map(part => this.renderContactPart(part))}\n      `;\n    }\n\n    return html`\n      <div class=\"root\" dir=${this.direction}>\n        ${contentTemplate}\n      </div>\n    `;\n  }\n\n  /**\n   * Render a specific contact part\n   *\n   * @protected\n   * @param {IContactPart} part\n   * @returns {TemplateResult}\n   * @memberof MgtContact\n   */\n  protected renderContactPart(part: IContactPart): TemplateResult {\n    let isPhone = false;\n\n    if (part.title === 'Mobile Phone' || part.title === 'Business Phone') {\n      isPhone = true;\n    }\n\n    const partLinkClasses = {\n      part__link: true,\n      phone: isPhone\n    };\n\n    const valueTemplate = part.onClick\n      ? html`\n          <span class=${classMap(partLinkClasses)} @click=${(e: Event) => part.onClick(e)}>${part.value}</span>\n        `\n      : html`\n          ${part.value}\n        `;\n\n    return html`\n      <div class=\"part\" role=\"button\" @click=${(e: MouseEvent) => this.handlePartClick(e, part.value)} tabindex=\"0\">\n        <div class=\"part__icon\" aria-label=${part.title} title=${part.title}>${part.icon}</div>\n        <div class=\"part__details\">\n          <div class=\"part__title\">${part.title}</div>\n          <div class=\"part__value\" title=${part.title}>${valueTemplate}</div>\n        </div>\n        <div\n          class=\"part__copy\"\n          aria-label=${this.strings.copyToClipboardButton}\n          title=${this.strings.copyToClipboardButton}\n        >\n          ${getSvg(SvgIcon.Copy)}\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Handle the click event for contact parts\n   *\n   * @protected\n   * @memberof MgtContact\n   */\n  protected handlePartClick(e: MouseEvent, value: string): void {\n    if (value) {\n      void navigator.clipboard.writeText(value);\n    }\n  }\n\n  private sendLink(protocol: Protocol, resource: string): void {\n    if (resource) {\n      window.open(`${protocol}${resource}`, '_blank', 'noreferrer');\n    } else {\n      // eslint-disable-next-line no-console\n      console.error(`🦒: Target resource for ${protocol} link was not provided: resource: ${resource}`);\n    }\n  }\n\n  /**\n   * Send a chat message to the user\n   *\n   * @protected\n   * @memberof MgtContact\n   */\n  protected sendChat(upn: string): void {\n    if (!upn) {\n      // eslint-disable-next-line no-console\n      console.error(\"🦒: Can't send chat when upn is not provided\");\n      return;\n    }\n\n    const url = `https://teams.microsoft.com/l/chat/0/0?users=${upn}`;\n    const openWindow = () => window.open(url, '_blank', 'noreferrer');\n\n    if (TeamsHelper.isAvailable) {\n      TeamsHelper.executeDeepLink(url, (status: boolean) => {\n        if (!status) {\n          openWindow();\n        }\n      });\n    } else {\n      openWindow();\n    }\n  }\n\n  /**\n   * Send an email to the user\n   *\n   * @protected\n   * @memberof MgtContact\n   */\n  protected sendEmail(email: string): void {\n    this.sendLink('mailto:', email);\n  }\n\n  /**\n   * Send a call to the user\n   *\n   * @protected\n   * @memberof MgtContact\n   */\n  protected sendCall = (phone: string): void => {\n    this.sendLink('tel:', phone);\n  };\n}\n","// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\n\nimport { css, CSSResult } from 'lit';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles: CSSResult[] = [\n  css`\n:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host .loading,:host .no-data{margin:0 20px;display:flex;justify-content:center}:host .no-data{font-style:normal;font-weight:600;font-size:14px;color:var(--font-color,#323130);line-height:19px}:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host{position:relative;user-select:none}:host .root.compact{padding:0}:host .root .message{padding:8px 20px;display:flex;align-items:center;justify-content:space-between}:host .root .message:hover{background-color:var(--message-hover-color,var(--neutral-fill-hover));cursor:pointer}:host .root .message:last-child{margin-bottom:unset}:host .root .message .message__detail{min-width:0;line-height:normal}:host .root .message .message__detail .message__subject{color:var(--message-subject-color,var(--neutral-foreground-color));font-size:var(--message-subject-font-size,14px);font-weight:var(--message-subject-font-weight,600);line-height:var(--message-subject-line-height,20px)}:host .root .message .message__detail .message__from{font-size:var(--message-from-font-size,12px);color:var(--message-from-color,var(--neutral-foreground-color));line-height:var(--message-from-line-height,16px);font-weight:var(--message-from-font-weight,400)}:host .root .message .message__detail .message__message{font-size:var(--message-from-font-size,12px);color:var(--message-color,var(--neutral-foreground-hint));line-height:var(--message-from-line-height,16px);font-weight:var(--message-from-font-weight,400)}:host .root .message .message__detail>div{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}:host .root .message .message__date{margin-top:8px;font-size:12px;color:var(--message-date-color,var(--neutral-foreground-hint));margin-left:10px;white-space:nowrap}\n`];","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nexport const strings = {\n  emailsSectionTitle: 'Emails'\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { Message } from '@microsoft/microsoft-graph-types';\nimport { html, TemplateResult } from 'lit';\n\nimport { BasePersonCardSection } from '../BasePersonCardSection';\nimport { getSvg, SvgIcon } from '../../utils/SvgHelper';\nimport { getRelativeDisplayDate } from '../../utils/Utils';\nimport { styles } from './mgt-messages-css';\nimport { strings } from './strings';\nimport { registerComponent } from '@microsoft/mgt-element';\nimport { state } from 'lit/decorators.js';\n\nexport const registerMgtMessagesComponent = () => registerComponent('messages', MgtMessages);\n\n/**\n * The email messages subsection of the person card\n *\n * @export\n * @class MgtMessages\n * @extends {MgtTemplatedComponent}\n */\nexport class MgtMessages extends BasePersonCardSection {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  protected get strings() {\n    return strings;\n  }\n\n  @state()\n  private _messages: Message[];\n\n  public constructor(messages: Message[]) {\n    super();\n    this._messages = messages;\n  }\n\n  /**\n   * The name for display in the overview section.\n   *\n   * @readonly\n   * @type {string}\n   * @memberof MgtMessages\n   */\n  public get displayName(): string {\n    return this.strings.emailsSectionTitle;\n  }\n\n  /**\n   * The title for display when rendered as a full card.\n   *\n   * @readonly\n   * @type {string}\n   * @memberof MgtOrganization\n   */\n  public get cardTitle(): string {\n    return this.strings.emailsSectionTitle;\n  }\n\n  /**\n   * Reset any state in the section\n   *\n   * @protected\n   * @memberof MgtMessages\n   */\n  public clearState(): void {\n    super.clearState();\n    this._messages = [];\n  }\n\n  /**\n   * Render the icon for display in the navigation ribbon.\n   *\n   * @returns {TemplateResult}\n   * @memberof MgtMessages\n   */\n  public renderIcon(): TemplateResult {\n    return getSvg(SvgIcon.Messages);\n  }\n\n  /**\n   * Render the compact view\n   *\n   * @returns {TemplateResult}\n   * @memberof MgtMessages\n   */\n  public renderCompactView(): TemplateResult {\n    let contentTemplate: TemplateResult;\n\n    if (!this._messages?.length) {\n      contentTemplate = this.renderNoData();\n    } else {\n      const messageTemplates = this._messages\n        ? this._messages.slice(0, 3).map(message => this.renderMessage(message))\n        : [];\n      contentTemplate = html`\n         ${messageTemplates}\n       `;\n    }\n\n    return html`\n       <div class=\"root compact\">\n         ${contentTemplate}\n       </div>\n     `;\n  }\n\n  /**\n   * Render the full view\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtMessages\n   */\n  protected renderFullView(): TemplateResult {\n    let contentTemplate: TemplateResult;\n\n    if (!this._messages?.length) {\n      contentTemplate = this.renderNoData();\n    } else {\n      contentTemplate = html`\n         ${this._messages.slice(0, 5).map(message => this.renderMessage(message))}\n       `;\n    }\n\n    return html`\n       <div class=\"root\">\n         ${contentTemplate}\n       </div>\n     `;\n  }\n\n  /**\n   * Render a message item\n   *\n   * @protected\n   * @param {IMessage} message\n   * @returns {TemplateResult}\n   * @memberof MgtMessages\n   */\n  protected renderMessage(message: Message): TemplateResult {\n    return html`\n       <div class=\"message\" @click=${() => this.handleMessageClick(message)}>\n         <div class=\"message__detail\">\n           <div class=\"message__subject\">${message.subject}</div>\n           <div class=\"message__from\">${message.from.emailAddress.name}</div>\n           <div class=\"message__message\">${message.bodyPreview}</div>\n         </div>\n         <div class=\"message__date\">${getRelativeDisplayDate(new Date(message.receivedDateTime))}</div>\n       </div>\n     `;\n  }\n\n  private handleMessageClick(message: Message): void {\n    window.open(message.webLink, '_blank', 'noreferrer');\n  }\n}\n","// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\n\nimport { css, CSSResult } from 'lit';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles: CSSResult[] = [\n  css`\n:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host .loading,:host .no-data{margin:0 20px;display:flex;justify-content:center}:host .no-data{font-style:normal;font-weight:600;font-size:14px;color:var(--font-color,#323130);line-height:19px}:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host{position:relative;user-select:none}:host .root.compact{padding:0}:host .root.compact .coworker .coworker__person-image{height:40px;width:40px;border-radius:40px;--person-avatar-size:40px;margin-right:12px}:host .root.compact .coworker .coworker__name{font-size:14px}:host .root.compact .coworker .coworker__title{font-size:12px}:host .root .subtitle{color:var(--organization-sub-title-color,var(--neutral-foreground-hint));font-size:14px;margin:0 20px 8px}:host .root .divider{display:flex;background:var(--organization-coworker-border-color,var(--neutral-stroke-rest));height:1px;margin:26px 20px 18px}:host .root .org-member{height:74px;box-sizing:border-box;border-radius:2px;padding:12px;display:flex;align-items:center;margin-left:20px;margin-right:20px}:host .root .org-member.org-member--target{background-color:var(--organization-active-org-member-target-background-color,var(--neutral-fill-active));border:1px solid var(--organization-active-org-member-border-color,var(--accent-foreground-rest))}:host .root .org-member:not(.org-member--target){border:1px solid var(--organization-coworker-border-color,var(--neutral-stroke-rest))}:host .root .org-member:not(.org-member--target):hover{cursor:pointer;background-color:var(--organization-hover-color,var(--neutral-fill-hover))}:host .root .org-member .org-member__person{flex-grow:1}:host .root .org-member .org-member__person .org-member__person-image{--person-avatar-size:var(--organization-member-person-avatar-size, 40px)}:host .root .org-member .org-member__details{flex-grow:1}:host .root .org-member .org-member__details .org-member__name{font-size:16px;color:var(--organization-title-color,var(--neutral-foreground-rest));font-weight:600}:host .root .org-member .org-member__details .org-member__department,:host .root .org-member .org-member__details .org-member__title{font-weight:14px;color:var(--organization-sub-title-color,var(--neutral-foreground-hint))}:host .root .org-member__separator:not(:last-child){border:1px solid var(--organization-coworker-border-color,var(--neutral-stroke-rest));box-sizing:border-box;width:0;margin:0 50%;height:14px}:host .root .coworker{display:flex;align-items:center;padding:10px 20px}:host .root .coworker:hover{cursor:pointer;background-color:var(--organization-coworker-hover-color,var(--neutral-fill-hover))}:host .root .coworker .coworker__person{height:46px;border-radius:46px;margin-right:8px}:host .root .coworker .coworker__person .coworker__person-image{--person-avatar-size:var(--organization-coworker-person-avatar-size, 40px)}:host .root .direct-report__compact{padding:12px 20px}:host .root .direct-report__compact .direct-report{cursor:pointer;width:38px;margin-right:4px;display:inline}:host .root .direct-report__compact .direct-report .direct-report__person-image{--person-avatar-size:var(--organization-direct-report-person-avatar-size, 38px)}[dir=rtl] .org-member .org-member__more{transform:scaleX(-1);filter:fliph;filter:FlipH}@media (forced-colors:active) and (prefers-color-scheme:dark){:host svg,:host svg>path{fill:#fff!important;fill-rule:nonzero!important;clip-rule:nonzero!important}}@media (forced-colors:active) and (prefers-color-scheme:light){:host svg,:host svg>path{fill:#000!important;fill-rule:nonzero!important;clip-rule:nonzero!important}}\n`];","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nexport const strings = {\n  reportsToSectionTitle: 'Reports to',\n  directReportsSectionTitle: 'Direct reports',\n  organizationSectionTitle: 'Organization',\n  youWorkWithSubSectionTitle: 'You work with',\n  userWorksWithSubSectionTitle: 'works with'\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { User } from '@microsoft/microsoft-graph-types';\nimport { html, TemplateResult } from 'lit';\n\nimport { BasePersonCardSection } from '../BasePersonCardSection';\nimport { getSvg, SvgIcon } from '../../utils/SvgHelper';\nimport { MgtPersonCardState, UserWithManager } from '../mgt-person-card/mgt-person-card.types';\nimport { styles } from './mgt-organization-css';\nimport { strings } from './strings';\nimport { ViewType } from '../../graph/types';\nimport { mgtHtml } from '@microsoft/mgt-element';\nimport { registerComponent } from '@microsoft/mgt-element';\nimport { registerMgtPersonComponent } from '../mgt-person/mgt-person';\nimport { state } from 'lit/decorators.js';\n\nexport const registerMgtOrganizationComponent = () => {\n  registerMgtPersonComponent();\n  registerComponent('organization', MgtOrganization);\n};\n\n/**\n * The member organization subsection of the person card\n *\n * @export\n * @class MgtOrganization\n * @extends {MgtTemplatedComponent}\n */\nexport class MgtOrganization extends BasePersonCardSection {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  /**\n   * returns component strings\n   *\n   * @readonly\n   * @protected\n   * @memberof MgtBaseComponent\n   */\n  protected get strings() {\n    return strings;\n  }\n\n  @state()\n  private _state?: MgtPersonCardState;\n  @state()\n  private _me?: User;\n\n  constructor(cardState: MgtPersonCardState, me: User) {\n    super();\n    this._state = cardState;\n    this._me = me;\n  }\n\n  /**\n   * Reset any state in the section\n   *\n   * @protected\n   * @memberof MgtPersonCardMessages\n   */\n  public clearState(): void {\n    super.clearState();\n    this._state = undefined;\n    this._me = undefined;\n  }\n\n  /**\n   * The name for display in the overview section.\n   *\n   * @readonly\n   * @type {string}\n   * @memberof MgtOrganization\n   */\n  public get displayName(): string {\n    const { person, directReports } = this._state;\n\n    if (!person.manager && directReports?.length) {\n      return `${this.strings.directReportsSectionTitle} (${directReports.length})`;\n    }\n\n    return this.strings.reportsToSectionTitle;\n  }\n\n  /**\n   * The title for display when rendered as a full card.\n   *\n   * @readonly\n   * @type {string}\n   * @memberof MgtOrganization\n   */\n  public get cardTitle(): string {\n    return this.strings.organizationSectionTitle;\n  }\n\n  /**\n   * Render the icon for display in the navigation ribbon.\n   *\n   * @returns {TemplateResult}\n   * @memberof MgtOrganization\n   */\n  public renderIcon(): TemplateResult {\n    return getSvg(SvgIcon.Organization);\n  }\n\n  /**\n   * Render the compact view\n   *\n   * @returns {TemplateResult}\n   * @memberof MgtOrganization\n   */\n  protected renderCompactView(): TemplateResult {\n    let contentTemplate: TemplateResult;\n\n    if (!this._state?.person) {\n      return null;\n    }\n\n    const { person, directReports } = this._state;\n\n    if (!person) {\n      return null;\n    } else if (person.manager) {\n      contentTemplate = this.renderCoworker(person.manager);\n    } else if (directReports?.length) {\n      contentTemplate = this.renderCompactDirectReports();\n    }\n\n    return html`\n        <div class=\"root compact\">\n          ${contentTemplate}\n        </div>\n      `;\n  }\n\n  /**\n   * Render the full view\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtOrganization\n   */\n  protected renderFullView(): TemplateResult {\n    let contentTemplate: TemplateResult;\n\n    if (!this._state?.person) {\n      return null;\n    }\n\n    const { person, directReports, people } = this._state;\n\n    if (!person && !directReports && !people) {\n      return null;\n    } else {\n      const managerTemplates = this.renderManagers();\n      const currentUserTemplate = this.renderCurrentUser();\n      const directReportsTemplate = this.renderDirectReports();\n      const coworkersTemplate = this.renderCoworkers();\n\n      contentTemplate = html`\n          ${managerTemplates} ${currentUserTemplate} ${directReportsTemplate} ${coworkersTemplate}\n        `;\n    }\n\n    return html`\n       <div class=\"root\" dir=${this.direction}>\n         ${contentTemplate}\n       </div>\n     `;\n  }\n\n  /**\n   * Render a manager org member\n   *\n   * @protected\n   * @param {User} person\n   * @returns {TemplateResult}\n   * @memberof MgtOrganization\n   */\n  protected renderManager(person: User): TemplateResult {\n    return mgtHtml`\n      <div\n        class=\"org-member\"\n        @keydown=${(e: KeyboardEvent) => {\n          if (e.code === 'Enter' || e.code === ' ') this.navigateCard(person);\n        }}\n        @click=${() => this.navigateCard(person)}\n      >\n        <div class=\"org-member__person\">\n          <mgt-person\n            class=\"org-member__person-image\"\n            .personDetails=${person}\n            .fetchImage=${true}\n            .view=${ViewType.twolines}\n            .showPresence=${true}\n          ></mgt-person>\n        </div>\n        <div tabindex=\"0\" class=\"org-member__more\">\n          ${getSvg(SvgIcon.ExpandRight)}\n        </div>\n      </div>\n      <div class=\"org-member__separator\"></div>\n     `;\n  }\n\n  /**\n   * Render a manager org member\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtOrganization\n   */\n  protected renderManagers(): TemplateResult[] {\n    const { person } = this._state;\n    if (!person?.manager) {\n      return null;\n    }\n\n    const managers: UserWithManager[] = [];\n    let currentManager = person;\n    while (currentManager.manager) {\n      managers.push(currentManager.manager);\n      currentManager = currentManager.manager;\n    }\n\n    if (!managers.length) {\n      return null;\n    }\n\n    return managers.reverse().map(manager => this.renderManager(manager));\n  }\n\n  /**\n   * Render a direct report\n   *\n   * @protected\n   * @param {User} person\n   * @returns {TemplateResult}\n   * @memberof MgtOrganization\n   */\n  protected renderDirectReports(): TemplateResult {\n    const { directReports } = this._state;\n    if (!directReports?.length) {\n      return null;\n    }\n\n    return html`\n      <div class=\"org-member__separator\"></div>\n      <div>\n        ${directReports.map(\n          person => mgtHtml`\n            <div\n              class=\"org-member org-member--direct-report\"\n              @keydown=${(e: KeyboardEvent) => {\n                if (e.code === 'Enter' || e.code === ' ') this.navigateCard(person);\n              }}\n              @click=${() => this.navigateCard(person)}\n            >\n              <div class=\"org-member__person\">\n                <mgt-person\n                  class=\"org-member__person-image\"\n                  .personDetails=${person}\n                  .fetchImage=${true}\n                  .showPresence=${true}\n                  .view=${ViewType.twolines}\n                ></mgt-person>\n              </div>\n              <div tabindex=\"0\" class=\"org-member__more\">\n                ${getSvg(SvgIcon.ExpandRight)}\n              </div>\n            </div>\n            <div class=\"org-member__separator\"></div>\n          `\n        )}\n      </div>\n     `;\n  }\n\n  /**\n   * Render direct reports in compact view\n   *\n   * @protected\n   * @param {User} person\n   * @returns {TemplateResult}\n   * @memberof MgtOrganization\n   */\n  protected renderCompactDirectReports(): TemplateResult {\n    const { directReports } = this._state;\n\n    return html`\n      <div class=\"direct-report__compact\">\n        ${directReports.slice(0, 6).map(\n          person => mgtHtml`\n            <div\n              class=\"direct-report\"\n              @keydown=${(e: KeyboardEvent) => {\n                if (e.code === 'Enter' || e.code === ' ') this.navigateCard(person);\n              }}\n              @click=${() => this.navigateCard(person)}\n            >\n              <mgt-person\n                class=\"direct-report__person-image\"\n                .personDetails=${person}\n                .fetchImage=${true}\n                .showPresence=${true}\n                .view=${ViewType.twolines}\n              ></mgt-person>\n            </div>\n          `\n        )}\n      </div>\n    `;\n  }\n\n  /**\n   * Render the user/self member\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtOrganization\n   */\n  protected renderCurrentUser(): TemplateResult {\n    const { person } = this._state;\n    return mgtHtml`\n       <div class=\"org-member org-member--target\">\n         <div class=\"org-member__person\">\n           <mgt-person\n              class=\"org-member__person-image\"\n             .personDetails=${person}\n             .fetchImage=${true}\n             .showPresence=${true}\n             .view=${ViewType.twolines}\n           ></mgt-person>\n         </div>\n       </div>\n     `;\n  }\n\n  /**\n   * Render a coworker org member\n   *\n   * @protected\n   * @param {User} person\n   * @returns {TemplateResult}\n   * @memberof MgtOrganization\n   */\n  protected renderCoworker(person: User): TemplateResult {\n    return mgtHtml`\n      <div\n        class=\"coworker\"\n        @keydown=${(e: KeyboardEvent) => {\n          if (e.code === 'Enter' || e.code === ' ') this.navigateCard(person);\n        }}\n        @click=${() => this.navigateCard(person)}\n      >\n        <div class=\"coworker__person\">\n          <mgt-person\n            class=\"coworker__person-image\"\n            .personDetails=${person}\n            .fetchImage=${true}\n            .showPresence=${true}\n            .view=${ViewType.twolines}\n          ></mgt-person>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Render a coworker org member\n   *\n   * @protected\n   * @param {User} person\n   * @returns {TemplateResult}\n   * @memberof MgtOrganization\n   */\n  protected renderCoworkers(): TemplateResult {\n    const { people } = this._state;\n    if (!people?.length) {\n      return null;\n    }\n\n    const subtitle =\n      this._me.id === this._state.person.id\n        ? this.strings.youWorkWithSubSectionTitle\n        : `${this._state.person.givenName} ${this.strings.userWorksWithSubSectionTitle}`;\n\n    return html`\n       <div class=\"divider\"></div>\n       <div class=\"subtitle\" tabindex=\"0\">${subtitle}</div>\n       <div>\n         ${people.slice(0, 6).map(person => this.renderCoworker(person))}\n       </div>\n     `;\n  }\n}\n","// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\n\nimport { css, CSSResult } from 'lit';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles: CSSResult[] = [\n  css`\n:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host .loading,:host .no-data{margin:0 20px;display:flex;justify-content:center}:host .no-data{font-style:normal;font-weight:600;font-size:14px;color:var(--font-color,#323130);line-height:19px}:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host{position:relative;user-select:none;background-color:var(--profile-background-color,--neutral-layer-1)}:host .root{padding:20px 0}:host .root.compact{padding:0}:host .root .title{font-size:14px;font-weight:600;color:var(--profile-title-color,var(--neutral-foreground-rest));margin:0 20px 12px}:host .root section{margin-bottom:24px;padding:0 20px}:host .root section:last-child{margin:0}:host .root section .section__title{font-size:14px;color:var(--profile-section-title-color,var(--neutral-foreground-hint))}:host .root section .section__content{display:flex;flex-direction:column;margin-top:10px}:host .root .token-list{display:flex;flex-flow:row wrap;margin-top:-10px}:host .root .token-list .token-list__item{text-overflow:ellipsis;white-space:nowrap;display:inline-block;overflow:hidden;font-size:14px;align-items:center;background:var(--profile-token-item-background-color,var(--neutral-fill-secondary-rest));border-radius:2px;max-height:28px;padding:4px 8px;margin-right:10px;margin-top:10px;color:var(--profile-token-item-color,var(--neutral-foreground-rest))}:host .root .token-list .token-list__item:last-child{margin-right:initial}:host .root .token-list .token-list__item.overflow{display:none}:host .root .token-list .token-list__item.token-list__item--show-overflow{cursor:pointer;user-select:unset;background:0 0;color:var(--profile-token-overflow-color,var(--accent-foreground-rest))}:host .root .data-list__item{margin-bottom:20px}:host .root .data-list__item:last-child{margin-bottom:initial}:host .root .data-list__item .data-list__item__header{display:flex;justify-content:space-between;align-items:center}:host .root .data-list__item .data-list__item__content{font-size:12px;line-height:16px;color:var(--profile-section-title-color,var(--neutral-foreground-hint));margin-top:4px}:host .root .data-list__item .data-list__item__title{font-size:14px;line-height:16px;color:var(--profile-title-color,var(--neutral-foreground-rest))}:host .root .data-list__item .data-list__item__date-range{color:var(--profile-section-title-color,var(--neutral-foreground-hint));font-size:10px;line-height:12px}:host .root .language__proficiency{opacity:.77}:host .root .work-position .work-position__company{color:#023b8f}:host .root .work-position .work-position__location{font-size:10px;color:var(--profile-section-title-color,var(--neutral-foreground-hint));line-height:16px}:host .root .educational-activity .educational-activity__degree{font-size:12px;line-height:14px;color:var(--profile-section-title-color,var(--neutral-foreground-hint))}:host .root .birthday{display:flex;align-items:center;margin-top:-6px}:host .root .birthday .birthday__icon{margin-right:8px}:host .root .birthday .birthday__date{font-size:12px;color:var(--profile-title-color,var(--neutral-foreground-rest))}[dir=rtl] .token-list__item{margin-right:0!important}\n`];","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nexport const strings = {\n  SkillsAndExperienceSectionTitle: 'Skills & Experience',\n  AboutCompactSectionTitle: 'About',\n  SkillsSubSectionTitle: 'Skills',\n  LanguagesSubSectionTitle: 'Languages',\n  WorkExperienceSubSectionTitle: 'Work Experience',\n  EducationSubSectionTitle: 'Education',\n  professionalInterestsSubSectionTitle: 'Professional Interests',\n  personalInterestsSubSectionTitle: 'Personal Interests',\n  birthdaySubSectionTitle: 'Birthday',\n  currentYearSubtitle: 'Current',\n  socialMediaSubSectionTitle: 'Social Media'\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport {\n  EducationalActivity,\n  PersonAnnualEvent,\n  PersonInterest,\n  PhysicalAddress,\n  Profile\n} from '@microsoft/microsoft-graph-types-beta';\nimport { html, TemplateResult, nothing } from 'lit';\nimport { BasePersonCardSection } from '../BasePersonCardSection';\nimport { getSvg, SvgIcon } from '../../utils/SvgHelper';\nimport { styles } from './mgt-profile-css';\nimport { strings } from './strings';\nimport { registerComponent } from '@microsoft/mgt-element';\nimport { property } from 'lit/decorators.js';\n\nexport const registerMgtProfileComponent = () => registerComponent('profile', MgtProfile);\n\n/**\n * The user profile subsection of the person card\n *\n * @export\n * @class MgtProfile\n * @extends {MgtTemplatedComponent}\n *\n * @cssprop --token-overflow-color - {Color} Color of the text showing more undisplayed values i.e. +3 more\n */\nexport class MgtProfile extends BasePersonCardSection {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  protected get strings() {\n    return strings;\n  }\n\n  /**\n   * The name for display in the overview section.\n   *\n   * @readonly\n   * @type {string}\n   * @memberof MgtProfile\n   */\n  public get displayName(): string {\n    return this.strings.SkillsAndExperienceSectionTitle;\n  }\n\n  /**\n   * The title for display when rendered as a full card.\n   *\n   * @readonly\n   * @type {string}\n   * @memberof MgtOrganization\n   */\n  public get cardTitle(): string {\n    return this.strings.AboutCompactSectionTitle;\n  }\n\n  /**\n   * Returns true if the profile contains data\n   * that can be rendered\n   *\n   * @readonly\n   * @type {boolean}\n   * @memberof MgtProfile\n   */\n  public get hasData(): boolean {\n    if (!this.profile) {\n      return false;\n    }\n\n    const { languages, skills, positions, educationalActivities } = this.profile;\n\n    return (\n      [\n        this._birthdayAnniversary,\n        this._personalInterests?.length,\n        this._professionalInterests?.length,\n        languages?.length,\n        skills?.length,\n        positions?.length,\n        educationalActivities?.length\n      ].filter(v => !!v).length > 0\n    );\n  }\n\n  /**\n   * The user's profile metadata\n   *\n   * @protected\n   * @type {IProfile}\n   * @memberof MgtProfile\n   */\n  protected get profile(): Profile {\n    return this._profile;\n  }\n  @property({ attribute: false })\n  protected set profile(value: Profile) {\n    if (value === this._profile) {\n      return;\n    }\n\n    this._profile = value;\n    this._birthdayAnniversary = value?.anniversaries ? value.anniversaries.find(this.isBirthdayAnniversary) : null;\n    this._personalInterests = value?.interests ? value.interests.filter(this.isPersonalInterest) : null;\n    this._professionalInterests = value?.interests ? value.interests.filter(this.isProfessionalInterest) : null;\n  }\n\n  private _profile: Profile;\n  private _personalInterests: PersonInterest[];\n  private _professionalInterests: PersonInterest[];\n  private _birthdayAnniversary: PersonAnnualEvent;\n\n  constructor(profile: Profile) {\n    super();\n\n    this.profile = profile;\n  }\n\n  /**\n   * Render the icon for display in the navigation ribbon.\n   *\n   * @returns {TemplateResult}\n   * @memberof MgtProfile\n   */\n  public renderIcon(): TemplateResult {\n    return getSvg(SvgIcon.Profile);\n  }\n\n  /**\n   * Reset any state in the section\n   *\n   * @protected\n   * @memberof MgtProfile\n   */\n  public clearState(): void {\n    super.clearState();\n    this.profile = null;\n  }\n\n  /**\n   * Render the compact view\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtProfile\n   */\n  protected renderCompactView(): TemplateResult {\n    return html`\n       <div class=\"root compact\" dir=${this.direction}>\n         ${this.renderSubSections().slice(0, 2)}\n       </div>\n     `;\n  }\n\n  /**\n   * Render the full view\n   *\n   * @protected\n   * @returns\n   * @memberof MgtProfile\n   */\n  protected renderFullView() {\n    this.initPostRenderOperations();\n\n    return html`\n       <div class=\"root\" dir=${this.direction}>\n         ${this.renderSubSections()}\n       </div>\n     `;\n  }\n\n  /**\n   * Renders all subSections of the profile\n   * Defines order of how they render\n   *\n   * @protected\n   * @return {*}\n   * @memberof MgtProfile\n   */\n  protected renderSubSections() {\n    const subSections = [\n      this.renderSkills(),\n      this.renderBirthday(),\n      this.renderLanguages(),\n      this.renderWorkExperience(),\n      this.renderEducation(),\n      this.renderProfessionalInterests(),\n      this.renderPersonalInterests()\n    ];\n\n    return subSections.filter(s => !!s);\n  }\n\n  /**\n   * Render the user's known languages\n   *\n   * @protected\n   * @returns\n   * @memberof MgtProfile\n   */\n  protected renderLanguages(): TemplateResult {\n    const { languages } = this._profile;\n    if (!languages?.length) {\n      return null;\n    }\n\n    const languageItems: TemplateResult[] = [];\n    for (const language of languages) {\n      let proficiency = null;\n      if (language.proficiency?.length) {\n        proficiency = html`\n           <span class=\"language__proficiency\" tabindex=\"0\">\n             &nbsp;(${language.proficiency})\n           </span>\n         `;\n      }\n\n      languageItems.push(html`\n         <div class=\"token-list__item language\">\n           <span class=\"language__title\" tabindex=\"0\">${language.displayName}</span>\n           ${proficiency}\n         </div>\n       `);\n    }\n\n    const languageTitle = languageItems.length ? this.strings.LanguagesSubSectionTitle : '';\n\n    return html`\n       <section>\n         <div class=\"section__title\" tabindex=\"0\">${languageTitle}</div>\n         <div class=\"section__content\">\n           <div class=\"token-list\">\n             ${languageItems}\n           </div>\n         </div>\n       </section>\n     `;\n  }\n\n  /**\n   * Render the user's skills\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtProfile\n   */\n  protected renderSkills(): TemplateResult {\n    const { skills } = this._profile;\n\n    if (!skills?.length) {\n      return null;\n    }\n\n    const skillItems: TemplateResult[] = [];\n    for (const skill of skills) {\n      skillItems.push(html`\n         <div class=\"token-list__item skill\" tabindex=\"0\">\n           ${skill.displayName}\n         </div>\n       `);\n    }\n\n    const skillsTitle = skillItems.length ? this.strings.SkillsSubSectionTitle : '';\n\n    return html`\n       <section>\n         <div class=\"section__title\" tabindex=\"0\">${skillsTitle}</div>\n         <div class=\"section__content\">\n           <div class=\"token-list\">\n             ${skillItems}\n           </div>\n         </div>\n       </section>\n     `;\n  }\n\n  /**\n   * Render the user's work experience timeline\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtProfile\n   */\n  protected renderWorkExperience(): TemplateResult {\n    const { positions } = this._profile;\n\n    if (!positions?.length) {\n      return null;\n    }\n\n    const positionItems: TemplateResult[] = [];\n    for (const position of this._profile.positions) {\n      if (position.detail.description || position.detail.jobTitle !== '') {\n        positionItems.push(html`\n           <div class=\"data-list__item work-position\">\n             <div class=\"data-list__item__header\">\n               <div class=\"data-list__item__title\" tabindex=\"0\">${position.detail?.jobTitle}</div>\n               <div class=\"data-list__item__date-range\" tabindex=\"0\">\n                 ${this.getDisplayDateRange(position.detail)}\n               </div>\n             </div>\n             <div class=\"data-list__item__content\">\n               <div class=\"work-position__company\" tabindex=\"0\">\n                 ${position?.detail?.company?.displayName}\n               </div>\n               <div class=\"work-position__location\" tabindex=\"0\">\n                 ${this.displayLocation(position?.detail?.company?.address)}\n               </div>\n             </div>\n           </div>\n         `);\n      }\n    }\n    const workExperienceTitle = positionItems.length ? this.strings.WorkExperienceSubSectionTitle : '';\n\n    return html`\n       <section>\n         <div class=\"section__title\" tabindex=\"0\">${workExperienceTitle}</div>\n         <div class=\"section__content\">\n           <div class=\"data-list\">\n             ${positionItems}\n           </div>\n         </div>\n       </section>\n     `;\n  }\n\n  /**\n   * Render the user's education timeline\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtProfile\n   */\n  protected renderEducation(): TemplateResult {\n    const { educationalActivities } = this._profile;\n\n    if (!educationalActivities?.length) {\n      return null;\n    }\n\n    const positionItems: TemplateResult[] = [];\n    for (const educationalActivity of educationalActivities) {\n      positionItems.push(html`\n         <div class=\"data-list__item educational-activity\">\n           <div class=\"data-list__item__header\">\n             <div class=\"data-list__item__title\" tabindex=\"0\">${educationalActivity.institution.displayName}</div>\n             <div class=\"data-list__item__date-range\" tabindex=\"0\">\n               ${this.getDisplayDateRange(educationalActivity)}\n             </div>\n           </div>\n           ${\n             educationalActivity.program.displayName\n               ? html`<div class=\"data-list__item__content\">\n                  <div class=\"educational-activity__degree\" tabindex=\"0\">\n                  ${educationalActivity.program.displayName}\n                </div>`\n               : nothing\n           }\n         </div>\n       `);\n    }\n\n    const educationTitle = positionItems.length ? this.strings.EducationSubSectionTitle : '';\n\n    return html`\n       <section>\n         <div class=\"section__title\" tabindex=\"0\">${educationTitle}</div>\n         <div class=\"section__content\">\n           <div class=\"data-list\">\n             ${positionItems}\n           </div>\n         </div>\n       </section>\n     `;\n  }\n\n  /**\n   * Render the user's professional interests\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtProfile\n   */\n  protected renderProfessionalInterests(): TemplateResult {\n    if (!this._professionalInterests?.length) {\n      return null;\n    }\n\n    const interestItems: TemplateResult[] = [];\n    for (const interest of this._professionalInterests) {\n      interestItems.push(html`\n         <div class=\"token-list__item interest interest--professional\" tabindex=\"0\">\n           ${interest.displayName}\n         </div>\n       `);\n    }\n\n    const professionalInterests = interestItems.length ? this.strings.professionalInterestsSubSectionTitle : '';\n\n    return html`\n       <section>\n         <div class=\"section__title\" tabindex=\"0\">${professionalInterests}</div>\n         <div class=\"section__content\">\n           <div class=\"token-list\">\n             ${interestItems}\n           </div>\n         </div>\n       </section>\n     `;\n  }\n\n  /**\n   * Render the user's personal interests\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtProfile\n   */\n  protected renderPersonalInterests(): TemplateResult {\n    if (!this._personalInterests?.length) {\n      return null;\n    }\n\n    const interestItems: TemplateResult[] = [];\n    for (const interest of this._personalInterests) {\n      interestItems.push(html`\n         <div class=\"token-list__item interest interest--personal\" tabindex=\"0\">\n           ${interest.displayName}\n         </div>\n       `);\n    }\n\n    const personalInterests = interestItems.length ? this.strings.personalInterestsSubSectionTitle : '';\n\n    return html`\n       <section>\n         <div class=\"section__title\" tabindex=\"0\">${personalInterests}</div>\n         <div class=\"section__content\">\n           <div class=\"token-list\">\n             ${interestItems}\n           </div>\n         </div>\n       </section>\n     `;\n  }\n\n  /**\n   * Render the user's birthday\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtProfile\n   */\n  protected renderBirthday(): TemplateResult {\n    if (!this._birthdayAnniversary?.date) {\n      return null;\n    }\n\n    return html`\n       <section>\n         <div class=\"section__title\" tabindex=\"0\">Birthday</div>\n         <div class=\"section__content\">\n           <div class=\"birthday\">\n             <div class=\"birthday__icon\">\n               ${getSvg(SvgIcon.Birthday)}\n             </div>\n             <div class=\"birthday__date\" tabindex=\"0\">\n               ${this.getDisplayDate(new Date(this._birthdayAnniversary.date))}\n             </div>\n           </div>\n         </div>\n       </section>\n     `;\n  }\n\n  private readonly isPersonalInterest = (interest: PersonInterest): boolean => {\n    return interest.categories?.includes('personal');\n  };\n\n  private readonly isProfessionalInterest = (interest: PersonInterest): boolean => {\n    return interest.categories?.includes('professional');\n  };\n\n  private readonly isBirthdayAnniversary = (anniversary: PersonAnnualEvent): boolean => {\n    return anniversary.type === 'birthday';\n  };\n\n  private getDisplayDate(date: Date): string {\n    return date.toLocaleString('default', {\n      day: 'numeric',\n      month: 'long'\n    });\n  }\n\n  private getDisplayDateRange(event: EducationalActivity): string | symbol {\n    // if startMonthYear is not defined, we do not show the date range (otherwise it will always start with 1970)\n    if (!event.startMonthYear) {\n      return nothing;\n    }\n\n    const start = new Date(event.startMonthYear).getFullYear();\n    // if the start year is 0 or 1 - it's probably an error or a strange \"undefined\"-value\n    if (start === 0 || start === 1) {\n      return nothing;\n    }\n\n    const end = event.endMonthYear ? new Date(event.endMonthYear).getFullYear() : this.strings.currentYearSubtitle;\n    return `${start} — ${end}`;\n  }\n\n  private displayLocation(address: PhysicalAddress | undefined): string | symbol {\n    if (address?.city) {\n      if (address.state) {\n        return `${address.city}, ${address.state}`;\n      }\n      return address.city;\n    }\n    return nothing;\n  }\n\n  private initPostRenderOperations(): void {\n    setTimeout(() => {\n      try {\n        const sections = this.shadowRoot.querySelectorAll('section');\n        sections.forEach(section => {\n          // Perform post render operations per section\n          this.handleTokenOverflow(section);\n        });\n      } catch {\n        // An exception may occur if the component is suddenly removed during post render operations.\n      }\n    }, 0);\n  }\n\n  private handleTokenOverflow(section: HTMLElement): void {\n    const tokenLists = section.querySelectorAll('.token-list');\n    if (!tokenLists?.length) {\n      return;\n    }\n\n    for (const tokenList of Array.from(tokenLists)) {\n      const items = tokenList.querySelectorAll('.token-list__item');\n      if (!items?.length) {\n        continue;\n      }\n\n      let overflowItems: Element[] = null;\n      let itemRect = items[0].getBoundingClientRect();\n      const tokenListRect = tokenList.getBoundingClientRect();\n      const maxtop = itemRect.height * 2 + tokenListRect.top;\n\n      // Use (items.length - 1) to prevent [+1 more] from appearing.\n      for (let i = 0; i < items.length - 1; i++) {\n        itemRect = items[i].getBoundingClientRect();\n        if (itemRect.top > maxtop) {\n          overflowItems = Array.from(items).slice(i, items.length);\n          break;\n        }\n      }\n\n      if (overflowItems) {\n        overflowItems.forEach(i => i.classList.add('overflow'));\n\n        const overflowToken = document.createElement('div');\n        overflowToken.classList.add('token-list__item');\n        overflowToken.classList.add('token-list__item--show-overflow');\n        overflowToken.tabIndex = 0;\n        overflowToken.innerText = `+ ${overflowItems.length} more`;\n\n        // On click or enter(accessibility), remove [+n more] token and reveal the hidden overflow tokens.\n        const revealOverflow = () => {\n          overflowToken.remove();\n          overflowItems.forEach(i => i.classList.remove('overflow'));\n        };\n        overflowToken.addEventListener('click', () => {\n          revealOverflow();\n        });\n        overflowToken.addEventListener('keydown', (e: KeyboardEvent) => {\n          if (e.code === 'Enter') {\n            revealOverflow();\n          }\n        });\n        tokenList.appendChild(overflowToken);\n      }\n    }\n  }\n}\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nexport const strings = {\n  showMoreSectionButton: 'Show more',\n  endOfCard: 'End of the card',\n  quickMessage: 'Send a quick message',\n  expandDetailsLabel: 'Expand details',\n  sendMessageLabel: 'Send message',\n  emailButtonLabel: 'Email',\n  callButtonLabel: 'Call',\n  chatButtonLabel: 'Chat',\n  closeCardLabel: 'Close card',\n  videoButtonLabel: 'Video',\n  goBackLabel: 'Go Back'\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { html, nothing, TemplateResult } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport {\n  MgtTemplatedTaskComponent,\n  Providers,\n  ProviderState,\n  TeamsHelper,\n  mgtHtml,\n  customElementHelper\n} from '@microsoft/mgt-element';\nimport { IGraph } from '@microsoft/mgt-element';\nimport { Presence, User, Person } from '@microsoft/microsoft-graph-types';\n\nimport { findPeople, getEmailFromGraphEntity } from '../../graph/graph.people';\nimport { IDynamicPerson, ViewType } from '../../graph/types';\nimport { getPersonImage } from '../../graph/graph.photos';\nimport { getUserWithPhoto } from '../../graph/graph.userWithPhoto';\nimport { getSvg, SvgIcon } from '../../utils/SvgHelper';\nimport { getUserPresence } from '../../graph/graph.presence';\nimport { getPersonCardGraphData, createChat, sendMessage } from './mgt-person-card.graph';\nimport { MgtPerson, registerMgtPersonComponent } from '../mgt-person/mgt-person';\nimport { styles } from './mgt-person-card-css';\nimport { MgtContact, registerMgtContactComponent } from '../mgt-contact/mgt-contact';\nimport { MgtFileList, registerMgtFileListComponent } from '../mgt-file-list/mgt-file-list';\nimport { MgtMessages, registerMgtMessagesComponent } from '../mgt-messages/mgt-messages';\nimport { MgtOrganization, registerMgtOrganizationComponent } from '../mgt-organization/mgt-organization';\nimport { MgtProfile, registerMgtProfileComponent } from '../mgt-profile/mgt-profile';\nimport { MgtPersonCardState } from './mgt-person-card.types';\nimport { MgtPersonCardConfig } from './MgtPersonCardConfig';\nimport { getMgtPersonCardScopes } from './getMgtPersonCardScopes';\nimport { strings } from './strings';\nimport { isUser } from '../../graph/entityType';\n\nimport '../sub-components/mgt-spinner/mgt-spinner';\n\nexport * from './mgt-person-card.types';\n\nimport {\n  fluentTabs,\n  fluentTab,\n  fluentTabPanel,\n  fluentButton,\n  fluentTextField,\n  fluentCard\n} from '@fluentui/web-components';\nimport { registerFluentComponents } from '../../utils/FluentComponents';\nimport { BasePersonCardSection, CardSection } from '../BasePersonCardSection';\nimport { buildComponentName, registerComponent } from '@microsoft/mgt-element';\nimport { registerMgtSpinnerComponent } from '../sub-components/mgt-spinner/mgt-spinner';\nimport { IHistoryClearer, IExpandable } from './types';\n\ninterface MgtPersonCardStateHistory {\n  state: MgtPersonCardState;\n  personDetails: IDynamicPerson;\n  personImage: string;\n}\n\nexport const registerMgtPersonCardComponent = () => {\n  registerFluentComponents(fluentCard, fluentTabs, fluentTab, fluentTabPanel, fluentButton, fluentTextField);\n  // register self first to avoid infinite loop due to circular ref between person and person card and organization\n  registerComponent('person-card', MgtPersonCard);\n\n  registerMgtSpinnerComponent();\n  // these components newed up rather than created declaratively\n  registerMgtContactComponent();\n  registerMgtOrganizationComponent();\n  registerMgtMessagesComponent();\n  registerMgtFileListComponent();\n  registerMgtProfileComponent();\n  // only register person if not already registered\n  if (!customElements.get(buildComponentName('person'))) registerMgtPersonComponent();\n};\n\n/**\n * Web Component used to show detailed data for a person in the Microsoft Graph\n *\n * @export\n * @class MgtPersonCard\n * @extends {MgtTemplatedComponent}\n *\n * @fires {CustomEvent<null>} expanded - Fired when expanded details section is opened\n *\n * @cssprop --person-card-line1-font-size - {Length} Font size of line 1\n * @cssprop --person-card-line1-font-weight - {FontWeight} Font weight of line 1\n * @cssprop --person-card-line1-line-height - {Length} Line height of line 1\n * @cssprop --person-card-line2-font-size - {Length} Font size of line 2\n * @cssprop --person-card-line2-font-weight - {FontWeight} Font weight of line 2\n * @cssprop --person-card-line2-line-height - {Length} Line height of line 2\n * @cssprop --person-card-line3-font-size - {Length} Font size of line 3\n * @cssprop --person-card-line3-font-weight - {FontWeight} Font weight of line 3\n * @cssprop --person-card-line3-line-height - {Length} Line height of line 3\n * @cssprop --person-card-avatar-size - {Length} Width and height of the avatar. Default is 75px\n * @cssprop --person-card-details-left-spacing - {Length} The space between the avatar and the person details. Default is 15px\n * @cssprop --person-card-avatar-top-spacing - {Length} The margin top of the avatar in person-card component\n * @cssprop --person-card-details-bottom-spacing - {Length} The margin bottom of the person details in person-card component\n * @cssprop --person-card-base-icons-left-spacing - {Length} The margin-inline-start of the base-icons in person-card component\n * @cssprop --person-card-background-color - {Color} The color of the person-card-component\n * @cssprop --person-card-expanded-background-color-hover - {Color} The hover color of the expanded details button of the person card component\n * @cssprop --person-card-nav-back-arrow-hover-color - {Color} The hover color of the back arrow of the person card component\n * @cssprop --person-card-icon-color - {Color} The color of the icons in the person card component\n * @cssprop --person-card-icon-hover-color - {Color} The hover color of the icons in the person card component\n * @cssprop --person-card-show-more-color - {Color} The color of the show more text in the person card component\n * @cssprop --person-card-show-more-hover-color - {Color} The hover color of the show more text in person card component\n * @cssprop --person-card-fluent-background-color - {Color} The background color of the fluent buttons in person card component\n * @cssprop --person-card-line1-text-color - {Color} The color of line 1 in person card\n * @cssprop --person-card-line2-text-color - {Color} The color of line 2 in person card\n * @cssprop --person-card-line3-text-color - {Color} The color of line 3 in person card\n * @cssprop --person-card-fluent-background-color-hover - {Color} The hover background color of the fluent buttons in person card component\n * @cssprop --person-card-chat-input-hover-color - {Color} The chat input hover color\n * @cssprop --person-card-chat-input-focus-color - {Color} The chat input focus color\n * @cssprop --contact-title-color - {Color} The color of the contact title in the contact section of the person card component\n * @cssprop --contact-value-color - {Color} The color of the contact value in the contact section of the person card component\n * @cssprop --contact-link-color - {Color} The color of the contact link in the contact section of the person card component\n * @cssprop --contact-link-hover-color - {Color} The hover color of the contact link in the contact section of the person card component\n * @cssprop --contact-background-color - {Color} The background color of the contact section in person card component\n * @cssprop --contact-copy-icon-color - {Color} The color of the copy icon in the contact section of the person card component\n * @cssprop --message-subject-font-size - {Length} The font size of the message subject in the message section of the person card component\n * @cssprop --message-subject-font-weight - {FontWeight} The font weight of the message subject in the message section of the person card component\n * @cssprop --message-subject-line-height - {Length} The line height of the message subject in the message section of the person card component\n * @cssprop --message-from-font-size - {Length} The font size of the message sender in the message section of the person card component\n * @cssprop --message-from-font-weight - {FontWeight} The font weight of the message sender in the message section of the person card component\n * @cssprop --message-subject-color - {Color} The color of the message subject in the message section of the person card component\n * @cssprop --message-from-color - {Color} The color of the message sender in the message section of the person card component\n * @cssprop --message-color - {Color} The color of the message in the message section of the person card component\n * @cssprop --message-hover-color - {Color} The hover color of the message section of the person card component\n * @cssprop --message-date-color - {Color} The color of the message date in the message section of the person card component\n * @cssprop --message-from-line-height - {Length} The line height of the message sender in the message section of the person card component\n * @cssprop --profile-background-color - {Color} The background color of the profile section in the person card component\n * @cssprop --profile-title-color - {Color} The color of the profile title in the profile section of the person card component\n * @cssprop --profile-section-title-color - {Color} The color of the profile section title in the profile section of the person card component\n * @cssprop --profile-token-item-color - {Color} The color of the profile token item in the profile section of the person card component\n * @cssprop --profile-token-item-background-color - {Color} The background color of the profile token item in the profile section of the person card component\n * @cssprop --profile-token-overflow-color - {Color} The color of the profile token overflow in the profile section of the person card component\n * @cssprop --organization-active-org-member-border-color - {Color} The border color of the active organization member in the organization section of the person card component\n * @cssprop --organization-active-org-member-target-background-color - {Color} The background color of the active organization member target in the organization section of the person card component\n * @cssprop --organization-coworker-hover-color - {Color} The hover color of the coworker in the organization section of the person card component\n * @cssprop --organization-coworker-border-color - {Color} The border color of the coworker in the organization section of the person card component\n * @cssprop --organization-coworker-person-avatar-size - {Length} The avatar size of the coworker in the organization section of the person card component\n * @cssprop --organization-member-person-avatar-size - {Length} The avatar size of the member in the organization section of the person card component\n * @cssprop --organization-direct-report-person-avatar-size - {Length} The avatar size of the direct report in the organization section of the person card component\n * @cssprop --organization-title-color - {Color} The color of the organization title in the organization section of the person card component\n * @cssprop --organization-sub-title-color - {Color} The color of the organization sub-title in the organization section of the person card component\n * @cssprop --organization-hover-color - {Color} The hover color of the organization section of the person card component\n * @cssprop --profile-background-color - {Color} The background color of the profile section in the person card component\n * @cssprop --profile-title-color - {Color} The color of the profile title in the profile section of the person card component\n * @cssprop --profile-section-title-color - {Color} The color of the profile section title of the person card component\n * @cssprop --profile-token-item-color - {Color} The color of the token item in the profile section of the person card component\n * @cssprop --profile-token-item-background-color - {Color} The background color of the token item in the profile section of the person card component\n * @cssprop --profile-token-overflow-color - {Color} The color of the token overflow in the profile section of the person card component\n *\n */\nexport class MgtPersonCard extends MgtTemplatedTaskComponent implements IHistoryClearer, IExpandable {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  /**\n   * Strings to use for localization\n   *\n   * @readonly\n   * @protected\n   * @memberof MgtPersonCard\n   */\n  protected get strings() {\n    return strings;\n  }\n\n  /**\n   * Get the scopes required for the person card\n   * The scopes depend on what sections are shown\n   *\n   * Use the `MgtPersonCard.config` object to configure\n   * what sections are shown\n   *\n   * @static\n   * @return {*}  {string[]}\n   * @memberof MgtPersonCard\n   */\n  public static get requiredScopes(): string[] {\n    return getMgtPersonCardScopes();\n  }\n\n  /**\n   * Set the person details to render\n   *\n   * @type {IDynamicPerson}\n   * @memberof MgtPersonCard\n   */\n  public get personDetails(): IDynamicPerson {\n    return this._personDetails;\n  }\n  @property({\n    attribute: 'person-details',\n    type: Object\n  })\n  public set personDetails(value: IDynamicPerson) {\n    if (this._personDetails === value) {\n      return;\n    }\n\n    this._personDetails = value;\n    this.personImage = this.getImage();\n  }\n\n  private _personQuery: string;\n  /**\n   * allows developer to define name of person for component\n   *\n   * @type {string}\n   */\n  public get personQuery(): string {\n    return this._personQuery;\n  }\n  @property({\n    attribute: 'person-query'\n  })\n  public set personQuery(value: string) {\n    if (this._personQuery === value) {\n      return;\n    }\n    this._personQuery = value;\n    this.personDetails = null;\n    this._cardState = null;\n  }\n\n  /**\n   * allows the locking of navigation using tabs to not flow out of the card section\n   *\n   * @type {boolean}\n   */\n  @property({\n    attribute: 'lock-tab-navigation',\n    type: Boolean\n  })\n  public lockTabNavigation: boolean;\n\n  /**\n   * user-id property allows developer to use id value for component\n   *\n   * @type {string}\n   */\n  public get userId(): string {\n    return this._userId;\n  }\n  @property({\n    attribute: 'user-id'\n  })\n  public set userId(value: string) {\n    if (value === this._userId) {\n      return;\n    }\n    this._userId = value;\n    this.personDetails = null;\n    this._cardState = null;\n  }\n\n  /**\n   * Set the image of the person\n   * Set to '@' to look up image from the graph\n   *\n   * @type {string}\n   * @memberof MgtPersonCard\n   */\n  @property({\n    attribute: 'person-image',\n    type: String\n  })\n  public personImage: string;\n\n  /**\n   * Sets whether the person image should be fetched\n   * from the Microsoft Graph based on the personDetails\n   * provided by the user\n   *\n   * @type {boolean}\n   * @memberof MgtPerson\n   */\n  @property({\n    attribute: 'fetch-image',\n    type: Boolean\n  })\n  public fetchImage: boolean;\n\n  /**\n   * Gets or sets whether expanded details section is rendered\n   *\n   * @type {boolean}\n   * @memberof MgtPersonCard\n   */\n  @property({\n    attribute: 'is-expanded',\n    type: Boolean\n  })\n  public isExpanded: boolean;\n\n  /**\n   * Gets or sets whether person details should be inherited from an mgt-person parent\n   * Useful when used as template in an mgt-person component\n   *\n   * @type {boolean}\n   * @memberof MgtPersonCard\n   */\n  @property({\n    attribute: 'inherit-details',\n    type: Boolean\n  })\n  public inheritDetails: boolean;\n\n  /**\n   * determines if person card component renders presence\n   *\n   * @type {boolean}\n   */\n  @property({\n    attribute: 'show-presence',\n    type: Boolean\n  })\n  public showPresence: boolean;\n\n  /**\n   * Gets or sets presence of person\n   *\n   * @type {MicrosoftGraph.Presence}\n   * @memberof MgtPerson\n   */\n  @property({\n    attribute: 'person-presence',\n    type: Object\n  })\n  public personPresence: Presence;\n\n  @state()\n  private isSendingMessage = false;\n\n  /**\n   * The subsections for display in the lower part of the card\n   *\n   * @protected\n   * @type {any[]}\n   * @memberof MgtPersonCard\n   */\n  protected sections: CardSection[];\n\n  @state() private _cardState: MgtPersonCardState;\n  @state() private _isStateLoading: boolean;\n\n  private _history: MgtPersonCardStateHistory[];\n  private _chatInput: string;\n  @state()\n  private _currentSection: CardSection;\n  private _personDetails: IDynamicPerson;\n  private _me: User;\n  private _smallView: boolean;\n  private _windowHeight;\n\n  private _userId: string;\n  private _graph: IGraph;\n\n  private get internalPersonDetails(): IDynamicPerson {\n    return this._cardState?.person || this.personDetails;\n  }\n\n  constructor() {\n    super();\n    this._chatInput = '';\n    this._currentSection = null;\n    this._history = [];\n    this.sections = [];\n    this._graph = null;\n  }\n\n  /**\n   * Navigate the card to a different person.\n   *\n   * @protected\n   * @memberof MgtPersonCard\n   */\n  public navigate(person: IDynamicPerson): void {\n    this._history.push({\n      personDetails: this.personDetails,\n      personImage: this.getImage(),\n      state: this._cardState\n    });\n\n    this.personDetails = person;\n    this._cardState = null;\n    this.personImage = null;\n    this._currentSection = null;\n    this.sections = [];\n    this._chatInput = '';\n  }\n\n  /**\n   * Navigate the card back to the previous person\n   *\n   * @returns {void}\n   * @memberof MgtPersonCard\n   */\n  public goBack = (): void => {\n    if (!this._history?.length) {\n      return;\n    }\n\n    const historyState = this._history.pop();\n    this._currentSection = null;\n\n    // resets to first tab being selected\n    const firstTab: HTMLElement = this.renderRoot.querySelector('fluent-tab');\n    if (firstTab) {\n      firstTab.click();\n    }\n    this._cardState = historyState.state;\n    this._personDetails = historyState.state.person;\n    this.personImage = historyState.personImage;\n    this.loadSections();\n  };\n\n  /**\n   * Navigate the card back to first person and clear history\n   *\n   * @returns {void}\n   * @memberof MgtPersonCard\n   */\n  public clearHistory(): void {\n    this._currentSection = null;\n\n    if (!this._history?.length) {\n      return;\n    }\n\n    const historyState = this._history[0];\n    this._history = [];\n\n    this._cardState = historyState.state;\n    this._personDetails = historyState.personDetails;\n    this.personImage = historyState.personImage;\n    this.loadSections();\n  }\n\n  protected args(): unknown[] {\n    return [this.providerState, this.personDetails, this.personQuery, this.personImage, this.userId];\n  }\n\n  /**\n   * Invoked from the base class when the loadState promise has completed.\n   */\n  protected readonly renderContent = () => {\n    // Handle no data\n    if (!this.internalPersonDetails) {\n      return this.renderNoData();\n    }\n\n    const person = this.internalPersonDetails;\n    const image = this.getImage();\n\n    // Check for a default template.\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/dot-notation\n    if (this.hasTemplate('default')) {\n      return this.renderTemplate('default', {\n        person: this.internalPersonDetails,\n        personImage: image\n      });\n    }\n\n    let ariaLabel: string;\n\n    ariaLabel = this.strings.closeCardLabel;\n\n    const closeCardTemplate = this.isExpanded\n      ? html`\n           <div class=\"close-card-container\">\n             <fluent-button \n              appearance=\"lightweight\" \n              class=\"close-button\" \n              aria-label=${ariaLabel}\n              @click=${this.closeCard} >\n               ${getSvg(SvgIcon.Close)}\n             </fluent-button>\n           </div>\n         `\n      : null;\n\n    ariaLabel = this.strings.goBackLabel;\n    const navigationTemplate = this._history?.length\n      ? html`\n            <div class=\"nav\">\n              <fluent-button \n                appearance=\"lightweight\"\n                class=\"nav__back\" \n                aria-label=${ariaLabel} \n                @keydown=${this.handleGoBack}\n                @click=${this.goBack}>${getSvg(SvgIcon.Back)}\n               </fluent-button>\n            </div>\n          `\n      : null;\n\n    // Check for a person-details template\n    let personDetailsTemplate = this.renderTemplate('person-details', {\n      person: this.internalPersonDetails,\n      personImage: image\n    });\n    if (!personDetailsTemplate) {\n      const personTemplate = this.renderPerson();\n      const contactIconsTemplate = this.renderContactIcons(person);\n\n      personDetailsTemplate = html`\n         ${personTemplate} ${contactIconsTemplate}\n       `;\n    }\n\n    const expandedDetailsTemplate = this.isExpanded ? this.renderExpandedDetails() : this.renderExpandedDetailsButton();\n    this._windowHeight =\n      window.innerHeight && document.documentElement.clientHeight\n        ? Math.min(window.innerHeight, document.documentElement.clientHeight)\n        : window.innerHeight || document.documentElement.clientHeight;\n\n    if (this._windowHeight < 250) {\n      this._smallView = true;\n    }\n    const tabLocker = this.lockTabNavigation\n      ? html`<div @keydown=${this.handleEndOfCard} aria-label=${this.strings.endOfCard} tabindex=\"0\" id=\"end-of-container\"></div>`\n      : html``;\n    return html`\n      <div class=\"root\" dir=${this.direction}>\n        <div class=${classMap({ small: this._smallView })}>\n          ${navigationTemplate}\n          ${closeCardTemplate}\n          <div class=\"person-details-container\">${personDetailsTemplate}</div>\n          <div class=\"expanded-details-container\">${expandedDetailsTemplate}</div>\n          ${tabLocker}\n        </div>\n      </div>\n     `;\n  };\n\n  private readonly handleEndOfCard = (e: KeyboardEvent) => {\n    if (e && e.code === 'Tab') {\n      const endOfCardEl = this.renderRoot.querySelector<HTMLElement>('#end-of-container');\n      if (endOfCardEl) {\n        endOfCardEl.blur();\n        const imageCardEl = this.renderRoot.querySelector<HTMLElement>('mgt-person');\n        if (imageCardEl) {\n          imageCardEl.focus();\n        }\n      }\n    }\n  };\n\n  /**\n   * Render the state when no data is available.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected closeCard = () => {\n    // reset tabs\n    this.updateCurrentSection(null);\n    this.isExpanded = false;\n  };\n\n  /**\n   * Render the state when no data is available.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderNoData(): TemplateResult {\n    return this.renderTemplate('no-data', null) || html``;\n  }\n\n  /**\n   * Render a display image for the person.\n   *\n   * @protected\n   * @param {*} image\n   * @memberof MgtPersonCard\n   */\n  protected renderPerson(): TemplateResult {\n    return mgtHtml`\n      <mgt-person\n        tabindex=\"0\"\n        class=\"person-image\"\n        .personDetails=${this.internalPersonDetails}\n        .personImage=${this.getImage()}\n        .personPresence=${this.personPresence}\n        .showPresence=${this.showPresence}\n        .view=${ViewType.threelines}\n      ></mgt-person>\n    `;\n  }\n\n  /**\n   * Render person subtitle.\n   *\n   * @protected\n   * @param {IDynamicPerson} person\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderPersonSubtitle(person?: IDynamicPerson): TemplateResult {\n    person = person || this.internalPersonDetails;\n    if (!isUser(person) || !person.department) {\n      return;\n    }\n    return html`\n       <div class=\"department\">${person.department}</div>\n     `;\n  }\n\n  /**\n   * Render the various icons for contacting the person.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderContactIcons(person?: IDynamicPerson): TemplateResult {\n    person = person || this.internalPersonDetails;\n    const userPerson = person as User;\n\n    let ariaLabel: string;\n\n    // Email\n    let email: TemplateResult;\n    if (getEmailFromGraphEntity(person)) {\n      ariaLabel = `${this.strings.emailButtonLabel} ${person.displayName}`;\n      email = html`\n        <fluent-button class=\"icon\"\n          aria-label=${ariaLabel}\n          @click=${this.emailUser}>\n          ${getSvg(SvgIcon.SmallEmail)}\n        </fluent-button>\n      `;\n    }\n\n    // Chat\n    let chat: TemplateResult;\n    if (userPerson?.userPrincipalName) {\n      ariaLabel = `${this.strings.chatButtonLabel} ${person.displayName}`;\n      chat = html`\n        <fluent-button class=\"icon\"\n          aria-label=${ariaLabel}\n          @click=${this.chatUser}>\n          ${getSvg(SvgIcon.SmallChat)}\n        </fluent-button>\n       `;\n    }\n\n    // Video\n\n    ariaLabel = `${this.strings.videoButtonLabel} ${person.displayName}`;\n    const video: TemplateResult = html`\n      <fluent-button class=\"icon\"\n        aria-label=${ariaLabel}\n        @click=${this.videoCallUser}>\n        ${getSvg(SvgIcon.Video)}\n      </fluent-button>\n    `;\n\n    // Call\n    let call: TemplateResult;\n    if (userPerson.userPrincipalName) {\n      ariaLabel = `${this.strings.callButtonLabel} ${person.displayName}`;\n      call = html`\n         <fluent-button class=\"icon\"\n          aria-label=${ariaLabel}\n          @click=${this.callUser}>\n          ${getSvg(SvgIcon.Call)}\n        </fluent-button>\n       `;\n    }\n\n    return html`\n       <div class=\"base-icons\">\n         ${email} ${chat} ${video} ${call}\n       </div>\n     `;\n  }\n\n  /**\n   * Render the button used to expand the expanded details.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderExpandedDetailsButton(): TemplateResult {\n    return html`\n      <fluent-button\n        aria-label=${this.strings.expandDetailsLabel}\n        class=\"expanded-details-button\"\n        @click=${this.showExpandedDetails}\n      >\n        ${getSvg(SvgIcon.ExpandDown)}\n      </fluent-button>\n     `;\n  }\n\n  /**\n   * Render expanded details.\n   *\n   * @protected\n   * @param {IDynamicPerson} [person]\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderExpandedDetails(): TemplateResult {\n    if (!this._cardState && this._isStateLoading) {\n      return mgtHtml`\n         <div class=\"loading\">\n           <mgt-spinner></mgt-spinner>\n         </div>\n       `;\n    }\n    // load sections when details are expanded\n    // when not singed in\n    const provider = Providers.globalProvider;\n    if (provider.state === ProviderState.SignedOut) {\n      this.loadSections();\n    }\n\n    const sectionNavTemplate = this.renderSectionNavigation();\n\n    return html`\n      <div class=\"section-nav\">\n        ${sectionNavTemplate}\n      </div>\n      <hr class=\"divider\"/>\n      <div\n        class=\"section-host ${this._smallView ? 'small' : ''} ${this._smallView ? 'small' : ''}\"\n        @wheel=${(e: WheelEvent) => this.handleSectionScroll(e)}\n        tabindex=0\n      ></div>\n    `;\n  }\n\n  /**\n   * Render the navigation ribbon for subsections\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderSectionNavigation(): TemplateResult {\n    if (!this.sections || (this.sections.length < 2 && !this.hasTemplate('additional-details'))) {\n      return;\n    }\n\n    const currentSectionIndex = this._currentSection ? this.sections.indexOf(this._currentSection) : -1;\n\n    const additionalSectionTemplates = this.sections.map((section, i) => {\n      const name = section.tagName.toLowerCase();\n      const classes = classMap({\n        active: i === currentSectionIndex,\n        'section-nav__icon': true\n      });\n\n      return html`\n        <fluent-tab\n          id=\"${name}-Tab\"\n          class=${classes}\n          slot=\"tab\"\n          @keyup=\"${() => this.updateCurrentSection(section)}\"\n          @click=${() => this.updateCurrentSection(section)}\n        >\n          ${section.renderIcon()}\n        </fluent-tab>\n      `;\n    });\n\n    const additionalPanelTemplates = this.sections.map(section => {\n      return html`\n        <fluent-tab-panel slot=\"tabpanel\">\n          <div class=\"inserted\">\n            <div class=\"title\">${section.cardTitle}</div>\n            ${this._currentSection ? section.asFullView() : null}\n          </div>\n        </fluent-tab-panel>\n      `;\n    });\n\n    const overviewClasses = classMap({\n      active: currentSectionIndex === -1,\n      'section-nav__icon': true,\n      overviewTab: true\n    });\n\n    return html`\n      <fluent-tabs\n        orientation=\"horizontal\"\n        activeindicator\n        @wheel=${(e: WheelEvent) => this.handleSectionScroll(e)}\n      >\n        <fluent-tab\n          class=\"${overviewClasses}\"\n          slot=\"tab\"\n          @keyup=\"${() => this.updateCurrentSection(null)}\"\n          @click=${() => this.updateCurrentSection(null)}\n        >\n          <div>${getSvg(SvgIcon.Overview)}</div>\n        </fluent-tab>\n        ${additionalSectionTemplates}\n        <fluent-tab-panel slot=\"tabpanel\" >\n          <div class=\"overview-panel\">${!this._currentSection ? this.renderOverviewSection() : null}</div>\n        </fluent-tab-panel>\n        ${additionalPanelTemplates}\n      </fluent-tabs>\n    `;\n  }\n\n  /**\n   * Render the default section with compact views for each subsection.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderOverviewSection(): TemplateResult {\n    const compactTemplates = this.sections.map(\n      (section: BasePersonCardSection) => html`\n        <div class=\"section\">\n          <div class=\"section__header\">\n            <div class=\"section__title\" tabindex=0>${section.displayName}</div>\n              <fluent-button\n                appearance=\"lightweight\"\n                class=\"section__show-more\"\n                @click=${() => this.updateCurrentSection(section)}\n              >\n                ${this.strings.showMoreSectionButton}\n              </fluent-button>\n          </div>\n          <div class=\"section__content\">${section.asCompactView()}</div>\n        </div>\n      `\n    );\n\n    const additionalDetails = this.renderTemplate('additional-details', {\n      person: this.internalPersonDetails,\n      personImage: this.getImage(),\n      state: this._cardState\n    });\n    if (additionalDetails) {\n      compactTemplates.splice(\n        1,\n        0,\n        html`\n           <div class=\"section\">\n             <div class=\"additional-details\">${additionalDetails}</div>\n           </div>\n         `\n      );\n    }\n\n    return html`\n       <div class=\"sections\">\n          ${this.renderMessagingSection()}\n          ${compactTemplates}\n       </div>\n     `;\n  }\n\n  /**\n   * Render the actively selected section.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderCurrentSection(): TemplateResult {\n    if (!this.sections?.length && !this.hasTemplate('additional-details')) {\n      return;\n    }\n\n    if (this.sections.length === 1 && !this.hasTemplate('additional-details')) {\n      return html`\n         ${this.sections[0].asFullView()}\n       `;\n    }\n\n    if (!this._currentSection) {\n      return this.renderOverviewSection();\n    }\n\n    return html`\n       ${this._currentSection.asFullView()}\n     `;\n  }\n\n  /**\n   * Render the messaging section.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderMessagingSection() {\n    const person = this.personDetails as User;\n    const user = this._me.userPrincipalName;\n    const chatInput = this._chatInput;\n    if (person?.userPrincipalName === user) {\n      return;\n    } else {\n      return MgtPersonCardConfig.isSendMessageVisible\n        ? html`\n      <div class=\"message-section\">\n        <fluent-text-field\n          autocomplete=\"off\"\n          appearance=\"outline\"\n          placeholder=\"${this.strings.quickMessage}\"\n          .value=${chatInput}\n          @input=${(e: Event) => {\n            this._chatInput = (e.target as HTMLInputElement).value;\n            this.requestUpdate();\n          }}\n          @keydown=\"${(e: KeyboardEvent) => this.sendQuickMessageOnEnter(e)}\">\n        </fluent-text-field>\n        <fluent-button class=\"send-message-icon\"\n          aria-label=${this.strings.sendMessageLabel}\n          @click=${this.sendQuickMessage}\n          ?disabled=${this.isSendingMessage}>\n          ${!this.isSendingMessage ? getSvg(SvgIcon.Send) : getSvg(SvgIcon.Confirmation)}\n        </fluent-button>\n      </div>\n      `\n        : nothing;\n    }\n  }\n\n  /**\n   * load state into the component\n   *\n   * @protected\n   * @returns\n   * @memberof MgtPersonCard\n   */\n  protected async loadState() {\n    if (this._cardState) {\n      return;\n    }\n\n    if (!this.personDetails && this.inheritDetails) {\n      // User person details inherited from parent tree\n      let parent = this.parentElement;\n      while (parent && parent.tagName !== `${customElementHelper.prefix}-PERSON`.toUpperCase()) {\n        parent = parent.parentElement;\n      }\n\n      const parentPerson: IDynamicPerson =\n        // eslint-disable-next-line @typescript-eslint/dot-notation\n        (parent as MgtPerson).personDetails || (parent as MgtPerson)['personDetailsInternal'];\n\n      if (parent && parentPerson) {\n        this.personDetails = parentPerson;\n        this.personImage = (parent as MgtPerson).personImage;\n      }\n    }\n\n    const provider = Providers.globalProvider;\n\n    // check if user is signed in\n    if (!provider || provider.state !== ProviderState.SignedIn) {\n      return;\n    }\n\n    const graph = provider.graph.forComponent(this);\n    this._graph = graph;\n\n    this._isStateLoading = true;\n\n    if (!this._me) {\n      this._me = await Providers.me();\n    }\n\n    // check if personDetail already populated\n    if (this.personDetails) {\n      const user = this.personDetails;\n      let id: string;\n      if (isUser(user)) {\n        id = user.userPrincipalName || user.id;\n      }\n\n      // if we have an id but no email, we should get data from the graph\n      // in some graph calls, the user object does not contain the email\n      if (id && !getEmailFromGraphEntity(user)) {\n        const person = await getUserWithPhoto(graph, id);\n        this.personDetails = person;\n        this.personImage = this.getImage();\n      }\n    } else if (this.userId || this.personQuery === 'me') {\n      // Use userId or 'me' query to get the person and image\n      const person = await getUserWithPhoto(graph, this.userId);\n      this.personDetails = person;\n      this.personImage = this.getImage();\n    } else if (this.personQuery) {\n      // Use the personQuery to find our person.\n      const people = await findPeople(graph, this.personQuery, 1);\n\n      if (people?.length) {\n        this.personDetails = people[0];\n        await getPersonImage(graph, this.personDetails, MgtPersonCardConfig.useContactApis).then(image => {\n          if (image) {\n            this.personDetails.personImage = image;\n            this.personImage = image;\n          }\n        });\n      }\n    }\n\n    // populate presence\n    const defaultPresence = {\n      activity: 'Offline',\n      availability: 'Offline',\n      id: null\n    };\n    if (!this.personPresence && this.showPresence) {\n      try {\n        if (this.personDetails?.id) {\n          this.personPresence = await getUserPresence(graph, this.personDetails.id);\n        } else {\n          this.personPresence = defaultPresence;\n        }\n      } catch (_) {\n        // set up a default Presence in case beta api changes or getting error code\n        this.personPresence = defaultPresence;\n      }\n    }\n\n    // populate state\n    if (this.personDetails?.id) {\n      this._cardState = await getPersonCardGraphData(graph, this.personDetails, this._me === this.personDetails.id);\n    }\n\n    this.loadSections();\n\n    this._isStateLoading = false;\n  }\n\n  /**\n   * Send a chat message to the user from the quick message input.\n   *\n   * @protected\n   * @returns {void}\n   * @memberof MgtPersonCard\n   */\n  protected sendQuickMessage = async (): Promise<void> => {\n    const message = this._chatInput.trim();\n    if (!message?.length) {\n      return;\n    }\n    const person = this.personDetails as User;\n    const user = this._me.userPrincipalName;\n    this.isSendingMessage = true;\n\n    const chat = await createChat(this._graph, person.userPrincipalName, user);\n\n    const messageData = {\n      body: {\n        content: message\n      }\n    };\n    await sendMessage(this._graph, chat.id, messageData);\n    this.isSendingMessage = false;\n    this.clearInputData();\n  };\n\n  /**\n   * Use the mailto: protocol to initiate a new email to the user.\n   *\n   * @protected\n   * @memberof MgtPersonCard\n   */\n  protected emailUser = () => {\n    const user = this.internalPersonDetails;\n    if (user) {\n      const email = getEmailFromGraphEntity(user);\n      if (email) {\n        window.open('mailto:' + email, '_blank', 'noreferrer');\n      }\n    }\n  };\n\n  private get hasPhone(): boolean {\n    const user = this.personDetails as User;\n    const person = this.personDetails as microsoftgraph.Person;\n    return Boolean(user?.businessPhones?.length) || Boolean(person?.phones?.length);\n  }\n\n  /**\n   * Use the tel: protocol to initiate a new call to the user.\n   *\n   * @protected\n   * @memberof MgtPersonCard\n   */\n  protected callUser = () => {\n    const user = this.personDetails as User;\n    const person = this.personDetails as microsoftgraph.Person;\n\n    if (user?.businessPhones?.length) {\n      const phone = user.businessPhones[0];\n      if (phone) {\n        window.open('tel:' + phone, '_blank', 'noreferrer');\n      }\n    } else if (person?.phones?.length) {\n      const businessPhones = this.getPersonBusinessPhones(person);\n      const phone = businessPhones[0];\n      if (phone) {\n        window.open('tel:' + phone, '_blank', 'noreferrer');\n      }\n    }\n  };\n\n  /**\n   * Initiate a chat message to the user via deeplink.\n   *\n   * @protected\n   * @memberof MgtPersonCard\n   */\n  protected chatUser = (message: string = null) => {\n    const user = this.personDetails as User;\n    if (user?.userPrincipalName) {\n      const users: string = user.userPrincipalName;\n\n      let url = `https://teams.microsoft.com/l/chat/0/0?users=${users}`;\n      if (message?.length) {\n        url += `&message=${message}`;\n      }\n\n      const openWindow = () => window.open(url, '_blank', 'noreferrer');\n\n      if (TeamsHelper.isAvailable) {\n        TeamsHelper.executeDeepLink(url, (status: boolean) => {\n          if (!status) {\n            openWindow();\n          }\n        });\n      } else {\n        openWindow();\n      }\n    }\n  };\n\n  /**\n   * Initiate a teams call with video with a user via deeplink.\n   *\n   * @protected\n   * @memberof MgtPersonCard\n   */\n  protected videoCallUser = () => {\n    const user = this.personDetails as User;\n    if (user?.userPrincipalName) {\n      const users: string = user.userPrincipalName;\n\n      const url = `https://teams.microsoft.com/l/call/0/0?users=${users}&withVideo=true`;\n\n      const openWindow = () => window.open(url, '_blank');\n\n      if (TeamsHelper.isAvailable) {\n        TeamsHelper.executeDeepLink(url, (status: boolean) => {\n          if (!status) {\n            openWindow();\n          }\n        });\n      } else {\n        openWindow();\n      }\n    }\n  };\n\n  /**\n   * Display the expanded details panel.\n   *\n   * @protected\n   * @memberof MgtPersonCard\n   */\n  protected showExpandedDetails = () => {\n    const root = this.renderRoot.querySelector('.root');\n    if (root?.animate) {\n      // play back\n      root.animate(\n        [\n          {\n            height: 'auto',\n            transformOrigin: 'top left'\n          },\n          {\n            height: 'auto',\n            transformOrigin: 'top left'\n          }\n        ],\n        {\n          duration: 1000,\n          easing: 'ease-in-out',\n          fill: 'both'\n        }\n      );\n    }\n    this.isExpanded = true;\n\n    this.fireCustomEvent('expanded', null, true);\n  };\n\n  private loadSections() {\n    this.sections = [];\n\n    if (!this.internalPersonDetails) {\n      return;\n    }\n\n    const contactSections = new MgtContact(this.internalPersonDetails as User);\n    if (contactSections.hasData) {\n      this.sections.push(contactSections);\n    }\n\n    if (!this._cardState) {\n      return;\n    }\n\n    const { person, directReports, messages, files, profile } = this._cardState;\n\n    if (MgtPersonCardConfig.sections.organization && (person?.manager || directReports?.length)) {\n      this.sections.push(new MgtOrganization(this._cardState, this._me));\n    }\n\n    if (MgtPersonCardConfig.sections.mailMessages && messages?.length) {\n      this.sections.push(new MgtMessages(messages));\n    }\n\n    if (MgtPersonCardConfig.sections.files && files?.length) {\n      this.sections.push(new MgtFileList());\n    }\n\n    if (MgtPersonCardConfig.sections.profile && profile) {\n      const profileSection = new MgtProfile(profile);\n      if (profileSection.hasData) {\n        this.sections.push(profileSection);\n      }\n    }\n  }\n\n  private getImage(): string {\n    if (this.personImage) {\n      return this.personImage;\n    }\n\n    const person = this.personDetails;\n    return person?.personImage ? person.personImage : null;\n  }\n\n  private clearInputData() {\n    this._chatInput = '';\n    this.requestUpdate();\n  }\n\n  private getPersonBusinessPhones(person: Person): string[] {\n    const phones = person.phones;\n    const businessPhones: string[] = [];\n    for (const p of phones) {\n      if (p.type === 'business') {\n        businessPhones.push(p.number);\n      }\n    }\n    return businessPhones;\n  }\n\n  private updateCurrentSection(section: CardSection) {\n    if (section) {\n      const sectionName = section.tagName.toLowerCase();\n      const tabs: HTMLElement = this.renderRoot.querySelector(`#${sectionName}-Tab`);\n      tabs.click();\n    }\n    const panels = this.renderRoot.querySelectorAll('fluent-tab-panel');\n    for (const target of panels) {\n      target.scrollTop = 0;\n    }\n    this._currentSection = section;\n    this.requestUpdate();\n  }\n\n  private handleSectionScroll(e: WheelEvent) {\n    const panels = this.renderRoot.querySelectorAll('fluent-tab-panel');\n    for (const target of panels) {\n      if (target) {\n        if (\n          !(e.deltaY < 0 && target.scrollTop === 0) &&\n          !(e.deltaY > 0 && target.clientHeight + target.scrollTop >= target.scrollHeight - 1)\n        ) {\n          e.stopPropagation();\n        }\n      }\n    }\n  }\n\n  private readonly sendQuickMessageOnEnter = (e: KeyboardEvent) => {\n    if (e.code === 'Enter') {\n      void this.sendQuickMessage();\n    }\n  };\n\n  private readonly handleGoBack = (e: KeyboardEvent) => {\n    if (e.code === 'Enter') {\n      void this.goBack();\n    }\n  };\n}\n","import { MgtPersonCardConfig } from './MgtPersonCardConfig';\n\n/**\n * Scopes used to fetch data for the mgt-person-card component\n *\n * @static\n * @return {*}  {string[]}\n * @memberof MgtPersonCard\n */\n\nexport const getMgtPersonCardScopes = (): string[] => {\n  const scopes: string[] = [];\n\n  if (MgtPersonCardConfig.sections.files) {\n    scopes.push('Sites.Read.All');\n  }\n\n  if (MgtPersonCardConfig.sections.mailMessages) {\n    scopes.push('Mail.Read');\n    scopes.push('Mail.ReadBasic');\n  }\n\n  if (MgtPersonCardConfig.sections.organization) {\n    scopes.push('User.Read.All');\n\n    if (MgtPersonCardConfig.sections.organization.showWorksWith) {\n      scopes.push('People.Read.All');\n    }\n  }\n\n  if (MgtPersonCardConfig.sections.profile) {\n    scopes.push('User.Read.All');\n  }\n\n  if (MgtPersonCardConfig.useContactApis) {\n    scopes.push('Contacts.Read');\n  }\n\n  if (scopes.indexOf('User.Read.All') < 0) {\n    // at minimum, we need these scopes\n    scopes.push('User.ReadBasic.All');\n    scopes.push('User.Read');\n  }\n\n  if (scopes.indexOf('People.Read.All') < 0) {\n    // at minimum, we need these scopes\n    scopes.push('People.Read');\n  }\n\n  if (MgtPersonCardConfig.isSendMessageVisible) {\n    // Chat.ReadWrite can create a chat and send a message, so just request one scope instead of two\n    scopes.push('Chat.ReadWrite');\n  }\n\n  // return unique\n  return [...new Set(scopes)];\n};\n"],"names":["TeamsHelper","_classCallCheck","_createClass","key","get","this","_microsoftTeamsLib","window","microsoftTeams","set","value","microsoftTeamsLib","parent","self","nativeInterface","name","deeplink","onComplete","teams","initialize","executeDeepLink","userProperties","batchKeys","getPersonCardGraphData","graph","personDetails","isMe","__awaiter","_regeneratorRuntime","mark","_callee","_a","userId","email","isContactOrGroup","batch","response","data","_iterator","_step","_step$value","profile","wrap","_context","prev","next","id","getEmailFromGraphEntity","personType","subclass","class","createBatch","MgtPersonCardConfig","sections","organization","buildOrgStructureRequest","showWorksWith","buildWorksWithRequest","mailMessages","buildMessagesWithUserRequest","files","buildFilesRequest","executeAll","sent","t0","_createForOfIteratorHelper","s","n","done","_slicedToArray","content","err","e","f","getProfile","t1","directReports","length","filter","report","accountEnabled","abrupt","stop","expandManagers","concat","ConsistencyLevel","emailAddress","request","_callee2","_context2","api","version","createChat","person","user","_callee3","chatData","_context3","chatType","members","roles","header","middlewareOptions","prepScopes","post","sendMessage","chatId","messageData","_callee4","_context4","styles","css","_templateObject","_taggedTemplateLiteral","BasePersonCardSection","_MgtTemplatedTaskComp","_inherits","_super","_createSuper","_this","call","renderLoading","mgtHtml","_isCompact","isCompact","renderCompactView","renderFullView","html","_templateObject2","parentNode","shadowRoot","host","tagName","customElementHelper","prefix","toUpperCase","navigate","MgtTemplatedTaskComponent","__decorate","property","attribute","type","Object","state","strings","contactSectionTitle","emailTitle","chatTitle","businessPhoneTitle","cellPhoneTitle","departmentTitle","personTitle","officeLocationTitle","copyToClipboardButton","MgtContact","_BasePersonCardSectio","_contactParts","icon","getSvg","SvgIcon","Email","onClick","sendEmail","_person","showCompact","title","chat","Chat","sendChat","userPrincipalName","businessPhone","Phone","_b","sendCall","businessPhones","cellPhone","CellPhone","mobilePhone","department","Department","Person","officeLocation","OfficeLocation","phone","sendLink","jobTitle","values","p","Contact","_get","_getPrototypeOf","prototype","_i","_Object$keys","keys","_this2","hasData","availableParts","compactParts","slice","contentTemplate","map","renderContactPart","direction","_this3","_templateObject3","part","_templateObject4","_this4","isPhone","partLinkClasses","part__link","valueTemplate","_templateObject5","classMap","_templateObject6","_templateObject7","handlePartClick","Copy","navigator","clipboard","writeText","protocol","resource","open","console","error","upn","url","openWindow","isAvailable","status","emailsSectionTitle","MgtMessages","messages","_messages","Messages","messageTemplates","message","renderMessage","renderNoData","handleMessageClick","subject","from","bodyPreview","getRelativeDisplayDate","Date","receivedDateTime","webLink","reportsToSectionTitle","directReportsSectionTitle","organizationSectionTitle","youWorkWithSubSectionTitle","userWorksWithSubSectionTitle","MgtOrganization","cardState","me","_state","_me","undefined","_this$_state","manager","Organization","_this$_state2","renderCoworker","renderCompactDirectReports","_this$_state3","people","managerTemplates","renderManagers","currentUserTemplate","renderCurrentUser","directReportsTemplate","renderDirectReports","coworkersTemplate","renderCoworkers","code","navigateCard","ViewType","twolines","ExpandRight","managers","currentManager","push","reverse","renderManager","_this5","_templateObject8","_templateObject9","_this6","_templateObject10","_this7","subtitle","givenName","_templateObject11","SkillsAndExperienceSectionTitle","AboutCompactSectionTitle","SkillsSubSectionTitle","LanguagesSubSectionTitle","WorkExperienceSubSectionTitle","EducationSubSectionTitle","professionalInterestsSubSectionTitle","personalInterestsSubSectionTitle","birthdaySubSectionTitle","currentYearSubtitle","socialMediaSubSectionTitle","MgtProfile","isPersonalInterest","interest","categories","includes","isProfessionalInterest","isBirthdayAnniversary","anniversary","_this$profile","languages","skills","positions","educationalActivities","_birthdayAnniversary","_personalInterests","_professionalInterests","v","_profile","anniversaries","find","interests","Profile","renderSubSections","initPostRenderOperations","renderSkills","renderBirthday","renderLanguages","renderWorkExperience","renderEducation","renderProfessionalInterests","renderPersonalInterests","languageItems","language","proficiency","displayName","languageTitle","_step2","skillItems","_iterator2","skill","skillsTitle","_step3","positionItems","_iterator3","position","detail","description","getDisplayDateRange","_c","company","displayLocation","_e","_d","address","workExperienceTitle","_step4","_iterator4","educationalActivity","institution","program","_templateObject12","nothing","educationTitle","_step5","interestItems","_iterator5","_templateObject14","professionalInterests","_templateObject13","_step6","_iterator6","_templateObject16","personalInterests","_templateObject15","date","_templateObject17","Birthday","getDisplayDate","toLocaleString","day","month","event","startMonthYear","start","getFullYear","end","endMonthYear","city","setTimeout","querySelectorAll","forEach","section","handleTokenOverflow","tokenLists","_loop","tokenList","_Array$from","items","overflowItems","itemRect","getBoundingClientRect","tokenListRect","maxtop","height","top","i","Array","classList","add","overflowToken","document","createElement","tabIndex","innerText","revealOverflow","remove","addEventListener","appendChild","showMoreSectionButton","endOfCard","quickMessage","expandDetailsLabel","sendMessageLabel","emailButtonLabel","callButtonLabel","chatButtonLabel","closeCardLabel","videoButtonLabel","goBackLabel","registerMgtPersonCardComponent","registerFluentComponents","fluentCard","fluentTabs","fluentTab","fluentTabPanel","fluentButton","fluentTextField","registerComponent","MgtPersonCard","registerMgtSpinnerComponent","registerMgtPersonComponent","registerMgtFileListComponent","customElements","buildComponentName","isSendingMessage","goBack","_history","historyState","pop","_currentSection","firstTab","renderRoot","querySelector","click","_cardState","_personDetails","personImage","loadSections","renderContent","internalPersonDetails","ariaLabel","image","getImage","hasTemplate","renderTemplate","closeCardTemplate","isExpanded","closeCard","Close","navigationTemplate","handleGoBack","Back","personDetailsTemplate","personTemplate","renderPerson","contactIconsTemplate","renderContactIcons","expandedDetailsTemplate","renderExpandedDetails","renderExpandedDetailsButton","_windowHeight","innerHeight","documentElement","clientHeight","Math","min","_smallView","tabLocker","lockTabNavigation","handleEndOfCard","small","endOfCardEl","blur","imageCardEl","focus","updateCurrentSection","sendQuickMessage","_assertThisInitialized","_chatInput","trim","_graph","body","clearInputData","emailUser","callUser","phones","getPersonBusinessPhones","chatUser","arguments","users","videoCallUser","showExpandedDetails","root","animate","transformOrigin","duration","easing","fill","fireCustomEvent","sendQuickMessageOnEnter","_personQuery","_userId","providerState","personQuery","personPresence","showPresence","threelines","isUser","userPerson","SmallEmail","SmallChat","video","Video","Call","ExpandDown","_isStateLoading","Providers","globalProvider","ProviderState","SignedOut","sectionNavTemplate","renderSectionNavigation","handleSectionScroll","currentSectionIndex","indexOf","additionalSectionTemplates","toLowerCase","classes","active","_templateObject18","renderIcon","additionalPanelTemplates","_templateObject19","cardTitle","asFullView","overviewClasses","overviewTab","_templateObject20","Overview","renderOverviewSection","compactTemplates","_templateObject21","asCompactView","additionalDetails","splice","_templateObject22","_templateObject23","renderMessagingSection","_templateObject25","_templateObject24","chatInput","isSendMessageVisible","_templateObject26","target","requestUpdate","Confirmation","Send","inheritDetails","parentElement","parentPerson","provider","SignedIn","forComponent","getUserWithPhoto","findPeople","getPersonImage","useContactApis","then","defaultPresence","activity","availability","getUserPresence","Boolean","contactSections","_this$_cardState","MgtFileList","profileSection","number","sectionName","panels","scrollTop","deltaY","scrollHeight","stopPropagation","scopes","_toConsumableArray","Set","getMgtPersonCardScopes","String"],"sourceRoot":""}