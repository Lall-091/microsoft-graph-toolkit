{"version":3,"file":"static/js/382.3b8f8b65.chunk.js","mappings":"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","sources":["../../../packages/mgt-components/dist/es6/components/mgt-file/src/components/mgt-file/mgt-file-css.ts","../../../packages/mgt-components/dist/es6/styles/src/styles/fluent-icons.ts","../../../packages/mgt-components/dist/es6/components/mgt-file/src/components/mgt-file/strings.ts","../../../packages/mgt-components/dist/es6/components/mgt-file/src/components/mgt-file/mgt-file.ts"],"sourcesContent":["// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\n\nimport { css, CSSResult } from 'lit';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles: CSSResult[] = [\n  css`\n:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host{font-size:var(--default-font-size);font-weight:var(--default-font-weight,400);border:var(--file-border,1px solid transparent);border-radius:var(--file-border-radius,4px);background-color:var(--file-background-color)}:host .item{display:flex;flex-flow:row nowrap;align-items:center;background-color:var(--file-background-color);padding:var(--file-padding,0);margin:var(--file-margin,0)}:host .item:hover{background-color:var(--file-background-color-hover,var(--neutral-fill-hover));border-radius:var(--file-border-radius,4px);cursor:pointer;--secondary-text-color:var(--secondary-text-hover-color)}:host .item:focus,:host .item:focus-visible{background-color:var(--file-background-color-focus,var(--neutral-fill-hover));border-radius:var(--file-border-radius,4px)}:host .item__file-type-icon{height:var(--file-type-icon-height,28px);display:flex;align-items:center;justify-content:center}:host .item__file-type-icon img{height:var(--file-type-icon-height,28px)}:host .item__details{padding-inline-start:var(--file-padding-inline-start,14px)}:host .item__details .line1{font-size:var(--default-font-size);font-weight:var(--file-line1-font-weight,var(--default-font-weight,400));text-transform:var(--file-line1-text-transform,initial);line-height:20px;color:var(--file-line1-color,var(--neutral-foreground-rest))}:host .item__details .line2{color:var(--file-line2-color,var(--secondary-text-color));font-size:var(--file-line2-font-size,var(--last-modified-font-size,12px));font-weight:var(--file-line2-font-weight,var(--default-font-weight,400));text-transform:var(--file-line2-text-transform,initial);line-height:16px}:host .item__details .line3{color:var(--file-line3-color,var(--secondary-text-color));font-size:var(--file-line3-font-size,var(--size-font-size,12px));font-weight:var(--file-line3-font-weight,var(--default-font-weight,400));text-transform:var(--file-line3-text-transform,initial);line-height:16px}[dir=rtl] .item{direction:rtl}[dir=rtl] .item__details{direction:rtl}\n`];","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nconst fileTypeMap: Record<string, string> = {\n  PowerPoint: 'pptx',\n  Word: 'docx',\n  Excel: 'xlsx',\n  Pdf: 'pdf',\n  OneNote: 'onetoc',\n  OneNotePage: 'one',\n  InfoPath: 'xsn',\n  Visio: 'vstx',\n  Publisher: 'pub',\n  Project: 'mpp',\n  Access: 'accdb',\n  Mail: 'email',\n  Csv: 'csv',\n  Archive: 'archive',\n  Xps: 'vector',\n  Audio: 'audio',\n  Video: 'video',\n  Image: 'photo',\n  Web: 'html',\n  Text: 'txt',\n  Xml: 'xml',\n  Story: 'genericfile',\n  ExternalContent: 'genericfile',\n  Folder: 'folder',\n  Spsite: 'spo',\n  Other: 'genericfile'\n};\n\nconst baseUri = 'https://spoprod-a.akamaihd.net/files/fabric-cdn-prod_20201008.001/assets/item-types';\n\n/**\n * Available icon sizes\n */\nexport type IconSize = 16 | 20 | 24 | 32 | 40 | 48 | 64 | 96;\n\n/**\n * Helper to provide fluent icon image urls\n *\n * @param type\n * @param size\n * @param extension\n * @returns\n */\nexport const getFileTypeIconUri = (type: string, size: IconSize, extension: 'png' | 'svg') => {\n  const fileType: string = fileTypeMap[type] || 'genericfile';\n  return `${baseUri}/${size.toString()}/${fileType}.${extension}`;\n};\n\n/**\n * Helper to provide fluent icon image urls with the correct size\n *\n * @param type\n * @param size\n * @param extension\n * @returns\n */\nexport const getFileTypeIconUriByExtension = (type: string, size: IconSize, extension: 'png' | 'svg') => {\n  const found = Object.keys(fileTypeMap).find(key => fileTypeMap[key] === type);\n  if (found) {\n    return `${baseUri}/${size.toString()}/${type}.${extension}`;\n  } else if (type === 'jpg' || type === 'png') {\n    type = 'photo';\n    return `${baseUri}/${size.toString()}/${type}.${extension}`;\n  } else {\n    return null;\n  }\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nexport const strings = {\n  modifiedSubtitle: 'Modified',\n  sizeSubtitle: 'Size'\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { DriveItem } from '@microsoft/microsoft-graph-types';\nimport { html, TemplateResult } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { styles } from './mgt-file-css';\nimport { MgtTemplatedTaskComponent, Providers, ProviderState } from '@microsoft/mgt-element';\nimport {\n  getDriveItemById,\n  getDriveItemByPath,\n  getDriveItemByQuery,\n  getGroupDriveItemById,\n  getGroupDriveItemByPath,\n  getListDriveItemById,\n  getMyDriveItemById,\n  getMyDriveItemByPath,\n  getMyInsightsDriveItemById,\n  getSiteDriveItemById,\n  getSiteDriveItemByPath,\n  getUserDriveItemById,\n  getUserDriveItemByPath,\n  getUserInsightsDriveItemById\n} from '../../graph/graph.files';\nimport { formatBytes, getRelativeDisplayDate } from '../../utils/Utils';\nimport { OfficeGraphInsightString, ViewType } from '../../graph/types';\nimport { getFileTypeIconUriByExtension } from '../../styles/fluent-icons';\nimport { getSvg, SvgIcon } from '../../utils/SvgHelper';\nimport { strings } from './strings';\nimport { registerComponent } from '@microsoft/mgt-element';\n\nexport const registerMgtFileComponent = () => registerComponent('file', MgtFile);\n\n/**\n * The File component is used to represent an individual file/folder from OneDrive or SharePoint by displaying information such as the file/folder name, an icon indicating the file type, and other properties such as the author, last modified date, or other details selected by the developer.\n *\n * @export\n * @class MgtFile\n * @extends {MgtTemplatedComponent}\n *\n * @cssprop --file-type-icon-height - {Length} file type icon height. Default value is 28px.\n * @cssprop --file-border - {String} file item border style. Default value is \"1px solid transparent\".\n * @cssprop --file-border-radius - {String} the border radius of the file component. Default value is 4px.\n * @cssprop --file-box-shadow - {String} the box-shadow of the component. Default value is none.\n * @cssprop --file-background-color - {Color} the background-color of the component.\n * @cssprop --file-background-color-focus - {Color} the background-color of the component on focus.\n * @cssprop --file-background-color-hover - {Color} the background-color of the component on hover.\n * @cssprop --file-padding - {String} the padding around the file component. Default value is 0px.\n * @cssprop --file-padding-inline-start - {Length} the padding between file icon and file details. Default value is 14px.\n * @cssprop --file-margin - {String} the margin around the file component. Default value is 0px.\n * @cssprop --file-line1-font-size - {Length} the first line text font size. Default value is 12px.\n * @cssprop --file-line1-font-weight - {Length} the first line text font weight. Default value is 400.\n * @cssprop --file-line1-color - {Color} the first line text color.\n * @cssprop --file-line1-text-transform - {String} the first line text text transform. Default value is initial.\n * @cssprop --file-line2-font-size - {Length} the second line text font size. Default value is 12px.\n * @cssprop --file-line2-font-weight - {Length} the second line text font weight. Default value is 400.\n * @cssprop --file-line2-color - {Color} the second line text color.\n * @cssprop --file-line2-text-transform - {String} the second line text text transform. Default value is initial.\n * @cssprop --file-line3-font-size - {Length} the third line text font size. Default value is 12px.\n * @cssprop --file-line3-font-weight - {Length} the third line text font weight. Default value is 400.\n * @cssprop --file-line3-color - {Color} the third line text color.\n * @cssprop --file-line3-text-transform - {String} the third line text text transform. Default value is 400.\n */\nexport class MgtFile extends MgtTemplatedTaskComponent {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n  protected get strings() {\n    return strings;\n  }\n\n  /**\n   * allows developer to provide query for a file\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'file-query'\n  })\n  public fileQuery: string;\n\n  /**\n   * allows developer to provide site id for a file\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'site-id'\n  })\n  public siteId: string;\n\n  /**\n   * allows developer to provide drive id for a file\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'drive-id'\n  })\n  public driveId: string;\n\n  /**\n   * allows developer to provide group id for a file\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'group-id'\n  })\n  public groupId: string;\n\n  /**\n   * allows developer to provide list id for a file\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'list-id'\n  })\n  public listId: string;\n\n  /**\n   * allows developer to provide user id for a file\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'user-id'\n  })\n  public userId: string;\n  /**\n   * allows developer to provide item id for a file\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'item-id'\n  })\n  public itemId: string;\n\n  /**\n   * allows developer to provide item path for a file\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'item-path'\n  })\n  public itemPath: string;\n\n  /**\n   * allows developer to provide insight type for a file\n   * can be trending, used, or shared\n   *\n   * @type {OfficeGraphInsightString}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'insight-type'\n  })\n  public insightType: OfficeGraphInsightString;\n\n  /**\n   * allows developer to provide insight id for a file\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'insight-id'\n  })\n  public insightId: string;\n\n  /**\n   * allows developer to provide DriveItem object\n   *\n   * @type {MicrosoftGraph.DriveItem}\n   * @memberof MgtFile\n   */\n  @property({\n    type: Object\n  })\n  public fileDetails: DriveItem;\n\n  /**\n   * allows developer to provide file type icon url\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'file-icon'\n  })\n  public fileIcon: string;\n\n  /**\n   * object containing Graph details on item\n   *\n   * @type {MicrosoftGraph.DriveItem}\n   * @memberof MgtFile\n   */\n  @property({ type: Object })\n  public driveItem: DriveItem;\n\n  /**\n   * Sets the property of the file to use for the first line of text.\n   * Default is file name\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({ attribute: 'line1-property' }) public line1Property: string;\n\n  /**\n   * Sets the property of the file to use for the second line of text.\n   * Default is last modified date time\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({ attribute: 'line2-property' }) public line2Property: string;\n\n  /**\n   * Sets the property of the file to use for the second line of text.\n   * Default is file size\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({ attribute: 'line3-property' }) public line3Property: string;\n\n  /**\n   * Sets what data to be rendered (file icon only, oneLine, twoLines threeLines).\n   * Default is 'threeLines'.\n   *\n   * @type {ViewType}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'view',\n    converter: value => {\n      if (!value || value.length === 0) {\n        return ViewType.threelines;\n      }\n\n      value = value.toLowerCase();\n\n      if (typeof ViewType[value] === 'undefined') {\n        return ViewType.threelines;\n      } else {\n        return ViewType[value] as ViewType;\n      }\n    }\n  })\n  public view: ViewType;\n\n  /**\n   * Get the scopes required for file\n   *\n   * @static\n   * @return {*}  {string[]}\n   * @memberof MgtFile\n   */\n  public static get requiredScopes(): string[] {\n    return [...new Set(['files.read', 'files.read.all', 'sites.read.all'])];\n  }\n\n  protected args(): unknown[] {\n    return [\n      this.providerState,\n      this.fileQuery,\n      this.siteId,\n      this.itemId,\n      this.driveId,\n      this.itemPath,\n      this.listId,\n      this.groupId,\n      this.userId,\n      this.insightType,\n      this.insightId,\n      this.fileDetails,\n      this.fileIcon\n    ];\n  }\n\n  constructor() {\n    super();\n    this.line1Property = 'name';\n    this.line2Property = 'lastModifiedDateTime';\n    this.line3Property = 'size';\n    this.view = ViewType.threelines;\n  }\n\n  public renderContent = () => {\n    if (!this.driveItem) {\n      return this.renderNoData();\n    }\n\n    const file = this.driveItem;\n    let fileTemplate: TemplateResult;\n\n    fileTemplate = this.renderTemplate('default', { file });\n    if (!fileTemplate) {\n      const fileDetailsTemplate: TemplateResult = this.renderDetails(file);\n      const fileTypeIconTemplate: TemplateResult = this.renderFileTypeIcon();\n\n      fileTemplate = html`\n        <div class=\"item\">\n          ${fileTypeIconTemplate} ${fileDetailsTemplate}\n        </div>`;\n    }\n\n    return fileTemplate;\n  };\n\n  /**\n   * Render the state when no data is available\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtFile\n   */\n  protected renderNoData(): TemplateResult {\n    return this.renderTemplate('no-data', null) || html``;\n  }\n\n  /**\n   * Render the file type icon\n   *\n   * @protected\n   * @param {string} [iconSrc]\n   * @memberof MgtFile\n   */\n  protected renderFileTypeIcon(): TemplateResult {\n    if (!this.fileIcon && !this.driveItem.name) {\n      return html``;\n    }\n\n    let fileIconSrc;\n\n    if (this.fileIcon) {\n      fileIconSrc = this.fileIcon;\n    } else {\n      // get file type extension from file name\n      const re = /(?:\\.([^.]+))?$/;\n      const fileType =\n        this.driveItem.package === undefined && this.driveItem.folder === undefined\n          ? re.exec(this.driveItem.name)[1]\n            ? re.exec(this.driveItem.name)[1].toLowerCase()\n            : this.driveItem.size\n            ? 'null'\n            : 'folder'\n          : this.driveItem.package !== undefined\n          ? this.driveItem.package.type === 'oneNote'\n            ? 'onetoc'\n            : 'folder'\n          : 'folder';\n      fileIconSrc = getFileTypeIconUriByExtension(fileType, 48, 'svg');\n    }\n\n    return html`\n      <div class=\"item__file-type-icon\">\n        ${\n          fileIconSrc\n            ? html`\n              <img src=${fileIconSrc} alt=\"File icon\" />\n            `\n            : html`\n              ${getSvg(SvgIcon.File)}\n            `\n        }\n      </div>\n    `;\n  }\n\n  /**\n   * Render the file details\n   *\n   * @protected\n   * @param {MicrosoftGraph.DriveItem} [driveItem]\n   * @memberof MgtFile\n   */\n  protected renderDetails(driveItem: DriveItem): TemplateResult {\n    if (!driveItem || this.view === ViewType.image) {\n      return html``;\n    }\n\n    const details: TemplateResult[] = [];\n\n    if (this.view > ViewType.image) {\n      const text = this.getTextFromProperty(driveItem, this.line1Property);\n      if (text) {\n        details.push(html`\n          <div class=\"line1\" aria-label=\"${text}\">${text}</div>\n        `);\n      }\n    }\n\n    if (this.view > ViewType.oneline) {\n      const text = this.getTextFromProperty(driveItem, this.line2Property);\n      if (text) {\n        details.push(html`\n          <div class=\"line2\" aria-label=\"${text}\">${text}</div>\n        `);\n      }\n    }\n\n    if (this.view > ViewType.twolines) {\n      const text = this.getTextFromProperty(driveItem, this.line3Property);\n      if (text) {\n        details.push(html`\n          <div class=\"line3\" aria-label=\"${text}\">${text}</div>\n        `);\n      }\n    }\n\n    return html`\n      <div class=\"item__details\">\n        ${details}\n      </div>\n    `;\n  }\n\n  /**\n   * load state into the component.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtFile\n   */\n  protected async loadState() {\n    if (this.fileDetails) {\n      this.driveItem = this.fileDetails;\n      return;\n    }\n\n    const provider = Providers.globalProvider;\n    if (!provider || provider.state === ProviderState.Loading) {\n      return;\n    }\n\n    if (provider.state === ProviderState.SignedOut) {\n      this.driveItem = null;\n      return;\n    }\n\n    const graph = provider.graph.forComponent(this);\n    let driveItem: DriveItem;\n\n    // evaluate to true when only item-id or item-path is provided\n    const getFromMyDrive = !this.driveId && !this.siteId && !this.groupId && !this.listId && !this.userId;\n\n    if (\n      // return null when a combination of provided properties are required\n      (this.driveId && !this.itemId && !this.itemPath) ||\n      (this.siteId && !this.itemId && !this.itemPath) ||\n      (this.groupId && !this.itemId && !this.itemPath) ||\n      (this.listId && !this.siteId && !this.itemId) ||\n      (this.insightType && !this.insightId) ||\n      (this.userId && !this.itemId && !this.itemPath && !this.insightType && !this.insightId)\n    ) {\n      driveItem = null;\n    } else if (this.fileQuery) {\n      driveItem = await getDriveItemByQuery(graph, this.fileQuery);\n    } else if (this.itemId && getFromMyDrive) {\n      driveItem = await getMyDriveItemById(graph, this.itemId);\n    } else if (this.itemPath && getFromMyDrive) {\n      driveItem = await getMyDriveItemByPath(graph, this.itemPath);\n    } else if (this.userId) {\n      if (this.itemId) {\n        driveItem = await getUserDriveItemById(graph, this.userId, this.itemId);\n      } else if (this.itemPath) {\n        driveItem = await getUserDriveItemByPath(graph, this.userId, this.itemPath);\n      } else if (this.insightType && this.insightId) {\n        driveItem = await getUserInsightsDriveItemById(graph, this.userId, this.insightType, this.insightId);\n      }\n    } else if (this.driveId) {\n      if (this.itemId) {\n        driveItem = await getDriveItemById(graph, this.driveId, this.itemId);\n      } else if (this.itemPath) {\n        driveItem = await getDriveItemByPath(graph, this.driveId, this.itemPath);\n      }\n    } else if (this.siteId && !this.listId) {\n      if (this.itemId) {\n        driveItem = await getSiteDriveItemById(graph, this.siteId, this.itemId);\n      } else if (this.itemPath) {\n        driveItem = await getSiteDriveItemByPath(graph, this.siteId, this.itemPath);\n      }\n    } else if (this.listId) {\n      driveItem = await getListDriveItemById(graph, this.siteId, this.listId, this.itemId);\n    } else if (this.groupId) {\n      if (this.itemId) {\n        driveItem = await getGroupDriveItemById(graph, this.groupId, this.itemId);\n      } else if (this.itemPath) {\n        driveItem = await getGroupDriveItemByPath(graph, this.groupId, this.itemPath);\n      }\n    } else if (this.insightType && !this.userId) {\n      driveItem = await getMyInsightsDriveItemById(graph, this.insightType, this.insightId);\n    }\n\n    this.driveItem = driveItem;\n  }\n\n  private getTextFromProperty(driveItem: DriveItem, properties: string): string {\n    if (!properties || properties.length === 0) {\n      return null;\n    }\n\n    const propertyList = properties.trim().split(',');\n    let text: string;\n    let i = 0;\n\n    while (!text && i < propertyList.length) {\n      const current = propertyList[i].trim();\n      switch (current) {\n        case 'size': {\n          // convert size to kb, mb, gb\n          let size = '0';\n          if (driveItem.size) {\n            size = formatBytes(driveItem.size);\n          }\n          text = `${this.strings.sizeSubtitle}: ${size}`;\n          break;\n        }\n        case 'lastModifiedDateTime': {\n          // convert date time\n          let relativeDateString: string;\n          let lastModifiedString: string;\n          if (driveItem.lastModifiedDateTime) {\n            const lastModifiedDateTime = new Date(driveItem.lastModifiedDateTime);\n            relativeDateString = getRelativeDisplayDate(lastModifiedDateTime);\n            lastModifiedString = `${this.strings.modifiedSubtitle} ${relativeDateString}`;\n          } else {\n            lastModifiedString = '';\n          }\n          text = lastModifiedString;\n          break;\n        }\n        default:\n          text = driveItem[current] as string;\n      }\n      i++;\n    }\n\n    return text;\n  }\n}\n"],"names":["styles","css","_templateObject","_taggedTemplateLiteral","fileTypeMap","PowerPoint","Word","Excel","Pdf","OneNote","OneNotePage","InfoPath","Visio","Publisher","Project","Access","Mail","Csv","Archive","Xps","Audio","Video","Image","Web","Text","Xml","Story","ExternalContent","Folder","Spsite","Other","baseUri","strings","modifiedSubtitle","sizeSubtitle","registerMgtFileComponent","registerComponent","MgtFile","_MgtTemplatedTaskComp","_inherits","_super","_createSuper","_this","_classCallCheck","call","renderContent","driveItem","renderNoData","fileTemplate","file","renderTemplate","fileDetailsTemplate","renderDetails","fileTypeIconTemplate","renderFileTypeIcon","html","line1Property","line2Property","line3Property","view","ViewType","threelines","_createClass","key","get","value","this","providerState","fileQuery","siteId","itemId","driveId","itemPath","listId","groupId","userId","insightType","insightId","fileDetails","fileIcon","_templateObject2","name","_templateObject3","fileIconSrc","type","size","extension","re","fileType","undefined","package","folder","exec","toLowerCase","Object","keys","find","concat","toString","_templateObject4","_templateObject5","_templateObject6","getSvg","SvgIcon","File","image","_templateObject7","details","text","getTextFromProperty","push","_templateObject8","oneline","_templateObject9","twolines","_templateObject10","_templateObject11","_context","next","abrupt","provider","Providers","globalProvider","state","ProviderState","Loading","SignedOut","graph","forComponent","getFromMyDrive","getDriveItemByQuery","sent","getMyDriveItemById","getMyDriveItemByPath","getUserDriveItemById","getUserDriveItemByPath","getUserInsightsDriveItemById","getDriveItemById","getDriveItemByPath","getSiteDriveItemById","getSiteDriveItemByPath","getListDriveItemById","getGroupDriveItemById","getGroupDriveItemByPath","getMyInsightsDriveItemById","stop","_callee","properties","length","propertyList","trim","split","i","current","formatBytes","relativeDateString","lastModifiedString","lastModifiedDateTime","Date","getRelativeDisplayDate","_toConsumableArray","Set","MgtTemplatedTaskComponent","__decorate","property","attribute","converter"],"sourceRoot":""}