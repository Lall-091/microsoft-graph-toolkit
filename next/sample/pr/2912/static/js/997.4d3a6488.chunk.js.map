{"version":3,"file":"static/js/997.4d3a6488.chunk.js","mappings":"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","sources":["../../../node_modules/@microsoft/fast-foundation/dist/esm/switch/switch.form-associated.js","../../../node_modules/@microsoft/fast-foundation/dist/esm/switch/switch.js","../../../node_modules/@fluentui/web-components/dist/esm/switch/index.js","../../../node_modules/@microsoft/fast-foundation/dist/esm/switch/switch.template.js","../../../node_modules/@fluentui/web-components/dist/esm/switch/switch.styles.js","../../../packages/mgt-components/dist/es6/components/mgt-theme-toggle/src/components/mgt-theme-toggle/strings.ts","../../../packages/mgt-components/dist/es6/components/mgt-theme-toggle/src/components/mgt-theme-toggle/mgt-theme-toggle.ts","../../../packages/mgt-react/src/generated/theme-toggle.ts","../../../packages/mgt-react/src/generated/people.ts","../../../packages/mgt-react/src/generated/person-card.ts","components/GetDefaultContent.tsx","pages/HomePage.tsx","../../../packages/mgt-components/dist/es6/components/mgt-picker/src/components/mgt-picker/strings.ts","../../../packages/mgt-components/dist/es6/components/mgt-picker/src/components/mgt-picker/mgt-picker-css.ts","../../../packages/mgt-components/dist/es6/components/mgt-picker/src/components/mgt-picker/mgt-picker.ts","../../../packages/mgt-react/src/generated/file-list.ts","../../../packages/mgt-react/src/generated/file.ts","../../../packages/mgt-react/src/generated/picker.ts"],"sourcesContent":["import { CheckableFormAssociated } from \"../form-associated/form-associated.js\";\nimport { FoundationElement } from \"../foundation-element/foundation-element.js\";\nclass _Switch extends FoundationElement {\n}\n/**\n * A form-associated base class for the {@link @microsoft/fast-foundation#(Switch:class)} component.\n *\n * @internal\n */\nexport class FormAssociatedSwitch extends CheckableFormAssociated(_Switch) {\n    constructor() {\n        super(...arguments);\n        this.proxy = document.createElement(\"input\");\n    }\n}\n","import { __decorate } from \"tslib\";\nimport { attr, observable } from \"@microsoft/fast-element\";\nimport { keyEnter, keySpace } from \"@microsoft/fast-web-utilities\";\nimport { FormAssociatedSwitch } from \"./switch.form-associated.js\";\n/**\n * A Switch Custom HTML Element.\n * Implements the {@link https://www.w3.org/TR/wai-aria-1.1/#switch | ARIA switch }.\n *\n * @slot - The deafult slot for the label\n * @slot checked-message - The message when in a checked state\n * @slot unchecked-message - The message when in an unchecked state\n * @csspart label - The label\n * @csspart switch - The element representing the switch, which wraps the indicator\n * @csspart status-message - The wrapper for the status messages\n * @csspart checked-message - The checked message\n * @csspart unchecked-message - The unchecked message\n * @fires change - Emits a custom change event when the checked state changes\n *\n * @public\n */\nexport class Switch extends FormAssociatedSwitch {\n    constructor() {\n        super();\n        /**\n         * The element's value to be included in form submission when checked.\n         * Default to \"on\" to reach parity with input[type=\"checkbox\"]\n         *\n         * @internal\n         */\n        this.initialValue = \"on\";\n        /**\n         * @internal\n         */\n        this.keypressHandler = (e) => {\n            if (this.readOnly) {\n                return;\n            }\n            switch (e.key) {\n                case keyEnter:\n                case keySpace:\n                    this.checked = !this.checked;\n                    break;\n            }\n        };\n        /**\n         * @internal\n         */\n        this.clickHandler = (e) => {\n            if (!this.disabled && !this.readOnly) {\n                this.checked = !this.checked;\n            }\n        };\n        this.proxy.setAttribute(\"type\", \"checkbox\");\n    }\n    readOnlyChanged() {\n        if (this.proxy instanceof HTMLInputElement) {\n            this.proxy.readOnly = this.readOnly;\n        }\n        this.readOnly\n            ? this.classList.add(\"readonly\")\n            : this.classList.remove(\"readonly\");\n    }\n    /**\n     * @internal\n     */\n    checkedChanged(prev, next) {\n        super.checkedChanged(prev, next);\n        /**\n         * @deprecated - this behavior already exists in the template and should not exist in the class.\n         */\n        this.checked ? this.classList.add(\"checked\") : this.classList.remove(\"checked\");\n    }\n}\n__decorate([\n    attr({ attribute: \"readonly\", mode: \"boolean\" })\n], Switch.prototype, \"readOnly\", void 0);\n__decorate([\n    observable\n], Switch.prototype, \"defaultSlottedNodes\", void 0);\n","import { Switch, switchTemplate as template } from '@microsoft/fast-foundation';\nimport { switchStyles as styles } from './switch.styles';\n/**\n * The Fluent Switch Custom Element. Implements {@link @microsoft/fast-foundation#Switch},\n * {@link @microsoft/fast-foundation#SwitchTemplate}\n *\n *\n * @public\n * @remarks\n * HTML Element: \\<fluent-switch\\>\n */\nexport const fluentSwitch = Switch.compose({\n    baseName: 'switch',\n    template,\n    styles,\n    switch: `\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\">\n      <rect x=\"2\" y=\"2\" width=\"12\" height=\"12\" rx=\"6\"/>\n    </svg>\n  `,\n});\n/**\n * Styles for Switch\n * @public\n */\nexport const switchStyles = styles;\n/**\n * Switch Base class\n * @public\n */\nexport { Switch };\n","import { html, slotted } from \"@microsoft/fast-element\";\n/**\n * The template for the {@link @microsoft/fast-foundation#(Switch:class)} component.\n * @public\n */\nexport const switchTemplate = (context, definition) => html `\n    <template\n        role=\"switch\"\n        aria-checked=\"${x => x.checked}\"\n        aria-disabled=\"${x => x.disabled}\"\n        aria-readonly=\"${x => x.readOnly}\"\n        tabindex=\"${x => (x.disabled ? null : 0)}\"\n        @keypress=\"${(x, c) => x.keypressHandler(c.event)}\"\n        @click=\"${(x, c) => x.clickHandler(c.event)}\"\n        class=\"${x => (x.checked ? \"checked\" : \"\")}\"\n    >\n        <label\n            part=\"label\"\n            class=\"${x => x.defaultSlottedNodes && x.defaultSlottedNodes.length\n    ? \"label\"\n    : \"label label__hidden\"}\"\n        >\n            <slot ${slotted(\"defaultSlottedNodes\")}></slot>\n        </label>\n        <div part=\"switch\" class=\"switch\">\n            <slot name=\"switch\">${definition.switch || \"\"}</slot>\n        </div>\n        <span class=\"status-message\" part=\"status-message\">\n            <span class=\"checked-message\" part=\"checked-message\">\n                <slot name=\"checked-message\"></slot>\n            </span>\n            <span class=\"unchecked-message\" part=\"unchecked-message\">\n                <slot name=\"unchecked-message\"></slot>\n            </span>\n        </span>\n    </template>\n`;\n","import { css } from '@microsoft/fast-element';\nimport { SystemColors } from '@microsoft/fast-web-utilities';\nimport { disabledCursor, display, focusVisible, forcedColorsStylesheetBehavior, } from '@microsoft/fast-foundation';\nimport { DirectionalStyleSheetBehavior, heightNumber } from '../styles';\nimport { accentFillActive, accentFillHover, accentFillRest, bodyFont, designUnit, disabledOpacity, foregroundOnAccentActive, foregroundOnAccentHover, foregroundOnAccentRest, neutralFillInputAltActive, neutralFillInputAltFocus, neutralFillInputAltHover, neutralFillInputAltRest, neutralForegroundRest, neutralStrokeStrongActive, neutralStrokeStrongHover, neutralStrokeStrongRest, strokeWidth, } from '../design-tokens';\nimport { typeRampBase } from '../styles/patterns/type-ramp';\nimport { focusTreatmentTight } from '../styles/focus';\nexport const switchStyles = (context, definition) => css `\n    :host([hidden]) {\n      display: none;\n    }\n\n    ${display('inline-flex')} :host {\n      align-items: center;\n      outline: none;\n      font-family: ${bodyFont};\n      ${\n/*\n * Chromium likes to select label text or the default slot when\n * the checkbox is clicked. Maybe there is a better solution here?\n */ ''} user-select: none;\n    }\n\n    :host(.disabled) {\n      opacity: ${disabledOpacity};\n    }\n\n    :host(.disabled) .label,\n    :host(.readonly) .label,\n    :host(.disabled) .switch,\n    :host(.readonly) .switch,\n    :host(.disabled) .status-message,\n    :host(.readonly) .status-message {\n      cursor: ${disabledCursor};\n    }\n\n    .switch {\n      position: relative;\n      box-sizing: border-box;\n      width: calc(((${heightNumber} / 2) + ${designUnit}) * 2px);\n      height: calc(((${heightNumber} / 2) + ${designUnit}) * 1px);\n      background: ${neutralFillInputAltRest};\n      border-radius: calc(${heightNumber} * 1px);\n      border: calc(${strokeWidth} * 1px) solid ${neutralStrokeStrongRest};\n      cursor: pointer;\n    }\n\n    :host(:not(.disabled):hover) .switch {\n      background: ${neutralFillInputAltHover};\n      border-color: ${neutralStrokeStrongHover};\n    }\n\n    :host(:not(.disabled):active) .switch {\n      background: ${neutralFillInputAltActive};\n      border-color: ${neutralStrokeStrongActive};\n    }\n\n    :host(:${focusVisible}) .switch {\n      ${focusTreatmentTight}\n      background: ${neutralFillInputAltFocus};\n    }\n\n    :host(.checked) .switch {\n      background: ${accentFillRest};\n      border-color: transparent;\n    }\n\n    :host(.checked:not(.disabled):hover) .switch {\n      background: ${accentFillHover};\n      border-color: transparent;\n    }\n\n    :host(.checked:not(.disabled):active) .switch {\n      background: ${accentFillActive};\n      border-color: transparent;\n    }\n\n    slot[name='switch'] {\n      position: absolute;\n      display: flex;\n      border: 1px solid transparent; /* Spacing included in the transform reference box */\n      fill: ${neutralForegroundRest};\n      transition: all 0.2s ease-in-out;\n    }\n\n    .status-message {\n      color: ${neutralForegroundRest};\n      cursor: pointer;\n      ${typeRampBase}\n    }\n\n    .label__hidden {\n      display: none;\n      visibility: hidden;\n    }\n\n    .label {\n      color: ${neutralForegroundRest};\n      ${typeRampBase}\n      margin-inline-end: calc(${designUnit} * 2px + 2px);\n      cursor: pointer;\n    }\n\n    ::slotted([slot=\"checked-message\"]),\n    ::slotted([slot=\"unchecked-message\"]) {\n        margin-inline-start: calc(${designUnit} * 2px + 2px);\n    }\n\n    :host(.checked) .switch {\n      background: ${accentFillRest};\n    }\n\n    :host(.checked) .switch slot[name='switch'] {\n      fill: ${foregroundOnAccentRest};\n      filter: drop-shadow(0px 1px 1px rgba(0, 0, 0, 0.15));\n    }\n\n    :host(.checked:not(.disabled)) .switch:hover {\n      background: ${accentFillHover};\n    }\n\n    :host(.checked:not(.disabled)) .switch:hover slot[name='switch'] {\n      fill: ${foregroundOnAccentHover};\n    }\n\n    :host(.checked:not(.disabled)) .switch:active {\n      background: ${accentFillActive};\n    }\n\n    :host(.checked:not(.disabled)) .switch:active slot[name='switch'] {\n      fill: ${foregroundOnAccentActive};\n    }\n\n    .unchecked-message {\n      display: block;\n    }\n\n    .checked-message {\n      display: none;\n    }\n\n    :host(.checked) .unchecked-message {\n      display: none;\n    }\n\n    :host(.checked) .checked-message {\n      display: block;\n    }\n  `.withBehaviors(new DirectionalStyleSheetBehavior(css `\n        slot[name='switch'] {\n          left: 0;\n        }\n\n        :host(.checked) slot[name='switch'] {\n          left: 100%;\n          transform: translateX(-100%);\n        }\n      `, css `\n        slot[name='switch'] {\n          right: 0;\n        }\n\n        :host(.checked) slot[name='switch'] {\n          right: 100%;\n          transform: translateX(100%);\n        }\n      `), forcedColorsStylesheetBehavior(css `\n        :host(:not(.disabled)) .switch slot[name='switch'] {\n          forced-color-adjust: none;\n          fill: ${SystemColors.FieldText};\n        }\n        .switch {\n          background: ${SystemColors.Field};\n          border-color: ${SystemColors.FieldText};\n        }\n        :host(.checked) .switch {\n          background: ${SystemColors.Highlight};\n          border-color: ${SystemColors.Highlight};\n        }\n        :host(:not(.disabled):hover) .switch ,\n        :host(:not(.disabled):active) .switch,\n        :host(.checked:not(.disabled):hover) .switch {\n          background: ${SystemColors.HighlightText};\n          border-color: ${SystemColors.Highlight};\n        }\n        :host(.checked:not(.disabled)) .switch slot[name=\"switch\"] {\n          fill: ${SystemColors.HighlightText};\n        }\n        :host(.checked:not(.disabled):hover) .switch slot[name='switch'] {\n          fill: ${SystemColors.Highlight};\n        }\n        :host(:${focusVisible}) .switch {\n          forced-color-adjust: none;\n          background: ${SystemColors.Field}; \n          border-color: ${SystemColors.Highlight};\n          outline-color: ${SystemColors.FieldText};\n        }\n        :host(.disabled) {\n          opacity: 1;\n        }\n        :host(.disabled) slot[name='switch'] {\n          forced-color-adjust: none;\n          fill: ${SystemColors.GrayText};\n        }\n        :host(.disabled) .switch {\n          background: ${SystemColors.Field};\n          border-color: ${SystemColors.GrayText};\n        }\n        .status-message,\n        .label {\n          color: ${SystemColors.FieldText};\n        }\n      `));\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nexport const strings = {\n  label: 'Color mode:',\n  on: 'Dark',\n  off: 'Light'\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { html, TemplateResult } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { MgtBaseTaskComponent } from '@microsoft/mgt-element';\nimport { fluentSwitch } from '@fluentui/web-components';\nimport { registerFluentComponents } from '../../utils/FluentComponents';\nimport { applyTheme } from '../../styles/theme-manager';\nimport { strings } from './strings';\nimport { registerComponent } from '@microsoft/mgt-element';\n\nexport const registerMgtThemeToggleComponent = () => {\n  registerFluentComponents(fluentSwitch);\n  registerComponent('theme-toggle', MgtThemeToggle);\n};\n\n/**\n * Toggle to switch between light and dark mode\n * Will detect browser preference and set accordingly or dark mode can be forced\n *\n * @fires {CustomEvent<boolean>} darkmodechanged - Fired when dark mode is toggled by a user action\n *\n * @class MgtDarkToggle\n * @extends {MgtBaseTaskComponent}\n */\nexport class MgtThemeToggle extends MgtBaseTaskComponent {\n  constructor() {\n    super();\n    const prefersDarkMode = window.matchMedia('(prefers-color-scheme:dark)').matches;\n    this.darkModeActive = prefersDarkMode;\n    this.applyTheme(this.darkModeActive);\n  }\n  /**\n   * Provides strings for localization\n   *\n   * @readonly\n   * @protected\n   * @memberof MgtDarkToggle\n   */\n  protected get strings() {\n    return strings;\n  }\n\n  /**\n   * Controls whether dark mode is active\n   *\n   * @type {boolean}\n   * @memberof MgtDarkToggle\n   */\n  @property({\n    attribute: 'mode',\n    reflect: true,\n    type: String,\n    converter: {\n      fromAttribute: (value: string) => {\n        return value === 'dark';\n      },\n      toAttribute: (value: boolean) => {\n        return value ? 'dark' : 'light';\n      }\n    }\n  })\n  public darkModeActive: boolean;\n\n  /**\n   * Fires after a component is updated.\n   * Allows a component to trigger side effects after updating.\n   *\n   * @param {Map<string, any>} changedProperties\n   * @memberof MgtDarkToggle\n   */\n  updated(changedProperties: Map<string, unknown>): void {\n    if (changedProperties.has('darkModeActive')) {\n      this.applyTheme(this.darkModeActive);\n    }\n  }\n\n  /**\n   * renders the component\n   *\n   * @return {TemplateResult}\n   * @memberof MgtDarkToggle\n   */\n  render(): TemplateResult {\n    return html`\n      <fluent-switch checked=${this.darkModeActive} @change=${this.onSwitchChanged}>\n        <span slot=\"checked-message\">${strings.on}</span>\n        <span slot=\"unchecked-message\">${strings.off}</span>\n        <label for=\"direction-switch\">${strings.label}</label>\n      </fluent-switch>\n`;\n  }\n\n  private readonly onSwitchChanged = (e: Event) => {\n    this.darkModeActive = (e.target as HTMLInputElement).checked;\n  };\n\n  private applyTheme(active: boolean) {\n    const targetTheme = active ? 'dark' : 'light';\n    applyTheme(targetTheme);\n\n    document.body.classList.remove('mgt-dark-mode', 'mgt-light-mode');\n    document.body.classList.add(`mgt-${targetTheme}-mode`);\n    this.fireCustomEvent('darkmodechanged', this.darkModeActive, true, false, true);\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/consistent-type-definitions */\nimport { registerMgtThemeToggleComponent } from '@microsoft/mgt-components/dist/es6/components/components';\nimport { ComponentMediaQuery } from '@microsoft/mgt-element';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraph from '@microsoft/microsoft-graph-types';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraphBeta from '@microsoft/microsoft-graph-types-beta';\nimport {wrapMgt} from '../Mgt';\n\nexport type ThemeToggleProps = {\n\tdarkModeActive?: boolean;\n\tmediaQuery?: ComponentMediaQuery;\n\tdarkmodechanged?: (e: CustomEvent<boolean>) => void;\n}\n\nexport const ThemeToggle = wrapMgt<ThemeToggleProps>('theme-toggle', registerMgtThemeToggleComponent);\n\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/consistent-type-definitions */\nimport { IDynamicPerson,PersonCardInteraction } from '@microsoft/mgt-components/dist/es6/exports';\nimport { registerMgtPeopleComponent } from '@microsoft/mgt-components/dist/es6/components/components';\nimport { TemplateContext,ComponentMediaQuery,TemplateRenderedData } from '@microsoft/mgt-element';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraph from '@microsoft/microsoft-graph-types';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraphBeta from '@microsoft/microsoft-graph-types-beta';\nimport {wrapMgt} from '../Mgt';\n\nexport type PeopleProps = {\n\tgroupId?: string;\n\tuserIds?: string[];\n\tpeople?: IDynamicPerson[];\n\tpeopleQueries?: string[];\n\tshowMax?: number;\n\tshowPresence?: boolean;\n\tpersonCardInteraction?: PersonCardInteraction;\n\tresource?: string;\n\tversion?: string;\n\tscopes?: string[];\n\tfallbackDetails?: IDynamicPerson[];\n\ttemplateContext?: TemplateContext;\n\tmediaQuery?: ComponentMediaQuery;\n\ttemplateRendered?: (e: CustomEvent<TemplateRenderedData>) => void;\n}\n\nexport const People = wrapMgt<PeopleProps>('people', registerMgtPeopleComponent);\n\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/consistent-type-definitions */\nimport { IDynamicPerson } from '@microsoft/mgt-components/dist/es6/exports';\nimport { registerMgtPersonCardComponent } from '@microsoft/mgt-components/dist/es6/components/components';\nimport { TemplateContext,ComponentMediaQuery,TemplateRenderedData } from '@microsoft/mgt-element';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraph from '@microsoft/microsoft-graph-types';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraphBeta from '@microsoft/microsoft-graph-types-beta';\nimport {wrapMgt} from '../Mgt';\n\nexport type PersonCardProps = {\n\tpersonDetails?: IDynamicPerson;\n\tpersonQuery?: string;\n\tlockTabNavigation?: boolean;\n\tuserId?: string;\n\tpersonImage?: string;\n\tfetchImage?: boolean;\n\tisExpanded?: boolean;\n\tinheritDetails?: boolean;\n\tshowPresence?: boolean;\n\tpersonPresence?: MicrosoftGraph.Presence;\n\ttemplateContext?: TemplateContext;\n\tmediaQuery?: ComponentMediaQuery;\n\texpanded?: (e: CustomEvent<null>) => void;\n\ttemplateRendered?: (e: CustomEvent<TemplateRenderedData>) => void;\n}\n\nexport const PersonCard = wrapMgt<PersonCardProps>('person-card', registerMgtPersonCardComponent);\n\n","import * as React from 'react';\nimport { MgtTemplateProps } from '@microsoft/mgt-react';\nimport { makeStyles } from '@fluentui/react-components';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100px'\n  },\n  message: {\n    paddingLeft: '10px'\n  }\n});\n\nexport interface ILoadingProps extends MgtTemplateProps {\n  message?: string;\n}\n\nexport const GetDefaultContent: React.FunctionComponent<ILoadingProps> = (props: ILoadingProps) => {\n  const styles = useStyles();\n  return (\n    <div className={styles.root}>\n      <div className={styles.message}>\n        <span>{props.message || 'Your focused inbox'}</span>\n      </div>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { PageHeader } from '../components/PageHeader';\nimport {\n  FileList,\n  File,\n  Person,\n  PersonCardInteraction,\n  Spinner,\n  Agenda,\n  PersonCard,\n  People,\n  Get,\n  ThemeToggle,\n  Picker\n} from '@microsoft/mgt-react';\nimport { Messages } from '../components/Messages';\nimport { Loading } from '../components/Loading';\nimport { GetDefaultContent } from '../components/GetDefaultContent';\n\nconst HomePage: React.FunctionComponent = () => {\n  return (\n    <>\n      <ThemeToggle />\n      <Picker\n        resource=\"me/todo/lists\"\n        scopes={['tasks.read', 'tasks.readwrite']}\n        placeholder=\"Select a task list\"\n        keyName=\"displayName\"\n      />\n      <FileList />\n      <Get resource=\"/me/messages\" maxPages={10}>\n        <GetDefaultContent template=\"default\" />\n        <Messages template=\"value\"></Messages>\n        <Loading template=\"loading\" message={'Loading your focused inbox...'}></Loading>\n      </Get>\n      <PageHeader title={'Home'} description={'Welcome to Contoso!'}></PageHeader>\n      <Spinner />\n      <People />\n      <File\n        driveId=\"b!M5IeZ2QKf0y18TIIXsDQkecHx1QrukxCte8X3n6ka6yn409-utaER7M2W9uRO4yB\"\n        itemId=\"01WEUQSTSBWERA5VH4BFALQBXUDVUMT22G\"\n      />\n      <Person personQuery=\"LeeG@wgww6.onmicrosoft.com\" personCardInteraction={PersonCardInteraction.click} />\n      <Agenda />\n      <PersonCard personQuery=\"LeeG@wgww6.onmicrosoft.com\" />\n    </>\n  );\n};\n\nexport default HomePage;\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nexport const strings = {\n  comboboxPlaceholder: 'Select an item'\n};\n","// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\n\nimport { css, CSSResult } from 'lit';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles: CSSResult[] = [\n  css`\n:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host{--max-height:var(--picker-max-height, 380px);font-family:var(--default-font-family)}:host .picker{background-color:var(--picker-background-color,transparent)}:host fluent-combobox::part(selected-value)::placeholder{color:var(--picker-text-color,var(--input-filled-placeholder-rest))}:host fluent-combobox::part(selected-value):hover::placeholder{color:var(--picker-text-color-hover,var(--secondary-text-hover-color))}[dir=rtl] .picker{direction:rtl}\n`];","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { html, PropertyValueMap, TemplateResult } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { MgtTemplatedTaskComponent, mgtHtml } from '@microsoft/mgt-element';\nimport { strings } from './strings';\nimport { fluentCombobox, fluentOption } from '@fluentui/web-components';\nimport { registerFluentComponents } from '../../utils/FluentComponents';\nimport '../../styles/style-helper';\nimport { Entity } from '@microsoft/microsoft-graph-types';\nimport { DataChangedDetail, registerMgtGetComponent } from '../mgt-get/mgt-get';\nimport { styles } from './mgt-picker-css';\nimport { registerComponent } from '@microsoft/mgt-element';\n\nexport const registerMgtPickerComponent = () => {\n  registerFluentComponents(fluentCombobox, fluentOption);\n\n  registerMgtGetComponent();\n  registerComponent('picker', MgtPicker);\n};\n\n/**\n * Web component that allows a single entity pick from a generic endpoint from Graph. Is a thin wrapper over mgt-get.\n * Does not load any state itself, only received state from mgt-get via events.\n *\n * @fires {CustomEvent<any>} selectionChanged - Fired when an option is clicked/selected\n * @export\n * @class MgtPicker\n * @extends {MgtTemplatedTaskComponent}\n *\n * @cssprop --picker-background-color - {Color} Picker component background color\n * @cssprop --picker-list-max-height - {String} max height for options list. Default value is 380px.\n */\nexport class MgtPicker extends MgtTemplatedTaskComponent {\n  protected get strings() {\n    return strings;\n  }\n\n  public static get styles() {\n    return styles;\n  }\n\n  /**\n   * The resource to get\n   *\n   * @type {string}\n   * @memberof MgtPicker\n   */\n  @property({\n    attribute: 'resource',\n    type: String\n  })\n  public resource: string;\n\n  /**\n   * Api version to use for request\n   *\n   * @type {string}\n   * @memberof MgtPicker\n   */\n  @property({\n    attribute: 'version',\n    type: String\n  })\n  public version = 'v1.0';\n\n  /**\n   * Maximum number of pages to get for the resource\n   * default = 3\n   * if <= 0, all pages will be fetched\n   *\n   * @type {number}\n   * @memberof MgtPicker\n   */\n  @property({\n    attribute: 'max-pages',\n    type: Number\n  })\n  public maxPages = 3;\n\n  /**\n   * A placeholder for the picker\n   *\n   * @type {string}\n   * @memberof MgtPicker\n   */\n  @property({\n    attribute: 'placeholder',\n    type: String\n  })\n  public placeholder: string;\n\n  /**\n   * Key to be rendered in the picker\n   *\n   * @type {string}\n   * @memberof MgtPicker\n   */\n  @property({\n    attribute: 'key-name',\n    type: String\n  })\n  public keyName: string;\n\n  /**\n   * Entity to be rendered in the picker\n   *\n   * @type {string}\n   * @memberof MgtPicker\n   */\n  @property({\n    attribute: 'entity-type',\n    type: String\n  })\n  public entityType: string;\n\n  /**\n   * The scopes to request\n   *\n   * @type {string[]}\n   * @memberof MgtPicker\n   */\n  @property({\n    attribute: 'scopes',\n    converter: value => {\n      return value ? value.toLowerCase().split(',') : null;\n    }\n  })\n  public scopes: string[] = [];\n\n  /**\n   * Enables cache on the response from the specified resource\n   * default = false\n   *\n   * @type {boolean}\n   * @memberof MgtPicker\n   */\n  @property({\n    attribute: 'cache-enabled',\n    type: Boolean\n  })\n  public cacheEnabled = false;\n\n  /**\n   * Invalidation period of the cache for the responses in milliseconds\n   *\n   * @type {number}\n   * @memberof MgtPicker\n   */\n  @property({\n    attribute: 'cache-invalidation-period',\n    type: Number\n  })\n  public cacheInvalidationPeriod = 0;\n\n  /**\n   * Sets the currently selected value for the picker\n   * Must be present as an option in the supplied data returned from the the underlying graph query\n   *\n   * @type {string}\n   * @memberof MgtPicker\n   */\n  @property({\n    attribute: 'selected-value',\n    type: String\n  })\n  public selectedValue: string;\n\n  @state() private response: Entity[];\n\n  constructor() {\n    super();\n    this.placeholder = this.strings.comboboxPlaceholder;\n    this.entityType = null;\n    this.keyName = null;\n  }\n\n  /**\n   * Refresh the data\n   *\n   * @param {boolean} [hardRefresh=false]\n   * if false (default), the component will only update if the data changed\n   * if true, the data will be first cleared and reloaded completely\n   * @memberof MgtPicker\n   */\n  public refresh(hardRefresh = false) {\n    if (hardRefresh) {\n      this.clearState();\n    }\n    void this._task.run();\n  }\n\n  /**\n   * Clears the state of the component\n   *\n   * @protected\n   * @memberof MgtPicker\n   */\n  protected clearState(): void {\n    this.response = null;\n    this.error = null;\n  }\n\n  public renderLoading = (): TemplateResult => {\n    if (!this.response) {\n      return this.renderTemplate('loading', null);\n    }\n    return this.renderContent();\n  };\n\n  /**\n   * Invoked on each update to perform rendering the picker. This method must return\n   * a lit-html TemplateResult. Setting properties inside this method will *not*\n   * trigger the element to update.\n   */\n  public renderContent = () => {\n    const error = this.error ? (this.error as Error) : null;\n    if (error && this.hasTemplate('error')) {\n      return this.renderTemplate('error', { error }, 'error');\n    } else if (this.hasTemplate('no-data')) {\n      return this.renderTemplate('no-data', null);\n    }\n\n    return this.response?.length > 0 ? this.renderPicker() : this.renderGet();\n  };\n\n  /**\n   * Render picker.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPicker\n   */\n  protected renderPicker(): TemplateResult {\n    return mgtHtml`\n      <fluent-combobox\n        @keydown=${this.handleComboboxKeydown}\n        current-value=${ifDefined(this.selectedValue)}\n        part=\"picker\"\n        class=\"picker\"\n        id=\"combobox\"\n        autocomplete=\"list\"\n        placeholder=${this.placeholder}>\n          ${this.response.map(\n            item => html`\n            <fluent-option value=${item.id} @click=${(e: MouseEvent) => this.handleClick(e, item)}> ${\n              item[this.keyName]\n            } </fluent-option>`\n          )}\n      </fluent-combobox>\n     `;\n  }\n\n  /**\n   * Renders mgt-get which does a GET request to the resource.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPicker\n   */\n  protected renderGet(): TemplateResult {\n    return mgtHtml`\n      <mgt-get\n        class=\"mgt-get\"\n        resource=${this.resource}\n        version=${this.version}\n        .scopes=${this.scopes}\n        max-pages=${this.maxPages}\n        ?cache-enabled=${this.cacheEnabled}\n        ?cache-invalidation-period=${this.cacheInvalidationPeriod}>\n      </mgt-get>`;\n  }\n\n  /**\n   * When the component is first updated wire up the event listeners.\n   * @param changedProperties a map of changed properties with old values\n   */\n  protected firstUpdated(changedProperties: PropertyValueMap<unknown> | Map<PropertyKey, unknown>): void {\n    super.firstUpdated(changedProperties);\n    const parent = this.renderRoot;\n    if (parent) {\n      parent.addEventListener('dataChange', (e: CustomEvent<DataChangedDetail>): void => this.handleDataChange(e));\n    } else {\n      console.error('🦒: mgt-picker component requires a renderRoot. Something has gone horribly wrong.');\n    }\n  }\n\n  private handleDataChange(e: CustomEvent<DataChangedDetail>): void {\n    const response = e.detail.response.value;\n    const error = e.detail.error ? e.detail.error : null;\n    this.response = response;\n    this.error = error;\n  }\n\n  private handleClick(_e: MouseEvent, item: Entity) {\n    this.fireCustomEvent('selectionChanged', item, true, false, true);\n  }\n\n  /**\n   * Handles getting the fluent option item in the dropdown and fires a custom\n   * event with it when you press Enter or Backspace keys.\n   *\n   * @param {KeyboardEvent} e\n   */\n  private readonly handleComboboxKeydown = (e: KeyboardEvent) => {\n    let value: string;\n    let item: Entity;\n    const keyName: string = e.key;\n    const comboBox: HTMLElement = e.target as HTMLElement;\n    const fluentOptionEl = comboBox.querySelector('.selected');\n    if (fluentOptionEl) {\n      value = fluentOptionEl.getAttribute('value');\n    }\n\n    if ('Enter' === keyName) {\n      if (value) {\n        item = this.response.filter(res => res.id === value).pop();\n        this.fireCustomEvent('selectionChanged', item, true, false, true);\n      }\n    }\n  };\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/consistent-type-definitions */\nimport { OfficeGraphInsightString,ViewType } from '@microsoft/mgt-components/dist/es6/exports';\nimport { registerMgtFileListComponent } from '@microsoft/mgt-components/dist/es6/components/components';\nimport { TemplateContext,ComponentMediaQuery,TemplateRenderedData } from '@microsoft/mgt-element';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraph from '@microsoft/microsoft-graph-types';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraphBeta from '@microsoft/microsoft-graph-types-beta';\nimport {wrapMgt} from '../Mgt';\n\nexport type FileListProps = {\n\tfileListQuery?: string;\n\tdisplayName?: string;\n\tcardTitle?: string;\n\tfileQueries?: string[];\n\tfiles?: MicrosoftGraph.DriveItem[];\n\tsiteId?: string;\n\tdriveId?: string;\n\tgroupId?: string;\n\titemId?: string;\n\titemPath?: string;\n\tuserId?: string;\n\tinsightType?: OfficeGraphInsightString;\n\titemView?: ViewType;\n\tfileExtensions?: string[];\n\tpageSize?: number;\n\tdisableOpenOnClick?: boolean;\n\thideMoreFilesButton?: boolean;\n\tmaxFileSize?: number;\n\tenableFileUpload?: boolean;\n\tmaxUploadFile?: number;\n\texcludedFileExtensions?: string[];\n\ttemplateContext?: TemplateContext;\n\tmediaQuery?: ComponentMediaQuery;\n\titemClick?: (e: CustomEvent<MicrosoftGraph.DriveItem>) => void;\n\ttemplateRendered?: (e: CustomEvent<TemplateRenderedData>) => void;\n}\n\nexport const FileList = wrapMgt<FileListProps>('file-list', registerMgtFileListComponent);\n\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/consistent-type-definitions */\nimport { OfficeGraphInsightString,ViewType } from '@microsoft/mgt-components/dist/es6/exports';\nimport { registerMgtFileComponent } from '@microsoft/mgt-components/dist/es6/components/components';\nimport { TemplateContext,ComponentMediaQuery,TemplateRenderedData } from '@microsoft/mgt-element';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraph from '@microsoft/microsoft-graph-types';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraphBeta from '@microsoft/microsoft-graph-types-beta';\nimport {wrapMgt} from '../Mgt';\n\nexport type FileProps = {\n\tfileQuery?: string;\n\tsiteId?: string;\n\tdriveId?: string;\n\tgroupId?: string;\n\tlistId?: string;\n\tuserId?: string;\n\titemId?: string;\n\titemPath?: string;\n\tinsightType?: OfficeGraphInsightString;\n\tinsightId?: string;\n\tfileDetails?: MicrosoftGraph.DriveItem;\n\tfileIcon?: string;\n\tdriveItem?: MicrosoftGraph.DriveItem;\n\tline1Property?: string;\n\tline2Property?: string;\n\tline3Property?: string;\n\tview?: ViewType;\n\ttemplateContext?: TemplateContext;\n\tmediaQuery?: ComponentMediaQuery;\n\ttemplateRendered?: (e: CustomEvent<TemplateRenderedData>) => void;\n}\n\nexport const File = wrapMgt<FileProps>('file', registerMgtFileComponent);\n\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/consistent-type-definitions */\nimport { registerMgtPickerComponent } from '@microsoft/mgt-components/dist/es6/components/components';\nimport { TemplateContext,ComponentMediaQuery,TemplateRenderedData } from '@microsoft/mgt-element';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraph from '@microsoft/microsoft-graph-types';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraphBeta from '@microsoft/microsoft-graph-types-beta';\nimport {wrapMgt} from '../Mgt';\n\nexport type PickerProps = {\n\tresource?: string;\n\tversion?: string;\n\tmaxPages?: number;\n\tplaceholder?: string;\n\tkeyName?: string;\n\tentityType?: string;\n\tscopes?: string[];\n\tcacheEnabled?: boolean;\n\tcacheInvalidationPeriod?: number;\n\tselectedValue?: string;\n\ttemplateContext?: TemplateContext;\n\tmediaQuery?: ComponentMediaQuery;\n\tselectionChanged?: (e: CustomEvent<any>) => void;\n\ttemplateRendered?: (e: CustomEvent<TemplateRenderedData>) => void;\n}\n\nexport const Picker = wrapMgt<PickerProps>('picker', registerMgtPickerComponent);\n\n"],"names":["_Switch","_FoundationElement","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","FoundationElement","FormAssociatedSwitch","_CheckableFormAssocia","_super2","_this","proxy","document","createElement","CheckableFormAssociated","Switch","_FormAssociatedSwitch","call","initialValue","keypressHandler","e","readOnly","key","keyEnter","keySpace","checked","clickHandler","disabled","setAttribute","value","this","HTMLInputElement","classList","add","remove","prev","next","_get","_getPrototypeOf","prototype","__decorate","attr","attribute","mode","observable","fluentSwitch","compose","baseName","template","context","definition","html","_templateObject","_taggedTemplateLiteral","x","c","event","defaultSlottedNodes","length","slotted","switch","styles","css","display","bodyFont","disabledOpacity","disabledCursor","heightNumber","designUnit","neutralFillInputAltRest","strokeWidth","neutralStrokeStrongRest","neutralFillInputAltHover","neutralStrokeStrongHover","neutralFillInputAltActive","neutralStrokeStrongActive","focusVisible","focusTreatmentTight","neutralFillInputAltFocus","accentFillRest","accentFillHover","accentFillActive","neutralForegroundRest","typeRampBase","foregroundOnAccentRest","foregroundOnAccentHover","foregroundOnAccentActive","withBehaviors","DirectionalStyleSheetBehavior","_templateObject2","_templateObject3","forcedColorsStylesheetBehavior","_templateObject4","SystemColors","FieldText","Field","Highlight","HighlightText","GrayText","strings","label","on","off","MgtThemeToggle","_MgtBaseTaskComponent","onSwitchChanged","darkModeActive","target","prefersDarkMode","window","matchMedia","matches","applyTheme","get","changedProperties","has","active","targetTheme","body","concat","fireCustomEvent","MgtBaseTaskComponent","property","reflect","type","String","converter","fromAttribute","toAttribute","ThemeToggle","wrapMgt","registerFluentComponents","registerComponent","People","registerMgtPeopleComponent","PersonCard","registerMgtPersonCardComponent","useStyles","makeStyles","root","justifyContent","alignItems","height","message","paddingLeft","GetDefaultContent","props","_jsx","className","children","_jsxs","_Fragment","Picker","resource","scopes","placeholder","keyName","FileList","Get","maxPages","Messages","Loading","PageHeader","title","description","Spinner","File","driveId","itemId","Person","personQuery","personCardInteraction","PersonCardInteraction","click","Agenda","comboboxPlaceholder","registerMgtPickerComponent","fluentCombobox","fluentOption","registerMgtGetComponent","MgtPicker","_MgtTemplatedTaskComp","version","cacheEnabled","cacheInvalidationPeriod","renderLoading","response","renderContent","renderTemplate","error","hasTemplate","_a","renderPicker","renderGet","handleComboboxKeydown","item","fluentOptionEl","querySelector","getAttribute","filter","res","id","pop","entityType","undefined","clearState","_task","run","_this2","mgtHtml","ifDefined","selectedValue","map","handleClick","_this3","parent","renderRoot","addEventListener","handleDataChange","console","detail","_e","MgtTemplatedTaskComponent","Number","toLowerCase","split","Boolean","state","registerMgtFileListComponent","registerMgtFileComponent"],"sourceRoot":""}