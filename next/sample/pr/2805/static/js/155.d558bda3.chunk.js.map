{"version":3,"file":"static/js/155.d558bda3.chunk.js","mappings":"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","sources":["components/PageHeader.tsx","../../../packages/mgt-react/src/generated/file-list.ts","../../../packages/mgt-react/src/generated/teams-channel-picker.ts","pages/Files/ChannelFiles.tsx","../../../packages/mgt-react/src/generated/picker.ts","pages/Files/SiteFiles.tsx","pages/FilesPage.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Divider, makeStyles } from '@fluentui/react-components';\n\nexport interface IPageHeaderProps {\n  title: string;\n  description: string;\n}\n\nconst useStyles = makeStyles({\n  divider: {\n    alignItems: 'self-start',\n    paddingTop: '20px',\n    marginBottom: '20px'\n  }\n});\n\nexport const PageHeader: React.FunctionComponent<IPageHeaderProps> = props => {\n  const styles = useStyles();\n  return (\n    <div>\n      <h1>{props.title}</h1>\n      <div>{props.description}</div>\n      <Divider className={styles.divider} />\n    </div>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/consistent-type-definitions */\nimport { OfficeGraphInsightString,ViewType } from '@microsoft/mgt-components/dist/es6/exports';\nimport { registerMgtFileListComponent } from '@microsoft/mgt-components/dist/es6/components/components';\nimport { TemplateContext,ComponentMediaQuery,TemplateRenderedData } from '@microsoft/mgt-element';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraph from '@microsoft/microsoft-graph-types';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraphBeta from '@microsoft/microsoft-graph-types-beta';\nimport {wrapMgt} from '../Mgt';\n\nexport type FileListProps = {\n\tfileListQuery?: string;\n\tdisplayName?: string;\n\tcardTitle?: string;\n\tfileQueries?: string[];\n\tfiles?: MicrosoftGraph.DriveItem[];\n\tsiteId?: string;\n\tdriveId?: string;\n\tgroupId?: string;\n\titemId?: string;\n\titemPath?: string;\n\tuserId?: string;\n\tinsightType?: OfficeGraphInsightString;\n\titemView?: ViewType;\n\tfileExtensions?: string[];\n\tpageSize?: number;\n\tdisableOpenOnClick?: boolean;\n\thideMoreFilesButton?: boolean;\n\tmaxFileSize?: number;\n\tenableFileUpload?: boolean;\n\tmaxUploadFile?: number;\n\texcludedFileExtensions?: string[];\n\ttemplateContext?: TemplateContext;\n\tmediaQuery?: ComponentMediaQuery;\n\titemClick?: (e: CustomEvent<MicrosoftGraph.DriveItem>) => void;\n\ttemplateRendered?: (e: CustomEvent<TemplateRenderedData>) => void;\n}\n\nexport const FileList = wrapMgt<FileListProps>('file-list', registerMgtFileListComponent);\n\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/consistent-type-definitions */\nimport { SelectedChannel } from '@microsoft/mgt-components/dist/es6/exports';\nimport { registerMgtTeamsChannelPickerComponent } from '@microsoft/mgt-components/dist/es6/components/components';\nimport { TemplateContext,ComponentMediaQuery,TemplateRenderedData } from '@microsoft/mgt-element';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraph from '@microsoft/microsoft-graph-types';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraphBeta from '@microsoft/microsoft-graph-types-beta';\nimport {wrapMgt} from '../Mgt';\n\nexport type TeamsChannelPickerProps = {\n\tselectedItem?: SelectedChannel;\n\ttemplateContext?: TemplateContext;\n\tmediaQuery?: ComponentMediaQuery;\n\tselectionChanged?: (e: CustomEvent<SelectedChannel | null>) => void;\n\ttemplateRendered?: (e: CustomEvent<TemplateRenderedData>) => void;\n}\n\nexport const TeamsChannelPicker = wrapMgt<TeamsChannelPickerProps>('teams-channel-picker', registerMgtTeamsChannelPickerComponent);\n\n","import * as React from 'react';\nimport { FileList, SelectedChannel, TeamsChannelPicker } from '@microsoft/mgt-react';\nimport { makeStyles } from '@fluentui/react-components';\n\nconst useStyles = makeStyles({\n  fileGrid: {\n    paddingBottom: '10px'\n  }\n});\n\nexport const ChannelFiles: React.FunctionComponent = () => {\n  const [selectedChannel, setSelectedChannel] = React.useState<SelectedChannel | null>(null);\n  const styles = useStyles();\n\n  return (\n    <div>\n      <TeamsChannelPicker\n        selectionChanged={e => setSelectedChannel(e.detail)}\n        className={styles.fileGrid}\n      ></TeamsChannelPicker>\n\n      {selectedChannel && (\n        <FileList\n          groupId={selectedChannel.team.id}\n          itemPath={selectedChannel.channel.displayName}\n          pageSize={100}\n        ></FileList>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/consistent-type-definitions */\nimport { registerMgtPickerComponent } from '@microsoft/mgt-components/dist/es6/components/components';\nimport { TemplateContext,ComponentMediaQuery,TemplateRenderedData } from '@microsoft/mgt-element';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraph from '@microsoft/microsoft-graph-types';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraphBeta from '@microsoft/microsoft-graph-types-beta';\nimport {wrapMgt} from '../Mgt';\n\nexport type PickerProps = {\n\tresource?: string;\n\tversion?: string;\n\tmaxPages?: number;\n\tplaceholder?: string;\n\tkeyName?: string;\n\tentityType?: string;\n\tscopes?: string[];\n\tcacheEnabled?: boolean;\n\tcacheInvalidationPeriod?: number;\n\tselectedValue?: string;\n\ttemplateContext?: TemplateContext;\n\tmediaQuery?: ComponentMediaQuery;\n\tselectionChanged?: (e: CustomEvent<any>) => void;\n\ttemplateRendered?: (e: CustomEvent<TemplateRenderedData>) => void;\n}\n\nexport const Picker = wrapMgt<PickerProps>('picker', registerMgtPickerComponent);\n\n","import * as React from 'react';\nimport { FileList, Picker, Providers } from '@microsoft/mgt-react';\nimport { makeStyles } from '@fluentui/react-components';\n\nconst useStyles = makeStyles({\n  picker: {\n    paddingBottom: '10px',\n    display: 'block'\n  }\n});\n\nexport const SiteFiles: React.FunctionComponent = () => {\n  const [selectedList, setSelectedList] = React.useState<any>(null);\n  const [driveId, setDriveId] = React.useState<string>('');\n  const [error, setError] = React.useState<string>('');\n  const styles = useStyles();\n\n  const onSelectionChanged = async (e: CustomEvent) => {\n    if (e.detail.list.template === 'documentLibrary') {\n      const drive = await Providers.globalProvider.graph.client.api(`/sites/root/lists/${e.detail.id}/drive`).get();\n      setSelectedList(e.detail);\n      setDriveId(drive.id);\n      setError('');\n    } else {\n      setSelectedList(null);\n      setDriveId('');\n      setError('Please select a document library');\n    }\n  };\n\n  return (\n    <div>\n      <Picker\n        resource=\"/sites/root/lists\"\n        placeholder=\"Select a list\"\n        keyName=\"displayName\"\n        selectionChanged={onSelectionChanged}\n        className={styles.picker}\n      ></Picker>\n\n      {selectedList && driveId && <FileList itemPath=\"/\" driveId={driveId} pageSize={100}></FileList>}\n\n      {error && <div>{error}</div>}\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { PageHeader } from '../components/PageHeader';\nimport { FileList } from '@microsoft/mgt-react';\nimport {\n  SelectTabData,\n  SelectTabEvent,\n  Tab,\n  TabList,\n  TabValue,\n  shorthands,\n  makeStyles\n} from '@fluentui/react-components';\nimport { ChannelFiles } from './Files/ChannelFiles';\nimport { SiteFiles } from './Files/SiteFiles';\n\nconst useStyles = makeStyles({\n  panels: {\n    ...shorthands.padding('10px')\n  }\n});\n\nconst FilesPage: React.FunctionComponent = () => {\n  const styles = useStyles();\n  const [selectedTab, setSelectedTab] = React.useState<TabValue>('my');\n\n  const onTabSelect = (event: SelectTabEvent, data: SelectTabData) => {\n    setSelectedTab(data.value);\n  };\n\n  return (\n    <>\n      <PageHeader\n        title={'Files'}\n        description={\n          'View your files from accross your OneDrive, channels you are a member of and your SharePoint sites'\n        }\n      ></PageHeader>\n\n      <div>\n        <TabList selectedValue={selectedTab} onTabSelect={onTabSelect}>\n          <Tab value=\"my\">My Files</Tab>\n          <Tab value=\"recent\">Recent Files</Tab>\n          <Tab value=\"site\">Site Files</Tab>\n          <Tab value=\"channel\">Channel Files</Tab>\n        </TabList>\n        <div className={styles.panels}>\n          {selectedTab === 'my' && <FileList pageSize={100}></FileList>}\n          {selectedTab === 'recent' && <FileList insightType=\"used\" enableFileUpload={false} pageSize={100}></FileList>}\n          {selectedTab === 'site' && <SiteFiles />}\n          {selectedTab === 'channel' && <ChannelFiles />}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default FilesPage;\n"],"names":["useStyles","makeStyles","divider","alignItems","paddingTop","marginBottom","PageHeader","props","styles","_jsxs","children","_jsx","title","description","Divider","className","FileList","wrapMgt","registerMgtFileListComponent","TeamsChannelPicker","registerMgtTeamsChannelPickerComponent","fileGrid","paddingBottom","ChannelFiles","_React$useState","React","_React$useState2","_slicedToArray","selectedChannel","setSelectedChannel","selectionChanged","e","detail","groupId","team","id","itemPath","channel","displayName","pageSize","Picker","registerMgtPickerComponent","picker","display","SiteFiles","selectedList","setSelectedList","_React$useState3","_React$useState4","driveId","setDriveId","_React$useState5","_React$useState6","error","setError","onSelectionChanged","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","drive","wrap","_context","prev","next","list","template","Providers","globalProvider","graph","client","api","concat","get","sent","stop","_x","apply","arguments","resource","placeholder","keyName","panels","_objectSpread","shorthands","padding","selectedTab","setSelectedTab","_Fragment","TabList","selectedValue","onTabSelect","event","data","value","Tab","insightType","enableFileUpload"],"sourceRoot":""}