{"version":3,"file":"static/js/429.4aa5bfc8.chunk.js","mappings":"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","sources":["../../../node_modules/@fluentui/web-components/dist/esm/divider/index.js","../../../node_modules/@microsoft/fast-foundation/dist/esm/divider/divider.template.js","../../../node_modules/@fluentui/web-components/dist/esm/divider/divider.styles.js","../../../node_modules/@microsoft/fast-foundation/dist/esm/skeleton/skeleton.js","../../../node_modules/@fluentui/web-components/dist/esm/skeleton/index.js","../../../node_modules/@microsoft/fast-foundation/dist/esm/skeleton/skeleton.template.js","../../../node_modules/@fluentui/web-components/dist/esm/skeleton/skeleton.styles.js","../../../node_modules/@microsoft/fast-foundation/dist/esm/tooltip/tooltip.options.js","../../../node_modules/@microsoft/fast-foundation/dist/esm/tooltip/tooltip.js","../../../node_modules/@fluentui/web-components/dist/esm/tooltip/index.js","../../../node_modules/@microsoft/fast-foundation/dist/esm/tooltip/tooltip.template.js","../../../node_modules/@fluentui/web-components/dist/esm/tooltip/tooltip.styles.js","../../../node_modules/@microsoft/fast-foundation/dist/esm/utilities/intersection-service.js","../../../node_modules/@microsoft/fast-foundation/dist/esm/anchored-region/anchored-region.js","../../../node_modules/@microsoft/fast-foundation/dist/esm/divider/divider.options.js","../../../node_modules/@microsoft/fast-foundation/dist/esm/divider/divider.js"],"sourcesContent":["import { Divider, dividerTemplate as template } from '@microsoft/fast-foundation';\nimport { dividerStyles as styles } from './divider.styles';\n/**\n * The Fluent Divider Element. Implements {@link @microsoft/fast-foundation#Divider},\n * {@link @microsoft/fast-foundation#dividerTemplate}\n *\n *\n * @public\n * @remarks\n * HTML Element: \\<fluent-divider\\>\n */\nexport const fluentDivider = Divider.compose({\n    baseName: 'divider',\n    template,\n    styles,\n});\n/**\n * Styles for Divider\n * @public\n */\nexport const dividerStyles = styles;\n/**\n * Base class for Fluent Divider\n * @public\n */\nexport { Divider };\n","import { html } from \"@microsoft/fast-element\";\n/**\n * The template for the {@link @microsoft/fast-foundation#Divider} component.\n * @public\n */\nexport const dividerTemplate = (context, definition) => html `\n    <template role=\"${x => x.role}\" aria-orientation=\"${x => x.orientation}\"></template>\n`;\n","import { css } from '@microsoft/fast-element';\nimport { display } from '@microsoft/fast-foundation';\nimport { designUnit, neutralStrokeDividerRest, strokeWidth } from '../design-tokens';\nexport const dividerStyles = (context, definition) => css `\n    ${display('block')} :host {\n      box-sizing: content-box;\n      height: 0;\n      border: none;\n      border-top: calc(${strokeWidth} * 1px) solid ${neutralStrokeDividerRest};\n    }\n\n    :host([orientation=\"vertical\"]) {\n      border: none;\n      height: 100%;\n      margin: 0 calc(${designUnit} * 1px);\n      border-left: calc(${strokeWidth} * 1px) solid ${neutralStrokeDividerRest};\n  }\n  `;\n","import { __decorate } from \"tslib\";\nimport { attr } from \"@microsoft/fast-element\";\nimport { FoundationElement } from \"../foundation-element/foundation-element.js\";\n/**\n * A Skeleton Custom HTML Element.\n *\n * @slot - The default slot\n *\n * @public\n */\nexport class Skeleton extends FoundationElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * Indicates what the shape of the Skeleton should be.\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: shape\n         */\n        this.shape = \"rect\";\n    }\n}\n__decorate([\n    attr\n], Skeleton.prototype, \"fill\", void 0);\n__decorate([\n    attr\n], Skeleton.prototype, \"shape\", void 0);\n__decorate([\n    attr\n], Skeleton.prototype, \"pattern\", void 0);\n__decorate([\n    attr({ mode: \"boolean\" })\n], Skeleton.prototype, \"shimmer\", void 0);\n","import { Skeleton, skeletonTemplate as template } from '@microsoft/fast-foundation';\nimport { skeletonStyles as styles } from './skeleton.styles';\n/**\n * The Fluent Skeleton Element. Implements {@link @microsoft/fast-foundation#Skeleton},\n * {@link @microsoft/fast-foundation#skeletonTemplate}\n *\n *\n * @public\n * @remarks\n * HTML Element: \\<fluent-skeleton\\>\n */\nexport const fluentSkeleton = Skeleton.compose({\n    baseName: 'skeleton',\n    template,\n    styles,\n});\n/**\n * Styles for Skeleton\n * @public\n */\nexport const skeletonStyles = styles;\n/**\n * Skeleton base class\n * @public\n */\nexport { Skeleton };\n","import { html, when } from \"@microsoft/fast-element\";\n/**\n * The template for the fast-skeleton component\n * @public\n */\nexport const skeletonTemplate = (context, definition) => html `\n    <template\n        class=\"${x => (x.shape === \"circle\" ? \"circle\" : \"rect\")}\"\n        pattern=\"${x => x.pattern}\"\n        ?shimmer=\"${x => x.shimmer}\"\n    >\n        ${when(x => x.shimmer === true, html `\n                <span class=\"shimmer\"></span>\n            `)}\n        <object type=\"image/svg+xml\" data=\"${x => x.pattern}\" role=\"presentation\">\n            <img class=\"pattern\" src=\"${x => x.pattern}\" />\n        </object>\n        <slot></slot>\n    </template>\n`;\n","import { css } from '@microsoft/fast-element';\nimport { display, forcedColorsStylesheetBehavior } from '@microsoft/fast-foundation';\nimport { SystemColors } from \"@microsoft/fast-web-utilities\";\nimport { controlCornerRadius, neutralFillSecondaryHover, neutralFillSecondaryRest } from '../design-tokens';\nexport const skeletonStyles = (context, definition) => css `\n    ${display('block')} :host {\n      --skeleton-fill-default: ${neutralFillSecondaryRest};\n      overflow: hidden;\n      width: 100%;\n      position: relative;\n      background-color: var(--skeleton-fill, var(--skeleton-fill-default));\n      --skeleton-animation-gradient-default: linear-gradient(\n        270deg,\n        var(--skeleton-fill, var(--skeleton-fill-default)) 0%,\n        ${neutralFillSecondaryHover} 51%,\n        var(--skeleton-fill, var(--skeleton-fill-default)) 100%\n      );\n      --skeleton-animation-timing-default: ease-in-out;\n    }\n\n    :host(.rect) {\n      border-radius: calc(${controlCornerRadius} * 1px);\n    }\n\n    :host(.circle) {\n      border-radius: 100%;\n      overflow: hidden;\n    }\n\n    object {\n      position: absolute;\n      width: 100%;\n      height: auto;\n      z-index: 2;\n    }\n\n    object img {\n      width: 100%;\n      height: auto;\n    }\n\n    ${display('block')} span.shimmer {\n      position: absolute;\n      width: 100%;\n      height: 100%;\n      background-image: var(--skeleton-animation-gradient, var(--skeleton-animation-gradient-default));\n      background-size: 0px 0px / 90% 100%;\n      background-repeat: no-repeat;\n      background-color: var(--skeleton-animation-fill, ${neutralFillSecondaryRest});\n      animation: shimmer 2s infinite;\n      animation-timing-function: var(--skeleton-animation-timing, var(--skeleton-timing-default));\n      animation-direction: normal;\n      z-index: 1;\n    }\n\n    ::slotted(svg) {\n      z-index: 2;\n    }\n\n    ::slotted(.pattern) {\n      width: 100%;\n      height: 100%;\n    }\n\n    @keyframes shimmer {\n      0% {\n        transform: translateX(-100%);\n      }\n      100% {\n        transform: translateX(100%);\n      }\n    }\n  `.withBehaviors(forcedColorsStylesheetBehavior(css `\n        :host{\n          background-color: ${SystemColors.CanvasText};\n        }\n      `));\n","/**\n * Enumerates possible tooltip positions\n *\n * @public\n */\nexport const TooltipPosition = {\n    /**\n     * The tooltip is positioned above the element\n     */\n    top: \"top\",\n    /**\n     * The tooltip is positioned to the right of the element\n     */\n    right: \"right\",\n    /**\n     * The tooltip is positioned below the element\n     */\n    bottom: \"bottom\",\n    /**\n     * The tooltip is positioned to the left of the element\n     */\n    left: \"left\",\n    /**\n     * The tooltip is positioned before the element\n     */\n    start: \"start\",\n    /**\n     * The tooltip is positioned after the element\n     */\n    end: \"end\",\n    /**\n     * The tooltip is positioned above the element and to the left\n     */\n    topLeft: \"top-left\",\n    /**\n     * The tooltip is positioned above the element and to the right\n     */\n    topRight: \"top-right\",\n    /**\n     * The tooltip is positioned below the element and to the left\n     */\n    bottomLeft: \"bottom-left\",\n    /**\n     * The tooltip is positioned below the element and to the right\n     */\n    bottomRight: \"bottom-right\",\n    /**\n     * The tooltip is positioned above the element and to the left\n     */\n    topStart: \"top-start\",\n    /**\n     * The tooltip is positioned above the element and to the right\n     */\n    topEnd: \"top-end\",\n    /**\n     * The tooltip is positioned below the element and to the left\n     */\n    bottomStart: \"bottom-start\",\n    /**\n     * The tooltip is positioned below the element and to the right\n     */\n    bottomEnd: \"bottom-end\",\n};\n","import { __decorate } from \"tslib\";\nimport { attr, DOM, observable } from \"@microsoft/fast-element\";\nimport { Direction, keyEscape } from \"@microsoft/fast-web-utilities\";\nimport { getDirection } from \"../utilities/direction.js\";\nimport { FoundationElement } from \"../foundation-element/foundation-element.js\";\nimport { TooltipPosition } from \"./tooltip.options.js\";\nexport { TooltipPosition };\n/**\n * An Tooltip Custom HTML Element.\n *\n * @slot - The default slot for the tooltip content\n * @csspart tooltip - The tooltip element\n * @fires dismiss - Fires a custom 'dismiss' event when the tooltip is visible and escape key is pressed\n *\n * @public\n */\nexport class Tooltip extends FoundationElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * The id of the element the tooltip is anchored to\n         *\n         * @defaultValue - undefined\n         * @public\n         * HTML Attribute: anchor\n         */\n        this.anchor = \"\";\n        /**\n         * The delay in milliseconds before a tooltip is shown after a hover event\n         *\n         * @defaultValue - 300\n         * @public\n         * HTML Attribute: delay\n         */\n        this.delay = 300;\n        /**\n         * Controls when the tooltip updates its position, default is 'anchor' which only updates when\n         * the anchor is resized.  'auto' will update on scroll/resize events.\n         * Corresponds to anchored-region auto-update-mode.\n         * @public\n         * @remarks\n         * HTML Attribute: auto-update-mode\n         */\n        this.autoUpdateMode = \"anchor\";\n        /**\n         * the html element currently being used as anchor.\n         * Setting this directly overrides the anchor attribute.\n         *\n         * @public\n         */\n        this.anchorElement = null;\n        /**\n         * The current viewport element instance\n         *\n         * @internal\n         */\n        this.viewportElement = null;\n        /**\n         * @internal\n         * @defaultValue \"dynamic\"\n         */\n        this.verticalPositioningMode = \"dynamic\";\n        /**\n         * @internal\n         * @defaultValue \"dynamic\"\n         */\n        this.horizontalPositioningMode = \"dynamic\";\n        /**\n         * @internal\n         */\n        this.horizontalInset = \"false\";\n        /**\n         * @internal\n         */\n        this.verticalInset = \"false\";\n        /**\n         * @internal\n         */\n        this.horizontalScaling = \"content\";\n        /**\n         * @internal\n         */\n        this.verticalScaling = \"content\";\n        /**\n         * @internal\n         */\n        this.verticalDefaultPosition = undefined;\n        /**\n         * @internal\n         */\n        this.horizontalDefaultPosition = undefined;\n        /**\n         * @internal\n         */\n        this.tooltipVisible = false;\n        /**\n         * Track current direction to pass to the anchored region\n         * updated when tooltip is shown\n         *\n         * @internal\n         */\n        this.currentDirection = Direction.ltr;\n        /**\n         * The timer that tracks delay time before the tooltip is shown on hover\n         */\n        this.showDelayTimer = null;\n        /**\n         * The timer that tracks delay time before the tooltip is hidden\n         */\n        this.hideDelayTimer = null;\n        /**\n         * Indicates whether the anchor is currently being hovered or has focus\n         */\n        this.isAnchorHoveredFocused = false;\n        /**\n         * Indicates whether the region is currently being hovered\n         */\n        this.isRegionHovered = false;\n        /**\n         * invoked when the anchored region's position relative to the anchor changes\n         *\n         * @internal\n         */\n        this.handlePositionChange = (ev) => {\n            this.classList.toggle(\"top\", this.region.verticalPosition === \"start\");\n            this.classList.toggle(\"bottom\", this.region.verticalPosition === \"end\");\n            this.classList.toggle(\"inset-top\", this.region.verticalPosition === \"insetStart\");\n            this.classList.toggle(\"inset-bottom\", this.region.verticalPosition === \"insetEnd\");\n            this.classList.toggle(\"center-vertical\", this.region.verticalPosition === \"center\");\n            this.classList.toggle(\"left\", this.region.horizontalPosition === \"start\");\n            this.classList.toggle(\"right\", this.region.horizontalPosition === \"end\");\n            this.classList.toggle(\"inset-left\", this.region.horizontalPosition === \"insetStart\");\n            this.classList.toggle(\"inset-right\", this.region.horizontalPosition === \"insetEnd\");\n            this.classList.toggle(\"center-horizontal\", this.region.horizontalPosition === \"center\");\n        };\n        /**\n         * mouse enters region\n         */\n        this.handleRegionMouseOver = (ev) => {\n            this.isRegionHovered = true;\n        };\n        /**\n         * mouse leaves region\n         */\n        this.handleRegionMouseOut = (ev) => {\n            this.isRegionHovered = false;\n            this.startHideDelayTimer();\n        };\n        /**\n         * mouse enters anchor\n         */\n        this.handleAnchorMouseOver = (ev) => {\n            if (this.tooltipVisible) {\n                // tooltip is already visible, just set the anchor hover flag\n                this.isAnchorHoveredFocused = true;\n                return;\n            }\n            this.startShowDelayTimer();\n        };\n        /**\n         * mouse leaves anchor\n         */\n        this.handleAnchorMouseOut = (ev) => {\n            this.isAnchorHoveredFocused = false;\n            this.clearShowDelayTimer();\n            this.startHideDelayTimer();\n        };\n        /**\n         * anchor gets focus\n         */\n        this.handleAnchorFocusIn = (ev) => {\n            this.startShowDelayTimer();\n        };\n        /**\n         * anchor loses focus\n         */\n        this.handleAnchorFocusOut = (ev) => {\n            this.isAnchorHoveredFocused = false;\n            this.clearShowDelayTimer();\n            this.startHideDelayTimer();\n        };\n        /**\n         * starts the hide timer\n         */\n        this.startHideDelayTimer = () => {\n            this.clearHideDelayTimer();\n            if (!this.tooltipVisible) {\n                return;\n            }\n            // allow 60 ms for account for pointer to move between anchor/tooltip\n            // without hiding tooltip\n            this.hideDelayTimer = window.setTimeout(() => {\n                this.updateTooltipVisibility();\n            }, 60);\n        };\n        /**\n         * clears the hide delay\n         */\n        this.clearHideDelayTimer = () => {\n            if (this.hideDelayTimer !== null) {\n                clearTimeout(this.hideDelayTimer);\n                this.hideDelayTimer = null;\n            }\n        };\n        /**\n         * starts the show timer if not currently running\n         */\n        this.startShowDelayTimer = () => {\n            if (this.isAnchorHoveredFocused) {\n                return;\n            }\n            if (this.delay > 1) {\n                if (this.showDelayTimer === null)\n                    this.showDelayTimer = window.setTimeout(() => {\n                        this.startHover();\n                    }, this.delay);\n                return;\n            }\n            this.startHover();\n        };\n        /**\n         * start hover\n         */\n        this.startHover = () => {\n            this.isAnchorHoveredFocused = true;\n            this.updateTooltipVisibility();\n        };\n        /**\n         * clears the show delay\n         */\n        this.clearShowDelayTimer = () => {\n            if (this.showDelayTimer !== null) {\n                clearTimeout(this.showDelayTimer);\n                this.showDelayTimer = null;\n            }\n        };\n        /**\n         *  Gets the anchor element by id\n         */\n        this.getAnchor = () => {\n            const rootNode = this.getRootNode();\n            if (rootNode instanceof ShadowRoot) {\n                return rootNode.getElementById(this.anchor);\n            }\n            return document.getElementById(this.anchor);\n        };\n        /**\n         * handles key down events to check for dismiss\n         */\n        this.handleDocumentKeydown = (e) => {\n            if (!e.defaultPrevented && this.tooltipVisible) {\n                switch (e.key) {\n                    case keyEscape:\n                        this.isAnchorHoveredFocused = false;\n                        this.updateTooltipVisibility();\n                        this.$emit(\"dismiss\");\n                        break;\n                }\n            }\n        };\n        /**\n         * determines whether to show or hide the tooltip based on current state\n         */\n        this.updateTooltipVisibility = () => {\n            if (this.visible === false) {\n                this.hideTooltip();\n            }\n            else if (this.visible === true) {\n                this.showTooltip();\n                return;\n            }\n            else {\n                if (this.isAnchorHoveredFocused || this.isRegionHovered) {\n                    this.showTooltip();\n                    return;\n                }\n                this.hideTooltip();\n            }\n        };\n        /**\n         * shows the tooltip\n         */\n        this.showTooltip = () => {\n            if (this.tooltipVisible) {\n                return;\n            }\n            this.currentDirection = getDirection(this);\n            this.tooltipVisible = true;\n            document.addEventListener(\"keydown\", this.handleDocumentKeydown);\n            DOM.queueUpdate(this.setRegionProps);\n        };\n        /**\n         * hides the tooltip\n         */\n        this.hideTooltip = () => {\n            if (!this.tooltipVisible) {\n                return;\n            }\n            this.clearHideDelayTimer();\n            if (this.region !== null && this.region !== undefined) {\n                this.region.removeEventListener(\"positionchange\", this.handlePositionChange);\n                this.region.viewportElement = null;\n                this.region.anchorElement = null;\n                this.region.removeEventListener(\"mouseover\", this.handleRegionMouseOver);\n                this.region.removeEventListener(\"mouseout\", this.handleRegionMouseOut);\n            }\n            document.removeEventListener(\"keydown\", this.handleDocumentKeydown);\n            this.tooltipVisible = false;\n        };\n        /**\n         * updates the tooltip anchored region props after it has been\n         * added to the DOM\n         */\n        this.setRegionProps = () => {\n            if (!this.tooltipVisible) {\n                return;\n            }\n            this.region.viewportElement = this.viewportElement;\n            this.region.anchorElement = this.anchorElement;\n            this.region.addEventListener(\"positionchange\", this.handlePositionChange);\n            this.region.addEventListener(\"mouseover\", this.handleRegionMouseOver, {\n                passive: true,\n            });\n            this.region.addEventListener(\"mouseout\", this.handleRegionMouseOut, {\n                passive: true,\n            });\n        };\n    }\n    visibleChanged() {\n        if (this.$fastController.isConnected) {\n            this.updateTooltipVisibility();\n            this.updateLayout();\n        }\n    }\n    anchorChanged() {\n        if (this.$fastController.isConnected) {\n            this.anchorElement = this.getAnchor();\n        }\n    }\n    positionChanged() {\n        if (this.$fastController.isConnected) {\n            this.updateLayout();\n        }\n    }\n    anchorElementChanged(oldValue) {\n        if (this.$fastController.isConnected) {\n            if (oldValue !== null && oldValue !== undefined) {\n                oldValue.removeEventListener(\"mouseover\", this.handleAnchorMouseOver);\n                oldValue.removeEventListener(\"mouseout\", this.handleAnchorMouseOut);\n                oldValue.removeEventListener(\"focusin\", this.handleAnchorFocusIn);\n                oldValue.removeEventListener(\"focusout\", this.handleAnchorFocusOut);\n            }\n            if (this.anchorElement !== null && this.anchorElement !== undefined) {\n                this.anchorElement.addEventListener(\"mouseover\", this.handleAnchorMouseOver, { passive: true });\n                this.anchorElement.addEventListener(\"mouseout\", this.handleAnchorMouseOut, { passive: true });\n                this.anchorElement.addEventListener(\"focusin\", this.handleAnchorFocusIn, {\n                    passive: true,\n                });\n                this.anchorElement.addEventListener(\"focusout\", this.handleAnchorFocusOut, { passive: true });\n                const anchorId = this.anchorElement.id;\n                if (this.anchorElement.parentElement !== null) {\n                    this.anchorElement.parentElement\n                        .querySelectorAll(\":hover\")\n                        .forEach(element => {\n                        if (element.id === anchorId) {\n                            this.startShowDelayTimer();\n                        }\n                    });\n                }\n            }\n            if (this.region !== null &&\n                this.region !== undefined &&\n                this.tooltipVisible) {\n                this.region.anchorElement = this.anchorElement;\n            }\n            this.updateLayout();\n        }\n    }\n    viewportElementChanged() {\n        if (this.region !== null && this.region !== undefined) {\n            this.region.viewportElement = this.viewportElement;\n        }\n        this.updateLayout();\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        this.anchorElement = this.getAnchor();\n        this.updateTooltipVisibility();\n    }\n    disconnectedCallback() {\n        this.hideTooltip();\n        this.clearShowDelayTimer();\n        this.clearHideDelayTimer();\n        super.disconnectedCallback();\n    }\n    /**\n     * updated the properties being passed to the anchored region\n     */\n    updateLayout() {\n        this.verticalPositioningMode = \"locktodefault\";\n        this.horizontalPositioningMode = \"locktodefault\";\n        switch (this.position) {\n            case TooltipPosition.top:\n            case TooltipPosition.bottom:\n                this.verticalDefaultPosition = this.position;\n                this.horizontalDefaultPosition = \"center\";\n                break;\n            case TooltipPosition.right:\n            case TooltipPosition.left:\n            case TooltipPosition.start:\n            case TooltipPosition.end:\n                this.verticalDefaultPosition = \"center\";\n                this.horizontalDefaultPosition = this.position;\n                break;\n            case TooltipPosition.topLeft:\n                this.verticalDefaultPosition = \"top\";\n                this.horizontalDefaultPosition = \"left\";\n                break;\n            case TooltipPosition.topRight:\n                this.verticalDefaultPosition = \"top\";\n                this.horizontalDefaultPosition = \"right\";\n                break;\n            case TooltipPosition.bottomLeft:\n                this.verticalDefaultPosition = \"bottom\";\n                this.horizontalDefaultPosition = \"left\";\n                break;\n            case TooltipPosition.bottomRight:\n                this.verticalDefaultPosition = \"bottom\";\n                this.horizontalDefaultPosition = \"right\";\n                break;\n            case TooltipPosition.topStart:\n                this.verticalDefaultPosition = \"top\";\n                this.horizontalDefaultPosition = \"start\";\n                break;\n            case TooltipPosition.topEnd:\n                this.verticalDefaultPosition = \"top\";\n                this.horizontalDefaultPosition = \"end\";\n                break;\n            case TooltipPosition.bottomStart:\n                this.verticalDefaultPosition = \"bottom\";\n                this.horizontalDefaultPosition = \"start\";\n                break;\n            case TooltipPosition.bottomEnd:\n                this.verticalDefaultPosition = \"bottom\";\n                this.horizontalDefaultPosition = \"end\";\n                break;\n            default:\n                this.verticalPositioningMode = \"dynamic\";\n                this.horizontalPositioningMode = \"dynamic\";\n                this.verticalDefaultPosition = void 0;\n                this.horizontalDefaultPosition = \"center\";\n                break;\n        }\n    }\n}\n__decorate([\n    attr({ mode: \"boolean\" })\n], Tooltip.prototype, \"visible\", void 0);\n__decorate([\n    attr\n], Tooltip.prototype, \"anchor\", void 0);\n__decorate([\n    attr\n], Tooltip.prototype, \"delay\", void 0);\n__decorate([\n    attr\n], Tooltip.prototype, \"position\", void 0);\n__decorate([\n    attr({ attribute: \"auto-update-mode\" })\n], Tooltip.prototype, \"autoUpdateMode\", void 0);\n__decorate([\n    attr({ attribute: \"horizontal-viewport-lock\" })\n], Tooltip.prototype, \"horizontalViewportLock\", void 0);\n__decorate([\n    attr({ attribute: \"vertical-viewport-lock\" })\n], Tooltip.prototype, \"verticalViewportLock\", void 0);\n__decorate([\n    observable\n], Tooltip.prototype, \"anchorElement\", void 0);\n__decorate([\n    observable\n], Tooltip.prototype, \"viewportElement\", void 0);\n__decorate([\n    observable\n], Tooltip.prototype, \"verticalPositioningMode\", void 0);\n__decorate([\n    observable\n], Tooltip.prototype, \"horizontalPositioningMode\", void 0);\n__decorate([\n    observable\n], Tooltip.prototype, \"horizontalInset\", void 0);\n__decorate([\n    observable\n], Tooltip.prototype, \"verticalInset\", void 0);\n__decorate([\n    observable\n], Tooltip.prototype, \"horizontalScaling\", void 0);\n__decorate([\n    observable\n], Tooltip.prototype, \"verticalScaling\", void 0);\n__decorate([\n    observable\n], Tooltip.prototype, \"verticalDefaultPosition\", void 0);\n__decorate([\n    observable\n], Tooltip.prototype, \"horizontalDefaultPosition\", void 0);\n__decorate([\n    observable\n], Tooltip.prototype, \"tooltipVisible\", void 0);\n__decorate([\n    observable\n], Tooltip.prototype, \"currentDirection\", void 0);\n","import { Tooltip as FoundationTooltip, tooltipTemplate as template } from '@microsoft/fast-foundation';\nimport { fillColor, neutralLayerFloating } from '../design-tokens';\nimport { tooltipStyles as styles } from './tooltip.styles';\n/**\n * The Fluent tooltip class\n * @internal\n */\nexport class Tooltip extends FoundationTooltip {\n    /**\n     * @internal\n     */\n    connectedCallback() {\n        super.connectedCallback();\n        fillColor.setValueFor(this, neutralLayerFloating);\n    }\n}\n/**\n * The Fluent Tooltip Custom Element. Implements {@link @microsoft/fast-foundation#Tooltip},\n * {@link @microsoft/fast-foundation#tooltipTemplate}\n *\n *\n * @public\n * @remarks\n * HTML Element: \\<fluent-tooltip\\>\n */\nexport const fluentTooltip = Tooltip.compose({\n    baseName: 'tooltip',\n    baseClass: FoundationTooltip,\n    template,\n    styles,\n});\n","import { html, ref, when } from \"@microsoft/fast-element\";\nimport { AnchoredRegion } from \"../anchored-region/anchored-region.js\";\n/**\n * Creates a template for the {@link @microsoft/fast-foundation#(Tooltip:class)} component using the provided prefix.\n * @public\n */\nexport const tooltipTemplate = (context, definition) => {\n    return html `\n        ${when(x => x.tooltipVisible, html `\n            <${context.tagFor(AnchoredRegion)}\n                fixed-placement=\"true\"\n                auto-update-mode=\"${x => x.autoUpdateMode}\"\n                vertical-positioning-mode=\"${x => x.verticalPositioningMode}\"\n                vertical-default-position=\"${x => x.verticalDefaultPosition}\"\n                vertical-inset=\"${x => x.verticalInset}\"\n                vertical-scaling=\"${x => x.verticalScaling}\"\n                horizontal-positioning-mode=\"${x => x.horizontalPositioningMode}\"\n                horizontal-default-position=\"${x => x.horizontalDefaultPosition}\"\n                horizontal-scaling=\"${x => x.horizontalScaling}\"\n                horizontal-inset=\"${x => x.horizontalInset}\"\n                vertical-viewport-lock=\"${x => x.horizontalViewportLock}\"\n                horizontal-viewport-lock=\"${x => x.verticalViewportLock}\"\n                dir=\"${x => x.currentDirection}\"\n                ${ref(\"region\")}\n            >\n                <div class=\"tooltip\" part=\"tooltip\" role=\"tooltip\">\n                    <slot></slot>\n                </div>\n            </${context.tagFor(AnchoredRegion)}>\n        `)}\n    `;\n};\n","import { css } from '@microsoft/fast-element';\nimport { AnchoredRegion, forcedColorsStylesheetBehavior } from '@microsoft/fast-foundation';\nimport { elevationShadowTooltip } from '../styles/index';\nimport { controlCornerRadius, fillColor, neutralForegroundRest, neutralStrokeLayerRest, strokeWidth, } from '../design-tokens';\nimport { typeRampBase } from '../styles/patterns/type-ramp';\nexport const tooltipStyles = (context, definition) => css `\n    :host {\n      position: relative;\n      contain: layout;\n      overflow: visible;\n      height: 0;\n      width: 0;\n      z-index: 10000;\n    }\n\n    .tooltip {\n      box-sizing: border-box;\n      border-radius: calc(${controlCornerRadius} * 1px);\n      border: calc(${strokeWidth} * 1px) solid ${neutralStrokeLayerRest};\n      background: ${fillColor};\n      color: ${neutralForegroundRest};\n      padding: 4px 12px;\n      height: fit-content;\n      width: fit-content;\n      ${typeRampBase}\n      white-space: nowrap;\n      box-shadow: ${elevationShadowTooltip};\n    }\n\n    ${context.tagFor(AnchoredRegion)} {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      overflow: visible;\n      flex-direction: row;\n    }\n\n    ${context.tagFor(AnchoredRegion)}.right,\n    ${context.tagFor(AnchoredRegion)}.left {\n      flex-direction: column;\n    }\n\n    ${context.tagFor(AnchoredRegion)}.top .tooltip::after,\n    ${context.tagFor(AnchoredRegion)}.bottom .tooltip::after,\n    ${context.tagFor(AnchoredRegion)}.left .tooltip::after,\n    ${context.tagFor(AnchoredRegion)}.right .tooltip::after {\n      content: '';\n      width: 12px;\n      height: 12px;\n      background: ${fillColor};\n      border-top: calc(${strokeWidth} * 1px) solid ${neutralStrokeLayerRest};\n      border-left: calc(${strokeWidth} * 1px) solid ${neutralStrokeLayerRest};\n      position: absolute;\n    }\n\n    ${context.tagFor(AnchoredRegion)}.top .tooltip::after {\n      transform: translateX(-50%) rotate(225deg);\n      bottom: 5px;\n      left: 50%;\n    }\n\n    ${context.tagFor(AnchoredRegion)}.top .tooltip {\n      margin-bottom: 12px;\n    }\n\n    ${context.tagFor(AnchoredRegion)}.bottom .tooltip::after {\n      transform: translateX(-50%) rotate(45deg);\n      top: 5px;\n      left: 50%;\n    }\n\n    ${context.tagFor(AnchoredRegion)}.bottom .tooltip {\n      margin-top: 12px;\n    }\n\n    ${context.tagFor(AnchoredRegion)}.left .tooltip::after {\n      transform: translateY(-50%) rotate(135deg);\n      top: 50%;\n      right: 5px;\n    }\n\n    ${context.tagFor(AnchoredRegion)}.left .tooltip {\n      margin-right: 12px;\n    }\n\n    ${context.tagFor(AnchoredRegion)}.right .tooltip::after {\n      transform: translateY(-50%) rotate(-45deg);\n      top: 50%;\n      left: 5px;\n    }\n\n    ${context.tagFor(AnchoredRegion)}.right .tooltip {\n      margin-left: 12px;\n    }\n  `.withBehaviors(forcedColorsStylesheetBehavior(css `\n        :host([disabled]) {\n          opacity: 1;\n        }\n        ${context.tagFor(AnchoredRegion)}.top .tooltip::after,\n        ${context.tagFor(AnchoredRegion)}.bottom .tooltip::after,\n        ${context.tagFor(AnchoredRegion)}.left .tooltip::after,\n        ${context.tagFor(AnchoredRegion)}.right .tooltip::after {\n          content: '';\n          width: unset;\n          height: unset;\n        }\n      `));\n","import { $global } from \"@microsoft/fast-element\";\n/**\n *  A service to batch intersection event callbacks so multiple elements can share a single observer\n *\n * @public\n */\nexport class IntersectionService {\n    constructor() {\n        this.intersectionDetector = null;\n        this.observedElements = new Map();\n        /**\n         * Request the position of a target element\n         *\n         * @internal\n         */\n        this.requestPosition = (target, callback) => {\n            var _a;\n            if (this.intersectionDetector === null) {\n                return;\n            }\n            if (this.observedElements.has(target)) {\n                (_a = this.observedElements.get(target)) === null || _a === void 0 ? void 0 : _a.push(callback);\n                return;\n            }\n            this.observedElements.set(target, [callback]);\n            this.intersectionDetector.observe(target);\n        };\n        /**\n         * Cancel a position request\n         *\n         * @internal\n         */\n        this.cancelRequestPosition = (target, callback) => {\n            const callbacks = this.observedElements.get(target);\n            if (callbacks !== undefined) {\n                const callBackIndex = callbacks.indexOf(callback);\n                if (callBackIndex !== -1) {\n                    callbacks.splice(callBackIndex, 1);\n                }\n            }\n        };\n        /**\n         * initialize intersection detector\n         */\n        this.initializeIntersectionDetector = () => {\n            if (!$global.IntersectionObserver) {\n                //intersection observer not supported\n                return;\n            }\n            this.intersectionDetector = new IntersectionObserver(this.handleIntersection, {\n                root: null,\n                rootMargin: \"0px\",\n                threshold: [0, 1],\n            });\n        };\n        /**\n         *  Handle intersections\n         */\n        this.handleIntersection = (entries) => {\n            if (this.intersectionDetector === null) {\n                return;\n            }\n            const pendingCallbacks = [];\n            const pendingCallbackParams = [];\n            // go through the entries to build a list of callbacks and params for each\n            entries.forEach((entry) => {\n                var _a;\n                // stop watching this element until we get new update requests for it\n                (_a = this.intersectionDetector) === null || _a === void 0 ? void 0 : _a.unobserve(entry.target);\n                const thisElementCallbacks = this.observedElements.get(entry.target);\n                if (thisElementCallbacks !== undefined) {\n                    thisElementCallbacks.forEach((callback) => {\n                        let targetCallbackIndex = pendingCallbacks.indexOf(callback);\n                        if (targetCallbackIndex === -1) {\n                            targetCallbackIndex = pendingCallbacks.length;\n                            pendingCallbacks.push(callback);\n                            pendingCallbackParams.push([]);\n                        }\n                        pendingCallbackParams[targetCallbackIndex].push(entry);\n                    });\n                    this.observedElements.delete(entry.target);\n                }\n            });\n            // execute callbacks\n            pendingCallbacks.forEach((callback, index) => {\n                callback(pendingCallbackParams[index]);\n            });\n        };\n        this.initializeIntersectionDetector();\n    }\n}\n","import { __decorate } from \"tslib\";\nimport { attr, DOM, observable } from \"@microsoft/fast-element\";\nimport { Direction, eventResize, eventScroll } from \"@microsoft/fast-web-utilities\";\nimport { FoundationElement } from \"../foundation-element/foundation-element.js\";\nimport { getDirection } from \"../utilities/direction.js\";\nimport { IntersectionService } from \"../utilities/intersection-service.js\";\n/**\n * An anchored region Custom HTML Element.\n *\n * @slot - The default slot for the content\n * @fires loaded - Fires a custom 'loaded' event when the region is loaded and visible\n * @fires positionchange - Fires a custom 'positionchange' event when the position has changed\n *\n * @public\n */\nexport class AnchoredRegion extends FoundationElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * The HTML ID of the anchor element this region is positioned relative to\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: anchor\n         */\n        this.anchor = \"\";\n        /**\n         * The HTML ID of the viewport element this region is positioned relative to\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: anchor\n         */\n        this.viewport = \"\";\n        /**\n         * Sets what logic the component uses to determine horizontal placement.\n         * 'locktodefault' forces the default position\n         * 'dynamic' decides placement based on available space\n         * 'uncontrolled' does not control placement on the horizontal axis\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: horizontal-positioning-mode\n         */\n        this.horizontalPositioningMode = \"uncontrolled\";\n        /**\n         * The default horizontal position of the region relative to the anchor element\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: horizontal-default-position\n         */\n        this.horizontalDefaultPosition = \"unset\";\n        /**\n         * Whether the region remains in the viewport (ie. detaches from the anchor) on the horizontal axis\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: horizontal-viewport-lock\n         */\n        this.horizontalViewportLock = false;\n        /**\n         * Whether the region overlaps the anchor on the horizontal axis\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: horizontal-inset\n         */\n        this.horizontalInset = false;\n        /**\n         * Defines how the width of the region is calculated\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: horizontal-scaling\n         */\n        this.horizontalScaling = \"content\";\n        /**\n         * Sets what logic the component uses to determine vertical placement.\n         * 'locktodefault' forces the default position\n         * 'dynamic' decides placement based on available space\n         * 'uncontrolled' does not control placement on the vertical axis\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: vertical-positioning-mode\n         */\n        this.verticalPositioningMode = \"uncontrolled\";\n        /**\n         * The default vertical position of the region relative to the anchor element\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: vertical-default-position\n         */\n        this.verticalDefaultPosition = \"unset\";\n        /**\n         * Whether the region remains in the viewport (ie. detaches from the anchor) on the vertical axis\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: vertical-viewport-lock\n         */\n        this.verticalViewportLock = false;\n        /**\n         * Whether the region overlaps the anchor on the vertical axis\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: vertical-inset\n         */\n        this.verticalInset = false;\n        /**\n         * Defines how the height of the region is calculated\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: vertical-scaling\n         */\n        this.verticalScaling = \"content\";\n        /**\n         * Whether the region is positioned using css \"position: fixed\".\n         * Otherwise the region uses \"position: absolute\".\n         * Fixed placement allows the region to break out of parent containers,\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: fixed-placement\n         */\n        this.fixedPlacement = false;\n        /**\n         * Defines what triggers the anchored region to revaluate positioning\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: auto-update-mode\n         */\n        this.autoUpdateMode = \"anchor\";\n        /**\n         * The HTML element being used as the anchor\n         *\n         * @public\n         */\n        this.anchorElement = null;\n        /**\n         * The HTML element being used as the viewport\n         *\n         * @public\n         */\n        this.viewportElement = null;\n        /**\n         * indicates that an initial positioning pass on layout has completed\n         *\n         * @internal\n         */\n        this.initialLayoutComplete = false;\n        this.resizeDetector = null;\n        /**\n         * base offsets between the positioner's base position and the anchor's\n         */\n        this.baseHorizontalOffset = 0;\n        this.baseVerticalOffset = 0;\n        this.pendingPositioningUpdate = false;\n        this.pendingReset = false;\n        this.currentDirection = Direction.ltr;\n        this.regionVisible = false;\n        // indicates that a layout update should occur even if geometry has not changed\n        // used to ensure some attribute changes are applied\n        this.forceUpdate = false;\n        // defines how big a difference in pixels there must be between states to\n        // justify a layout update that affects the dom (prevents repeated sub-pixel corrections)\n        this.updateThreshold = 0.5;\n        /**\n         * update position\n         */\n        this.update = () => {\n            if (!this.pendingPositioningUpdate) {\n                this.requestPositionUpdates();\n            }\n        };\n        /**\n         * starts observers\n         */\n        this.startObservers = () => {\n            this.stopObservers();\n            if (this.anchorElement === null) {\n                return;\n            }\n            this.requestPositionUpdates();\n            if (this.resizeDetector !== null) {\n                this.resizeDetector.observe(this.anchorElement);\n                this.resizeDetector.observe(this);\n            }\n        };\n        /**\n         * get position updates\n         */\n        this.requestPositionUpdates = () => {\n            if (this.anchorElement === null || this.pendingPositioningUpdate) {\n                return;\n            }\n            AnchoredRegion.intersectionService.requestPosition(this, this.handleIntersection);\n            AnchoredRegion.intersectionService.requestPosition(this.anchorElement, this.handleIntersection);\n            if (this.viewportElement !== null) {\n                AnchoredRegion.intersectionService.requestPosition(this.viewportElement, this.handleIntersection);\n            }\n            this.pendingPositioningUpdate = true;\n        };\n        /**\n         * stops observers\n         */\n        this.stopObservers = () => {\n            if (this.pendingPositioningUpdate) {\n                this.pendingPositioningUpdate = false;\n                AnchoredRegion.intersectionService.cancelRequestPosition(this, this.handleIntersection);\n                if (this.anchorElement !== null) {\n                    AnchoredRegion.intersectionService.cancelRequestPosition(this.anchorElement, this.handleIntersection);\n                }\n                if (this.viewportElement !== null) {\n                    AnchoredRegion.intersectionService.cancelRequestPosition(this.viewportElement, this.handleIntersection);\n                }\n            }\n            if (this.resizeDetector !== null) {\n                this.resizeDetector.disconnect();\n            }\n        };\n        /**\n         * Gets the viewport element by id, or defaults to document root\n         */\n        this.getViewport = () => {\n            if (typeof this.viewport !== \"string\" || this.viewport === \"\") {\n                return document.documentElement;\n            }\n            return document.getElementById(this.viewport);\n        };\n        /**\n         *  Gets the anchor element by id\n         */\n        this.getAnchor = () => {\n            return document.getElementById(this.anchor);\n        };\n        /**\n         *  Handle intersections\n         */\n        this.handleIntersection = (entries) => {\n            if (!this.pendingPositioningUpdate) {\n                return;\n            }\n            this.pendingPositioningUpdate = false;\n            if (!this.applyIntersectionEntries(entries)) {\n                return;\n            }\n            this.updateLayout();\n        };\n        /**\n         *  iterate through intersection entries and apply data\n         */\n        this.applyIntersectionEntries = (entries) => {\n            const regionEntry = entries.find(x => x.target === this);\n            const anchorEntry = entries.find(x => x.target === this.anchorElement);\n            const viewportEntry = entries.find(x => x.target === this.viewportElement);\n            if (regionEntry === undefined ||\n                viewportEntry === undefined ||\n                anchorEntry === undefined) {\n                return false;\n            }\n            // don't update the dom unless there is a significant difference in rect positions\n            if (!this.regionVisible ||\n                this.forceUpdate ||\n                this.regionRect === undefined ||\n                this.anchorRect === undefined ||\n                this.viewportRect === undefined ||\n                this.isRectDifferent(this.anchorRect, anchorEntry.boundingClientRect) ||\n                this.isRectDifferent(this.viewportRect, viewportEntry.boundingClientRect) ||\n                this.isRectDifferent(this.regionRect, regionEntry.boundingClientRect)) {\n                this.regionRect = regionEntry.boundingClientRect;\n                this.anchorRect = anchorEntry.boundingClientRect;\n                if (this.viewportElement === document.documentElement) {\n                    this.viewportRect = new DOMRectReadOnly(viewportEntry.boundingClientRect.x +\n                        document.documentElement.scrollLeft, viewportEntry.boundingClientRect.y +\n                        document.documentElement.scrollTop, viewportEntry.boundingClientRect.width, viewportEntry.boundingClientRect.height);\n                }\n                else {\n                    this.viewportRect = viewportEntry.boundingClientRect;\n                }\n                this.updateRegionOffset();\n                this.forceUpdate = false;\n                return true;\n            }\n            return false;\n        };\n        /**\n         *  Update the offset values\n         */\n        this.updateRegionOffset = () => {\n            if (this.anchorRect && this.regionRect) {\n                this.baseHorizontalOffset =\n                    this.baseHorizontalOffset +\n                        (this.anchorRect.left - this.regionRect.left) +\n                        (this.translateX - this.baseHorizontalOffset);\n                this.baseVerticalOffset =\n                    this.baseVerticalOffset +\n                        (this.anchorRect.top - this.regionRect.top) +\n                        (this.translateY - this.baseVerticalOffset);\n            }\n        };\n        /**\n         *  compare rects to see if there is enough change to justify a DOM update\n         */\n        this.isRectDifferent = (rectA, rectB) => {\n            if (Math.abs(rectA.top - rectB.top) > this.updateThreshold ||\n                Math.abs(rectA.right - rectB.right) > this.updateThreshold ||\n                Math.abs(rectA.bottom - rectB.bottom) > this.updateThreshold ||\n                Math.abs(rectA.left - rectB.left) > this.updateThreshold) {\n                return true;\n            }\n            return false;\n        };\n        /**\n         *  Handle resize events\n         */\n        this.handleResize = (entries) => {\n            this.update();\n        };\n        /**\n         * resets the component\n         */\n        this.reset = () => {\n            if (!this.pendingReset) {\n                return;\n            }\n            this.pendingReset = false;\n            if (this.anchorElement === null) {\n                this.anchorElement = this.getAnchor();\n            }\n            if (this.viewportElement === null) {\n                this.viewportElement = this.getViewport();\n            }\n            this.currentDirection = getDirection(this);\n            this.startObservers();\n        };\n        /**\n         *  Recalculate layout related state values\n         */\n        this.updateLayout = () => {\n            let desiredVerticalPosition = undefined;\n            let desiredHorizontalPosition = undefined;\n            if (this.horizontalPositioningMode !== \"uncontrolled\") {\n                const horizontalOptions = this.getPositioningOptions(this.horizontalInset);\n                if (this.horizontalDefaultPosition === \"center\") {\n                    desiredHorizontalPosition = \"center\";\n                }\n                else if (this.horizontalDefaultPosition !== \"unset\") {\n                    let dirCorrectedHorizontalDefaultPosition = this\n                        .horizontalDefaultPosition;\n                    if (dirCorrectedHorizontalDefaultPosition === \"start\" ||\n                        dirCorrectedHorizontalDefaultPosition === \"end\") {\n                        // if direction changes we reset the layout\n                        const newDirection = getDirection(this);\n                        if (newDirection !== this.currentDirection) {\n                            this.currentDirection = newDirection;\n                            this.initialize();\n                            return;\n                        }\n                        if (this.currentDirection === Direction.ltr) {\n                            dirCorrectedHorizontalDefaultPosition =\n                                dirCorrectedHorizontalDefaultPosition === \"start\"\n                                    ? \"left\"\n                                    : \"right\";\n                        }\n                        else {\n                            dirCorrectedHorizontalDefaultPosition =\n                                dirCorrectedHorizontalDefaultPosition === \"start\"\n                                    ? \"right\"\n                                    : \"left\";\n                        }\n                    }\n                    switch (dirCorrectedHorizontalDefaultPosition) {\n                        case \"left\":\n                            desiredHorizontalPosition = this.horizontalInset\n                                ? \"insetStart\"\n                                : \"start\";\n                            break;\n                        case \"right\":\n                            desiredHorizontalPosition = this.horizontalInset\n                                ? \"insetEnd\"\n                                : \"end\";\n                            break;\n                    }\n                }\n                const horizontalThreshold = this.horizontalThreshold !== undefined\n                    ? this.horizontalThreshold\n                    : this.regionRect !== undefined\n                        ? this.regionRect.width\n                        : 0;\n                const anchorLeft = this.anchorRect !== undefined ? this.anchorRect.left : 0;\n                const anchorRight = this.anchorRect !== undefined ? this.anchorRect.right : 0;\n                const anchorWidth = this.anchorRect !== undefined ? this.anchorRect.width : 0;\n                const viewportLeft = this.viewportRect !== undefined ? this.viewportRect.left : 0;\n                const viewportRight = this.viewportRect !== undefined ? this.viewportRect.right : 0;\n                if (desiredHorizontalPosition === undefined ||\n                    (!(this.horizontalPositioningMode === \"locktodefault\") &&\n                        this.getAvailableSpace(desiredHorizontalPosition, anchorLeft, anchorRight, anchorWidth, viewportLeft, viewportRight) < horizontalThreshold)) {\n                    desiredHorizontalPosition =\n                        this.getAvailableSpace(horizontalOptions[0], anchorLeft, anchorRight, anchorWidth, viewportLeft, viewportRight) >\n                            this.getAvailableSpace(horizontalOptions[1], anchorLeft, anchorRight, anchorWidth, viewportLeft, viewportRight)\n                            ? horizontalOptions[0]\n                            : horizontalOptions[1];\n                }\n            }\n            if (this.verticalPositioningMode !== \"uncontrolled\") {\n                const verticalOptions = this.getPositioningOptions(this.verticalInset);\n                if (this.verticalDefaultPosition === \"center\") {\n                    desiredVerticalPosition = \"center\";\n                }\n                else if (this.verticalDefaultPosition !== \"unset\") {\n                    switch (this.verticalDefaultPosition) {\n                        case \"top\":\n                            desiredVerticalPosition = this.verticalInset\n                                ? \"insetStart\"\n                                : \"start\";\n                            break;\n                        case \"bottom\":\n                            desiredVerticalPosition = this.verticalInset ? \"insetEnd\" : \"end\";\n                            break;\n                    }\n                }\n                const verticalThreshold = this.verticalThreshold !== undefined\n                    ? this.verticalThreshold\n                    : this.regionRect !== undefined\n                        ? this.regionRect.height\n                        : 0;\n                const anchorTop = this.anchorRect !== undefined ? this.anchorRect.top : 0;\n                const anchorBottom = this.anchorRect !== undefined ? this.anchorRect.bottom : 0;\n                const anchorHeight = this.anchorRect !== undefined ? this.anchorRect.height : 0;\n                const viewportTop = this.viewportRect !== undefined ? this.viewportRect.top : 0;\n                const viewportBottom = this.viewportRect !== undefined ? this.viewportRect.bottom : 0;\n                if (desiredVerticalPosition === undefined ||\n                    (!(this.verticalPositioningMode === \"locktodefault\") &&\n                        this.getAvailableSpace(desiredVerticalPosition, anchorTop, anchorBottom, anchorHeight, viewportTop, viewportBottom) < verticalThreshold)) {\n                    desiredVerticalPosition =\n                        this.getAvailableSpace(verticalOptions[0], anchorTop, anchorBottom, anchorHeight, viewportTop, viewportBottom) >\n                            this.getAvailableSpace(verticalOptions[1], anchorTop, anchorBottom, anchorHeight, viewportTop, viewportBottom)\n                            ? verticalOptions[0]\n                            : verticalOptions[1];\n                }\n            }\n            const nextPositionerDimension = this.getNextRegionDimension(desiredHorizontalPosition, desiredVerticalPosition);\n            const positionChanged = this.horizontalPosition !== desiredHorizontalPosition ||\n                this.verticalPosition !== desiredVerticalPosition;\n            this.setHorizontalPosition(desiredHorizontalPosition, nextPositionerDimension);\n            this.setVerticalPosition(desiredVerticalPosition, nextPositionerDimension);\n            this.updateRegionStyle();\n            if (!this.initialLayoutComplete) {\n                this.initialLayoutComplete = true;\n                this.requestPositionUpdates();\n                return;\n            }\n            if (!this.regionVisible) {\n                this.regionVisible = true;\n                this.style.removeProperty(\"pointer-events\");\n                this.style.removeProperty(\"opacity\");\n                this.classList.toggle(\"loaded\", true);\n                this.$emit(\"loaded\", this, { bubbles: false });\n            }\n            this.updatePositionClasses();\n            if (positionChanged) {\n                // emit change event\n                this.$emit(\"positionchange\", this, { bubbles: false });\n            }\n        };\n        /**\n         *  Updates the style string applied to the region element as well as the css classes attached\n         *  to the root element\n         */\n        this.updateRegionStyle = () => {\n            this.style.width = this.regionWidth;\n            this.style.height = this.regionHeight;\n            this.style.transform = `translate(${this.translateX}px, ${this.translateY}px)`;\n        };\n        /**\n         *  Updates the css classes that reflect the current position of the element\n         */\n        this.updatePositionClasses = () => {\n            this.classList.toggle(\"top\", this.verticalPosition === \"start\");\n            this.classList.toggle(\"bottom\", this.verticalPosition === \"end\");\n            this.classList.toggle(\"inset-top\", this.verticalPosition === \"insetStart\");\n            this.classList.toggle(\"inset-bottom\", this.verticalPosition === \"insetEnd\");\n            this.classList.toggle(\"vertical-center\", this.verticalPosition === \"center\");\n            this.classList.toggle(\"left\", this.horizontalPosition === \"start\");\n            this.classList.toggle(\"right\", this.horizontalPosition === \"end\");\n            this.classList.toggle(\"inset-left\", this.horizontalPosition === \"insetStart\");\n            this.classList.toggle(\"inset-right\", this.horizontalPosition === \"insetEnd\");\n            this.classList.toggle(\"horizontal-center\", this.horizontalPosition === \"center\");\n        };\n        /**\n         * Get horizontal positioning state based on desired position\n         */\n        this.setHorizontalPosition = (desiredHorizontalPosition, nextPositionerDimension) => {\n            if (desiredHorizontalPosition === undefined ||\n                this.regionRect === undefined ||\n                this.anchorRect === undefined ||\n                this.viewportRect === undefined) {\n                return;\n            }\n            let nextRegionWidth = 0;\n            switch (this.horizontalScaling) {\n                case \"anchor\":\n                case \"fill\":\n                    nextRegionWidth = this.horizontalViewportLock\n                        ? this.viewportRect.width\n                        : nextPositionerDimension.width;\n                    this.regionWidth = `${nextRegionWidth}px`;\n                    break;\n                case \"content\":\n                    nextRegionWidth = this.regionRect.width;\n                    this.regionWidth = \"unset\";\n                    break;\n            }\n            let sizeDelta = 0;\n            switch (desiredHorizontalPosition) {\n                case \"start\":\n                    this.translateX = this.baseHorizontalOffset - nextRegionWidth;\n                    if (this.horizontalViewportLock &&\n                        this.anchorRect.left > this.viewportRect.right) {\n                        this.translateX =\n                            this.translateX -\n                                (this.anchorRect.left - this.viewportRect.right);\n                    }\n                    break;\n                case \"insetStart\":\n                    this.translateX =\n                        this.baseHorizontalOffset - nextRegionWidth + this.anchorRect.width;\n                    if (this.horizontalViewportLock &&\n                        this.anchorRect.right > this.viewportRect.right) {\n                        this.translateX =\n                            this.translateX -\n                                (this.anchorRect.right - this.viewportRect.right);\n                    }\n                    break;\n                case \"insetEnd\":\n                    this.translateX = this.baseHorizontalOffset;\n                    if (this.horizontalViewportLock &&\n                        this.anchorRect.left < this.viewportRect.left) {\n                        this.translateX =\n                            this.translateX - (this.anchorRect.left - this.viewportRect.left);\n                    }\n                    break;\n                case \"end\":\n                    this.translateX = this.baseHorizontalOffset + this.anchorRect.width;\n                    if (this.horizontalViewportLock &&\n                        this.anchorRect.right < this.viewportRect.left) {\n                        this.translateX =\n                            this.translateX -\n                                (this.anchorRect.right - this.viewportRect.left);\n                    }\n                    break;\n                case \"center\":\n                    sizeDelta = (this.anchorRect.width - nextRegionWidth) / 2;\n                    this.translateX = this.baseHorizontalOffset + sizeDelta;\n                    if (this.horizontalViewportLock) {\n                        const regionLeft = this.anchorRect.left + sizeDelta;\n                        const regionRight = this.anchorRect.right - sizeDelta;\n                        if (regionLeft < this.viewportRect.left &&\n                            !(regionRight > this.viewportRect.right)) {\n                            this.translateX =\n                                this.translateX - (regionLeft - this.viewportRect.left);\n                        }\n                        else if (regionRight > this.viewportRect.right &&\n                            !(regionLeft < this.viewportRect.left)) {\n                            this.translateX =\n                                this.translateX - (regionRight - this.viewportRect.right);\n                        }\n                    }\n                    break;\n            }\n            this.horizontalPosition = desiredHorizontalPosition;\n        };\n        /**\n         * Set vertical positioning state based on desired position\n         */\n        this.setVerticalPosition = (desiredVerticalPosition, nextPositionerDimension) => {\n            if (desiredVerticalPosition === undefined ||\n                this.regionRect === undefined ||\n                this.anchorRect === undefined ||\n                this.viewportRect === undefined) {\n                return;\n            }\n            let nextRegionHeight = 0;\n            switch (this.verticalScaling) {\n                case \"anchor\":\n                case \"fill\":\n                    nextRegionHeight = this.verticalViewportLock\n                        ? this.viewportRect.height\n                        : nextPositionerDimension.height;\n                    this.regionHeight = `${nextRegionHeight}px`;\n                    break;\n                case \"content\":\n                    nextRegionHeight = this.regionRect.height;\n                    this.regionHeight = \"unset\";\n                    break;\n            }\n            let sizeDelta = 0;\n            switch (desiredVerticalPosition) {\n                case \"start\":\n                    this.translateY = this.baseVerticalOffset - nextRegionHeight;\n                    if (this.verticalViewportLock &&\n                        this.anchorRect.top > this.viewportRect.bottom) {\n                        this.translateY =\n                            this.translateY -\n                                (this.anchorRect.top - this.viewportRect.bottom);\n                    }\n                    break;\n                case \"insetStart\":\n                    this.translateY =\n                        this.baseVerticalOffset - nextRegionHeight + this.anchorRect.height;\n                    if (this.verticalViewportLock &&\n                        this.anchorRect.bottom > this.viewportRect.bottom) {\n                        this.translateY =\n                            this.translateY -\n                                (this.anchorRect.bottom - this.viewportRect.bottom);\n                    }\n                    break;\n                case \"insetEnd\":\n                    this.translateY = this.baseVerticalOffset;\n                    if (this.verticalViewportLock &&\n                        this.anchorRect.top < this.viewportRect.top) {\n                        this.translateY =\n                            this.translateY - (this.anchorRect.top - this.viewportRect.top);\n                    }\n                    break;\n                case \"end\":\n                    this.translateY = this.baseVerticalOffset + this.anchorRect.height;\n                    if (this.verticalViewportLock &&\n                        this.anchorRect.bottom < this.viewportRect.top) {\n                        this.translateY =\n                            this.translateY -\n                                (this.anchorRect.bottom - this.viewportRect.top);\n                    }\n                    break;\n                case \"center\":\n                    sizeDelta = (this.anchorRect.height - nextRegionHeight) / 2;\n                    this.translateY = this.baseVerticalOffset + sizeDelta;\n                    if (this.verticalViewportLock) {\n                        const regionTop = this.anchorRect.top + sizeDelta;\n                        const regionBottom = this.anchorRect.bottom - sizeDelta;\n                        if (regionTop < this.viewportRect.top &&\n                            !(regionBottom > this.viewportRect.bottom)) {\n                            this.translateY =\n                                this.translateY - (regionTop - this.viewportRect.top);\n                        }\n                        else if (regionBottom > this.viewportRect.bottom &&\n                            !(regionTop < this.viewportRect.top)) {\n                            this.translateY =\n                                this.translateY - (regionBottom - this.viewportRect.bottom);\n                        }\n                    }\n            }\n            this.verticalPosition = desiredVerticalPosition;\n        };\n        /**\n         *  Get available positions based on positioning mode\n         */\n        this.getPositioningOptions = (inset) => {\n            if (inset) {\n                return [\"insetStart\", \"insetEnd\"];\n            }\n            return [\"start\", \"end\"];\n        };\n        /**\n         *  Get the space available for a particular relative position\n         */\n        this.getAvailableSpace = (positionOption, anchorStart, anchorEnd, anchorSpan, viewportStart, viewportEnd) => {\n            const spaceStart = anchorStart - viewportStart;\n            const spaceEnd = viewportEnd - (anchorStart + anchorSpan);\n            switch (positionOption) {\n                case \"start\":\n                    return spaceStart;\n                case \"insetStart\":\n                    return spaceStart + anchorSpan;\n                case \"insetEnd\":\n                    return spaceEnd + anchorSpan;\n                case \"end\":\n                    return spaceEnd;\n                case \"center\":\n                    return Math.min(spaceStart, spaceEnd) * 2 + anchorSpan;\n            }\n        };\n        /**\n         * Get region dimensions\n         */\n        this.getNextRegionDimension = (desiredHorizontalPosition, desiredVerticalPosition) => {\n            const newRegionDimension = {\n                height: this.regionRect !== undefined ? this.regionRect.height : 0,\n                width: this.regionRect !== undefined ? this.regionRect.width : 0,\n            };\n            if (desiredHorizontalPosition !== undefined &&\n                this.horizontalScaling === \"fill\") {\n                newRegionDimension.width = this.getAvailableSpace(desiredHorizontalPosition, this.anchorRect !== undefined ? this.anchorRect.left : 0, this.anchorRect !== undefined ? this.anchorRect.right : 0, this.anchorRect !== undefined ? this.anchorRect.width : 0, this.viewportRect !== undefined ? this.viewportRect.left : 0, this.viewportRect !== undefined ? this.viewportRect.right : 0);\n            }\n            else if (this.horizontalScaling === \"anchor\") {\n                newRegionDimension.width =\n                    this.anchorRect !== undefined ? this.anchorRect.width : 0;\n            }\n            if (desiredVerticalPosition !== undefined && this.verticalScaling === \"fill\") {\n                newRegionDimension.height = this.getAvailableSpace(desiredVerticalPosition, this.anchorRect !== undefined ? this.anchorRect.top : 0, this.anchorRect !== undefined ? this.anchorRect.bottom : 0, this.anchorRect !== undefined ? this.anchorRect.height : 0, this.viewportRect !== undefined ? this.viewportRect.top : 0, this.viewportRect !== undefined ? this.viewportRect.bottom : 0);\n            }\n            else if (this.verticalScaling === \"anchor\") {\n                newRegionDimension.height =\n                    this.anchorRect !== undefined ? this.anchorRect.height : 0;\n            }\n            return newRegionDimension;\n        };\n        /**\n         * starts event listeners that can trigger auto updating\n         */\n        this.startAutoUpdateEventListeners = () => {\n            window.addEventListener(eventResize, this.update, { passive: true });\n            window.addEventListener(eventScroll, this.update, {\n                passive: true,\n                capture: true,\n            });\n            if (this.resizeDetector !== null && this.viewportElement !== null) {\n                this.resizeDetector.observe(this.viewportElement);\n            }\n        };\n        /**\n         * stops event listeners that can trigger auto updating\n         */\n        this.stopAutoUpdateEventListeners = () => {\n            window.removeEventListener(eventResize, this.update);\n            window.removeEventListener(eventScroll, this.update);\n            if (this.resizeDetector !== null && this.viewportElement !== null) {\n                this.resizeDetector.unobserve(this.viewportElement);\n            }\n        };\n    }\n    anchorChanged() {\n        if (this.initialLayoutComplete) {\n            this.anchorElement = this.getAnchor();\n        }\n    }\n    viewportChanged() {\n        if (this.initialLayoutComplete) {\n            this.viewportElement = this.getViewport();\n        }\n    }\n    horizontalPositioningModeChanged() {\n        this.requestReset();\n    }\n    horizontalDefaultPositionChanged() {\n        this.updateForAttributeChange();\n    }\n    horizontalViewportLockChanged() {\n        this.updateForAttributeChange();\n    }\n    horizontalInsetChanged() {\n        this.updateForAttributeChange();\n    }\n    horizontalThresholdChanged() {\n        this.updateForAttributeChange();\n    }\n    horizontalScalingChanged() {\n        this.updateForAttributeChange();\n    }\n    verticalPositioningModeChanged() {\n        this.requestReset();\n    }\n    verticalDefaultPositionChanged() {\n        this.updateForAttributeChange();\n    }\n    verticalViewportLockChanged() {\n        this.updateForAttributeChange();\n    }\n    verticalInsetChanged() {\n        this.updateForAttributeChange();\n    }\n    verticalThresholdChanged() {\n        this.updateForAttributeChange();\n    }\n    verticalScalingChanged() {\n        this.updateForAttributeChange();\n    }\n    fixedPlacementChanged() {\n        if (this.$fastController.isConnected &&\n            this.initialLayoutComplete) {\n            this.initialize();\n        }\n    }\n    autoUpdateModeChanged(prevMode, newMode) {\n        if (this.$fastController.isConnected &&\n            this.initialLayoutComplete) {\n            if (prevMode === \"auto\") {\n                this.stopAutoUpdateEventListeners();\n            }\n            if (newMode === \"auto\") {\n                this.startAutoUpdateEventListeners();\n            }\n        }\n    }\n    anchorElementChanged() {\n        this.requestReset();\n    }\n    viewportElementChanged() {\n        if (this.$fastController.isConnected &&\n            this.initialLayoutComplete) {\n            this.initialize();\n        }\n    }\n    /**\n     * @internal\n     */\n    connectedCallback() {\n        super.connectedCallback();\n        if (this.autoUpdateMode === \"auto\") {\n            this.startAutoUpdateEventListeners();\n        }\n        this.initialize();\n    }\n    /**\n     * @internal\n     */\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        if (this.autoUpdateMode === \"auto\") {\n            this.stopAutoUpdateEventListeners();\n        }\n        this.stopObservers();\n        this.disconnectResizeDetector();\n    }\n    /**\n     * @internal\n     */\n    adoptedCallback() {\n        this.initialize();\n    }\n    /**\n     * destroys the instance's resize observer\n     */\n    disconnectResizeDetector() {\n        if (this.resizeDetector !== null) {\n            this.resizeDetector.disconnect();\n            this.resizeDetector = null;\n        }\n    }\n    /**\n     * initializes the instance's resize observer\n     */\n    initializeResizeDetector() {\n        this.disconnectResizeDetector();\n        this.resizeDetector = new window.ResizeObserver(this.handleResize);\n    }\n    /**\n     * react to attribute changes that don't require a reset\n     */\n    updateForAttributeChange() {\n        if (this.$fastController.isConnected &&\n            this.initialLayoutComplete) {\n            this.forceUpdate = true;\n            this.update();\n        }\n    }\n    /**\n     * fully initializes the component\n     */\n    initialize() {\n        this.initializeResizeDetector();\n        if (this.anchorElement === null) {\n            this.anchorElement = this.getAnchor();\n        }\n        this.requestReset();\n    }\n    /**\n     * Request a reset if there are currently no open requests\n     */\n    requestReset() {\n        if (this.$fastController.isConnected &&\n            this.pendingReset === false) {\n            this.setInitialState();\n            DOM.queueUpdate(() => this.reset());\n            this.pendingReset = true;\n        }\n    }\n    /**\n     * sets the starting configuration for component internal values\n     */\n    setInitialState() {\n        this.initialLayoutComplete = false;\n        this.regionVisible = false;\n        this.translateX = 0;\n        this.translateY = 0;\n        this.baseHorizontalOffset = 0;\n        this.baseVerticalOffset = 0;\n        this.viewportRect = undefined;\n        this.regionRect = undefined;\n        this.anchorRect = undefined;\n        this.verticalPosition = undefined;\n        this.horizontalPosition = undefined;\n        this.style.opacity = \"0\";\n        this.style.pointerEvents = \"none\";\n        this.forceUpdate = false;\n        this.style.position = this.fixedPlacement ? \"fixed\" : \"absolute\";\n        this.updatePositionClasses();\n        this.updateRegionStyle();\n    }\n}\nAnchoredRegion.intersectionService = new IntersectionService();\n__decorate([\n    attr\n], AnchoredRegion.prototype, \"anchor\", void 0);\n__decorate([\n    attr\n], AnchoredRegion.prototype, \"viewport\", void 0);\n__decorate([\n    attr({ attribute: \"horizontal-positioning-mode\" })\n], AnchoredRegion.prototype, \"horizontalPositioningMode\", void 0);\n__decorate([\n    attr({ attribute: \"horizontal-default-position\" })\n], AnchoredRegion.prototype, \"horizontalDefaultPosition\", void 0);\n__decorate([\n    attr({ attribute: \"horizontal-viewport-lock\", mode: \"boolean\" })\n], AnchoredRegion.prototype, \"horizontalViewportLock\", void 0);\n__decorate([\n    attr({ attribute: \"horizontal-inset\", mode: \"boolean\" })\n], AnchoredRegion.prototype, \"horizontalInset\", void 0);\n__decorate([\n    attr({ attribute: \"horizontal-threshold\" })\n], AnchoredRegion.prototype, \"horizontalThreshold\", void 0);\n__decorate([\n    attr({ attribute: \"horizontal-scaling\" })\n], AnchoredRegion.prototype, \"horizontalScaling\", void 0);\n__decorate([\n    attr({ attribute: \"vertical-positioning-mode\" })\n], AnchoredRegion.prototype, \"verticalPositioningMode\", void 0);\n__decorate([\n    attr({ attribute: \"vertical-default-position\" })\n], AnchoredRegion.prototype, \"verticalDefaultPosition\", void 0);\n__decorate([\n    attr({ attribute: \"vertical-viewport-lock\", mode: \"boolean\" })\n], AnchoredRegion.prototype, \"verticalViewportLock\", void 0);\n__decorate([\n    attr({ attribute: \"vertical-inset\", mode: \"boolean\" })\n], AnchoredRegion.prototype, \"verticalInset\", void 0);\n__decorate([\n    attr({ attribute: \"vertical-threshold\" })\n], AnchoredRegion.prototype, \"verticalThreshold\", void 0);\n__decorate([\n    attr({ attribute: \"vertical-scaling\" })\n], AnchoredRegion.prototype, \"verticalScaling\", void 0);\n__decorate([\n    attr({ attribute: \"fixed-placement\", mode: \"boolean\" })\n], AnchoredRegion.prototype, \"fixedPlacement\", void 0);\n__decorate([\n    attr({ attribute: \"auto-update-mode\" })\n], AnchoredRegion.prototype, \"autoUpdateMode\", void 0);\n__decorate([\n    observable\n], AnchoredRegion.prototype, \"anchorElement\", void 0);\n__decorate([\n    observable\n], AnchoredRegion.prototype, \"viewportElement\", void 0);\n__decorate([\n    observable\n], AnchoredRegion.prototype, \"initialLayoutComplete\", void 0);\n","/**\n * Divider roles\n * @public\n */\nexport const DividerRole = {\n    /**\n     * The divider semantically separates content\n     */\n    separator: \"separator\",\n    /**\n     * The divider has no semantic value and is for visual presentation only.\n     */\n    presentation: \"presentation\",\n};\n","import { __decorate } from \"tslib\";\nimport { attr } from \"@microsoft/fast-element\";\nimport { Orientation } from \"@microsoft/fast-web-utilities\";\nimport { FoundationElement } from \"../foundation-element/foundation-element.js\";\nimport { DividerRole } from \"./divider.options.js\";\nexport { DividerRole };\n/**\n * A Divider Custom HTML Element.\n * Implements the {@link https://www.w3.org/TR/wai-aria-1.1/#separator | ARIA separator } or {@link https://www.w3.org/TR/wai-aria-1.1/#presentation | ARIA presentation}.\n *\n * @public\n */\nexport class Divider extends FoundationElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * The role of the element.\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: role\n         */\n        this.role = DividerRole.separator;\n        /**\n         * The orientation of the divider.\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: orientation\n         */\n        this.orientation = Orientation.horizontal;\n    }\n}\n__decorate([\n    attr\n], Divider.prototype, \"role\", void 0);\n__decorate([\n    attr\n], Divider.prototype, \"orientation\", void 0);\n"],"names":["fluentDivider","Divider","compose","baseName","template","context","definition","html","_templateObject","_taggedTemplateLiteral","x","role","orientation","styles","css","display","strokeWidth","neutralStrokeDividerRest","designUnit","Skeleton","_FoundationElement","_inherits","_super","_createSuper","_this","_classCallCheck","apply","arguments","shape","_createClass","FoundationElement","__decorate","attr","prototype","mode","fluentSkeleton","pattern","shimmer","when","_templateObject2","neutralFillSecondaryRest","neutralFillSecondaryHover","controlCornerRadius","withBehaviors","forcedColorsStylesheetBehavior","SystemColors","CanvasText","TooltipPosition","Tooltip","anchor","delay","autoUpdateMode","anchorElement","viewportElement","verticalPositioningMode","horizontalPositioningMode","horizontalInset","verticalInset","horizontalScaling","verticalScaling","verticalDefaultPosition","undefined","horizontalDefaultPosition","tooltipVisible","currentDirection","Direction","ltr","showDelayTimer","hideDelayTimer","isAnchorHoveredFocused","isRegionHovered","handlePositionChange","ev","classList","toggle","region","verticalPosition","horizontalPosition","handleRegionMouseOver","handleRegionMouseOut","startHideDelayTimer","handleAnchorMouseOver","startShowDelayTimer","handleAnchorMouseOut","clearShowDelayTimer","handleAnchorFocusIn","handleAnchorFocusOut","clearHideDelayTimer","window","setTimeout","updateTooltipVisibility","clearTimeout","startHover","getAnchor","rootNode","getRootNode","ShadowRoot","getElementById","document","handleDocumentKeydown","e","defaultPrevented","key","keyEscape","$emit","visible","hideTooltip","showTooltip","getDirection","_assertThisInitialized","addEventListener","DOM","queueUpdate","setRegionProps","removeEventListener","passive","value","this","$fastController","isConnected","updateLayout","oldValue","_this2","anchorId","id","parentElement","querySelectorAll","forEach","element","_get","_getPrototypeOf","call","position","attribute","observable","_FoundationTooltip","fillColor","setValueFor","neutralLayerFloating","FoundationTooltip","fluentTooltip","baseClass","tagFor","AnchoredRegion","horizontalViewportLock","verticalViewportLock","ref","neutralStrokeLayerRest","neutralForegroundRest","typeRampBase","elevationShadowTooltip","IntersectionService","intersectionDetector","observedElements","Map","requestPosition","target","callback","_a","has","get","push","set","observe","cancelRequestPosition","callbacks","callBackIndex","indexOf","splice","initializeIntersectionDetector","$global","IntersectionObserver","handleIntersection","root","rootMargin","threshold","entries","pendingCallbacks","pendingCallbackParams","entry","unobserve","thisElementCallbacks","targetCallbackIndex","length","delete","index","viewport","fixedPlacement","initialLayoutComplete","resizeDetector","baseHorizontalOffset","baseVerticalOffset","pendingPositioningUpdate","pendingReset","regionVisible","forceUpdate","updateThreshold","update","requestPositionUpdates","startObservers","stopObservers","intersectionService","disconnect","getViewport","documentElement","applyIntersectionEntries","regionEntry","find","anchorEntry","viewportEntry","regionRect","anchorRect","viewportRect","isRectDifferent","boundingClientRect","DOMRectReadOnly","scrollLeft","y","scrollTop","width","height","updateRegionOffset","left","translateX","top","translateY","rectA","rectB","Math","abs","right","bottom","handleResize","reset","desiredVerticalPosition","desiredHorizontalPosition","horizontalOptions","getPositioningOptions","dirCorrectedHorizontalDefaultPosition","newDirection","initialize","horizontalThreshold","anchorLeft","anchorRight","anchorWidth","viewportLeft","viewportRight","getAvailableSpace","verticalOptions","verticalThreshold","anchorTop","anchorBottom","anchorHeight","viewportTop","viewportBottom","nextPositionerDimension","getNextRegionDimension","positionChanged","setHorizontalPosition","setVerticalPosition","updateRegionStyle","style","removeProperty","bubbles","updatePositionClasses","regionWidth","regionHeight","transform","concat","nextRegionWidth","sizeDelta","regionLeft","regionRight","nextRegionHeight","regionTop","regionBottom","inset","positionOption","anchorStart","anchorEnd","anchorSpan","viewportStart","viewportEnd","spaceStart","spaceEnd","min","newRegionDimension","startAutoUpdateEventListeners","eventResize","eventScroll","capture","stopAutoUpdateEventListeners","requestReset","updateForAttributeChange","prevMode","newMode","disconnectResizeDetector","ResizeObserver","initializeResizeDetector","setInitialState","opacity","pointerEvents","DividerRole","Orientation","horizontal"],"sourceRoot":""}