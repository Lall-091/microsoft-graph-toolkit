{"version":3,"file":"static/js/155.0ecc69bd.chunk.js","mappings":"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","sources":["../../../packages/mgt-react/src/generated/file-list.ts","../../../packages/mgt-react/src/generated/teams-channel-picker.ts","pages/Files/ChannelFiles.tsx","../../../packages/mgt-react/src/generated/picker.ts","pages/Files/SiteFiles.tsx","pages/FilesPage.tsx","../../../packages/mgt-components/dist/es6/components/mgt-picker/src/components/mgt-picker/strings.ts","../../../packages/mgt-components/dist/es6/components/mgt-picker/src/components/mgt-picker/mgt-picker-css.ts","../../../packages/mgt-components/dist/es6/components/mgt-picker/src/components/mgt-picker/mgt-picker.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/consistent-type-definitions */\nimport { OfficeGraphInsightString,ViewType } from '@microsoft/mgt-components/dist/es6/exports';\nimport { registerMgtFileListComponent } from '@microsoft/mgt-components/dist/es6/components/components';\nimport { TemplateContext,ComponentMediaQuery,TemplateRenderedData } from '@microsoft/mgt-element';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraph from '@microsoft/microsoft-graph-types';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraphBeta from '@microsoft/microsoft-graph-types-beta';\nimport {wrapMgt} from '../Mgt';\n\nexport type FileListProps = {\n\tfileListQuery?: string;\n\tdisplayName?: string;\n\tcardTitle?: string;\n\tfileQueries?: string[];\n\tfiles?: MicrosoftGraph.DriveItem[];\n\tsiteId?: string;\n\tdriveId?: string;\n\tgroupId?: string;\n\titemId?: string;\n\titemPath?: string;\n\tuserId?: string;\n\tinsightType?: OfficeGraphInsightString;\n\titemView?: ViewType;\n\tfileExtensions?: string[];\n\tpageSize?: number;\n\tdisableOpenOnClick?: boolean;\n\thideMoreFilesButton?: boolean;\n\tmaxFileSize?: number;\n\tenableFileUpload?: boolean;\n\tmaxUploadFile?: number;\n\texcludedFileExtensions?: string[];\n\ttemplateContext?: TemplateContext;\n\tmediaQuery?: ComponentMediaQuery;\n\titemClick?: (e: CustomEvent<MicrosoftGraph.DriveItem>) => void;\n\ttemplateRendered?: (e: CustomEvent<TemplateRenderedData>) => void;\n}\n\nexport const FileList = wrapMgt<FileListProps>('file-list', registerMgtFileListComponent);\n\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/consistent-type-definitions */\nimport { SelectedChannel } from '@microsoft/mgt-components/dist/es6/exports';\nimport { registerMgtTeamsChannelPickerComponent } from '@microsoft/mgt-components/dist/es6/components/components';\nimport { TemplateContext,ComponentMediaQuery,TemplateRenderedData } from '@microsoft/mgt-element';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraph from '@microsoft/microsoft-graph-types';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraphBeta from '@microsoft/microsoft-graph-types-beta';\nimport {wrapMgt} from '../Mgt';\n\nexport type TeamsChannelPickerProps = {\n\tselectedItem?: SelectedChannel;\n\ttemplateContext?: TemplateContext;\n\tmediaQuery?: ComponentMediaQuery;\n\tselectionChanged?: (e: CustomEvent<SelectedChannel | null>) => void;\n\ttemplateRendered?: (e: CustomEvent<TemplateRenderedData>) => void;\n}\n\nexport const TeamsChannelPicker = wrapMgt<TeamsChannelPickerProps>('teams-channel-picker', registerMgtTeamsChannelPickerComponent);\n\n","import * as React from 'react';\nimport { FileList, SelectedChannel, TeamsChannelPicker } from '@microsoft/mgt-react';\nimport { makeStyles } from '@fluentui/react-components';\n\nconst useStyles = makeStyles({\n  fileGrid: {\n    paddingBottom: '10px'\n  }\n});\n\nexport const ChannelFiles: React.FunctionComponent = () => {\n  const [selectedChannel, setSelectedChannel] = React.useState<SelectedChannel | null>(null);\n  const styles = useStyles();\n\n  return (\n    <div>\n      <TeamsChannelPicker\n        selectionChanged={e => setSelectedChannel(e.detail)}\n        className={styles.fileGrid}\n      ></TeamsChannelPicker>\n\n      {selectedChannel && (\n        <FileList\n          groupId={selectedChannel.team.id}\n          itemPath={selectedChannel.channel.displayName}\n          pageSize={100}\n        ></FileList>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/consistent-type-definitions */\nimport { registerMgtPickerComponent } from '@microsoft/mgt-components/dist/es6/components/components';\nimport { TemplateContext,ComponentMediaQuery,TemplateRenderedData } from '@microsoft/mgt-element';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraph from '@microsoft/microsoft-graph-types';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraphBeta from '@microsoft/microsoft-graph-types-beta';\nimport {wrapMgt} from '../Mgt';\n\nexport type PickerProps = {\n\tresource?: string;\n\tversion?: string;\n\tmaxPages?: number;\n\tplaceholder?: string;\n\tkeyName?: string;\n\tentityType?: string;\n\tscopes?: string[];\n\tcacheEnabled?: boolean;\n\tcacheInvalidationPeriod?: number;\n\tselectedValue?: string;\n\ttemplateContext?: TemplateContext;\n\tmediaQuery?: ComponentMediaQuery;\n\tselectionChanged?: (e: CustomEvent<any>) => void;\n\ttemplateRendered?: (e: CustomEvent<TemplateRenderedData>) => void;\n}\n\nexport const Picker = wrapMgt<PickerProps>('picker', registerMgtPickerComponent);\n\n","import * as React from 'react';\nimport { FileList, Picker, Providers } from '@microsoft/mgt-react';\nimport { makeStyles } from '@fluentui/react-components';\n\nconst useStyles = makeStyles({\n  picker: {\n    paddingBottom: '10px',\n    display: 'block'\n  }\n});\n\nexport const SiteFiles: React.FunctionComponent = () => {\n  const [selectedList, setSelectedList] = React.useState<any>(null);\n  const [driveId, setDriveId] = React.useState<string>('');\n  const [error, setError] = React.useState<string>('');\n  const styles = useStyles();\n\n  const onSelectionChanged = async (e: CustomEvent) => {\n    if (e.detail.list.template === 'documentLibrary') {\n      const drive = await Providers.globalProvider.graph.client.api(`/sites/root/lists/${e.detail.id}/drive`).get();\n      setSelectedList(e.detail);\n      setDriveId(drive.id);\n      setError('');\n    } else {\n      setSelectedList(null);\n      setDriveId('');\n      setError('Please select a document library');\n    }\n  };\n\n  return (\n    <div>\n      <Picker\n        resource=\"/sites/root/lists\"\n        placeholder=\"Select a list\"\n        keyName=\"displayName\"\n        selectionChanged={onSelectionChanged}\n        className={styles.picker}\n      ></Picker>\n\n      {selectedList && driveId && <FileList itemPath=\"/\" driveId={driveId} pageSize={100}></FileList>}\n\n      {error && <div>{error}</div>}\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { PageHeader } from '../components/PageHeader';\nimport { FileList } from '@microsoft/mgt-react';\nimport {\n  SelectTabData,\n  SelectTabEvent,\n  Tab,\n  TabList,\n  TabValue,\n  shorthands,\n  makeStyles\n} from '@fluentui/react-components';\nimport { ChannelFiles } from './Files/ChannelFiles';\nimport { SiteFiles } from './Files/SiteFiles';\n\nconst useStyles = makeStyles({\n  panels: {\n    ...shorthands.padding('10px')\n  }\n});\n\nconst FilesPage: React.FunctionComponent = () => {\n  const styles = useStyles();\n  const [selectedTab, setSelectedTab] = React.useState<TabValue>('my');\n\n  const onTabSelect = (event: SelectTabEvent, data: SelectTabData) => {\n    setSelectedTab(data.value);\n  };\n\n  return (\n    <>\n      <PageHeader\n        title={'Files'}\n        description={\n          'View your files from accross your OneDrive, channels you are a member of and your SharePoint sites'\n        }\n      ></PageHeader>\n\n      <div>\n        <TabList selectedValue={selectedTab} onTabSelect={onTabSelect}>\n          <Tab value=\"my\">My Files</Tab>\n          <Tab value=\"recent\">Recent Files</Tab>\n          <Tab value=\"site\">Site Files</Tab>\n          <Tab value=\"channel\">Channel Files</Tab>\n        </TabList>\n        <div className={styles.panels}>\n          {selectedTab === 'my' && <FileList pageSize={100}></FileList>}\n          {selectedTab === 'recent' && <FileList insightType=\"used\" enableFileUpload={false} pageSize={100}></FileList>}\n          {selectedTab === 'site' && <SiteFiles />}\n          {selectedTab === 'channel' && <ChannelFiles />}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default FilesPage;\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nexport const strings = {\n  comboboxPlaceholder: 'Select an item'\n};\n","// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\n\nimport { css, CSSResult } from 'lit';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles: CSSResult[] = [\n  css`\n:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host{--max-height:var(--picker-max-height, 380px);font-family:var(--default-font-family)}:host .picker{background-color:var(--picker-background-color,transparent)}:host fluent-combobox::part(selected-value)::placeholder{color:var(--picker-text-color,var(--input-filled-placeholder-rest))}:host fluent-combobox::part(selected-value):hover::placeholder{color:var(--picker-text-color-hover,var(--secondary-text-hover-color))}[dir=rtl] .picker{direction:rtl}\n`];","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { html, TemplateResult } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { MgtTemplatedComponent, mgtHtml, error } from '@microsoft/mgt-element';\nimport { strings } from './strings';\nimport { fluentCombobox, fluentOption } from '@fluentui/web-components';\nimport { registerFluentComponents } from '../../utils/FluentComponents';\nimport '../../styles/style-helper';\nimport { Entity } from '@microsoft/microsoft-graph-types';\nimport { DataChangedDetail, registerMgtGetComponent } from '../mgt-get/mgt-get';\nimport { styles } from './mgt-picker-css';\nimport { registerComponent } from '@microsoft/mgt-element';\n\nexport const registerMgtPickerComponent = () => {\n  registerFluentComponents(fluentCombobox, fluentOption);\n\n  registerMgtGetComponent();\n  registerComponent('picker', MgtPicker);\n};\n\n/**\n * Web component that allows a single entity pick from a generic endpoint from Graph. Uses mgt-get.\n *\n * @fires {CustomEvent<any>} selectionChanged - Fired when an option is clicked/selected\n * @export\n * @class MgtPicker\n * @extends {MgtTemplatedComponent}\n *\n * @cssprop --picker-background-color - {Color} Picker component background color\n * @cssprop --picker-list-max-height - {String} max height for options list. Default value is 380px.\n */\nexport class MgtPicker extends MgtTemplatedComponent {\n  protected get strings() {\n    return strings;\n  }\n\n  public static get styles() {\n    return styles;\n  }\n\n  /**\n   * The resource to get\n   *\n   * @type {string}\n   * @memberof MgtPicker\n   */\n  @property({\n    attribute: 'resource',\n    type: String\n  })\n  public resource: string;\n\n  /**\n   * Api version to use for request\n   *\n   * @type {string}\n   * @memberof MgtPicker\n   */\n  @property({\n    attribute: 'version',\n    type: String\n  })\n  public version = 'v1.0';\n\n  /**\n   * Maximum number of pages to get for the resource\n   * default = 3\n   * if <= 0, all pages will be fetched\n   *\n   * @type {number}\n   * @memberof MgtPicker\n   */\n  @property({\n    attribute: 'max-pages',\n    type: Number\n  })\n  public maxPages = 3;\n\n  /**\n   * A placeholder for the picker\n   *\n   * @type {string}\n   * @memberof MgtPicker\n   */\n  @property({\n    attribute: 'placeholder',\n    type: String\n  })\n  public placeholder: string;\n\n  /**\n   * Key to be rendered in the picker\n   *\n   * @type {string}\n   * @memberof MgtPicker\n   */\n  @property({\n    attribute: 'key-name',\n    type: String\n  })\n  public keyName: string;\n\n  /**\n   * Entity to be rendered in the picker\n   *\n   * @type {string}\n   * @memberof MgtPicker\n   */\n  @property({\n    attribute: 'entity-type',\n    type: String\n  })\n  public entityType: string;\n\n  /**\n   * The scopes to request\n   *\n   * @type {string[]}\n   * @memberof MgtPicker\n   */\n  @property({\n    attribute: 'scopes',\n    converter: value => {\n      return value ? value.toLowerCase().split(',') : null;\n    }\n  })\n  public scopes: string[] = [];\n\n  /**\n   * Enables cache on the response from the specified resource\n   * default = false\n   *\n   * @type {boolean}\n   * @memberof MgtPicker\n   */\n  @property({\n    attribute: 'cache-enabled',\n    type: Boolean\n  })\n  public cacheEnabled = false;\n\n  /**\n   * Invalidation period of the cache for the responses in milliseconds\n   *\n   * @type {number}\n   * @memberof MgtPicker\n   */\n  @property({\n    attribute: 'cache-invalidation-period',\n    type: Number\n  })\n  public cacheInvalidationPeriod = 0;\n\n  /**\n   * Sets the currently selected value for the picker\n   * Must be present as an option in the supplied data returned from the the underlying graph query\n   *\n   * @type {string}\n   * @memberof MgtPicker\n   */\n  @property({\n    attribute: 'selected-value',\n    type: String\n  })\n  public selectedValue: string;\n\n  private isRefreshing: boolean;\n\n  @state() private response: Entity[];\n\n  constructor() {\n    super();\n    this.placeholder = this.strings.comboboxPlaceholder;\n    this.entityType = null;\n    this.keyName = null;\n    this.isRefreshing = false;\n  }\n\n  /**\n   * Refresh the data\n   *\n   * @param {boolean} [hardRefresh=false]\n   * if false (default), the component will only update if the data changed\n   * if true, the data will be first cleared and reloaded completely\n   * @memberof MgtPicker\n   */\n  public refresh(hardRefresh = false) {\n    this.isRefreshing = true;\n    if (hardRefresh) {\n      this.clearState();\n    }\n    void this.requestStateUpdate(hardRefresh);\n  }\n\n  /**\n   * Clears the state of the component\n   *\n   * @protected\n   * @memberof MgtPicker\n   */\n  protected clearState(): void {\n    this.response = null;\n    this.error = null;\n  }\n\n  /**\n   * Invoked on each update to perform rendering the picker. This method must return\n   * a lit-html TemplateResult. Setting properties inside this method will *not*\n   * trigger the element to update.\n   */\n  public render() {\n    if (this.isLoadingState && !this.response) {\n      return this.renderTemplate('loading', null);\n    } else if (this.hasTemplate('error')) {\n      const err = this.error ? (this.error as Error) : null;\n      return this.renderTemplate('error', { error: err }, 'error');\n    } else if (this.hasTemplate('no-data')) {\n      return this.renderTemplate('no-data', null);\n    }\n\n    return this.response?.length > 0 ? this.renderPicker() : this.renderGet();\n  }\n\n  /**\n   * Render picker.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPicker\n   */\n  protected renderPicker(): TemplateResult {\n    return mgtHtml`\n      <fluent-combobox\n        @keydown=${this.handleComboboxKeydown}\n        current-value=${ifDefined(this.selectedValue)}\n        part=\"picker\"\n        class=\"picker\"\n        id=\"combobox\"\n        autocomplete=\"list\"\n        placeholder=${this.placeholder}>\n        ${this.response.map(\n          item => html`\n          <fluent-option\n            value=${item.id}\n            @click=${(e: MouseEvent) => this.handleClick(e, item)}\n          >\n            ${item[this.keyName]}\n          </fluent-option>`\n        )}\n      </fluent-combobox>\n     `;\n  }\n\n  /**\n   * Renders mgt-get which does a GET request to the resource.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPicker\n   */\n  protected renderGet(): TemplateResult {\n    return mgtHtml`\n      <mgt-get\n        class=\"mgt-get\"\n        resource=${this.resource}\n        version=${this.version}\n        .scopes=${this.scopes}\n        max-pages=${this.maxPages}\n        ?cache-enabled=${this.cacheEnabled}\n        ?cache-invalidation-period=${this.cacheInvalidationPeriod}>\n      </mgt-get>`;\n  }\n\n  /**\n   * load state into the component.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtPicker\n   */\n  protected async loadState() {\n    if (!this.response) {\n      const parent = this.renderRoot.querySelector('.mgt-get');\n      if (parent) {\n        parent.addEventListener('dataChange', (e: CustomEvent<DataChangedDetail>): void => this.handleDataChange(e));\n      } else {\n        error('mgt-picker component requires a child mgt-get component. Something has gone horribly wrong.');\n      }\n    }\n    this.isRefreshing = false;\n    // hack to maintain method signature contract\n    await Promise.resolve();\n  }\n\n  private handleDataChange(e: CustomEvent<DataChangedDetail>): void {\n    const response = e.detail.response.value;\n    const err = e.detail.error ? e.detail.error : null;\n    this.response = response;\n    this.error = err;\n  }\n\n  private handleClick(e: MouseEvent, item: Entity) {\n    this.fireCustomEvent('selectionChanged', item, true, false, true);\n  }\n\n  /**\n   * Handles getting the fluent option item in the dropdown and fires a custom\n   * event with it when you press Enter or Backspace keys.\n   *\n   * @param {KeyboardEvent} e\n   */\n  private readonly handleComboboxKeydown = (e: KeyboardEvent) => {\n    let value: string;\n    let item: Entity;\n    const keyName: string = e.key;\n    const comboBox: HTMLElement = e.target as HTMLElement;\n    const fluentOptionEl = comboBox.querySelector('.selected');\n    if (fluentOptionEl) {\n      value = fluentOptionEl.getAttribute('value');\n    }\n\n    if ('Enter' === keyName) {\n      if (value) {\n        item = this.response.filter(res => res.id === value).pop();\n        this.fireCustomEvent('selectionChanged', item, true, false, true);\n      }\n    }\n  };\n}\n"],"names":["FileList","wrapMgt","registerMgtFileListComponent","TeamsChannelPicker","registerMgtTeamsChannelPickerComponent","useStyles","makeStyles","fileGrid","paddingBottom","ChannelFiles","_React$useState","React","_React$useState2","_slicedToArray","selectedChannel","setSelectedChannel","styles","_jsxs","children","_jsx","selectionChanged","e","detail","className","groupId","team","id","itemPath","channel","displayName","pageSize","Picker","registerMgtPickerComponent","picker","display","SiteFiles","selectedList","setSelectedList","_React$useState3","_React$useState4","driveId","setDriveId","_React$useState5","_React$useState6","error","setError","onSelectionChanged","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","drive","wrap","_context","prev","next","list","template","Providers","globalProvider","graph","client","api","concat","get","sent","stop","_x","apply","arguments","resource","placeholder","keyName","panels","_objectSpread","shorthands","padding","selectedTab","setSelectedTab","_Fragment","PageHeader","title","description","TabList","selectedValue","onTabSelect","event","data","value","Tab","insightType","enableFileUpload","strings","comboboxPlaceholder","css","_templateObject","_taggedTemplateLiteral","registerFluentComponents","fluentCombobox","fluentOption","registerMgtGetComponent","registerComponent","MgtPicker","_MgtTemplatedComponen","_inherits","_super","_createSuper","_this","_classCallCheck","call","version","maxPages","scopes","cacheEnabled","cacheInvalidationPeriod","handleComboboxKeydown","item","key","fluentOptionEl","target","querySelector","getAttribute","response","filter","res","pop","fireCustomEvent","entityType","isRefreshing","_createClass","hardRefresh","length","undefined","this","clearState","requestStateUpdate","isLoadingState","renderTemplate","hasTemplate","err","_a","renderPicker","renderGet","_this2","mgtHtml","ifDefined","map","html","_templateObject2","handleClick","_templateObject3","parent","renderRoot","addEventListener","_this3","handleDataChange","Promise","resolve","MgtTemplatedComponent","__decorate","property","attribute","type","String","Number","converter","toLowerCase","split","Boolean","state"],"sourceRoot":""}