{"version":3,"file":"static/js/532.e20aad5e.chunk.js","mappings":"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","sources":["../../../packages/mgt-react/src/generated/todo.ts","../../../node_modules/@fluentui/react-toolbar/lib/components/Toolbar/useToolbar.js","../../../node_modules/@fluentui/react-toolbar/lib/components/Toolbar/ToolbarContext.js","../../../node_modules/@fluentui/react-toolbar/lib/components/Toolbar/useToolbarStyles.styles.js","../../../node_modules/@fluentui/react-toolbar/lib/components/Toolbar/Toolbar.js","../../../node_modules/@fluentui/react-toolbar/lib/components/Toolbar/useToolbarContextValues.js","../../../node_modules/@fluentui/react-toolbar/lib/components/Toolbar/renderToolbar.js","../../../node_modules/@fluentui/react-toolbar/lib/components/ToolbarGroup/useToolbarGroup.js","../../../node_modules/@fluentui/react-toolbar/lib/components/ToolbarGroup/useToolbarGroupStyles.styles.js","../../../node_modules/@fluentui/react-toolbar/lib/components/ToolbarGroup/ToolbarGroup.js","../../../node_modules/@fluentui/react-toolbar/lib/components/ToolbarGroup/renderToolbarGroup.js","../../../node_modules/@fluentui/react-toolbar/lib/components/ToolbarButton/useToolbarButtonStyles.styles.js","../../../node_modules/@fluentui/react-toolbar/lib/components/ToolbarButton/ToolbarButton.js","../../../node_modules/@fluentui/react-toolbar/lib/components/ToolbarButton/useToolbarButton.js","components/DirectReports.tsx","pages/DashboardPage.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/consistent-type-definitions */\nimport { TodoFilter } from '@microsoft/mgt-components/dist/es6/exports';\nimport { registerMgtTodoComponent } from '@microsoft/mgt-components/dist/es6/components/components';\nimport { TemplateContext,ComponentMediaQuery,TemplateRenderedData } from '@microsoft/mgt-element';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraph from '@microsoft/microsoft-graph-types';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraphBeta from '@microsoft/microsoft-graph-types-beta';\nimport {wrapMgt} from '../Mgt';\n\nexport type TodoProps = {\n\ttaskFilter?: TodoFilter;\n\treadOnly?: boolean;\n\thideHeader?: boolean;\n\thideOptions?: boolean;\n\ttargetId?: string;\n\tinitialId?: string;\n\ttemplateContext?: TemplateContext;\n\tmediaQuery?: ComponentMediaQuery;\n\ttemplateRendered?: (e: CustomEvent<TemplateRenderedData>) => void;\n}\n\nexport const Todo = wrapMgt<TodoProps>('todo', registerMgtTodoComponent);\n\n","import * as React from 'react';\nimport { useEventCallback, useControllableState, getIntrinsicElementProps, slot } from '@fluentui/react-utilities';\nimport { useArrowNavigationGroup } from '@fluentui/react-tabster';\n/**\n * Create the state required to render Toolbar.\n *\n * The returned state can be modified with hooks such as useToolbarStyles_unstable,\n * before being passed to renderToolbar_unstable.\n *\n * @param props - props from this instance of Toolbar\n * @param ref - reference to root HTMLElement of Toolbar\n */ export const useToolbar_unstable = (props, ref)=>{\n    const { size = 'medium', vertical = false } = props;\n    const arrowNavigationProps = useArrowNavigationGroup({\n        circular: true,\n        axis: 'both'\n    });\n    const initialState = {\n        size,\n        vertical,\n        // TODO add appropriate props/defaults\n        components: {\n            // TODO add each slot's element type or component\n            root: 'div'\n        },\n        // TODO add appropriate slots, for example:\n        // mySlot: resolveShorthand(props.mySlot),\n        root: slot.always(getIntrinsicElementProps('div', {\n            role: 'toolbar',\n            // FIXME:\n            // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`\n            // but since it would be a breaking change to fix it, we are casting ref to it's proper type\n            ref: ref,\n            ...vertical && {\n                'aria-orientation': 'vertical'\n            },\n            ...arrowNavigationProps,\n            ...props\n        }), {\n            elementType: 'div'\n        })\n    };\n    const [checkedValues, onCheckedValueChange] = useToolbarSelectableState({\n        checkedValues: props.checkedValues,\n        defaultCheckedValues: props.defaultCheckedValues,\n        onCheckedValueChange: props.onCheckedValueChange\n    });\n    const handleToggleButton = useEventCallback((e, name, value, checked)=>{\n        if (name && value) {\n            const checkedItems = (checkedValues === null || checkedValues === void 0 ? void 0 : checkedValues[name]) || [];\n            const newCheckedItems = [\n                ...checkedItems\n            ];\n            if (checked) {\n                newCheckedItems.splice(newCheckedItems.indexOf(value), 1);\n            } else {\n                newCheckedItems.push(value);\n            }\n            onCheckedValueChange === null || onCheckedValueChange === void 0 ? void 0 : onCheckedValueChange(e, {\n                name,\n                checkedItems: newCheckedItems\n            });\n        }\n    });\n    const handleRadio = useEventCallback((e, name, value, checked)=>{\n        if (name && value) {\n            onCheckedValueChange === null || onCheckedValueChange === void 0 ? void 0 : onCheckedValueChange(e, {\n                name,\n                checkedItems: [\n                    value\n                ]\n            });\n        }\n    });\n    return {\n        ...initialState,\n        handleToggleButton,\n        handleRadio,\n        checkedValues: checkedValues !== null && checkedValues !== void 0 ? checkedValues : {}\n    };\n};\n/**\n * Adds appropriate state values and handlers for selectable items\n * i.e checkboxes and radios\n */ const useToolbarSelectableState = (state)=>{\n    const [checkedValues, setCheckedValues] = useControllableState({\n        state: state.checkedValues,\n        defaultState: state.defaultCheckedValues,\n        initialState: {}\n    });\n    const { onCheckedValueChange: onCheckedValueChangeOriginal } = state;\n    const onCheckedValueChange = useEventCallback((e, { name, checkedItems })=>{\n        if (onCheckedValueChangeOriginal) {\n            onCheckedValueChangeOriginal(e, {\n                name,\n                checkedItems\n            });\n        }\n        setCheckedValues((s)=>{\n            return s ? {\n                ...s,\n                [name]: checkedItems\n            } : {\n                [name]: checkedItems\n            };\n        });\n    });\n    return [\n        checkedValues,\n        onCheckedValueChange\n    ];\n};\n","import { createContext, useContextSelector } from '@fluentui/react-context-selector';\nexport const ToolbarContext = createContext(undefined);\nconst toolbarContextDefaultValue = {\n    size: 'medium',\n    handleToggleButton: ()=>null,\n    handleRadio: ()=>null,\n    vertical: false,\n    checkedValues: {}\n};\nexport const useToolbarContext_unstable = (selector)=>useContextSelector(ToolbarContext, (ctx = toolbarContextDefaultValue)=>selector(ctx));\n","import { makeStyles, mergeClasses, shorthands } from '@griffel/react';\nexport const toolbarClassNames = {\n    root: 'fui-Toolbar'\n};\n/**\n * Styles for the root slot\n */ const useStyles = makeStyles({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        ...shorthands.padding('4px', '8px')\n    },\n    vertical: {\n        flexDirection: 'column',\n        width: 'fit-content'\n    },\n    small: {\n        ...shorthands.padding('0px', '4px')\n    },\n    medium: {\n        ...shorthands.padding('4px', '8px')\n    },\n    large: {\n        ...shorthands.padding('4px', '20px')\n    }\n});\n/**\n * Apply styling to the Toolbar slots based on the state\n */ export const useToolbarStyles_unstable = (state)=>{\n    const styles = useStyles();\n    const { vertical, size } = state;\n    state.root.className = mergeClasses(toolbarClassNames.root, styles.root, vertical && styles.vertical, size === 'small' && !vertical && styles.small, size === 'medium' && !vertical && styles.medium, size === 'large' && !vertical && styles.large, state.root.className);\n    return state;\n};\n","import * as React from 'react';\nimport { useToolbar_unstable } from './useToolbar';\nimport { renderToolbar_unstable } from './renderToolbar';\nimport { useToolbarStyles_unstable } from './useToolbarStyles.styles';\nimport { useToolbarContextValues_unstable } from './useToolbarContextValues';\nimport { useCustomStyleHook_unstable } from '@fluentui/react-shared-contexts';\n/**\n * Toolbar component\n */ export const Toolbar = /*#__PURE__*/ React.forwardRef((props, ref)=>{\n    const state = useToolbar_unstable(props, ref);\n    const contextValues = useToolbarContextValues_unstable(state);\n    useToolbarStyles_unstable(state);\n    useCustomStyleHook_unstable('useToolbarStyles_unstable')(state);\n    return renderToolbar_unstable(state, contextValues);\n});\nToolbar.displayName = 'Toolbar';\n","export function useToolbarContextValues_unstable(state) {\n    const { size, handleToggleButton, vertical, checkedValues, handleRadio } = state;\n    // This context is created with \"@fluentui/react-context-selector\", these is no sense to memoize it\n    const toolbar = {\n        size,\n        vertical,\n        handleToggleButton,\n        handleRadio,\n        checkedValues\n    };\n    return {\n        toolbar\n    };\n}\n","  import { jsx as _jsx } from \"@fluentui/react-jsx-runtime/jsx-runtime\";\nimport { assertSlots } from '@fluentui/react-utilities';\nimport { ToolbarContext } from './ToolbarContext';\n/**\n * Render the final JSX of Toolbar\n */ export const renderToolbar_unstable = (state, contextValues)=>{\n    assertSlots(state);\n    return /*#__PURE__*/ _jsx(ToolbarContext.Provider, {\n        value: contextValues.toolbar,\n        children: /*#__PURE__*/ _jsx(state.root, {\n            children: state.root.children\n        })\n    });\n};\n","import { getIntrinsicElementProps, slot } from '@fluentui/react-utilities';\nimport * as React from 'react';\n/**\n * Given user props, defines default props for the Group\n * @param props - User provided props to the Group component.\n * @param ref - User provided ref to be passed to the Group component.\n */ export const useToolbarGroup_unstable = (props, ref)=>{\n    return {\n        components: {\n            root: 'div'\n        },\n        root: slot.always(getIntrinsicElementProps('div', {\n            ref,\n            role: 'presentation',\n            ...props\n        }), {\n            elementType: 'div'\n        })\n    };\n};\n","import { mergeClasses } from '@griffel/react';\nexport const toolbarGroupClassNames = {\n    root: 'fui-ToolbarGroup'\n};\n/**\n * Apply styling to the Toolbar slots based on the state\n */ export const useToolbarGroupStyles_unstable = (state)=>{\n    state.root.className = mergeClasses(toolbarGroupClassNames.root, state.root.className);\n    return state;\n};\n","import * as React from 'react';\nimport { useToolbarGroup_unstable } from './useToolbarGroup';\nimport { useToolbarGroupStyles_unstable } from './useToolbarGroupStyles.styles';\nimport { renderToolbarGroup_unstable } from './renderToolbarGroup';\nimport { useCustomStyleHook_unstable } from '@fluentui/react-shared-contexts';\n/**\n * ToolbarGroup component is a Button to be used inside Toolbar\n * which will respect toolbar props such as `size`\n */ export const ToolbarGroup = /*#__PURE__*/ React.forwardRef((props, ref)=>{\n    const state = useToolbarGroup_unstable(props, ref);\n    useToolbarGroupStyles_unstable(state);\n    useCustomStyleHook_unstable('useToolbarGroupStyles_unstable')(state);\n    return renderToolbarGroup_unstable(state);\n// Casting is required due to lack of distributive union to support unions on @types/react\n});\nToolbarGroup.displayName = 'ToolbarGroup';\n","  import { jsx as _jsx } from \"@fluentui/react-jsx-runtime/jsx-runtime\";\nimport { assertSlots } from '@fluentui/react-utilities';\n/**\n * Render the final JSX of ToolbarGroup\n */ export const renderToolbarGroup_unstable = (state)=>{\n    assertSlots(state);\n    return /*#__PURE__*/ _jsx(state.root, {\n        children: state.root.children\n    });\n};\n","import { makeStyles, mergeClasses, shorthands } from '@griffel/react';\nimport { useButtonStyles_unstable } from '@fluentui/react-button';\nconst useBaseStyles = makeStyles({\n    vertical: {\n        flexDirection: 'column'\n    },\n    verticalIcon: {\n        fontSize: '24px',\n        ...shorthands.margin('0')\n    }\n});\n/**\n * Apply styling to the ToolbarButton slots based on the state\n */ export const useToolbarButtonStyles_unstable = (state)=>{\n    useButtonStyles_unstable(state);\n    const buttonStyles = useBaseStyles();\n    state.root.className = mergeClasses(state.root.className, state.vertical && buttonStyles.vertical);\n    if (state.icon) {\n        state.icon.className = mergeClasses(state.icon.className, state.vertical && buttonStyles.verticalIcon);\n    }\n};\n","import * as React from 'react';\nimport { renderButton_unstable } from '@fluentui/react-button';\nimport { useToolbarButtonStyles_unstable } from './useToolbarButtonStyles.styles';\nimport { useToolbarButton_unstable } from './useToolbarButton';\nimport { useCustomStyleHook_unstable } from '@fluentui/react-shared-contexts';\n/**\n * ToolbarButton component is a Button to be used inside Toolbar\n * which will respect toolbar props such as `size`\n */ export const ToolbarButton = /*#__PURE__*/ React.forwardRef((props, ref)=>{\n    const state = useToolbarButton_unstable(props, ref);\n    useToolbarButtonStyles_unstable(state);\n    useCustomStyleHook_unstable('useToolbarButtonStyles_unstable')(state);\n    return renderButton_unstable(state);\n// Casting is required due to lack of distributive union to support unions on @types/react\n});\nToolbarButton.displayName = 'ToolbarButton';\n","import * as React from 'react';\nimport { useButton_unstable } from '@fluentui/react-button';\n/**\n * Given user props, defines default props for the Button, calls useButtonState and useChecked, and returns\n * processed state.\n * @param props - User provided props to the Button component.\n * @param ref - User provided ref to be passed to the Button component.\n */ export const useToolbarButton_unstable = (props, ref)=>{\n    const { vertical = false, ...buttonProps } = props;\n    const state = useButton_unstable({\n        appearance: 'subtle',\n        ...buttonProps\n    }, ref);\n    return {\n        vertical,\n        ...state\n    };\n};\n","import {\n  DataGrid,\n  DataGridBody,\n  DataGridCell,\n  DataGridHeader,\n  DataGridHeaderCell,\n  DataGridRow,\n  TableCellLayout,\n  TableColumnDefinition,\n  Toolbar,\n  ToolbarButton,\n  ToolbarGroup,\n  createTableColumn,\n  makeStyles\n} from '@fluentui/react-components';\n\nimport { SkeletonItem } from '@fluentui/react-components';\nimport { FeedRegular } from '@fluentui/react-icons';\nimport { Get, MgtTemplateProps, Person, PersonCardInteraction, ViewType } from '@microsoft/mgt-react';\nimport React from 'react';\n\nexport interface IIndicentsProps {}\nconst useStyles = makeStyles({\n  toolbar: {\n    justifyContent: 'space-between'\n  }\n});\n\nconst getColumns = (shimmered: boolean): TableColumnDefinition<any>[] => {\n  const columns: TableColumnDefinition<any>[] = [\n    createTableColumn<any>({\n      columnId: 'name',\n      renderHeaderCell: () => {\n        return 'Name';\n      },\n      renderCell: item => {\n        return (\n          <TableCellLayout>\n            {shimmered ? (\n              <SkeletonItem shape=\"rectangle\" style={{ width: '120px' }} />\n            ) : (\n              <Person userId={item.id} view={ViewType.oneline} personCardInteraction={PersonCardInteraction.hover} />\n            )}\n          </TableCellLayout>\n        );\n      }\n    }),\n    createTableColumn<any>({\n      columnId: 'jobTitle',\n      renderHeaderCell: () => {\n        return 'Job Title';\n      },\n      renderCell: item => {\n        return (\n          <TableCellLayout>\n            {shimmered ? <SkeletonItem shape=\"rectangle\" style={{ width: '120px' }} /> : item.jobTitle}\n          </TableCellLayout>\n        );\n      }\n    }),\n    createTableColumn<any>({\n      columnId: 'mobilePhone',\n      renderHeaderCell: () => {\n        return 'Mobile Phone';\n      },\n      renderCell: item => {\n        return (\n          <TableCellLayout>\n            {shimmered ? <SkeletonItem shape=\"rectangle\" style={{ width: '120px' }} /> : item.mobilePhone}\n          </TableCellLayout>\n        );\n      }\n    }),\n    createTableColumn<any>({\n      columnId: 'officeLocation',\n      renderHeaderCell: () => {\n        return 'Office Location';\n      },\n      renderCell: item => {\n        return (\n          <TableCellLayout>\n            {shimmered ? <SkeletonItem shape=\"rectangle\" style={{ width: '120px' }} /> : item.officeLocation}\n          </TableCellLayout>\n        );\n      }\n    })\n  ];\n\n  return columns;\n};\n\nexport function DirectReports(props: IIndicentsProps) {\n  return (\n    <Get resource={`me/directReports`}>\n      <DataGridTemplate template=\"default\"></DataGridTemplate>\n      <DataGridTemplate template=\"loading\"></DataGridTemplate>\n      <NoDataTemplate template=\"no-data\"></NoDataTemplate>\n    </Get>\n  );\n}\n\nconst DataGridTemplate = (props: MgtTemplateProps) => {\n  const styles = useStyles();\n  const [teams] = React.useState<any[]>(props.dataContext.value);\n  const [isLoading] = React.useState<boolean>(props.dataContext && !props.dataContext.value);\n  const [selectedTeam, setSelectedTeam] = React.useState<any>(null);\n\n  const onSelectionChange = (e: any, data: any) => {\n    const [selectedItem] = data.selectedItems;\n    const team = teams.find(i => i.id === selectedItem);\n    setSelectedTeam(team);\n  };\n\n  return (\n    <div>\n      <Toolbar className={styles.toolbar}>\n        <ToolbarGroup role=\"presentation\">\n          <ToolbarButton\n            icon={<FeedRegular />}\n            disabled={!selectedTeam}\n            as=\"a\"\n            href={`https://www.office.com/feed?auth=2#/user/${selectedTeam?.id}`}\n            target=\"_blank\"\n          >\n            View feed\n          </ToolbarButton>\n        </ToolbarGroup>\n      </Toolbar>\n      <DataGrid\n        columns={getColumns(isLoading)}\n        items={isLoading ? [...Array<number>(5)] : teams}\n        selectionMode=\"single\"\n        onSelectionChange={onSelectionChange}\n        getRowId={item => (isLoading ? Math.random() : item.id)}\n      >\n        <DataGridHeader>\n          <DataGridRow>\n            {({ renderHeaderCell }) => <DataGridHeaderCell>{renderHeaderCell()}</DataGridHeaderCell>}\n          </DataGridRow>\n        </DataGridHeader>\n        <DataGridBody<any>>\n          {({ item, rowId }) => (\n            <DataGridRow<any> key={rowId}>\n              {({ renderCell }) => <DataGridCell>{renderCell(item)}</DataGridCell>}\n            </DataGridRow>\n          )}\n        </DataGridBody>\n      </DataGrid>\n    </div>\n  );\n};\n\nconst NoDataTemplate = (props: MgtTemplateProps) => {\n  return <>You don't have direct reports</>;\n};\n","import * as React from 'react';\nimport { PageHeader } from '../components/PageHeader';\nimport { Providers, Todo } from '@microsoft/mgt-react';\nimport { DirectReports } from '../components/DirectReports';\nimport {\n  SelectTabData,\n  SelectTabEvent,\n  Tab,\n  TabList,\n  TabValue,\n  makeStyles,\n  shorthands\n} from '@fluentui/react-components';\n\nconst useStyles = makeStyles({\n  panels: {\n    ...shorthands.padding('10px')\n  }\n});\n\nconst DashboardPage: React.FunctionComponent = () => {\n  const styles = useStyles();\n\n  const [taskListId, setTaskListId] = React.useState<string>('');\n  const [selectedTab, setSelectedTab] = React.useState<TabValue>('tasks');\n\n  const onTabSelect = (event: SelectTabEvent, data: SelectTabData) => {\n    setSelectedTab(data.value);\n  };\n\n  React.useEffect(() => {\n    const fetchTaskList = async () => {\n      const taskList = await Providers.globalProvider.graph.client.api('/me/todo/lists?$top=1').get();\n      setTaskListId(taskList.value[0].id);\n    };\n\n    fetchTaskList();\n  }, []);\n\n  return (\n    <>\n      <PageHeader\n        title={'My Dashboard'}\n        description={'This dashboard helps you being productive with your tasks and your incidents.'}\n      ></PageHeader>\n      <div>\n        <TabList selectedValue={selectedTab} onTabSelect={onTabSelect}>\n          <Tab value=\"tasks\">My Tasks</Tab>\n          <Tab value=\"directReports\">My Direct Reports</Tab>\n        </TabList>\n        <div className={styles.panels}>\n          {selectedTab === 'tasks' && taskListId && <Todo initialId={taskListId}></Todo>}\n          {selectedTab === 'directReports' && <DirectReports />}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default DashboardPage;\n"],"names":["Todo","wrapMgt","registerMgtTodoComponent","useToolbarSelectableState","state","_useControllableState","useControllableState","checkedValues","defaultState","defaultCheckedValues","initialState","_useControllableState2","_slicedToArray","setCheckedValues","onCheckedValueChangeOriginal","onCheckedValueChange","useEventCallback","e","_ref","name","checkedItems","s","_objectSpread","_defineProperty","ToolbarContext","createContext","undefined","toolbarClassNames","useStyles","__styles","root","mc9l5x","Bt984gj","z8tnut","z189sj","Byoj8tv","uwmqm3","vertical","Beiy3e4","a9b677","small","medium","large","d","Toolbar","React","props","ref","_props$size","size","_props$vertical","arrowNavigationProps","useArrowNavigationGroup","circular","axis","components","slot","getIntrinsicElementProps","role","elementType","_useToolbarSelectable","_useToolbarSelectable2","handleToggleButton","value","checked","newCheckedItems","_toConsumableArray","splice","indexOf","push","handleRadio","useToolbar_unstable","contextValues","toolbar","useToolbarContextValues_unstable","styles","className","mergeClasses","useToolbarStyles_unstable","useCustomStyleHook_unstable","assertSlots","_jsx","Provider","children","renderToolbar_unstable","displayName","toolbarGroupClassNames","ToolbarGroup","useToolbarGroup_unstable","useToolbarGroupStyles_unstable","renderToolbarGroup_unstable","useBaseStyles","verticalIcon","Be2twd7","B6of3ja","t21cq0","jrapky","Frg6f3","ToolbarButton","buttonProps","_objectWithoutProperties","_excluded","useButton_unstable","appearance","useToolbarButton_unstable","useButtonStyles_unstable","buttonStyles","icon","useToolbarButtonStyles_unstable","renderButton_unstable","makeStyles","justifyContent","DirectReports","_jsxs","Get","resource","DataGridTemplate","template","NoDataTemplate","shimmered","_React$useState","dataContext","teams","_React$useState3","isLoading","_React$useState5","_React$useState6","selectedTeam","setSelectedTeam","FeedRegular","disabled","as","href","concat","id","target","DataGrid","columns","createTableColumn","columnId","renderHeaderCell","renderCell","item","TableCellLayout","SkeletonItem","shape","style","width","Person","userId","view","ViewType","oneline","personCardInteraction","PersonCardInteraction","hover","jobTitle","mobilePhone","officeLocation","items","Array","selectionMode","onSelectionChange","data","selectedItem","selectedItems","team","find","i","getRowId","Math","random","DataGridHeader","DataGridRow","DataGridHeaderCell","DataGridBody","_ref2","rowId","_ref3","DataGridCell","_Fragment","panels","shorthands","padding","_React$useState2","taskListId","setTaskListId","_React$useState4","selectedTab","setSelectedTab","fetchTaskList","_asyncToGenerator","_regeneratorRuntime","mark","_callee","taskList","wrap","_context","prev","next","Providers","globalProvider","graph","client","api","get","sent","stop","apply","arguments","PageHeader","title","description","TabList","selectedValue","onTabSelect","event","Tab","initialId"],"sourceRoot":""}