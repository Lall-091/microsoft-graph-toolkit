{"version":3,"file":"static/js/842.c46fc39d.chunk.js","mappings":"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","sources":["../../../packages/mgt-element/dist/es6/utils/src/utils/TeamsHelper.ts","../../../packages/mgt-components/dist/es6/components/mgt-person-card/src/components/mgt-person-card/MgtPersonCardConfig.ts","../../../packages/mgt-components/dist/es6/components/mgt-person-card/src/components/mgt-person-card/mgt-person-card.graph.ts","../../../packages/mgt-components/dist/es6/components/mgt-person-card/src/components/mgt-person-card/mgt-person-card-css.ts","../../../packages/mgt-components/dist/es6/components/src/components/BasePersonCardSection.ts","../../../packages/mgt-components/dist/es6/components/mgt-contact/src/components/mgt-contact/mgt-contact-css.ts","../../../packages/mgt-components/dist/es6/components/mgt-contact/src/components/mgt-contact/strings.ts","../../../packages/mgt-components/dist/es6/components/mgt-contact/src/components/mgt-contact/mgt-contact.ts","../../../packages/mgt-components/dist/es6/components/mgt-messages/src/components/mgt-messages/mgt-messages-css.ts","../../../packages/mgt-components/dist/es6/components/mgt-messages/src/components/mgt-messages/strings.ts","../../../packages/mgt-components/dist/es6/components/mgt-messages/src/components/mgt-messages/mgt-messages.ts","../../../packages/mgt-components/dist/es6/components/mgt-organization/src/components/mgt-organization/mgt-organization-css.ts","../../../packages/mgt-components/dist/es6/components/mgt-organization/src/components/mgt-organization/strings.ts","../../../packages/mgt-components/dist/es6/components/mgt-organization/src/components/mgt-organization/mgt-organization.ts","../../../packages/mgt-components/dist/es6/components/mgt-profile/src/components/mgt-profile/mgt-profile-css.ts","../../../packages/mgt-components/dist/es6/components/mgt-profile/src/components/mgt-profile/strings.ts","../../../packages/mgt-components/dist/es6/components/mgt-profile/src/components/mgt-profile/mgt-profile.ts","../../../packages/mgt-components/dist/es6/components/mgt-person-card/src/components/mgt-person-card/strings.ts","../../../packages/mgt-components/dist/es6/components/mgt-person-card/src/components/mgt-person-card/mgt-person-card.ts","../../../packages/mgt-components/dist/es6/components/mgt-person-card/src/components/mgt-person-card/getMgtPersonCardScopes.ts"],"sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nexport interface loginContext {\n  loginHint: string;\n}\n\nexport interface TeamsLib {\n  initialize(): void;\n  executeDeepLink(deeplink: string, onComplete?: (status: boolean, reason?: string) => void): void;\n  authentication: {\n    authenticate(authConfig: {\n      failureCallback: (reason) => void;\n      successCallback: (result) => void;\n      url: string;\n    }): void;\n    getAuthToken(authCallback: { failureCallback: (reason) => void; successCallback: (result) => void }): void;\n    notifySuccess(message?: string): void;\n    notifyFailure(message: string): void;\n  };\n  getContext(callback?: (context: loginContext) => void): Promise<loginContext>;\n}\n\n/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\ntype TeamsWindow = Window &\n  typeof globalThis & {\n    microsoftTeams: TeamsLib;\n    nativeInterface: unknown;\n  };\n\n/**\n * A helper class for interacting with the Teams Client SDK.\n *\n * @export\n * @class TeamsHelper\n */\nexport class TeamsHelper {\n  /**\n   * Optional entry point to the teams library\n   * If this value is not set, the provider will attempt to use\n   * the microsoftTeams global variable.\n   *\n   * @static\n   * @type {TeamsLib}\n   * @memberof TeamsHelper\n   */\n  public static get microsoftTeamsLib(): TeamsLib {\n    return this._microsoftTeamsLib || (window as TeamsWindow).microsoftTeams;\n  }\n  public static set microsoftTeamsLib(value: TeamsLib) {\n    this._microsoftTeamsLib = value;\n  }\n\n  /**\n   * Gets whether the Teams provider can be used in the current context\n   * (Whether the app is running in Microsoft Teams)\n   *\n   * @readonly\n   * @static\n   * @memberof TeamsHelper\n   */\n  public static get isAvailable(): boolean {\n    if (!this.microsoftTeamsLib) {\n      return false;\n    }\n    if (window.parent === window.self && (window as TeamsWindow).nativeInterface) {\n      // In Teams mobile client\n      return true;\n    } else if (window.name === 'embedded-page-container' || window.name === 'extension-tab-frame') {\n      // In Teams web/desktop client\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Execute a deeplink against the Teams lib.\n   *\n   * @static\n   * @param {string} deeplink\n   * @param {(status: boolean, reason?: string) => void} [onComplete]\n   * @memberof TeamsHelper\n   */\n  public static executeDeepLink(deeplink: string, onComplete?: (status: boolean, reason?: string) => void): void {\n    const teams: TeamsLib = this.microsoftTeamsLib;\n    teams.initialize();\n    teams.executeDeepLink(deeplink, onComplete);\n  }\n\n  private static _microsoftTeamsLib: TeamsLib;\n}\n","interface SectionsConfig {\n  /**\n   * Gets or sets whether the organization section is shown\n   *\n   */\n  organization?: {\n    /**\n     * Gets or sets whether the \"Works with\" section is shown\n     *\n     * @type {boolean}\n     */\n    showWorksWith: boolean;\n  };\n\n  /**\n   * Gets or sets whether the messages section is shown\n   *\n   * @type {boolean}\n   */\n  mailMessages: boolean;\n\n  /**\n   * Gets or sets whether the files section is shown\n   *\n   * @type {boolean}\n   */\n  files: boolean;\n\n  /**\n   * Gets or sets whether the profile section is shown\n   *\n   * @type {boolean}\n   */\n  profile: boolean;\n}\n\nexport class MgtPersonCardConfig {\n  public static sections: SectionsConfig = {\n    files: true,\n    mailMessages: true,\n    organization: { showWorksWith: true },\n    profile: true\n  };\n  public static useContactApis = true;\n  public static isSendMessageVisible = true;\n}\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { BatchResponse, IBatch, IGraph, prepScopes } from '@microsoft/mgt-element';\nimport { Chat, ChatMessage } from '@microsoft/microsoft-graph-types';\nimport { Profile } from '@microsoft/microsoft-graph-types-beta';\n\nimport { getEmailFromGraphEntity } from '../../graph/graph.people';\nimport { IDynamicPerson } from '../../graph/types';\nimport { MgtPersonCardState } from './mgt-person-card.types';\nimport { MgtPersonCardConfig } from './MgtPersonCardConfig';\nimport { validUserByIdScopes } from '../../graph/graph.user';\nimport { validInsightScopes } from '../../graph/graph.files';\n\nconst userProperties =\n  'businessPhones,companyName,department,displayName,givenName,jobTitle,mail,mobilePhone,officeLocation,preferredLanguage,surname,userPrincipalName,id,accountEnabled';\n\nconst batchKeys = {\n  directReports: 'directReports',\n  files: 'files',\n  messages: 'messages',\n  people: 'people',\n  person: 'person'\n};\n\n/**\n * Get data to populate the person card\n *\n * @export\n * @param {IGraph} graph\n * @param {IDynamicPerson} personDetails\n * @param {boolean} isMe\n * @param {MgtPersonCardConfig} config\n * @return {*}  {Promise<MgtPersonCardState>}\n */\nexport const getPersonCardGraphData = async (\n  graph: IGraph,\n  personDetails: IDynamicPerson,\n  isMe: boolean\n): Promise<MgtPersonCardState> => {\n  const userId = personDetails.id;\n  const email = getEmailFromGraphEntity(personDetails);\n\n  const isContactOrGroup =\n    'classification' in personDetails ||\n    ('personType' in personDetails &&\n      (personDetails.personType.subclass === 'PersonalContact' || personDetails.personType.class === 'Group'));\n\n  const batch = graph.createBatch();\n\n  if (!isContactOrGroup) {\n    if (MgtPersonCardConfig.sections.organization) {\n      buildOrgStructureRequest(batch, userId);\n\n      if (MgtPersonCardConfig.sections.organization.showWorksWith) {\n        buildWorksWithRequest(batch, userId);\n      }\n    }\n  }\n\n  if (MgtPersonCardConfig.sections.mailMessages && email) {\n    buildMessagesWithUserRequest(batch, email);\n  }\n\n  if (MgtPersonCardConfig.sections.files) {\n    buildFilesRequest(batch, isMe ? null : email);\n  }\n\n  let response: Map<string, BatchResponse>;\n  const data: MgtPersonCardState = {}; // TODO\n  try {\n    response = await batch.executeAll();\n  } catch {\n    // nop\n  }\n\n  if (response) {\n    for (const [key, value] of response) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n      data[key] = value.content?.value || value.content;\n    }\n  }\n\n  if (!isContactOrGroup && MgtPersonCardConfig.sections.profile) {\n    try {\n      const profile = await getProfile(graph, userId);\n      if (profile) {\n        data.profile = profile;\n      }\n    } catch {\n      // nop\n    }\n  }\n\n  // filter out disabled users from direct reports.\n  if (data.directReports && data.directReports.length > 0) {\n    data.directReports = data.directReports.filter(report => report.accountEnabled);\n  }\n\n  return data;\n};\n\nconst buildOrgStructureRequest = (batch: IBatch, userId: string) => {\n  const expandManagers = `manager($levels=max;$select=${userProperties})`;\n\n  batch.get(\n    batchKeys.person,\n    `users/${userId}?$expand=${expandManagers}&$select=${userProperties}&$count=true`,\n    validUserByIdScopes,\n    {\n      ConsistencyLevel: 'eventual'\n    }\n  );\n\n  batch.get(batchKeys.directReports, `users/${userId}/directReports?$select=${userProperties}`);\n};\n\nconst buildWorksWithRequest = (batch: IBatch, userId: string) => {\n  batch.get(batchKeys.people, `users/${userId}/people?$filter=personType/class eq 'Person'`, validUserByIdScopes);\n};\nconst validMailSearchScopes = ['Mail.ReadBasic', 'Mail.Read', 'Mail.ReadWrite'];\nconst buildMessagesWithUserRequest = (batch: IBatch, emailAddress: string) => {\n  batch.get(batchKeys.messages, `me/messages?$search=\"from:${emailAddress}\"`, validMailSearchScopes);\n};\n\nconst buildFilesRequest = (batch: IBatch, emailAddress?: string) => {\n  let request: string;\n\n  if (emailAddress) {\n    request = `me/insights/shared?$filter=lastshared/sharedby/address eq '${emailAddress}'`;\n  } else {\n    request = 'me/insights/used';\n  }\n\n  batch.get(batchKeys.files, request, validInsightScopes);\n};\n\n/**\n * Get the profile for a user\n *\n * @param {IGraph} graph\n * @param {string} userId\n * @return {*}  {Promise<Profile>}\n */\nconst getProfile = async (graph: IGraph, userId: string): Promise<Profile> =>\n  (await graph\n    .api(`/users/${userId}/profile`)\n    .version('beta')\n    .middlewareOptions(prepScopes(validUserByIdScopes))\n    .get()) as Profile;\n\nconst validCreateChatScopes = ['Chat.Create', 'Chat.ReadWrite'];\n\n/**\n * Initiate a chat to a user\n *\n * @export\n * @param {IGraph} graph\n * @param {{ chatType: string; members: [{\"@odata.type\": string,\"roles\": [\"owner\"],\"user@odata.bind\": string},{\"@odata.type\": string,\"roles\": [\"owner\"],\"user@odata.bind\": string}]  }} chatData\n * @return {*}  {Promise<Chat>}\n */\nexport const createChat = async (graph: IGraph, person: string, user: string): Promise<Chat> => {\n  const chatData = {\n    chatType: 'oneOnOne',\n    members: [\n      {\n        '@odata.type': '#microsoft.graph.aadUserConversationMember',\n        roles: ['owner'],\n        'user@odata.bind': `https://graph.microsoft.com/v1.0/users('${user}')`\n      },\n      {\n        '@odata.type': '#microsoft.graph.aadUserConversationMember',\n        roles: ['owner'],\n        'user@odata.bind': `https://graph.microsoft.com/v1.0/users('${person}')`\n      }\n    ]\n  };\n  return (await graph\n    .api('/chats')\n    .header('Cache-Control', 'no-store')\n    .middlewareOptions(prepScopes(validCreateChatScopes))\n    .post(chatData)) as Chat;\n};\n\nconst validSendChatMessageScopes = ['ChatMessage.Send', 'Chat.ReadWrite'];\n\n/**\n * Send a chat message to a user\n *\n * @export\n * @param {IGraph} graph\n * @param {{ body: {\"content\": string}  }} messageData\n * @return {*}  {Promise<ChatMessage>}\n */\nexport const sendMessage = async (\n  graph: IGraph,\n  chatId: string,\n  messageData: Pick<ChatMessage, 'body'>\n): Promise<ChatMessage> =>\n  (await graph\n    .api(`/chats/${chatId}/messages`)\n    .header('Cache-Control', 'no-store')\n    .middlewareOptions(prepScopes(validSendChatMessageScopes))\n    .post(messageData)) as ChatMessage;\n","// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\n\nimport { css, CSSResult } from 'lit';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles: CSSResult[] = [\n  css`\n:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host{box-shadow:var(--person-card-box-shadow,var(--elevation-shadow-card-rest));width:var(--mgt-flyout-set-width,375px);overflow:hidden;user-select:none;border-radius:8px;background-color:var(--person-card-background-color,var(--neutral-layer-floating));--file-list-background-color:transparent;--file-list-box-shadow:none;--file-item-background-color:transparent}:host .small{max-height:100vh;overflow:hidden auto}:host .nav{height:0;position:relative;z-index:100}:host .nav__back{padding-top:18px;padding-inline-start:12px;height:32px;width:32px}:host .nav__back svg{fill:var(--person-card-icon-color,var(--accent-foreground-rest))}:host .nav__back:hover{cursor:pointer}:host .nav__back:hover svg{fill:var(--person-card-nav-back-arrow-hover-color,var(--neutral-foreground-rest))}:host .close-card-container{position:relative;z-index:100}:host .close-card-container .close-button{position:absolute;right:10px;margin-top:9px;z-index:1;border:1px solid transparent}:host .close-card-container .close-button svg path{fill:var(--person-card-icon-color,var(--accent-foreground-rest))}:host .close-card-container .close-button:hover svg path{fill:var(--person-card-close-button-hover-color,var(--neutral-foreground-rest))}:host .person-details-container{display:flex;flex-direction:column;padding-inline-start:22px;padding-block:36px;border-bottom:1px solid var(--person-card-border-color,var(--neutral-stroke-rest))}:host .person-details-container .person-image{--person-avatar-top-spacing:var(--person-card-avatar-top-spacing, 15px);--person-details-left-spacing:var(--person-card-details-left-spacing, 15px);--person-details-bottom-spacing:var(--person-card-details-bottom-spacing, 0);--person-background-color:var(--person-card-background-color, var(--neutral-layer-floating));--person-line1-font-size:var(--person-card-line1-font-size, 20px);--person-line1-font-weight:var(--person-card-line1-font-weight, 600);--person-line1-text-line-height:var(--person-card-line1-line-height, 28px);--person-line1-text-color:var(--person-card-line1-text-color, var(--neutral-foreground-rest));--person-line2-font-size:var(--person-card-line2-font-size, 14px);--person-line2-font-weight:var(--person-card-line2-font-weight, 400);--person-line2-text-line-height:var(--person-card-line2-line-height, 20px);--person-line2-text-color:var(--person-card-line2-text-color, var(--neutral-foreground-hint));--person-line3-font-size:var(--person-card-line3-font-size, 14px);--person-line3-font-weight:var(--person-card-line3-font-weight, 400);--person-line3-text-line-height:var(--person-card-line3-line-height, 19px);--person-line3-text-color:var(--person-card-line3-text-color, var(--neutral-foreground-hint));--person-avatar-size:var(--person-card-avatar-size, 75px);--person-presence-wrapper-bottom:-15px}:host .person-details-container .base-icons{display:flex;align-items:center;margin-inline-start:var(--person-card-base-icons-left-spacing,calc(var(--person-card-avatar-size,75px) + var(--person-card-details-left-spacing,15px) - 8px));z-index:1}:host .person-details-container .base-icons .icon{display:flex;align-items:center;font-size:13px;white-space:nowrap}:host .person-details-container .base-icons .icon:not(:last-child){margin-inline-end:28px}:host .person-details-container .base-icons .icon svg .filled{display:none}:host .person-details-container .base-icons .icon svg .regular{display:block}:host .person-details-container .base-icons .icon svg path{fill:var(--person-card-icon-color,var(--accent-foreground-rest))}:host .person-details-container .base-icons .icon:active svg .filled,:host .person-details-container .base-icons .icon:hover svg .filled{display:block}:host .person-details-container .base-icons .icon:active svg .regular,:host .person-details-container .base-icons .icon:hover svg .regular{display:none}:host .person-details-container .base-icons .icon:active svg path,:host .person-details-container .base-icons .icon:hover svg path{fill:var(--person-card-icon-hover-color,var(--accent-foreground-hover))}:host .expanded-details-container{display:flex;flex-direction:column;position:relative}:host .expanded-details-container .expanded-details-button{display:flex;justify-content:center;height:32px}:host .expanded-details-container .expanded-details-button svg path{stroke:var(--person-card-icon-color,var(--accent-foreground-rest))}:host .expanded-details-container .expanded-details-button:hover{cursor:pointer;background-color:var(--person-card-expanded-background-color-hover,var(--neutral-fill-hover))}:host .expanded-details-container .sections .section{padding:20px 0;display:flex;flex-direction:column;position:relative}:host .expanded-details-container .sections .section:not(:last-child)::after{position:absolute;content:\"\";width:90%;transform:translateX(-50%);border-bottom:1px solid var(--person-card-border-color,var(--neutral-stroke-rest));left:50%;bottom:0}:host .expanded-details-container .sections .section__header{display:flex;flex-direction:row;padding:0 20px}:host .expanded-details-container .sections .section__title{flex-grow:1;color:var(--person-card-line1-text-color,var(--neutral-foreground-rest));font-size:14px;font-weight:600;line-height:19px}:host .expanded-details-container .sections .section__show-more{font-size:12px;font-weight:600;align-self:center;vertical-align:top;--base-height-multiplier:6}:host .expanded-details-container .sections .section__show-more:hover{background-color:var(--person-card-fluent-background-color-hover,var(--neutral-fill-hover))}:host .expanded-details-container .sections .section__content{margin-top:14px}:host .expanded-details-container .sections .section .additional-details{padding:0 20px}:host .expanded-details-container .divider{z-index:100;position:relative;width:375px;margin:0;border-style:none;border-bottom:1px solid var(--person-card-border-color,var(--neutral-stroke-rest))}:host .expanded-details-container .section-nav{height:35px}:host .expanded-details-container .section-nav fluent-tabs{grid-template-columns:minmax(1px,.1fr)}:host .expanded-details-container .section-nav fluent-tabs.horizontal::part(activeIndicator){width:10px}:host .expanded-details-container .section-nav fluent-tabs fluent-tab-panel{max-height:360px;min-height:360px;overflow:hidden auto;padding:0;scrollbar-width:thin}:host .expanded-details-container .section-nav fluent-tabs fluent-tab-panel .inserted{padding:20px 0;max-width:var(--mgt-flyout-set-width,375px);min-width:var(--mgt-flyout-set-width,360px);--file-list-box-shadow:none;--file-list-padding:0}:host .expanded-details-container .section-nav fluent-tabs fluent-tab-panel .inserted .title{font-size:14px;font-weight:600;color:var(--title-color-subtitle,var(--neutral-foreground-rest,#1a1a1a));margin:0 20px 20px;line-height:19px}:host .expanded-details-container .section-nav fluent-tabs fluent-tab-panel .overview-panel{max-width:var(--mgt-flyout-set-width,375px)}:host .expanded-details-container .section-nav fluent-tabs fluent-tab-panel::-webkit-scrollbar{height:4em;width:4px;border-radius:11px}:host .expanded-details-container .section-nav fluent-tabs fluent-tab-panel::-webkit-scrollbar-button{height:1px}:host .expanded-details-container .section-nav fluent-tabs fluent-tab-panel::-webkit-scrollbar-track{border-radius:10px}:host .expanded-details-container .section-nav fluent-tabs fluent-tab-panel::-webkit-scrollbar-thumb{background:grey;border-radius:10px;height:4px}:host .expanded-details-container .section-nav fluent-tabs fluent-tab{padding-bottom:1px!important;border:1px solid transparent!important}:host .expanded-details-container .section-nav fluent-tabs fluent-tab:focus-visible{border:1px solid #2b2b2b!important}:host .expanded-details-container .section-nav fluent-tabs fluent-tab.section-nav__icon{cursor:pointer;box-sizing:border-box;width:53px;height:36px;display:flex;align-items:center;justify-content:center}:host .expanded-details-container .section-nav fluent-tabs fluent-tab.section-nav__icon svg{fill:var(--person-card-fluent-background-color,transparent)}:host .expanded-details-container .section-nav fluent-tabs fluent-tab.section-nav__icon:hover{background:var(--person-card-fluent-background-color-hover,var(--neutral-fill-hover));border-radius:4px;z-index:0;position:relative}:host .expanded-details-container .section-host{min-height:360px;overflow:hidden auto}:host .expanded-details-container .section-host::-webkit-scrollbar{height:4em;width:4px;border-radius:11px}:host .expanded-details-container .section-host::-webkit-scrollbar-button{background:#fff}:host .expanded-details-container .section-host::-webkit-scrollbar-track{background:#fff;border-radius:10px}:host .expanded-details-container .section-host::-webkit-scrollbar-track-piece{background:#fff}:host .expanded-details-container .section-host::-webkit-scrollbar-thumb{background:grey;border-radius:10px;height:4px}:host .expanded-details-container .section-host.small{overflow-y:hidden}:host .loading{margin:40px 20px;display:flex;justify-content:center;height:360px}:host .message-section{border-bottom:1px solid var(--person-card-chat-input-border-color,var(--neutral-foreground-hint));display:flex}:host .message-section fluent-text-field{margin:10px 10px 10px 16px;--neutral-fill-input-rest:$person-card-background-color;--neutral-fill-input-hover:$person-card-chat-input-hover-color;--neutral-fill-input-focus:$person-card-chat-input-focus-color;width:300px;margin-inline-start:16px;border-radius:4px;border:1px solid var(--person-card-chat-input-border-color,var(--neutral-foreground-hint))}:host .message-section .send-message-icon{max-width:15px;margin-top:10px}:host .message-section svg{height:17px;width:16px;fill:var(--person-card-chat-input-border-color,var(--neutral-foreground-hint))}:host .message-section svg:hover{filter:brightness(.5)}:host .message-section svg:disabled{filter:none}:host .person-root.large,:host .person-root.threelines{--person-avatar-size-3-lines:75px}:host fluent-button.close-button.lightweight::part(control),:host fluent-button.expanded-details-button::part(control),:host fluent-button.section__show-more.lightweight::part(control){background:var(--person-card-fluent-background-color,transparent)}:host fluent-button.icon::part(control),:host fluent-button.nav__back::part(control){border:none;padding:0;background:0 0}:host fluent-button.icon::part(control) :hover,:host fluent-button.nav__back::part(control) :hover{background:0 0}[dir=rtl] .base-icons{right:91px}[dir=rtl] .nav__back{width:20px!important;transform:scaleX(-1);filter:fliph;filter:FlipH}[dir=rtl] .close-card-container .close-button{right:auto;left:10px}[dir=rtl] .message-section svg{transform:scale(-1,1)}@media (forced-colors:active) and (prefers-color-scheme:dark){.root{border:1px solid #fff;border-radius:inherit}.root svg,.root svg>path{fill:#fff!important;fill-rule:nonzero!important;clip-rule:nonzero!important}.expanded-details-container>svg,.expanded-details-container>svg>path,svg,svg>path{fill:#fff!important;fill-rule:nonzero!important;clip-rule:nonzero!important}}@media (forced-colors:active) and (prefers-color-scheme:light){.root{border:1px solid #000;border-radius:inherit}.root svg,.root svg>path{fill:#000!important;fill-rule:nonzero!important;clip-rule:nonzero!important}.expanded-details-container>svg,.expanded-details-container>svg>path,svg,svg>path{fill:#000!important;fill-rule:nonzero!important;clip-rule:nonzero!important}}\n`];","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { MgtTemplatedComponent, customElementHelper, mgtHtml } from '@microsoft/mgt-element';\nimport { html, TemplateResult } from 'lit';\nimport { property } from 'lit/decorators.js';\n\nimport { IDynamicPerson } from '../graph/types';\nimport { MgtPersonCard } from './mgt-person-card/mgt-person-card';\n\nimport './sub-components/mgt-spinner/mgt-spinner';\n\n/**\n * Defines the interface for a person card section.\n * This allows us to avoid forced inheritance and allow for more flexibility in the future.\n */\nexport interface CardSection {\n  readonly cardTitle: string;\n  tagName: string;\n  asCompactView(): CardSection;\n  asFullView(): CardSection;\n  renderIcon(): TemplateResult;\n}\n\n/**\n * A base class for building person card subsections.\n *\n * @export\n * @class BasePersonCardSection\n * @extends {MgtTemplatedComponent}\n */\nexport abstract class BasePersonCardSection extends MgtTemplatedComponent implements CardSection {\n  /**\n   * Set the person details to render\n   *\n   * @type {IDynamicPerson}\n   * @memberof BasePersonCardSection\n   */\n  @property({\n    attribute: 'person-details',\n    type: Object\n  })\n  public get personDetails(): IDynamicPerson {\n    return this._personDetails;\n  }\n  public set personDetails(value: IDynamicPerson) {\n    if (this._personDetails === value) {\n      return;\n    }\n\n    this._personDetails = value;\n    void this.requestStateUpdate();\n  }\n\n  /**\n   * The name for display in the overview section.\n   *\n   * @abstract\n   * @type {string}\n   * @memberof BasePersonCardSection\n   */\n  public abstract get displayName(): string;\n\n  /**\n   * The title for using when rendering the full card.\n   *\n   * @readonly\n   * @abstract\n   * @memberof BasePersonCardSection\n   */\n  public abstract get cardTitle(): string;\n\n  /**\n   * Determines the appropriate view state: full or compact\n   *\n   * @protected\n   * @type {boolean}\n   * @memberof BasePersonCardSection\n   */\n  protected get isCompact(): boolean {\n    return this._isCompact;\n  }\n\n  private _isCompact: boolean;\n  private _personDetails: IDynamicPerson;\n\n  constructor() {\n    super();\n    this._isCompact = false;\n    this._personDetails = null;\n  }\n\n  /**\n   * Render the icon for display in the navigation ribbon.\n   *\n   * @protected\n   * @abstract\n   * @returns {TemplateResult}\n   * @memberof BasePersonCardSection\n   */\n  public abstract renderIcon(): TemplateResult;\n\n  /**\n   * Set the section to compact view mode\n   *\n   * @returns\n   * @memberof BasePersonCardSection\n   */\n  public asCompactView() {\n    this._isCompact = true;\n    this.requestUpdate();\n    return this;\n  }\n\n  /**\n   * Set the section to full view mode\n   *\n   * @returns\n   * @memberof BasePersonCardSection\n   */\n  public asFullView() {\n    this._isCompact = false;\n    this.requestUpdate();\n    return this;\n  }\n\n  /**\n   * Reset any state in the section\n   *\n   * @protected\n   * @abstract\n   * @memberof BasePersonCardSection\n   */\n  protected clearState(): void {\n    this._isCompact = false;\n    this._personDetails = null;\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method must return\n   * a lit-html TemplateResult. Setting properties inside this method will *not*\n   * trigger the element to update.\n   */\n  protected render() {\n    return this.isCompact ? this.renderCompactView() : this.renderFullView();\n  }\n\n  /**\n   * Render a spinner while the component loads state\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof BasePersonCardSection\n   */\n  protected renderLoading(): TemplateResult {\n    return mgtHtml`\n      <div class=\"loading\">\n        <mgt-spinner></mgt-spinner>\n      </div>\n    `;\n  }\n\n  /**\n   * Render the section in a empty data state\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCardContact\n   */\n  protected renderNoData(): TemplateResult {\n    return html`\n      <div class=\"no-data\">No data</div>\n    `;\n  }\n\n  /**\n   * Render the compact view\n   *\n   * @protected\n   * @abstract\n   * @returns {TemplateResult}\n   * @memberof BasePersonCardSection\n   */\n  protected abstract renderCompactView(): TemplateResult;\n\n  /**\n   * Render the full view\n   *\n   * @protected\n   * @abstract\n   * @returns {TemplateResult}\n   * @memberof BasePersonCardSection\n   */\n  protected abstract renderFullView(): TemplateResult;\n\n  /**\n   * Navigate the card to a different user.\n   *\n   * @protected\n   * @memberof BasePersonCardSection\n   */\n  protected navigateCard(person: IDynamicPerson): void {\n    // Search for card parent and update it's personDetails object\n    let parent: ParentNode = this.parentNode;\n    while (parent) {\n      parent = parent.parentNode;\n\n      const shadowRoot = parent as ShadowRoot;\n      if (shadowRoot?.host?.tagName === `${customElementHelper.prefix}-PERSON-CARD`.toUpperCase()) {\n        parent = shadowRoot.host;\n        break;\n      }\n    }\n\n    const personCard = parent as MgtPersonCard;\n    personCard.navigate(person);\n  }\n}\n","// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\n\nimport { css, CSSResult } from 'lit';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles: CSSResult[] = [\n  css`\n:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host .loading,:host .no-data{margin:0 20px;display:flex;justify-content:center}:host .no-data{font-style:normal;font-weight:600;font-size:14px;color:var(--font-color,#323130);line-height:19px}:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host{position:relative;user-select:none}:host .root .part{display:grid;grid-template-columns:auto 1fr auto}:host .root .part .part__icon{display:flex;min-width:20px;width:20px;height:20px;align-items:center;justify-content:center;margin-left:20px;margin-top:10px;line-height:20px}:host .root .part .part__icon svg{fill:var(--contact-copy-icon-color,var(--neutral-foreground-hint))}:host .root .part .part__details{margin:10px 14px;overflow:hidden}:host .root .part .part__details .part__title{font-size:12px;color:var(--contact-title-color,var(--neutral-foreground-hint));line-height:16px}:host .root .part .part__details .part__value{grid-column:2;color:var(--contact-value-color,var(--neutral-foreground-rest));font-size:14px;font-weight:400;line-height:19px}:host .root .part .part__details .part__value .part__link{color:var(--contact-link-color,var(--accent-foreground-rest));font-size:14px;cursor:pointer;text-overflow:ellipsis;overflow:hidden;white-space:nowrap;width:100%;display:inline-block}:host .root .part .part__details .part__value .part__link:hover{color:var(--contact-link-hover-color,var(--accent-foreground-hover))}:host .root .part .part__copy{width:32px;height:100%;background-color:var(--contact-background-color,transparent);visibility:hidden;display:flex;align-items:center;justify-content:flex-start}:host .root .part .part__copy svg{fill:var(--contact-copy-icon-color,var(--neutral-foreground-hint));cursor:pointer}:host .root .part:hover .part__copy{visibility:visible}:host .root.compact{padding:0}:host .root.compact .part{height:30px;align-items:center}:host .root.compact .part__details{margin:0}:host .root.compact .part__title{display:none}:host .root.compact .part__icon{margin-top:0;margin-right:6px;margin-bottom:2px}[dir=rtl] .part__link.phone{text-align:right;direction:ltr}[dir=rtl] .part__icon{margin:10px 20px 0 0!important}[dir=rtl].compact .part__icon{margin-left:6px!important;margin-top:0!important}@media (forced-colors:active) and (prefers-color-scheme:dark){.root svg{fill:#fff!important;fill-rule:nonzero!important;clip-rule:nonzero!important}.root svg path,.root svg rect{fill:#fff!important;fill-rule:nonzero!important;clip-rule:nonzero!important}}@media (forced-colors:active) and (prefers-color-scheme:light){.root svg{fill:#000!important;fill-rule:nonzero!important;clip-rule:nonzero!important}.root svg path,.root svg rect{fill:#000!important;fill-rule:nonzero!important;clip-rule:nonzero!important}}\n`];","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nexport const strings = {\n  contactSectionTitle: 'Contact',\n  emailTitle: 'Email',\n  chatTitle: 'Teams',\n  businessPhoneTitle: 'Business Phone',\n  cellPhoneTitle: 'Mobile Phone',\n  departmentTitle: 'Department',\n  personTitle: 'Title',\n  officeLocationTitle: 'Office Location',\n  copyToClipboardButton: 'Copy to clipboard'\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { User } from '@microsoft/microsoft-graph-types';\nimport { html, TemplateResult } from 'lit';\nimport { TeamsHelper } from '@microsoft/mgt-element';\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport { getEmailFromGraphEntity } from '../../graph/graph.people';\nimport { BasePersonCardSection } from '../BasePersonCardSection';\nimport { styles } from './mgt-contact-css';\nimport { getSvg, SvgIcon } from '../../utils/SvgHelper';\nimport { strings } from './strings';\nimport { registerComponent } from '@microsoft/mgt-element';\n\n/**\n * Represents a contact part and its metadata\n *\n * @interface IContactPart\n */\ninterface IContactPart {\n  icon: TemplateResult;\n  title: string;\n  value?: string;\n  onClick?: (e: Event) => void;\n  showCompact: boolean;\n}\n\ntype Protocol = 'mailto:' | 'tel:';\n\nexport const registerMgtContactComponent = () => {\n  registerComponent('contact', MgtContact);\n};\n\n/**\n * The contact details subsection of the person card\n *\n * @export\n * @class MgtContact\n * @extends {MgtTemplatedComponent}\n */\nexport class MgtContact extends BasePersonCardSection {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  protected get strings() {\n    return strings;\n  }\n\n  /**\n   * Returns true if the component has data it can render\n   *\n   * @readonly\n   * @abstract\n   * @type {boolean}\n   * @memberof BasePersonCardSection\n   */\n  public get hasData(): boolean {\n    if (!this._contactParts) {\n      return false;\n    }\n\n    const availableParts: IContactPart[] = Object.values(this._contactParts).filter((p: IContactPart) => !!p.value);\n\n    return !!availableParts.length;\n  }\n\n  private readonly _person?: User;\n\n  private readonly _contactParts: Record<string, IContactPart> = {\n    email: {\n      icon: getSvg(SvgIcon.Email),\n      onClick: () => this.sendEmail(getEmailFromGraphEntity(this._person)),\n      showCompact: true,\n      title: this.strings.emailTitle\n    },\n    chat: {\n      icon: getSvg(SvgIcon.Chat),\n      onClick: () => this.sendChat(this._person?.userPrincipalName),\n      showCompact: false,\n      title: this.strings.chatTitle\n    },\n    businessPhone: {\n      icon: getSvg(SvgIcon.Phone),\n      onClick: () => this.sendCall(this._person?.businessPhones?.length > 0 ? this._person.businessPhones[0] : null),\n      showCompact: true,\n      title: this.strings.businessPhoneTitle\n    },\n    cellPhone: {\n      icon: getSvg(SvgIcon.CellPhone),\n      onClick: () => this.sendCall(this._person?.mobilePhone),\n      showCompact: true,\n      title: this.strings.cellPhoneTitle\n    },\n    department: {\n      icon: getSvg(SvgIcon.Department),\n      showCompact: false,\n      title: this.strings.departmentTitle\n    },\n    title: {\n      icon: getSvg(SvgIcon.Person),\n      showCompact: false,\n      title: this.strings.personTitle\n    },\n    officeLocation: {\n      icon: getSvg(SvgIcon.OfficeLocation),\n      showCompact: true,\n      title: this.strings.officeLocationTitle\n    }\n  };\n\n  public constructor(person: User) {\n    super();\n    this._person = person;\n\n    this._contactParts.email.value = getEmailFromGraphEntity(this._person);\n    this._contactParts.chat.value = this._person.userPrincipalName;\n    this._contactParts.cellPhone.value = this._person.mobilePhone;\n    this._contactParts.department.value = this._person.department;\n    this._contactParts.title.value = this._person.jobTitle;\n    this._contactParts.officeLocation.value = this._person.officeLocation;\n\n    if (this._person.businessPhones?.length) {\n      this._contactParts.businessPhone.value = this._person.businessPhones[0];\n    }\n  }\n\n  /**\n   * The name for display in the overview section.\n   *\n   * @readonly\n   * @type {string}\n   * @memberof MgtContact\n   */\n  public get displayName(): string {\n    return this.strings.contactSectionTitle;\n  }\n\n  /**\n   * The title for display when rendered as a full card.\n   *\n   * @readonly\n   * @type {string}\n   * @memberof MgtContact\n   */\n  public get cardTitle(): string {\n    return this.strings.contactSectionTitle;\n  }\n\n  // Defines the skeleton for what contact fields are available and what they do.\n\n  /**\n   * Render the icon for display in the navigation ribbon.\n   *\n   * @returns {TemplateResult}\n   * @memberof MgtContact\n   */\n  public renderIcon(): TemplateResult {\n    return getSvg(SvgIcon.Contact);\n  }\n\n  /**\n   * Reset any state in the section\n   *\n   * @protected\n   * @memberof MgtContact\n   */\n  public clearState() {\n    super.clearState();\n    for (const key of Object.keys(this._contactParts)) {\n      this._contactParts[key].value = null;\n    }\n  }\n\n  /**\n   * Render the compact view\n   *\n   * @returns {TemplateResult}\n   * @memberof MgtContact\n   */\n  protected renderCompactView(): TemplateResult {\n    if (!this.hasData) {\n      return null;\n    }\n\n    const availableParts: IContactPart[] = Object.values(this._contactParts).filter((p: IContactPart) => !!p.value);\n\n    // Filter for compact mode parts with values\n    let compactParts: IContactPart[] = Object.values(availableParts).filter(\n      (p: IContactPart) => !!p.value && p.showCompact\n    );\n\n    if (!compactParts?.length) {\n      compactParts = Object.values(availableParts).slice(0, 2);\n    }\n\n    const contentTemplate = html`\n      ${compactParts.map(p => this.renderContactPart(p))}\n    `;\n\n    return html`\n      <div class=\"root compact\" dir=${this.direction}>\n        ${contentTemplate}\n      </div>\n    `;\n  }\n\n  /**\n   * Render the full view\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtContact\n   */\n  protected renderFullView(): TemplateResult {\n    let contentTemplate: TemplateResult;\n\n    if (this.hasData) {\n      // Filter for parts with values only\n      const availableParts: IContactPart[] = Object.values(this._contactParts).filter((p: IContactPart) => !!p.value);\n      contentTemplate = html`\n        ${availableParts.map(part => this.renderContactPart(part))}\n      `;\n    }\n\n    return html`\n      <div class=\"root\" dir=${this.direction}>\n        ${contentTemplate}\n      </div>\n    `;\n  }\n\n  /**\n   * Render a specific contact part\n   *\n   * @protected\n   * @param {IContactPart} part\n   * @returns {TemplateResult}\n   * @memberof MgtContact\n   */\n  protected renderContactPart(part: IContactPart): TemplateResult {\n    let isPhone = false;\n\n    if (part.title === 'Mobile Phone' || part.title === 'Business Phone') {\n      isPhone = true;\n    }\n\n    const partLinkClasses = {\n      part__link: true,\n      phone: isPhone\n    };\n\n    const valueTemplate = part.onClick\n      ? html`\n          <span class=${classMap(partLinkClasses)} @click=${(e: Event) => part.onClick(e)}>${part.value}</span>\n        `\n      : html`\n          ${part.value}\n        `;\n\n    return html`\n      <div class=\"part\" role=\"button\" @click=${(e: MouseEvent) => this.handlePartClick(e, part.value)} tabindex=\"0\">\n        <div class=\"part__icon\" aria-label=${part.title} title=${part.title}>${part.icon}</div>\n        <div class=\"part__details\">\n          <div class=\"part__title\">${part.title}</div>\n          <div class=\"part__value\" title=${part.title}>${valueTemplate}</div>\n        </div>\n        <div\n          class=\"part__copy\"\n          aria-label=${this.strings.copyToClipboardButton}\n          title=${this.strings.copyToClipboardButton}\n        >\n          ${getSvg(SvgIcon.Copy)}\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Handle the click event for contact parts\n   *\n   * @protected\n   * @memberof MgtContact\n   */\n  protected handlePartClick(e: MouseEvent, value: string): void {\n    if (value) {\n      void navigator.clipboard.writeText(value);\n    }\n  }\n\n  private sendLink(protocol: Protocol, resource: string): void {\n    if (resource) {\n      window.open(`${protocol}${resource}`, '_blank', 'noreferrer');\n    } else {\n      // eslint-disable-next-line no-console\n      console.error(`🦒: Target resource for ${protocol} link was not provided: resource: ${resource}`);\n    }\n  }\n\n  /**\n   * Send a chat message to the user\n   *\n   * @protected\n   * @memberof MgtContact\n   */\n  protected sendChat(upn: string): void {\n    if (!upn) {\n      // eslint-disable-next-line no-console\n      console.error(\"🦒: Can't send chat when upn is not provided\");\n      return;\n    }\n\n    const url = `https://teams.microsoft.com/l/chat/0/0?users=${upn}`;\n    const openWindow = () => window.open(url, '_blank', 'noreferrer');\n\n    if (TeamsHelper.isAvailable) {\n      TeamsHelper.executeDeepLink(url, (status: boolean) => {\n        if (!status) {\n          openWindow();\n        }\n      });\n    } else {\n      openWindow();\n    }\n  }\n\n  /**\n   * Send an email to the user\n   *\n   * @protected\n   * @memberof MgtContact\n   */\n  protected sendEmail(email: string): void {\n    this.sendLink('mailto:', email);\n  }\n\n  /**\n   * Send a call to the user\n   *\n   * @protected\n   * @memberof MgtContact\n   */\n  protected sendCall = (phone: string): void => {\n    this.sendLink('tel:', phone);\n  };\n}\n","// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\n\nimport { css, CSSResult } from 'lit';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles: CSSResult[] = [\n  css`\n:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host .loading,:host .no-data{margin:0 20px;display:flex;justify-content:center}:host .no-data{font-style:normal;font-weight:600;font-size:14px;color:var(--font-color,#323130);line-height:19px}:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host{position:relative;user-select:none}:host .root.compact{padding:0}:host .root .message{padding:8px 20px;display:flex;align-items:center;justify-content:space-between}:host .root .message:hover{background-color:var(--message-hover-color,var(--neutral-fill-hover));cursor:pointer}:host .root .message:last-child{margin-bottom:unset}:host .root .message .message__detail{min-width:0;line-height:normal}:host .root .message .message__detail .message__subject{color:var(--message-subject-color,var(--neutral-foreground-color));font-size:var(--message-subject-font-size,14px);font-weight:var(--message-subject-font-weight,600);line-height:var(--message-subject-line-height,20px)}:host .root .message .message__detail .message__from{font-size:var(--message-from-font-size,12px);color:var(--message-from-color,var(--neutral-foreground-color));line-height:var(--message-from-line-height,16px);font-weight:var(--message-from-font-weight,400)}:host .root .message .message__detail .message__message{font-size:var(--message-from-font-size,12px);color:var(--message-color,var(--neutral-foreground-hint));line-height:var(--message-from-line-height,16px);font-weight:var(--message-from-font-weight,400)}:host .root .message .message__detail>div{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}:host .root .message .message__date{margin-top:8px;font-size:12px;color:var(--message-date-color,var(--neutral-foreground-hint));margin-left:10px;white-space:nowrap}\n`];","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nexport const strings = {\n  emailsSectionTitle: 'Emails'\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { Message } from '@microsoft/microsoft-graph-types';\nimport { html, TemplateResult } from 'lit';\n\nimport { BasePersonCardSection } from '../BasePersonCardSection';\nimport { getSvg, SvgIcon } from '../../utils/SvgHelper';\nimport { getRelativeDisplayDate } from '../../utils/Utils';\nimport { styles } from './mgt-messages-css';\nimport { strings } from './strings';\nimport { registerComponent } from '@microsoft/mgt-element';\n\nexport const registerMgtMessagesComponent = () => registerComponent('messages', MgtMessages);\n\n/**\n * The email messages subsection of the person card\n *\n * @export\n * @class MgtMessages\n * @extends {MgtTemplatedComponent}\n */\nexport class MgtMessages extends BasePersonCardSection {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  protected get strings() {\n    return strings;\n  }\n\n  private _messages: Message[];\n\n  public constructor(messages: Message[]) {\n    super();\n    this._messages = messages;\n  }\n\n  /**\n   * The name for display in the overview section.\n   *\n   * @readonly\n   * @type {string}\n   * @memberof MgtMessages\n   */\n  public get displayName(): string {\n    return this.strings.emailsSectionTitle;\n  }\n\n  /**\n   * The title for display when rendered as a full card.\n   *\n   * @readonly\n   * @type {string}\n   * @memberof MgtOrganization\n   */\n  public get cardTitle(): string {\n    return this.strings.emailsSectionTitle;\n  }\n\n  /**\n   * Reset any state in the section\n   *\n   * @protected\n   * @memberof MgtMessages\n   */\n  public clearState(): void {\n    super.clearState();\n    this._messages = [];\n  }\n\n  /**\n   * Render the icon for display in the navigation ribbon.\n   *\n   * @returns {TemplateResult}\n   * @memberof MgtMessages\n   */\n  public renderIcon(): TemplateResult {\n    return getSvg(SvgIcon.Messages);\n  }\n\n  /**\n   * Render the compact view\n   *\n   * @returns {TemplateResult}\n   * @memberof MgtMessages\n   */\n  public renderCompactView(): TemplateResult {\n    let contentTemplate: TemplateResult;\n\n    if (this.isLoadingState) {\n      contentTemplate = this.renderLoading();\n    } else if (!this._messages?.length) {\n      contentTemplate = this.renderNoData();\n    } else {\n      const messageTemplates = this._messages\n        ? this._messages.slice(0, 3).map(message => this.renderMessage(message))\n        : [];\n      contentTemplate = html`\n         ${messageTemplates}\n       `;\n    }\n\n    return html`\n       <div class=\"root compact\">\n         ${contentTemplate}\n       </div>\n     `;\n  }\n\n  /**\n   * Render the full view\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtMessages\n   */\n  protected renderFullView(): TemplateResult {\n    let contentTemplate: TemplateResult;\n\n    if (this.isLoadingState) {\n      contentTemplate = this.renderLoading();\n    } else if (!this._messages?.length) {\n      contentTemplate = this.renderNoData();\n    } else {\n      contentTemplate = html`\n         ${this._messages.slice(0, 5).map(message => this.renderMessage(message))}\n       `;\n    }\n\n    return html`\n       <div class=\"root\">\n         ${contentTemplate}\n       </div>\n     `;\n  }\n\n  /**\n   * Render a message item\n   *\n   * @protected\n   * @param {IMessage} message\n   * @returns {TemplateResult}\n   * @memberof MgtMessages\n   */\n  protected renderMessage(message: Message): TemplateResult {\n    return html`\n       <div class=\"message\" @click=${() => this.handleMessageClick(message)}>\n         <div class=\"message__detail\">\n           <div class=\"message__subject\">${message.subject}</div>\n           <div class=\"message__from\">${message.from.emailAddress.name}</div>\n           <div class=\"message__message\">${message.bodyPreview}</div>\n         </div>\n         <div class=\"message__date\">${getRelativeDisplayDate(new Date(message.receivedDateTime))}</div>\n       </div>\n     `;\n  }\n\n  private handleMessageClick(message: Message): void {\n    window.open(message.webLink, '_blank', 'noreferrer');\n  }\n}\n","// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\n\nimport { css, CSSResult } from 'lit';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles: CSSResult[] = [\n  css`\n:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host .loading,:host .no-data{margin:0 20px;display:flex;justify-content:center}:host .no-data{font-style:normal;font-weight:600;font-size:14px;color:var(--font-color,#323130);line-height:19px}:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host{position:relative;user-select:none}:host .root.compact{padding:0}:host .root.compact .coworker .coworker__person-image{height:40px;width:40px;border-radius:40px;--person-avatar-size:40px;margin-right:12px}:host .root.compact .coworker .coworker__name{font-size:14px}:host .root.compact .coworker .coworker__title{font-size:12px}:host .root .subtitle{color:var(--organization-sub-title-color,var(--neutral-foreground-hint));font-size:14px;margin:0 20px 8px}:host .root .divider{display:flex;background:var(--organization-coworker-border-color,var(--neutral-stroke-rest));height:1px;margin:26px 20px 18px}:host .root .org-member{height:74px;box-sizing:border-box;border-radius:2px;padding:12px;display:flex;align-items:center;margin-inline:20px}:host .root .org-member.org-member--target{background-color:var(--organization-active-org-member-target-background-color,var(--neutral-fill-active));border:1px solid var(--organization-active-org-member-border-color,var(--accent-foreground-rest))}:host .root .org-member:not(.org-member--target){border:1px solid var(--organization-coworker-border-color,var(--neutral-stroke-rest))}:host .root .org-member:not(.org-member--target):hover{cursor:pointer;background-color:var(--organization-hover-color,var(--neutral-fill-hover))}:host .root .org-member .org-member__person{flex-grow:1}:host .root .org-member .org-member__person .org-member__person-image{--person-avatar-size:var(--organization-member-person-avatar-size, 40px)}:host .root .org-member .org-member__details{flex-grow:1}:host .root .org-member .org-member__details .org-member__name{font-size:16px;color:var(--organization-title-color,var(--neutral-foreground-rest));font-weight:600}:host .root .org-member .org-member__details .org-member__department,:host .root .org-member .org-member__details .org-member__title{font-weight:14px;color:var(--organization-sub-title-color,var(--neutral-foreground-hint))}:host .root .org-member__separator:not(:last-child){border:1px solid var(--organization-coworker-border-color,var(--neutral-stroke-rest));box-sizing:border-box;width:0;margin:0 50%;height:14px}:host .root .coworker{display:flex;align-items:center;padding:10px 20px}:host .root .coworker:hover{cursor:pointer;background-color:var(--organization-coworker-hover-color,var(--neutral-fill-hover))}:host .root .coworker .coworker__person{height:46px;border-radius:46px;margin-right:8px}:host .root .coworker .coworker__person .coworker__person-image{--person-avatar-size:var(--organization-coworker-person-avatar-size, 40px)}:host .root .direct-report__compact{padding:12px 20px}:host .root .direct-report__compact .direct-report{margin-right:4px}:host .root .direct-report-list{border:1px solid var(--organization-coworker-border-color,var(--neutral-stroke-rest));margin-inline:20px}:host .root .direct-report-list .org-member--direct-report{border:none;cursor:pointer;margin-inline:0}:host .root .direct-report-list .org-member--direct-report .direct-report__person-image{--person-avatar-size:var(--organization-direct-report-person-avatar-size, 38px)}[dir=rtl] .org-member .org-member__more{transform:scaleX(-1);filter:fliph;filter:FlipH}@media (forced-colors:active) and (prefers-color-scheme:dark){:host svg,:host svg>path{fill:#fff!important;fill-rule:nonzero!important;clip-rule:nonzero!important}}@media (forced-colors:active) and (prefers-color-scheme:light){:host svg,:host svg>path{fill:#000!important;fill-rule:nonzero!important;clip-rule:nonzero!important}}\n`];","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nexport const strings = {\n  reportsToSectionTitle: 'Reports to',\n  directReportsSectionTitle: 'Direct reports',\n  organizationSectionTitle: 'Organization',\n  youWorkWithSubSectionTitle: 'You work with',\n  userWorksWithSubSectionTitle: 'works with'\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { User } from '@microsoft/microsoft-graph-types';\nimport { html, TemplateResult } from 'lit';\n\nimport { BasePersonCardSection } from '../BasePersonCardSection';\nimport { getSvg, SvgIcon } from '../../utils/SvgHelper';\nimport { MgtPersonCardState, UserWithManager } from '../mgt-person-card/mgt-person-card.types';\nimport { styles } from './mgt-organization-css';\nimport { strings } from './strings';\nimport { ViewType } from '../../graph/types';\nimport { mgtHtml } from '@microsoft/mgt-element';\nimport { registerComponent } from '@microsoft/mgt-element';\nimport { registerMgtPersonComponent } from '../mgt-person/mgt-person';\n\nexport const registerMgtOrganizationComponent = () => {\n  registerMgtPersonComponent();\n  registerComponent('organization', MgtOrganization);\n};\n\n/**\n * The member organization subsection of the person card\n *\n * @export\n * @class MgtOrganization\n * @extends {MgtTemplatedComponent}\n */\nexport class MgtOrganization extends BasePersonCardSection {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  /**\n   * returns component strings\n   *\n   * @readonly\n   * @protected\n   * @memberof MgtBaseComponent\n   */\n  protected get strings() {\n    return strings;\n  }\n\n  private _state: MgtPersonCardState;\n  private _me: User;\n\n  constructor(state: MgtPersonCardState, me: User) {\n    super();\n    this._state = state;\n    this._me = me;\n  }\n\n  /**\n   * Reset any state in the section\n   *\n   * @protected\n   * @memberof MgtPersonCardMessages\n   */\n  public clearState(): void {\n    super.clearState();\n    this._state = null;\n    this._me = null;\n  }\n\n  /**\n   * The name for display in the overview section.\n   *\n   * @readonly\n   * @type {string}\n   * @memberof MgtOrganization\n   */\n  public get displayName(): string {\n    const { person, directReports } = this._state;\n\n    if (!person.manager && directReports?.length) {\n      return `${this.strings.directReportsSectionTitle} (${directReports.length})`;\n    }\n\n    return this.strings.reportsToSectionTitle;\n  }\n\n  /**\n   * The title for display when rendered as a full card.\n   *\n   * @readonly\n   * @type {string}\n   * @memberof MgtOrganization\n   */\n  public get cardTitle(): string {\n    return this.strings.organizationSectionTitle;\n  }\n\n  /**\n   * Render the icon for display in the navigation ribbon.\n   *\n   * @returns {TemplateResult}\n   * @memberof MgtOrganization\n   */\n  public renderIcon(): TemplateResult {\n    return getSvg(SvgIcon.Organization);\n  }\n\n  /**\n   * Render the compact view\n   *\n   * @returns {TemplateResult}\n   * @memberof MgtOrganization\n   */\n  protected renderCompactView(): TemplateResult {\n    let contentTemplate: TemplateResult;\n\n    if (!this._state?.person) {\n      return null;\n    }\n\n    const { person, directReports } = this._state;\n\n    if (!person) {\n      return null;\n    } else if (person.manager) {\n      contentTemplate = this.renderCoworker(person.manager);\n    } else if (directReports?.length) {\n      contentTemplate = this.renderCompactDirectReports();\n    }\n\n    return html`\n        <div class=\"root compact\">\n          ${contentTemplate}\n        </div>\n      `;\n  }\n\n  /**\n   * Render the full view\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtOrganization\n   */\n  protected renderFullView(): TemplateResult {\n    let contentTemplate: TemplateResult;\n\n    if (!this._state?.person) {\n      return null;\n    }\n\n    const { person, directReports, people } = this._state;\n\n    if (!person && !directReports && !people) {\n      return null;\n    } else {\n      const managerTemplates = this.renderManagers();\n      const currentUserTemplate = this.renderCurrentUser();\n      const directReportsTemplate = this.renderDirectReports();\n      const coworkersTemplate = this.renderCoworkers();\n\n      contentTemplate = html`\n          ${managerTemplates} ${currentUserTemplate} ${directReportsTemplate} ${coworkersTemplate}\n        `;\n    }\n\n    return html`\n       <div class=\"root\" dir=${this.direction}>\n         ${contentTemplate}\n       </div>\n     `;\n  }\n\n  /**\n   * Render a manager org member\n   *\n   * @protected\n   * @param {User} person\n   * @returns {TemplateResult}\n   * @memberof MgtOrganization\n   */\n  protected renderManager(person: User): TemplateResult {\n    return mgtHtml`\n      <div\n        class=\"org-member\"\n        @keydown=${(e: KeyboardEvent) => {\n          if (e.code === 'Enter' || e.code === ' ') this.navigateCard(person);\n        }}\n        @click=${() => this.navigateCard(person)}\n      >\n        <div class=\"org-member__person\">\n          <mgt-person\n            class=\"org-member__person-image\"\n            .personDetails=${person}\n            .fetchImage=${true}\n            .view=${ViewType.twolines}\n            .showPresence=${true}\n          ></mgt-person>\n        </div>\n        <div tabindex=\"0\" class=\"org-member__more\">\n          ${getSvg(SvgIcon.ExpandRight)}\n        </div>\n      </div>\n      <div class=\"org-member__separator\"></div>\n     `;\n  }\n\n  /**\n   * Render a manager org member\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtOrganization\n   */\n  protected renderManagers(): TemplateResult[] {\n    const { person } = this._state;\n    if (!person?.manager) {\n      return null;\n    }\n\n    const managers: UserWithManager[] = [];\n    let currentManager = person;\n    while (currentManager.manager) {\n      managers.push(currentManager.manager);\n      currentManager = currentManager.manager;\n    }\n\n    if (!managers.length) {\n      return null;\n    }\n\n    return managers.reverse().map(manager => this.renderManager(manager));\n  }\n\n  /**\n   * Render a direct report\n   *\n   * @protected\n   * @param {User} person\n   * @returns {TemplateResult}\n   * @memberof MgtOrganization\n   */\n  protected renderDirectReports(): TemplateResult {\n    const { directReports } = this._state;\n    if (!directReports?.length) {\n      return null;\n    }\n\n    return html`\n      <div class=\"org-member__separator\"></div>\n      <div class=\"direct-report-list\">\n        ${directReports.map(\n          person => mgtHtml`\n            <div\n              class=\"org-member org-member--direct-report\"\n              @keydown=${(e: KeyboardEvent) => {\n                if (e.code === 'Enter' || e.code === ' ') this.navigateCard(person);\n              }}\n              @click=${() => this.navigateCard(person)}\n            >\n              <div class=\"org-member__person\">\n                <mgt-person\n                  class=\"org-member__person-image\"\n                  .personDetails=${person}\n                  .fetchImage=${true}\n                  .showPresence=${true}\n                  .view=${ViewType.twolines}\n                ></mgt-person>\n              </div>\n              <div tabindex=\"0\" class=\"org-member__more\">\n                ${getSvg(SvgIcon.ExpandRight)}\n              </div>\n            </div>\n          `\n        )}\n      </div>\n     `;\n  }\n\n  /**\n   * Render direct reports in compact view\n   *\n   * @protected\n   * @param {User} person\n   * @returns {TemplateResult}\n   * @memberof MgtOrganization\n   */\n  protected renderCompactDirectReports(): TemplateResult {\n    const { directReports } = this._state;\n\n    return html`\n      <div class=\"direct-report__compact\">\n        ${directReports.slice(0, 6).map(\n          person => mgtHtml`\n            <div\n              class=\"direct-report\"\n              @keydown=${(e: KeyboardEvent) => {\n                if (e.code === 'Enter' || e.code === ' ') this.navigateCard(person);\n              }}\n              @click=${() => this.navigateCard(person)}\n            >\n              <mgt-person\n                class=\"direct-report__person-image\"\n                .personDetails=${person}\n                .fetchImage=${true}\n                .showPresence=${true}\n                .view=${ViewType.twolines}\n              ></mgt-person>\n            </div>\n          `\n        )}\n      </div>\n    `;\n  }\n\n  /**\n   * Render the user/self member\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtOrganization\n   */\n  protected renderCurrentUser(): TemplateResult {\n    const { person } = this._state;\n    return mgtHtml`\n       <div class=\"org-member org-member--target\">\n         <div class=\"org-member__person\">\n           <mgt-person\n              class=\"org-member__person-image\"\n             .personDetails=${person}\n             .fetchImage=${true}\n             .showPresence=${true}\n             .view=${ViewType.twolines}\n           ></mgt-person>\n         </div>\n       </div>\n     `;\n  }\n\n  /**\n   * Render a coworker org member\n   *\n   * @protected\n   * @param {User} person\n   * @returns {TemplateResult}\n   * @memberof MgtOrganization\n   */\n  protected renderCoworker(person: User): TemplateResult {\n    return mgtHtml`\n      <div\n        class=\"coworker\"\n        @keydown=${(e: KeyboardEvent) => {\n          if (e.code === 'Enter' || e.code === ' ') this.navigateCard(person);\n        }}\n        @click=${() => this.navigateCard(person)}\n      >\n        <div class=\"coworker__person\">\n          <mgt-person\n            class=\"coworker__person-image\"\n            .personDetails=${person}\n            .fetchImage=${true}\n            .showPresence=${true}\n            .view=${ViewType.twolines}\n          ></mgt-person>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Render a coworker org member\n   *\n   * @protected\n   * @param {User} person\n   * @returns {TemplateResult}\n   * @memberof MgtOrganization\n   */\n  protected renderCoworkers(): TemplateResult {\n    const { people } = this._state;\n    if (!people?.length) {\n      return null;\n    }\n\n    const subtitle =\n      this._me.id === this._state.person.id\n        ? this.strings.youWorkWithSubSectionTitle\n        : `${this._state.person.givenName} ${this.strings.userWorksWithSubSectionTitle}`;\n\n    return html`\n       <div class=\"divider\"></div>\n       <div class=\"subtitle\" tabindex=\"0\">${subtitle}</div>\n       <div>\n         ${people.slice(0, 6).map(person => this.renderCoworker(person))}\n       </div>\n     `;\n  }\n}\n","// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\n\nimport { css, CSSResult } from 'lit';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles: CSSResult[] = [\n  css`\n:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host .loading,:host .no-data{margin:0 20px;display:flex;justify-content:center}:host .no-data{font-style:normal;font-weight:600;font-size:14px;color:var(--font-color,#323130);line-height:19px}:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host{position:relative;user-select:none;background-color:var(--profile-background-color,--neutral-layer-1)}:host .root{padding:20px 0}:host .root.compact{padding:0}:host .root .title{font-size:14px;font-weight:600;color:var(--profile-title-color,var(--neutral-foreground-rest));margin:0 20px 12px}:host .root section{margin-bottom:24px;padding:0 20px}:host .root section:last-child{margin:0}:host .root section .section__title{font-size:14px;color:var(--profile-section-title-color,var(--neutral-foreground-hint))}:host .root section .section__content{display:flex;flex-direction:column;margin-top:10px}:host .root .token-list{display:flex;flex-flow:row wrap;margin-top:-10px}:host .root .token-list .token-list__item{text-overflow:ellipsis;white-space:nowrap;display:inline-block;overflow:hidden;font-size:14px;align-items:center;background:var(--profile-token-item-background-color,var(--neutral-fill-secondary-rest));border-radius:2px;max-height:28px;padding:4px 8px;margin-right:10px;margin-top:10px;color:var(--profile-token-item-color,var(--neutral-foreground-rest))}:host .root .token-list .token-list__item:last-child{margin-right:initial}:host .root .token-list .token-list__item.overflow{display:none}:host .root .token-list .token-list__item.token-list__item--show-overflow{cursor:pointer;user-select:unset;background:0 0;color:var(--profile-token-overflow-color,var(--accent-foreground-rest))}:host .root .data-list__item{margin-bottom:20px}:host .root .data-list__item:last-child{margin-bottom:initial}:host .root .data-list__item .data-list__item__header{display:flex;justify-content:space-between;align-items:center}:host .root .data-list__item .data-list__item__content{font-size:12px;line-height:16px;color:var(--profile-section-title-color,var(--neutral-foreground-hint));margin-top:4px}:host .root .data-list__item .data-list__item__title{font-size:14px;line-height:16px;color:var(--profile-title-color,var(--neutral-foreground-rest))}:host .root .data-list__item .data-list__item__date-range{color:var(--profile-section-title-color,var(--neutral-foreground-hint));font-size:10px;line-height:12px}:host .root .language__proficiency{opacity:.77}:host .root .work-position .work-position__company{color:#023b8f}:host .root .work-position .work-position__location{font-size:10px;color:var(--profile-section-title-color,var(--neutral-foreground-hint));line-height:16px}:host .root .educational-activity .educational-activity__degree{font-size:12px;line-height:14px;color:var(--profile-section-title-color,var(--neutral-foreground-hint))}:host .root .birthday{display:flex;align-items:center;margin-top:-6px}:host .root .birthday .birthday__icon{margin-right:8px}:host .root .birthday .birthday__date{font-size:12px;color:var(--profile-title-color,var(--neutral-foreground-rest))}[dir=rtl] .token-list__item{margin-right:0!important}\n`];","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nexport const strings = {\n  SkillsAndExperienceSectionTitle: 'Skills & Experience',\n  AboutCompactSectionTitle: 'About',\n  SkillsSubSectionTitle: 'Skills',\n  LanguagesSubSectionTitle: 'Languages',\n  WorkExperienceSubSectionTitle: 'Work Experience',\n  EducationSubSectionTitle: 'Education',\n  professionalInterestsSubSectionTitle: 'Professional Interests',\n  personalInterestsSubSectionTitle: 'Personal Interests',\n  birthdaySubSectionTitle: 'Birthday',\n  currentYearSubtitle: 'Current',\n  socialMediaSubSectionTitle: 'Social Media'\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport {\n  EducationalActivity,\n  PersonAnnualEvent,\n  PersonInterest,\n  PhysicalAddress,\n  Profile\n} from '@microsoft/microsoft-graph-types-beta';\nimport { html, TemplateResult, nothing } from 'lit';\nimport { BasePersonCardSection } from '../BasePersonCardSection';\nimport { getSvg, SvgIcon } from '../../utils/SvgHelper';\nimport { styles } from './mgt-profile-css';\nimport { strings } from './strings';\nimport { registerComponent } from '@microsoft/mgt-element';\n\nexport const registerMgtProfileComponent = () => registerComponent('profile', MgtProfile);\n\n/**\n * The user profile subsection of the person card\n *\n * @export\n * @class MgtProfile\n * @extends {MgtTemplatedComponent}\n *\n * @cssprop --token-overflow-color - {Color} Color of the text showing more undisplayed values i.e. +3 more\n */\nexport class MgtProfile extends BasePersonCardSection {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  protected get strings() {\n    return strings;\n  }\n\n  /**\n   * The name for display in the overview section.\n   *\n   * @readonly\n   * @type {string}\n   * @memberof MgtProfile\n   */\n  public get displayName(): string {\n    return this.strings.SkillsAndExperienceSectionTitle;\n  }\n\n  /**\n   * The title for display when rendered as a full card.\n   *\n   * @readonly\n   * @type {string}\n   * @memberof MgtOrganization\n   */\n  public get cardTitle(): string {\n    return this.strings.AboutCompactSectionTitle;\n  }\n\n  /**\n   * Returns true if the profile contains data\n   * that can be rendered\n   *\n   * @readonly\n   * @type {boolean}\n   * @memberof MgtProfile\n   */\n  public get hasData(): boolean {\n    if (!this.profile) {\n      return false;\n    }\n\n    const { languages, skills, positions, educationalActivities } = this.profile;\n\n    return (\n      [\n        this._birthdayAnniversary,\n        this._personalInterests?.length,\n        this._professionalInterests?.length,\n        languages?.length,\n        skills?.length,\n        positions?.length,\n        educationalActivities?.length\n      ].filter(v => !!v).length > 0\n    );\n  }\n\n  /**\n   * The user's profile metadata\n   *\n   * @protected\n   * @type {IProfile}\n   * @memberof MgtProfile\n   */\n  protected get profile(): Profile {\n    return this._profile;\n  }\n  protected set profile(value: Profile) {\n    if (value === this._profile) {\n      return;\n    }\n\n    this._profile = value;\n    this._birthdayAnniversary = value?.anniversaries ? value.anniversaries.find(this.isBirthdayAnniversary) : null;\n    this._personalInterests = value?.interests ? value.interests.filter(this.isPersonalInterest) : null;\n    this._professionalInterests = value?.interests ? value.interests.filter(this.isProfessionalInterest) : null;\n  }\n\n  private _profile: Profile;\n  private _personalInterests: PersonInterest[];\n  private _professionalInterests: PersonInterest[];\n  private _birthdayAnniversary: PersonAnnualEvent;\n\n  constructor(profile: Profile) {\n    super();\n\n    this.profile = profile;\n  }\n\n  /**\n   * Render the icon for display in the navigation ribbon.\n   *\n   * @returns {TemplateResult}\n   * @memberof MgtProfile\n   */\n  public renderIcon(): TemplateResult {\n    return getSvg(SvgIcon.Profile);\n  }\n\n  /**\n   * Reset any state in the section\n   *\n   * @protected\n   * @memberof MgtProfile\n   */\n  public clearState(): void {\n    super.clearState();\n    this.profile = null;\n  }\n\n  /**\n   * Render the compact view\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtProfile\n   */\n  protected renderCompactView(): TemplateResult {\n    return html`\n       <div class=\"root compact\" dir=${this.direction}>\n         ${this.renderSubSections().slice(0, 2)}\n       </div>\n     `;\n  }\n\n  /**\n   * Render the full view\n   *\n   * @protected\n   * @returns\n   * @memberof MgtProfile\n   */\n  protected renderFullView() {\n    this.initPostRenderOperations();\n\n    return html`\n       <div class=\"root\" dir=${this.direction}>\n         ${this.renderSubSections()}\n       </div>\n     `;\n  }\n\n  /**\n   * Renders all subSections of the profile\n   * Defines order of how they render\n   *\n   * @protected\n   * @return {*}\n   * @memberof MgtProfile\n   */\n  protected renderSubSections() {\n    const subSections = [\n      this.renderSkills(),\n      this.renderBirthday(),\n      this.renderLanguages(),\n      this.renderWorkExperience(),\n      this.renderEducation(),\n      this.renderProfessionalInterests(),\n      this.renderPersonalInterests()\n    ];\n\n    return subSections.filter(s => !!s);\n  }\n\n  /**\n   * Render the user's known languages\n   *\n   * @protected\n   * @returns\n   * @memberof MgtProfile\n   */\n  protected renderLanguages(): TemplateResult {\n    const { languages } = this._profile;\n    if (!languages?.length) {\n      return null;\n    }\n\n    const languageItems: TemplateResult[] = [];\n    for (const language of languages) {\n      let proficiency = null;\n      if (language.proficiency?.length) {\n        proficiency = html`\n           <span class=\"language__proficiency\" tabindex=\"0\">\n             &nbsp;(${language.proficiency})\n           </span>\n         `;\n      }\n\n      languageItems.push(html`\n         <div class=\"token-list__item language\">\n           <span class=\"language__title\" tabindex=\"0\">${language.displayName}</span>\n           ${proficiency}\n         </div>\n       `);\n    }\n\n    const languageTitle = languageItems.length ? this.strings.LanguagesSubSectionTitle : '';\n\n    return html`\n       <section>\n         <div class=\"section__title\" tabindex=\"0\">${languageTitle}</div>\n         <div class=\"section__content\">\n           <div class=\"token-list\">\n             ${languageItems}\n           </div>\n         </div>\n       </section>\n     `;\n  }\n\n  /**\n   * Render the user's skills\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtProfile\n   */\n  protected renderSkills(): TemplateResult {\n    const { skills } = this._profile;\n\n    if (!skills?.length) {\n      return null;\n    }\n\n    const skillItems: TemplateResult[] = [];\n    for (const skill of skills) {\n      skillItems.push(html`\n         <div class=\"token-list__item skill\" tabindex=\"0\">\n           ${skill.displayName}\n         </div>\n       `);\n    }\n\n    const skillsTitle = skillItems.length ? this.strings.SkillsSubSectionTitle : '';\n\n    return html`\n       <section>\n         <div class=\"section__title\" tabindex=\"0\">${skillsTitle}</div>\n         <div class=\"section__content\">\n           <div class=\"token-list\">\n             ${skillItems}\n           </div>\n         </div>\n       </section>\n     `;\n  }\n\n  /**\n   * Render the user's work experience timeline\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtProfile\n   */\n  protected renderWorkExperience(): TemplateResult {\n    const { positions } = this._profile;\n\n    if (!positions?.length) {\n      return null;\n    }\n\n    const positionItems: TemplateResult[] = [];\n    for (const position of this._profile.positions) {\n      if (position.detail.description || position.detail.jobTitle !== '') {\n        positionItems.push(html`\n           <div class=\"data-list__item work-position\">\n             <div class=\"data-list__item__header\">\n               <div class=\"data-list__item__title\" tabindex=\"0\">${position.detail?.jobTitle}</div>\n               <div class=\"data-list__item__date-range\" tabindex=\"0\">\n                 ${this.getDisplayDateRange(position.detail)}\n               </div>\n             </div>\n             <div class=\"data-list__item__content\">\n               <div class=\"work-position__company\" tabindex=\"0\">\n                 ${position?.detail?.company?.displayName}\n               </div>\n               <div class=\"work-position__location\" tabindex=\"0\">\n                 ${this.displayLocation(position?.detail?.company?.address)}\n               </div>\n             </div>\n           </div>\n         `);\n      }\n    }\n    const workExperienceTitle = positionItems.length ? this.strings.WorkExperienceSubSectionTitle : '';\n\n    return html`\n       <section>\n         <div class=\"section__title\" tabindex=\"0\">${workExperienceTitle}</div>\n         <div class=\"section__content\">\n           <div class=\"data-list\">\n             ${positionItems}\n           </div>\n         </div>\n       </section>\n     `;\n  }\n\n  /**\n   * Render the user's education timeline\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtProfile\n   */\n  protected renderEducation(): TemplateResult {\n    const { educationalActivities } = this._profile;\n\n    if (!educationalActivities?.length) {\n      return null;\n    }\n\n    const positionItems: TemplateResult[] = [];\n    for (const educationalActivity of educationalActivities) {\n      positionItems.push(html`\n         <div class=\"data-list__item educational-activity\">\n           <div class=\"data-list__item__header\">\n             <div class=\"data-list__item__title\" tabindex=\"0\">${educationalActivity.institution.displayName}</div>\n             <div class=\"data-list__item__date-range\" tabindex=\"0\">\n               ${this.getDisplayDateRange(educationalActivity)}\n             </div>\n           </div>\n           ${\n             educationalActivity.program.displayName\n               ? html`<div class=\"data-list__item__content\">\n                  <div class=\"educational-activity__degree\" tabindex=\"0\">\n                  ${educationalActivity.program.displayName}\n                </div>`\n               : nothing\n           }\n         </div>\n       `);\n    }\n\n    const educationTitle = positionItems.length ? this.strings.EducationSubSectionTitle : '';\n\n    return html`\n       <section>\n         <div class=\"section__title\" tabindex=\"0\">${educationTitle}</div>\n         <div class=\"section__content\">\n           <div class=\"data-list\">\n             ${positionItems}\n           </div>\n         </div>\n       </section>\n     `;\n  }\n\n  /**\n   * Render the user's professional interests\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtProfile\n   */\n  protected renderProfessionalInterests(): TemplateResult {\n    if (!this._professionalInterests?.length) {\n      return null;\n    }\n\n    const interestItems: TemplateResult[] = [];\n    for (const interest of this._professionalInterests) {\n      interestItems.push(html`\n         <div class=\"token-list__item interest interest--professional\" tabindex=\"0\">\n           ${interest.displayName}\n         </div>\n       `);\n    }\n\n    const professionalInterests = interestItems.length ? this.strings.professionalInterestsSubSectionTitle : '';\n\n    return html`\n       <section>\n         <div class=\"section__title\" tabindex=\"0\">${professionalInterests}</div>\n         <div class=\"section__content\">\n           <div class=\"token-list\">\n             ${interestItems}\n           </div>\n         </div>\n       </section>\n     `;\n  }\n\n  /**\n   * Render the user's personal interests\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtProfile\n   */\n  protected renderPersonalInterests(): TemplateResult {\n    if (!this._personalInterests?.length) {\n      return null;\n    }\n\n    const interestItems: TemplateResult[] = [];\n    for (const interest of this._personalInterests) {\n      interestItems.push(html`\n         <div class=\"token-list__item interest interest--personal\" tabindex=\"0\">\n           ${interest.displayName}\n         </div>\n       `);\n    }\n\n    const personalInterests = interestItems.length ? this.strings.personalInterestsSubSectionTitle : '';\n\n    return html`\n       <section>\n         <div class=\"section__title\" tabindex=\"0\">${personalInterests}</div>\n         <div class=\"section__content\">\n           <div class=\"token-list\">\n             ${interestItems}\n           </div>\n         </div>\n       </section>\n     `;\n  }\n\n  /**\n   * Render the user's birthday\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtProfile\n   */\n  protected renderBirthday(): TemplateResult {\n    if (!this._birthdayAnniversary?.date) {\n      return null;\n    }\n\n    return html`\n       <section>\n         <div class=\"section__title\" tabindex=\"0\">Birthday</div>\n         <div class=\"section__content\">\n           <div class=\"birthday\">\n             <div class=\"birthday__icon\">\n               ${getSvg(SvgIcon.Birthday)}\n             </div>\n             <div class=\"birthday__date\" tabindex=\"0\">\n               ${this.getDisplayDate(new Date(this._birthdayAnniversary.date))}\n             </div>\n           </div>\n         </div>\n       </section>\n     `;\n  }\n\n  private readonly isPersonalInterest = (interest: PersonInterest): boolean => {\n    return interest.categories?.includes('personal');\n  };\n\n  private readonly isProfessionalInterest = (interest: PersonInterest): boolean => {\n    return interest.categories?.includes('professional');\n  };\n\n  private readonly isBirthdayAnniversary = (anniversary: PersonAnnualEvent): boolean => {\n    return anniversary.type === 'birthday';\n  };\n\n  private getDisplayDate(date: Date): string {\n    return date.toLocaleString('default', {\n      day: 'numeric',\n      month: 'long'\n    });\n  }\n\n  private getDisplayDateRange(event: EducationalActivity): string | symbol {\n    // if startMonthYear is not defined, we do not show the date range (otherwise it will always start with 1970)\n    if (!event.startMonthYear) {\n      return nothing;\n    }\n\n    const start = new Date(event.startMonthYear).getFullYear();\n    // if the start year is 0 or 1 - it's probably an error or a strange \"undefined\"-value\n    if (start === 0 || start === 1) {\n      return nothing;\n    }\n\n    const end = event.endMonthYear ? new Date(event.endMonthYear).getFullYear() : this.strings.currentYearSubtitle;\n    return `${start} — ${end}`;\n  }\n\n  private displayLocation(address: PhysicalAddress | undefined): string | symbol {\n    if (address?.city) {\n      if (address.state) {\n        return `${address.city}, ${address.state}`;\n      }\n      return address.city;\n    }\n    return nothing;\n  }\n\n  private initPostRenderOperations(): void {\n    setTimeout(() => {\n      try {\n        const sections = this.shadowRoot.querySelectorAll('section');\n        sections.forEach(section => {\n          // Perform post render operations per section\n          this.handleTokenOverflow(section);\n        });\n      } catch {\n        // An exception may occur if the component is suddenly removed during post render operations.\n      }\n    }, 0);\n  }\n\n  private handleTokenOverflow(section: HTMLElement): void {\n    const tokenLists = section.querySelectorAll('.token-list');\n    if (!tokenLists?.length) {\n      return;\n    }\n\n    for (const tokenList of Array.from(tokenLists)) {\n      const items = tokenList.querySelectorAll('.token-list__item');\n      if (!items?.length) {\n        continue;\n      }\n\n      let overflowItems: Element[] = null;\n      let itemRect = items[0].getBoundingClientRect();\n      const tokenListRect = tokenList.getBoundingClientRect();\n      const maxtop = itemRect.height * 2 + tokenListRect.top;\n\n      // Use (items.length - 1) to prevent [+1 more] from appearing.\n      for (let i = 0; i < items.length - 1; i++) {\n        itemRect = items[i].getBoundingClientRect();\n        if (itemRect.top > maxtop) {\n          overflowItems = Array.from(items).slice(i, items.length);\n          break;\n        }\n      }\n\n      if (overflowItems) {\n        overflowItems.forEach(i => i.classList.add('overflow'));\n\n        const overflowToken = document.createElement('div');\n        overflowToken.classList.add('token-list__item');\n        overflowToken.classList.add('token-list__item--show-overflow');\n        overflowToken.tabIndex = 0;\n        overflowToken.innerText = `+ ${overflowItems.length} more`;\n\n        // On click or enter(accessibility), remove [+n more] token and reveal the hidden overflow tokens.\n        const revealOverflow = () => {\n          overflowToken.remove();\n          overflowItems.forEach(i => i.classList.remove('overflow'));\n        };\n        overflowToken.addEventListener('click', () => {\n          revealOverflow();\n        });\n        overflowToken.addEventListener('keydown', (e: KeyboardEvent) => {\n          if (e.code === 'Enter') {\n            revealOverflow();\n          }\n        });\n        tokenList.appendChild(overflowToken);\n      }\n    }\n  }\n}\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nexport const strings = {\n  showMoreSectionButton: 'Show more',\n  endOfCard: 'End of the card',\n  quickMessage: 'Send a quick message',\n  expandDetailsLabel: 'Expand details',\n  sendMessageLabel: 'Send message',\n  emailButtonLabel: 'Email',\n  callButtonLabel: 'Call',\n  chatButtonLabel: 'Chat',\n  closeCardLabel: 'Close card',\n  videoButtonLabel: 'Video',\n  goBackLabel: 'Go Back'\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { html, nothing, TemplateResult } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport {\n  MgtTemplatedComponent,\n  Providers,\n  ProviderState,\n  TeamsHelper,\n  mgtHtml,\n  customElementHelper\n} from '@microsoft/mgt-element';\nimport { IGraph } from '@microsoft/mgt-element';\nimport { Presence, User, Person } from '@microsoft/microsoft-graph-types';\n\nimport { findPeople, getEmailFromGraphEntity } from '../../graph/graph.people';\nimport { IDynamicPerson, ViewType } from '../../graph/types';\nimport { getPersonImage } from '../../graph/graph.photos';\nimport { getUserWithPhoto } from '../../graph/graph.userWithPhoto';\nimport { getSvg, SvgIcon } from '../../utils/SvgHelper';\nimport { getUserPresence } from '../../graph/graph.presence';\nimport { getPersonCardGraphData, createChat, sendMessage } from './mgt-person-card.graph';\nimport { MgtPerson, registerMgtPersonComponent } from '../mgt-person/mgt-person';\nimport { styles } from './mgt-person-card-css';\nimport { MgtContact, registerMgtContactComponent } from '../mgt-contact/mgt-contact';\nimport { MgtFileList, registerMgtFileListComponent } from '../mgt-file-list/mgt-file-list';\nimport { MgtMessages, registerMgtMessagesComponent } from '../mgt-messages/mgt-messages';\nimport { MgtOrganization, registerMgtOrganizationComponent } from '../mgt-organization/mgt-organization';\nimport { MgtProfile, registerMgtProfileComponent } from '../mgt-profile/mgt-profile';\nimport { MgtPersonCardState } from './mgt-person-card.types';\nimport { MgtPersonCardConfig } from './MgtPersonCardConfig';\nimport { getMgtPersonCardScopes } from './getMgtPersonCardScopes';\nimport { strings } from './strings';\nimport { isUser } from '../../graph/entityType';\n\nimport '../sub-components/mgt-spinner/mgt-spinner';\n\nexport * from './mgt-person-card.types';\n\nimport {\n  fluentTabs,\n  fluentTab,\n  fluentTabPanel,\n  fluentButton,\n  fluentTextField,\n  fluentCard\n} from '@fluentui/web-components';\nimport { registerFluentComponents } from '../../utils/FluentComponents';\nimport { BasePersonCardSection, CardSection } from '../BasePersonCardSection';\nimport { buildComponentName, registerComponent } from '@microsoft/mgt-element';\nimport { registerMgtSpinnerComponent } from '../sub-components/mgt-spinner/mgt-spinner';\nimport { IHistoryClearer, IExpandable } from './types';\n\ninterface MgtPersonCardStateHistory {\n  state: MgtPersonCardState;\n  personDetails: IDynamicPerson;\n  personImage: string;\n}\n\nexport const registerMgtPersonCardComponent = () => {\n  registerFluentComponents(fluentCard, fluentTabs, fluentTab, fluentTabPanel, fluentButton, fluentTextField);\n  // register self first to avoid infinite loop due to circular ref between person and person card and organization\n  registerComponent('person-card', MgtPersonCard);\n\n  registerMgtSpinnerComponent();\n  // these components newed up rather than created declaratively\n  registerMgtContactComponent();\n  registerMgtOrganizationComponent();\n  registerMgtMessagesComponent();\n  registerMgtFileListComponent();\n  registerMgtProfileComponent();\n  // only register person if not already registered\n  if (!customElements.get(buildComponentName('person'))) registerMgtPersonComponent();\n};\n\n/**\n * Web Component used to show detailed data for a person in the Microsoft Graph\n *\n * @export\n * @class MgtPersonCard\n * @extends {MgtTemplatedComponent}\n *\n * @fires {CustomEvent<null>} expanded - Fired when expanded details section is opened\n *\n * @cssprop --person-card-line1-font-size - {Length} Font size of line 1\n * @cssprop --person-card-line1-font-weight - {FontWeight} Font weight of line 1\n * @cssprop --person-card-line1-line-height - {Length} Line height of line 1\n * @cssprop --person-card-line2-font-size - {Length} Font size of line 2\n * @cssprop --person-card-line2-font-weight - {FontWeight} Font weight of line 2\n * @cssprop --person-card-line2-line-height - {Length} Line height of line 2\n * @cssprop --person-card-line3-font-size - {Length} Font size of line 3\n * @cssprop --person-card-line3-font-weight - {FontWeight} Font weight of line 3\n * @cssprop --person-card-line3-line-height - {Length} Line height of line 3\n * @cssprop --person-card-avatar-size - {Length} Width and height of the avatar. Default is 75px\n * @cssprop --person-card-details-left-spacing - {Length} The space between the avatar and the person details. Default is 15px\n * @cssprop --person-card-avatar-top-spacing - {Length} The margin top of the avatar in person-card component\n * @cssprop --person-card-details-bottom-spacing - {Length} The margin bottom of the person details in person-card component\n * @cssprop --person-card-base-icons-left-spacing - {Length} The margin-inline-start of the base-icons in person-card component\n * @cssprop --person-card-background-color - {Color} The color of the person-card-component\n * @cssprop --person-card-expanded-background-color-hover - {Color} The hover color of the expanded details button of the person card component\n * @cssprop --person-card-nav-back-arrow-hover-color - {Color} The hover color of the back arrow of the person card component\n * @cssprop --person-card-icon-color - {Color} The color of the icons in the person card component\n * @cssprop --person-card-icon-hover-color - {Color} The hover color of the icons in the person card component\n * @cssprop --person-card-show-more-color - {Color} The color of the show more text in the person card component\n * @cssprop --person-card-show-more-hover-color - {Color} The hover color of the show more text in person card component\n * @cssprop --person-card-fluent-background-color - {Color} The background color of the fluent buttons in person card component\n * @cssprop --person-card-line1-text-color - {Color} The color of line 1 in person card\n * @cssprop --person-card-line2-text-color - {Color} The color of line 2 in person card\n * @cssprop --person-card-line3-text-color - {Color} The color of line 3 in person card\n * @cssprop --person-card-fluent-background-color-hover - {Color} The hover background color of the fluent buttons in person card component\n * @cssprop --person-card-chat-input-hover-color - {Color} The chat input hover color\n * @cssprop --person-card-chat-input-focus-color - {Color} The chat input focus color\n * @cssprop --contact-title-color - {Color} The color of the contact title in the contact section of the person card component\n * @cssprop --contact-value-color - {Color} The color of the contact value in the contact section of the person card component\n * @cssprop --contact-link-color - {Color} The color of the contact link in the contact section of the person card component\n * @cssprop --contact-link-hover-color - {Color} The hover color of the contact link in the contact section of the person card component\n * @cssprop --contact-background-color - {Color} The background color of the contact section in person card component\n * @cssprop --contact-copy-icon-color - {Color} The color of the copy icon in the contact section of the person card component\n * @cssprop --message-subject-font-size - {Length} The font size of the message subject in the message section of the person card component\n * @cssprop --message-subject-font-weight - {FontWeight} The font weight of the message subject in the message section of the person card component\n * @cssprop --message-subject-line-height - {Length} The line height of the message subject in the message section of the person card component\n * @cssprop --message-from-font-size - {Length} The font size of the message sender in the message section of the person card component\n * @cssprop --message-from-font-weight - {FontWeight} The font weight of the message sender in the message section of the person card component\n * @cssprop --message-subject-color - {Color} The color of the message subject in the message section of the person card component\n * @cssprop --message-from-color - {Color} The color of the message sender in the message section of the person card component\n * @cssprop --message-color - {Color} The color of the message in the message section of the person card component\n * @cssprop --message-hover-color - {Color} The hover color of the message section of the person card component\n * @cssprop --message-date-color - {Color} The color of the message date in the message section of the person card component\n * @cssprop --message-from-line-height - {Length} The line height of the message sender in the message section of the person card component\n * @cssprop --profile-background-color - {Color} The background color of the profile section in the person card component\n * @cssprop --profile-title-color - {Color} The color of the profile title in the profile section of the person card component\n * @cssprop --profile-section-title-color - {Color} The color of the profile section title in the profile section of the person card component\n * @cssprop --profile-token-item-color - {Color} The color of the profile token item in the profile section of the person card component\n * @cssprop --profile-token-item-background-color - {Color} The background color of the profile token item in the profile section of the person card component\n * @cssprop --profile-token-overflow-color - {Color} The color of the profile token overflow in the profile section of the person card component\n * @cssprop --organization-active-org-member-border-color - {Color} The border color of the active organization member in the organization section of the person card component\n * @cssprop --organization-active-org-member-target-background-color - {Color} The background color of the active organization member target in the organization section of the person card component\n * @cssprop --organization-coworker-hover-color - {Color} The hover color of the coworker in the organization section of the person card component\n * @cssprop --organization-coworker-border-color - {Color} The border color of the coworker in the organization section of the person card component\n * @cssprop --organization-coworker-person-avatar-size - {Length} The avatar size of the coworker in the organization section of the person card component\n * @cssprop --organization-member-person-avatar-size - {Length} The avatar size of the member in the organization section of the person card component\n * @cssprop --organization-direct-report-person-avatar-size - {Length} The avatar size of the direct report in the organization section of the person card component\n * @cssprop --organization-title-color - {Color} The color of the organization title in the organization section of the person card component\n * @cssprop --organization-sub-title-color - {Color} The color of the organization sub-title in the organization section of the person card component\n * @cssprop --organization-hover-color - {Color} The hover color of the organization section of the person card component\n * @cssprop --profile-background-color - {Color} The background color of the profile section in the person card component\n * @cssprop --profile-title-color - {Color} The color of the profile title in the profile section of the person card component\n * @cssprop --profile-section-title-color - {Color} The color of the profile section title of the person card component\n * @cssprop --profile-token-item-color - {Color} The color of the token item in the profile section of the person card component\n * @cssprop --profile-token-item-background-color - {Color} The background color of the token item in the profile section of the person card component\n * @cssprop --profile-token-overflow-color - {Color} The color of the token overflow in the profile section of the person card component\n *\n */\nexport class MgtPersonCard extends MgtTemplatedComponent implements IHistoryClearer, IExpandable {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  /**\n   * Strings to use for localization\n   *\n   * @readonly\n   * @protected\n   * @memberof MgtPersonCard\n   */\n  protected get strings() {\n    return strings;\n  }\n\n  /**\n   * Get the scopes required for the person card\n   * The scopes depend on what sections are shown\n   *\n   * Use the `MgtPersonCard.config` object to configure\n   * what sections are shown\n   *\n   * @static\n   * @return {*}  {string[]}\n   * @memberof MgtPersonCard\n   */\n  public static get requiredScopes(): string[] {\n    return getMgtPersonCardScopes();\n  }\n\n  /**\n   * Set the person details to render\n   *\n   * @type {IDynamicPerson}\n   * @memberof MgtPersonCard\n   */\n  @property({\n    attribute: 'person-details',\n    type: Object\n  })\n  public get personDetails(): IDynamicPerson {\n    return this._personDetails;\n  }\n  public set personDetails(value: IDynamicPerson) {\n    if (this._personDetails === value) {\n      return;\n    }\n\n    this._personDetails = value;\n    this.personImage = this.getImage();\n    void this.requestStateUpdate();\n  }\n  /**\n   * allows developer to define name of person for component\n   *\n   * @type {string}\n   */\n  @property({\n    attribute: 'person-query'\n  })\n  public personQuery: string;\n\n  /**\n   * allows the locking of navigation using tabs to not flow out of the card section\n   *\n   * @type {boolean}\n   */\n  @property({\n    attribute: 'lock-tab-navigation',\n    type: Boolean\n  })\n  public lockTabNavigation: boolean;\n\n  /**\n   * user-id property allows developer to use id value for component\n   *\n   * @type {string}\n   */\n  @property({\n    attribute: 'user-id'\n  })\n  public get userId(): string {\n    return this._userId;\n  }\n  public set userId(value: string) {\n    if (value === this._userId) {\n      return;\n    }\n    this._userId = value;\n    this.personDetails = null;\n    this._cardState = null;\n    void this.requestStateUpdate();\n  }\n\n  /**\n   * Set the image of the person\n   * Set to '@' to look up image from the graph\n   *\n   * @type {string}\n   * @memberof MgtPersonCard\n   */\n  @property({\n    attribute: 'person-image',\n    type: String\n  })\n  public personImage: string;\n\n  /**\n   * Sets whether the person image should be fetched\n   * from the Microsoft Graph based on the personDetails\n   * provided by the user\n   *\n   * @type {boolean}\n   * @memberof MgtPerson\n   */\n  @property({\n    attribute: 'fetch-image',\n    type: Boolean\n  })\n  public fetchImage: boolean;\n\n  /**\n   * Gets or sets whether expanded details section is rendered\n   *\n   * @type {boolean}\n   * @memberof MgtPersonCard\n   */\n  @property({\n    attribute: 'is-expanded',\n    type: Boolean\n  })\n  public isExpanded: boolean;\n\n  /**\n   * Gets or sets whether person details should be inherited from an mgt-person parent\n   * Useful when used as template in an mgt-person component\n   *\n   * @type {boolean}\n   * @memberof MgtPersonCard\n   */\n  @property({\n    attribute: 'inherit-details',\n    type: Boolean\n  })\n  public inheritDetails: boolean;\n\n  /**\n   * determines if person card component renders presence\n   *\n   * @type {boolean}\n   */\n  @property({\n    attribute: 'show-presence',\n    type: Boolean\n  })\n  public showPresence: boolean;\n\n  /**\n   * Gets or sets presence of person\n   *\n   * @type {MicrosoftGraph.Presence}\n   * @memberof MgtPerson\n   */\n  @property({\n    attribute: 'person-presence',\n    type: Object\n  })\n  public personPresence: Presence;\n\n  @state()\n  private isSending = false;\n\n  /**\n   * The subsections for display in the lower part of the card\n   *\n   * @protected\n   * @type {any[]}\n   * @memberof MgtPersonCard\n   */\n  protected sections: CardSection[];\n\n  @state() private _cardState: MgtPersonCardState;\n  @state() private _isStateLoading: boolean;\n\n  private _history: MgtPersonCardStateHistory[];\n  private _chatInput: string;\n  private _currentSection: CardSection;\n  private _personDetails: IDynamicPerson;\n  private _me: User;\n  private _smallView: boolean;\n  private _windowHeight;\n\n  private _userId: string;\n  private _graph: IGraph;\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  private get internalPersonDetails(): IDynamicPerson {\n    return this._cardState?.person || this.personDetails;\n  }\n\n  constructor() {\n    super();\n    this._chatInput = '';\n    this._currentSection = null;\n    this._history = [];\n    this.sections = [];\n    this._graph = null;\n  }\n\n  /**\n   * Synchronizes property values when attributes change.\n   *\n   * @param {*} name\n   * @param {*} oldValue\n   * @param {*} newValue\n   * @memberof MgtPersonCard\n   */\n  public attributeChangedCallback(name: string, oldValue: string, newValue: string) {\n    super.attributeChangedCallback(name, oldValue, newValue);\n\n    if (oldValue === newValue) {\n      return;\n    }\n\n    switch (name) {\n      case 'person-query':\n        this.personDetails = null;\n        this._cardState = null;\n        void this.requestStateUpdate();\n        break;\n    }\n  }\n\n  /**\n   * Navigate the card to a different person.\n   *\n   * @protected\n   * @memberof MgtPersonCard\n   */\n  public navigate(person: IDynamicPerson): void {\n    this._history.push({\n      personDetails: this.personDetails,\n      personImage: this.getImage(),\n      state: this._cardState\n    });\n\n    this._personDetails = person;\n    this._cardState = null;\n    this.personImage = null;\n    this._currentSection = null;\n    this.sections = [];\n    this._chatInput = '';\n    void this.requestStateUpdate();\n  }\n\n  /**\n   * Navigate the card back to the previous person\n   *\n   * @returns {void}\n   * @memberof MgtPersonCard\n   */\n  public goBack = (): void => {\n    if (!this._history?.length) {\n      return;\n    }\n\n    const historyState = this._history.pop();\n    this._currentSection = null;\n\n    // resets to first tab being selected\n    const firstTab: HTMLElement = this.renderRoot.querySelector('fluent-tab');\n    if (firstTab) {\n      firstTab.click();\n    }\n    this._cardState = historyState.state;\n    this._personDetails = historyState.state.person;\n    this.personImage = historyState.personImage;\n    this.loadSections();\n  };\n\n  /**\n   * Navigate the card back to first person and clear history\n   *\n   * @returns {void}\n   * @memberof MgtPersonCard\n   */\n  public clearHistory(): void {\n    this._currentSection = null;\n\n    if (!this._history?.length) {\n      return;\n    }\n\n    const historyState = this._history[0];\n    this._history = [];\n\n    this._cardState = historyState.state;\n    this._personDetails = historyState.personDetails;\n    this.personImage = historyState.personImage;\n    this.loadSections();\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method must return\n   * a lit-html TemplateResult. Setting properties inside this method will *not*\n   * trigger the element to update.\n   */\n  protected render() {\n    // Handle no data\n    if (!this.internalPersonDetails) {\n      return this.renderNoData();\n    }\n\n    const person = this.internalPersonDetails;\n    const image = this.getImage();\n\n    // Check for a default template.\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/dot-notation\n    if (this.hasTemplate('default')) {\n      return this.renderTemplate('default', {\n        person: this.internalPersonDetails,\n        personImage: image\n      });\n    }\n\n    let ariaLabel: string;\n\n    ariaLabel = this.strings.closeCardLabel;\n\n    const closeCardTemplate = this.isExpanded\n      ? html`\n           <div class=\"close-card-container\">\n             <fluent-button \n              appearance=\"lightweight\" \n              class=\"close-button\" \n              aria-label=${ariaLabel}\n              @click=${this.closeCard} >\n               ${getSvg(SvgIcon.Close)}\n             </fluent-button>\n           </div>\n         `\n      : null;\n\n    ariaLabel = this.strings.goBackLabel;\n    const navigationTemplate = this._history?.length\n      ? html`\n            <div class=\"nav\">\n              <fluent-button \n                appearance=\"lightweight\"\n                class=\"nav__back\" \n                aria-label=${ariaLabel} \n                @keydown=${this.handleGoBack}\n                @click=${this.goBack}>${getSvg(SvgIcon.Back)}\n               </fluent-button>\n            </div>\n          `\n      : null;\n\n    // Check for a person-details template\n    let personDetailsTemplate = this.renderTemplate('person-details', {\n      person: this.internalPersonDetails,\n      personImage: image\n    });\n    if (!personDetailsTemplate) {\n      const personTemplate = this.renderPerson();\n      const contactIconsTemplate = this.renderContactIcons(person);\n\n      personDetailsTemplate = html`\n         ${personTemplate} ${contactIconsTemplate}\n       `;\n    }\n\n    const expandedDetailsTemplate = this.isExpanded ? this.renderExpandedDetails() : this.renderExpandedDetailsButton();\n    this._windowHeight =\n      window.innerHeight && document.documentElement.clientHeight\n        ? Math.min(window.innerHeight, document.documentElement.clientHeight)\n        : window.innerHeight || document.documentElement.clientHeight;\n\n    if (this._windowHeight < 250) {\n      this._smallView = true;\n    }\n    const tabLocker = this.lockTabNavigation\n      ? html`<div @keydown=${this.handleEndOfCard} aria-label=${this.strings.endOfCard} tabindex=\"0\" id=\"end-of-container\"></div>`\n      : html``;\n    return html`\n      <div class=\"root\" dir=${this.direction}>\n        <div class=${classMap({ small: this._smallView })}>\n          ${navigationTemplate}\n          ${closeCardTemplate}\n          <div class=\"person-details-container\">${personDetailsTemplate}</div>\n          <div class=\"expanded-details-container\">${expandedDetailsTemplate}</div>\n          ${tabLocker}\n        </div>\n      </div>\n     `;\n  }\n\n  private readonly handleEndOfCard = (e: KeyboardEvent) => {\n    if (e && e.code === 'Tab') {\n      const endOfCardEl = this.renderRoot.querySelector<HTMLElement>('#end-of-container');\n      if (endOfCardEl) {\n        endOfCardEl.blur();\n        const imageCardEl = this.renderRoot.querySelector<HTMLElement>('mgt-person');\n        if (imageCardEl) {\n          imageCardEl.focus();\n        }\n      }\n    }\n  };\n\n  /**\n   * Render the state when no data is available.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected closeCard = () => {\n    // reset tabs\n    this.updateCurrentSection(null);\n    this.isExpanded = false;\n  };\n\n  /**\n   * Render the state when no data is available.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderNoData(): TemplateResult {\n    return this.renderTemplate('no-data', null) || html``;\n  }\n\n  /**\n   * Render a display image for the person.\n   *\n   * @protected\n   * @param {*} image\n   * @memberof MgtPersonCard\n   */\n  protected renderPerson(): TemplateResult {\n    return mgtHtml`\n      <mgt-person\n        tabindex=\"0\"\n        class=\"person-image\"\n        .personDetails=${this.internalPersonDetails}\n        .personImage=${this.getImage()}\n        .personPresence=${this.personPresence}\n        .showPresence=${this.showPresence}\n        .view=${ViewType.threelines}\n      ></mgt-person>\n    `;\n  }\n\n  /**\n   * Render person subtitle.\n   *\n   * @protected\n   * @param {IDynamicPerson} person\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderPersonSubtitle(person?: IDynamicPerson): TemplateResult {\n    person = person || this.internalPersonDetails;\n    if (!isUser(person) || !person.department) {\n      return;\n    }\n    return html`\n       <div class=\"department\">${person.department}</div>\n     `;\n  }\n\n  /**\n   * Render the various icons for contacting the person.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderContactIcons(person?: IDynamicPerson): TemplateResult {\n    person = person || this.internalPersonDetails;\n    const userPerson = person as User;\n\n    let ariaLabel: string;\n\n    // Email\n    let email: TemplateResult;\n    if (getEmailFromGraphEntity(person)) {\n      ariaLabel = `${this.strings.emailButtonLabel} ${person.displayName}`;\n      email = html`\n        <fluent-button class=\"icon\"\n          aria-label=${ariaLabel}\n          @click=${this.emailUser}>\n          ${getSvg(SvgIcon.SmallEmail)}\n        </fluent-button>\n      `;\n    }\n\n    // Chat\n    let chat: TemplateResult;\n    if (userPerson?.userPrincipalName) {\n      ariaLabel = `${this.strings.chatButtonLabel} ${person.displayName}`;\n      chat = html`\n        <fluent-button class=\"icon\"\n          aria-label=${ariaLabel}\n          @click=${this.chatUser}>\n          ${getSvg(SvgIcon.SmallChat)}\n        </fluent-button>\n       `;\n    }\n\n    // Video\n\n    ariaLabel = `${this.strings.videoButtonLabel} ${person.displayName}`;\n    const video: TemplateResult = html`\n      <fluent-button class=\"icon\"\n        aria-label=${ariaLabel}\n        @click=${this.videoCallUser}>\n        ${getSvg(SvgIcon.Video)}\n      </fluent-button>\n    `;\n\n    // Call\n    let call: TemplateResult;\n    if (userPerson.userPrincipalName) {\n      ariaLabel = `${this.strings.callButtonLabel} ${person.displayName}`;\n      call = html`\n         <fluent-button class=\"icon\"\n          aria-label=${ariaLabel}\n          @click=${this.callUser}>\n          ${getSvg(SvgIcon.Call)}\n        </fluent-button>\n       `;\n    }\n\n    return html`\n       <div class=\"base-icons\">\n         ${email} ${chat} ${video} ${call}\n       </div>\n     `;\n  }\n\n  /**\n   * Render the button used to expand the expanded details.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderExpandedDetailsButton(): TemplateResult {\n    return html`\n      <fluent-button\n        aria-label=${this.strings.expandDetailsLabel}\n        class=\"expanded-details-button\"\n        @click=${this.showExpandedDetails}\n      >\n        ${getSvg(SvgIcon.ExpandDown)}\n      </fluent-button>\n     `;\n  }\n\n  /**\n   * Render expanded details.\n   *\n   * @protected\n   * @param {IDynamicPerson} [person]\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderExpandedDetails(): TemplateResult {\n    if (!this._cardState && this._isStateLoading) {\n      return mgtHtml`\n         <div class=\"loading\">\n           <mgt-spinner></mgt-spinner>\n         </div>\n       `;\n    }\n    // load sections when details are expanded\n    // when not singed in\n    const provider = Providers.globalProvider;\n    if (provider.state === ProviderState.SignedOut) {\n      this.loadSections();\n    }\n\n    const sectionNavTemplate = this.renderSectionNavigation();\n\n    return html`\n      <div class=\"section-nav\">\n        ${sectionNavTemplate}\n      </div>\n      <hr class=\"divider\"/>\n      <div\n        class=\"section-host ${this._smallView ? 'small' : ''} ${this._smallView ? 'small' : ''}\"\n        @wheel=${(e: WheelEvent) => this.handleSectionScroll(e)}\n        tabindex=0\n      ></div>\n    `;\n  }\n\n  /**\n   * Render the navigation ribbon for subsections\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderSectionNavigation(): TemplateResult {\n    if (!this.sections || (this.sections.length < 2 && !this.hasTemplate('additional-details'))) {\n      return;\n    }\n\n    const currentSectionIndex = this._currentSection ? this.sections.indexOf(this._currentSection) : -1;\n\n    const additionalSectionTemplates = this.sections.map((section, i) => {\n      const name = section.tagName.toLowerCase();\n      const classes = classMap({\n        active: i === currentSectionIndex,\n        'section-nav__icon': true\n      });\n\n      return html`\n        <fluent-tab\n          id=\"${name}-Tab\"\n          class=${classes}\n          slot=\"tab\"\n          @keyup=\"${() => this.updateCurrentSection(section)}\"\n          @click=${() => this.updateCurrentSection(section)}\n        >\n          ${section.renderIcon()}\n        </fluent-tab>\n      `;\n    });\n\n    const additionalPanelTemplates = this.sections.map(section => {\n      return html`\n        <fluent-tab-panel slot=\"tabpanel\">\n          <div class=\"inserted\">\n            <div class=\"title\">${section.cardTitle}</div>\n            ${this._currentSection ? section.asFullView() : null}\n          </div>\n        </fluent-tab-panel>\n      `;\n    });\n\n    const overviewClasses = classMap({\n      active: currentSectionIndex === -1,\n      'section-nav__icon': true,\n      overviewTab: true\n    });\n\n    return html`\n      <fluent-tabs\n        orientation=\"horizontal\"\n        activeindicator\n        @wheel=${(e: WheelEvent) => this.handleSectionScroll(e)}\n      >\n        <fluent-tab\n          class=\"${overviewClasses}\"\n          slot=\"tab\"\n          @keyup=\"${() => this.updateCurrentSection(null)}\"\n          @click=${() => this.updateCurrentSection(null)}\n        >\n          <div>${getSvg(SvgIcon.Overview)}</div>\n        </fluent-tab>\n        ${additionalSectionTemplates}\n        <fluent-tab-panel slot=\"tabpanel\" >\n          <div class=\"overview-panel\">${!this._currentSection ? this.renderOverviewSection() : null}</div>\n        </fluent-tab-panel>\n        ${additionalPanelTemplates}\n      </fluent-tabs>\n    `;\n  }\n\n  /**\n   * Render the default section with compact views for each subsection.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderOverviewSection(): TemplateResult {\n    const compactTemplates = this.sections.map(\n      (section: BasePersonCardSection) => html`\n        <div class=\"section\">\n          <div class=\"section__header\">\n            <div class=\"section__title\" tabindex=0>${section.displayName}</div>\n              <fluent-button\n                appearance=\"lightweight\"\n                class=\"section__show-more\"\n                @click=${() => this.updateCurrentSection(section)}\n              >\n                ${this.strings.showMoreSectionButton}\n              </fluent-button>\n          </div>\n          <div class=\"section__content\">${section.asCompactView()}</div>\n        </div>\n      `\n    );\n\n    const additionalDetails = this.renderTemplate('additional-details', {\n      person: this.internalPersonDetails,\n      personImage: this.getImage(),\n      state: this._cardState\n    });\n    if (additionalDetails) {\n      compactTemplates.splice(\n        1,\n        0,\n        html`\n           <div class=\"section\">\n             <div class=\"additional-details\">${additionalDetails}</div>\n           </div>\n         `\n      );\n    }\n\n    return html`\n       <div class=\"sections\">\n          ${this.renderMessagingSection()}\n          ${compactTemplates}\n       </div>\n     `;\n  }\n\n  /**\n   * Render the actively selected section.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderCurrentSection(): TemplateResult {\n    if (!this.sections?.length && !this.hasTemplate('additional-details')) {\n      return;\n    }\n\n    if (this.sections.length === 1 && !this.hasTemplate('additional-details')) {\n      return html`\n         ${this.sections[0].asFullView()}\n       `;\n    }\n\n    if (!this._currentSection) {\n      return this.renderOverviewSection();\n    }\n\n    return html`\n       ${this._currentSection.asFullView()}\n     `;\n  }\n\n  /**\n   * Render the messaging section.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderMessagingSection() {\n    const person = this.personDetails as User;\n    const user = this._me.userPrincipalName;\n    const chatInput = this._chatInput;\n    if (person?.userPrincipalName === user) {\n      return;\n    } else {\n      return MgtPersonCardConfig.isSendMessageVisible\n        ? html`\n      <div class=\"message-section\">\n        <fluent-text-field\n          autocomplete=\"off\"\n          appearance=\"outline\"\n          placeholder=\"${this.strings.quickMessage}\"\n          .value=${chatInput}\n          @input=${(e: Event) => {\n            this._chatInput = (e.target as HTMLInputElement).value;\n            this.requestUpdate();\n          }}\n          @keydown=\"${(e: KeyboardEvent) => this.sendQuickMessageOnEnter(e)}\">\n        </fluent-text-field>\n        <fluent-button class=\"send-message-icon\"\n          aria-label=${this.strings.sendMessageLabel}\n          @click=${this.sendQuickMessage}\n          ?disabled=${this.isSending}>\n          ${!this.isSending ? getSvg(SvgIcon.Send) : getSvg(SvgIcon.Confirmation)}\n        </fluent-button>\n      </div>\n      `\n        : nothing;\n    }\n  }\n\n  /**\n   * load state into the component\n   *\n   * @protected\n   * @returns\n   * @memberof MgtPersonCard\n   */\n  protected async loadState() {\n    if (this._cardState) {\n      return;\n    }\n\n    if (!this.personDetails && this.inheritDetails) {\n      // User person details inherited from parent tree\n      let parent = this.parentElement;\n      while (parent && parent.tagName !== `${customElementHelper.prefix}-PERSON`.toUpperCase()) {\n        parent = parent.parentElement;\n      }\n\n      const parentPerson: IDynamicPerson =\n        // eslint-disable-next-line @typescript-eslint/dot-notation\n        (parent as MgtPerson).personDetails || (parent as MgtPerson)['personDetailsInternal'];\n\n      if (parent && parentPerson) {\n        this.personDetails = parentPerson;\n        this.personImage = (parent as MgtPerson).personImage;\n      }\n    }\n\n    const provider = Providers.globalProvider;\n\n    // check if user is signed in\n    if (!provider || provider.state !== ProviderState.SignedIn) {\n      return;\n    }\n\n    const graph = provider.graph.forComponent(this);\n    this._graph = graph;\n\n    this._isStateLoading = true;\n\n    if (!this._me) {\n      this._me = await Providers.me();\n    }\n\n    // check if personDetail already populated\n    if (this.personDetails) {\n      const user = this.personDetails;\n      let id: string;\n      if (isUser(user)) {\n        id = user.userPrincipalName || user.id;\n      }\n\n      // if we have an id but no email, we should get data from the graph\n      // in some graph calls, the user object does not contain the email\n      if (id && !getEmailFromGraphEntity(user)) {\n        const person = await getUserWithPhoto(graph, id);\n        this.personDetails = person;\n        this.personImage = this.getImage();\n      }\n    } else if (this.userId || this.personQuery === 'me') {\n      // Use userId or 'me' query to get the person and image\n      const person = await getUserWithPhoto(graph, this.userId);\n      this.personDetails = person;\n      this.personImage = this.getImage();\n    } else if (this.personQuery) {\n      // Use the personQuery to find our person.\n      const people = await findPeople(graph, this.personQuery, 1);\n\n      if (people?.length) {\n        this.personDetails = people[0];\n        await getPersonImage(graph, this.personDetails, MgtPersonCardConfig.useContactApis).then(image => {\n          if (image) {\n            this.personDetails.personImage = image;\n            this.personImage = image;\n          }\n        });\n      }\n    }\n\n    // populate presence\n    const defaultPresence = {\n      activity: 'Offline',\n      availability: 'Offline',\n      id: null\n    };\n    if (!this.personPresence && this.showPresence) {\n      try {\n        if (this.personDetails?.id) {\n          this.personPresence = await getUserPresence(graph, this.personDetails.id);\n        } else {\n          this.personPresence = defaultPresence;\n        }\n      } catch (_) {\n        // set up a default Presence in case beta api changes or getting error code\n        this.personPresence = defaultPresence;\n      }\n    }\n\n    // populate state\n    if (this.personDetails?.id) {\n      this._cardState = await getPersonCardGraphData(graph, this.personDetails, this._me === this.personDetails.id);\n    }\n\n    this.loadSections();\n\n    this._isStateLoading = false;\n  }\n\n  /**\n   * Send a chat message to the user from the quick message input.\n   *\n   * @protected\n   * @returns {void}\n   * @memberof MgtPersonCard\n   */\n  protected sendQuickMessage = async (): Promise<void> => {\n    const message = this._chatInput.trim();\n    if (!message?.length) {\n      return;\n    }\n    const person = this.personDetails as User;\n    const user = this._me.userPrincipalName;\n    this.isSending = true;\n\n    const chat = await createChat(this._graph, person.userPrincipalName, user);\n\n    const messageData = {\n      body: {\n        content: message\n      }\n    };\n    await sendMessage(this._graph, chat.id, messageData);\n    this.isSending = false;\n    this.clearInputData();\n  };\n\n  /**\n   * Use the mailto: protocol to initiate a new email to the user.\n   *\n   * @protected\n   * @memberof MgtPersonCard\n   */\n  protected emailUser = () => {\n    const user = this.internalPersonDetails;\n    if (user) {\n      const email = getEmailFromGraphEntity(user);\n      if (email) {\n        window.open('mailto:' + email, '_blank', 'noreferrer');\n      }\n    }\n  };\n\n  private get hasPhone(): boolean {\n    const user = this.personDetails as User;\n    const person = this.personDetails as microsoftgraph.Person;\n    return Boolean(user?.businessPhones?.length) || Boolean(person?.phones?.length);\n  }\n\n  /**\n   * Use the tel: protocol to initiate a new call to the user.\n   *\n   * @protected\n   * @memberof MgtPersonCard\n   */\n  protected callUser = () => {\n    const user = this.personDetails as User;\n    const person = this.personDetails as microsoftgraph.Person;\n\n    if (user?.businessPhones?.length) {\n      const phone = user.businessPhones[0];\n      if (phone) {\n        window.open('tel:' + phone, '_blank', 'noreferrer');\n      }\n    } else if (person?.phones?.length) {\n      const businessPhones = this.getPersonBusinessPhones(person);\n      const phone = businessPhones[0];\n      if (phone) {\n        window.open('tel:' + phone, '_blank', 'noreferrer');\n      }\n    }\n  };\n\n  /**\n   * Initiate a chat message to the user via deeplink.\n   *\n   * @protected\n   * @memberof MgtPersonCard\n   */\n  protected chatUser = (message: string = null) => {\n    const user = this.personDetails as User;\n    if (user?.userPrincipalName) {\n      const users: string = user.userPrincipalName;\n\n      let url = `https://teams.microsoft.com/l/chat/0/0?users=${users}`;\n      if (message?.length) {\n        url += `&message=${message}`;\n      }\n\n      const openWindow = () => window.open(url, '_blank', 'noreferrer');\n\n      if (TeamsHelper.isAvailable) {\n        TeamsHelper.executeDeepLink(url, (status: boolean) => {\n          if (!status) {\n            openWindow();\n          }\n        });\n      } else {\n        openWindow();\n      }\n    }\n  };\n\n  /**\n   * Initiate a teams call with video with a user via deeplink.\n   *\n   * @protected\n   * @memberof MgtPersonCard\n   */\n  protected videoCallUser = () => {\n    const user = this.personDetails as User;\n    if (user?.userPrincipalName) {\n      const users: string = user.userPrincipalName;\n\n      const url = `https://teams.microsoft.com/l/call/0/0?users=${users}&withVideo=true`;\n\n      const openWindow = () => window.open(url, '_blank');\n\n      if (TeamsHelper.isAvailable) {\n        TeamsHelper.executeDeepLink(url, (status: boolean) => {\n          if (!status) {\n            openWindow();\n          }\n        });\n      } else {\n        openWindow();\n      }\n    }\n  };\n\n  /**\n   * Display the expanded details panel.\n   *\n   * @protected\n   * @memberof MgtPersonCard\n   */\n  protected showExpandedDetails = () => {\n    const root = this.renderRoot.querySelector('.root');\n    if (root?.animate) {\n      // play back\n      root.animate(\n        [\n          {\n            height: 'auto',\n            transformOrigin: 'top left'\n          },\n          {\n            height: 'auto',\n            transformOrigin: 'top left'\n          }\n        ],\n        {\n          duration: 1000,\n          easing: 'ease-in-out',\n          fill: 'both'\n        }\n      );\n    }\n    this.isExpanded = true;\n\n    this.fireCustomEvent('expanded', null, true);\n  };\n\n  private loadSections() {\n    this.sections = [];\n\n    if (!this.internalPersonDetails) {\n      return;\n    }\n\n    const contactSections = new MgtContact(this.internalPersonDetails as User);\n    if (contactSections.hasData) {\n      this.sections.push(contactSections);\n    }\n\n    if (!this._cardState) {\n      return;\n    }\n\n    const { person, directReports, messages, files, profile } = this._cardState;\n\n    if (MgtPersonCardConfig.sections.organization && (person?.manager || directReports?.length)) {\n      this.sections.push(new MgtOrganization(this._cardState, this._me));\n    }\n\n    if (MgtPersonCardConfig.sections.mailMessages && messages?.length) {\n      this.sections.push(new MgtMessages(messages));\n    }\n\n    if (MgtPersonCardConfig.sections.files && files?.length) {\n      this.sections.push(new MgtFileList());\n    }\n\n    if (MgtPersonCardConfig.sections.profile && profile) {\n      const profileSection = new MgtProfile(profile);\n      if (profileSection.hasData) {\n        this.sections.push(profileSection);\n      }\n    }\n  }\n\n  private getImage(): string {\n    if (this.personImage) {\n      return this.personImage;\n    }\n\n    const person = this.personDetails;\n    return person?.personImage ? person.personImage : null;\n  }\n\n  private clearInputData() {\n    this._chatInput = '';\n    this.requestUpdate();\n  }\n\n  private getPersonBusinessPhones(person: Person): string[] {\n    const phones = person.phones;\n    const businessPhones: string[] = [];\n    for (const p of phones) {\n      if (p.type === 'business') {\n        businessPhones.push(p.number);\n      }\n    }\n    return businessPhones;\n  }\n\n  private updateCurrentSection(section: CardSection) {\n    if (section) {\n      const sectionName = section.tagName.toLowerCase();\n      const tabs: HTMLElement = this.renderRoot.querySelector(`#${sectionName}-Tab`);\n      tabs.click();\n    }\n    const panels = this.renderRoot.querySelectorAll('fluent-tab-panel');\n    for (const target of panels) {\n      target.scrollTop = 0;\n    }\n    this._currentSection = section;\n    this.requestUpdate();\n  }\n\n  private handleSectionScroll(e: WheelEvent) {\n    const panels = this.renderRoot.querySelectorAll('fluent-tab-panel');\n    for (const target of panels) {\n      if (target) {\n        if (\n          !(e.deltaY < 0 && target.scrollTop === 0) &&\n          !(e.deltaY > 0 && target.clientHeight + target.scrollTop >= target.scrollHeight - 1)\n        ) {\n          e.stopPropagation();\n        }\n      }\n    }\n  }\n\n  private readonly sendQuickMessageOnEnter = (e: KeyboardEvent) => {\n    if (e.code === 'Enter') {\n      void this.sendQuickMessage();\n    }\n  };\n\n  private readonly handleGoBack = (e: KeyboardEvent) => {\n    if (e.code === 'Enter') {\n      void this.goBack();\n    }\n  };\n}\n","import { MgtPersonCardConfig } from './MgtPersonCardConfig';\n\n/**\n * Scopes used to fetch data for the mgt-person-card component\n *\n * @static\n * @return {*}  {string[]}\n * @memberof MgtPersonCard\n */\n\nexport const getMgtPersonCardScopes = (): string[] => {\n  const scopes: string[] = [];\n\n  if (MgtPersonCardConfig.sections.files) {\n    scopes.push('Sites.Read.All');\n  }\n\n  if (MgtPersonCardConfig.sections.mailMessages) {\n    scopes.push('Mail.Read');\n    scopes.push('Mail.ReadBasic');\n  }\n\n  if (MgtPersonCardConfig.sections.organization) {\n    scopes.push('User.Read.All');\n\n    if (MgtPersonCardConfig.sections.organization.showWorksWith) {\n      scopes.push('People.Read.All');\n    }\n  }\n\n  if (MgtPersonCardConfig.sections.profile) {\n    scopes.push('User.Read.All');\n  }\n\n  if (MgtPersonCardConfig.useContactApis) {\n    scopes.push('Contacts.Read');\n  }\n\n  if (scopes.indexOf('User.Read.All') < 0) {\n    // at minimum, we need these scopes\n    scopes.push('User.ReadBasic.All');\n    scopes.push('User.Read');\n  }\n\n  if (scopes.indexOf('People.Read.All') < 0) {\n    // at minimum, we need these scopes\n    scopes.push('People.Read');\n  }\n\n  if (MgtPersonCardConfig.isSendMessageVisible) {\n    // Chat.ReadWrite can create a chat and send a message, so just request one scope instead of two\n    scopes.push('Chat.ReadWrite');\n  }\n\n  // return unique\n  return [...new Set(scopes)];\n};\n"],"names":["TeamsHelper","_classCallCheck","_createClass","key","get","this","_microsoftTeamsLib","window","microsoftTeams","set","value","microsoftTeamsLib","parent","self","nativeInterface","name","deeplink","onComplete","teams","initialize","executeDeepLink","MgtPersonCardConfig","sections","files","mailMessages","organization","showWorksWith","profile","useContactApis","isSendMessageVisible","userProperties","batchKeys","getPersonCardGraphData","graph","personDetails","isMe","__awaiter","_regeneratorRuntime","mark","_callee","_a","userId","email","isContactOrGroup","batch","response","data","_iterator","_step","_step$value","wrap","_context","prev","next","id","getEmailFromGraphEntity","personType","subclass","class","createBatch","buildOrgStructureRequest","buildWorksWithRequest","buildMessagesWithUserRequest","buildFilesRequest","executeAll","sent","t0","_createForOfIteratorHelper","s","n","done","_slicedToArray","content","err","e","f","getProfile","t1","directReports","length","filter","report","accountEnabled","abrupt","stop","expandManagers","concat","validUserByIdScopes","ConsistencyLevel","validMailSearchScopes","emailAddress","request","validInsightScopes","_callee2","_context2","api","version","middlewareOptions","prepScopes","validCreateChatScopes","createChat","person","user","_callee3","chatData","_context3","chatType","members","roles","header","post","validSendChatMessageScopes","sendMessage","chatId","messageData","_callee4","_context4","styles","css","_templateObject","_taggedTemplateLiteral","BasePersonCardSection","_MgtTemplatedComponen","_inherits","_super","_createSuper","_this","call","_isCompact","_personDetails","requestStateUpdate","requestUpdate","isCompact","renderCompactView","renderFullView","mgtHtml","html","_templateObject2","parentNode","shadowRoot","host","tagName","customElementHelper","prefix","toUpperCase","navigate","MgtTemplatedComponent","__decorate","property","attribute","type","Object","strings","contactSectionTitle","emailTitle","chatTitle","businessPhoneTitle","cellPhoneTitle","departmentTitle","personTitle","officeLocationTitle","copyToClipboardButton","MgtContact","_BasePersonCardSectio","_contactParts","icon","getSvg","SvgIcon","Email","onClick","sendEmail","_person","showCompact","title","chat","Chat","sendChat","userPrincipalName","businessPhone","Phone","_b","sendCall","businessPhones","cellPhone","CellPhone","mobilePhone","department","Department","Person","officeLocation","OfficeLocation","phone","sendLink","jobTitle","values","p","Contact","_get","_getPrototypeOf","prototype","_i","_Object$keys","keys","_this2","hasData","availableParts","compactParts","slice","contentTemplate","map","renderContactPart","direction","_this3","_templateObject3","part","_templateObject4","_this4","isPhone","partLinkClasses","part__link","valueTemplate","_templateObject5","classMap","_templateObject6","_templateObject7","handlePartClick","Copy","navigator","clipboard","writeText","protocol","resource","open","console","error","upn","url","openWindow","isAvailable","status","emailsSectionTitle","MgtMessages","messages","_messages","Messages","isLoadingState","renderLoading","messageTemplates","message","renderMessage","renderNoData","handleMessageClick","subject","from","bodyPreview","getRelativeDisplayDate","Date","receivedDateTime","webLink","reportsToSectionTitle","directReportsSectionTitle","organizationSectionTitle","youWorkWithSubSectionTitle","userWorksWithSubSectionTitle","MgtOrganization","state","me","_state","_me","_this$_state","manager","Organization","_this$_state2","renderCoworker","renderCompactDirectReports","_this$_state3","people","managerTemplates","renderManagers","currentUserTemplate","renderCurrentUser","directReportsTemplate","renderDirectReports","coworkersTemplate","renderCoworkers","code","navigateCard","ViewType","twolines","ExpandRight","managers","currentManager","push","reverse","renderManager","_this5","_templateObject8","_templateObject9","_this6","_templateObject10","_this7","subtitle","givenName","_templateObject11","SkillsAndExperienceSectionTitle","AboutCompactSectionTitle","SkillsSubSectionTitle","LanguagesSubSectionTitle","WorkExperienceSubSectionTitle","EducationSubSectionTitle","professionalInterestsSubSectionTitle","personalInterestsSubSectionTitle","birthdaySubSectionTitle","currentYearSubtitle","socialMediaSubSectionTitle","MgtProfile","isPersonalInterest","interest","categories","includes","isProfessionalInterest","isBirthdayAnniversary","anniversary","_this$profile","languages","skills","positions","educationalActivities","_birthdayAnniversary","_personalInterests","_professionalInterests","v","_profile","anniversaries","find","interests","Profile","renderSubSections","initPostRenderOperations","renderSkills","renderBirthday","renderLanguages","renderWorkExperience","renderEducation","renderProfessionalInterests","renderPersonalInterests","languageItems","language","proficiency","displayName","languageTitle","_step2","skillItems","_iterator2","skill","skillsTitle","_step3","positionItems","_iterator3","position","detail","description","getDisplayDateRange","_c","company","displayLocation","_e","_d","address","workExperienceTitle","_step4","_iterator4","educationalActivity","institution","program","_templateObject12","nothing","educationTitle","_step5","interestItems","_iterator5","_templateObject14","professionalInterests","_templateObject13","_step6","_iterator6","_templateObject16","personalInterests","_templateObject15","date","_templateObject17","Birthday","getDisplayDate","toLocaleString","day","month","event","startMonthYear","start","getFullYear","end","endMonthYear","city","setTimeout","querySelectorAll","forEach","section","handleTokenOverflow","tokenLists","_loop","tokenList","_Array$from","items","overflowItems","itemRect","getBoundingClientRect","tokenListRect","maxtop","height","top","i","Array","classList","add","overflowToken","document","createElement","tabIndex","innerText","revealOverflow","remove","addEventListener","appendChild","showMoreSectionButton","endOfCard","quickMessage","expandDetailsLabel","sendMessageLabel","emailButtonLabel","callButtonLabel","chatButtonLabel","closeCardLabel","videoButtonLabel","goBackLabel","registerMgtPersonCardComponent","registerFluentComponents","fluentCard","fluentTabs","fluentTab","fluentTabPanel","fluentButton","fluentTextField","registerComponent","MgtPersonCard","registerMgtSpinnerComponent","registerMgtPersonComponent","registerMgtFileListComponent","customElements","buildComponentName","isSending","goBack","_history","historyState","pop","_currentSection","firstTab","renderRoot","querySelector","click","_cardState","personImage","loadSections","handleEndOfCard","endOfCardEl","blur","imageCardEl","focus","closeCard","updateCurrentSection","isExpanded","sendQuickMessage","_assertThisInitialized","_chatInput","trim","_graph","body","clearInputData","emailUser","internalPersonDetails","callUser","phones","getPersonBusinessPhones","chatUser","arguments","undefined","users","videoCallUser","showExpandedDetails","root","animate","transformOrigin","duration","easing","fill","fireCustomEvent","sendQuickMessageOnEnter","handleGoBack","getImage","_userId","oldValue","newValue","ariaLabel","image","hasTemplate","renderTemplate","closeCardTemplate","Close","navigationTemplate","Back","personDetailsTemplate","personTemplate","renderPerson","contactIconsTemplate","renderContactIcons","expandedDetailsTemplate","renderExpandedDetails","renderExpandedDetailsButton","_windowHeight","innerHeight","documentElement","clientHeight","Math","min","_smallView","tabLocker","lockTabNavigation","small","personPresence","showPresence","threelines","isUser","userPerson","SmallEmail","SmallChat","video","Video","Call","ExpandDown","_isStateLoading","Providers","globalProvider","ProviderState","SignedOut","sectionNavTemplate","renderSectionNavigation","handleSectionScroll","currentSectionIndex","indexOf","additionalSectionTemplates","toLowerCase","classes","active","_templateObject18","renderIcon","additionalPanelTemplates","_templateObject19","cardTitle","asFullView","overviewClasses","overviewTab","_templateObject20","Overview","renderOverviewSection","compactTemplates","_templateObject21","asCompactView","additionalDetails","splice","_templateObject22","_templateObject23","renderMessagingSection","_templateObject25","_templateObject24","chatInput","_templateObject26","target","Confirmation","Send","inheritDetails","parentElement","parentPerson","provider","SignedIn","forComponent","getUserWithPhoto","personQuery","findPeople","getPersonImage","then","defaultPresence","activity","availability","getUserPresence","Boolean","contactSections","_this$_cardState","MgtFileList","profileSection","number","sectionName","panels","scrollTop","deltaY","scrollHeight","stopPropagation","scopes","_toConsumableArray","Set","getMgtPersonCardScopes","String"],"sourceRoot":""}