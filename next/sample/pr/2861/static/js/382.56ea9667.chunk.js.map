{"version":3,"file":"static/js/382.56ea9667.chunk.js","mappings":"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","sources":["../../../packages/mgt-components/dist/es6/components/mgt-file/src/components/mgt-file/mgt-file-css.ts","../../../packages/mgt-components/dist/es6/styles/src/styles/fluent-icons.ts","../../../packages/mgt-components/dist/es6/components/mgt-file/src/components/mgt-file/strings.ts","../../../packages/mgt-components/dist/es6/components/mgt-file/src/components/mgt-file/mgt-file.ts"],"sourcesContent":["// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\n\nimport { css, CSSResult } from 'lit';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles: CSSResult[] = [\n  css`\n:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host{font-size:var(--default-font-size);font-weight:var(--default-font-weight,400);border:var(--file-border,1px solid transparent);border-radius:var(--file-border-radius,4px);background-color:var(--file-background-color)}:host .item{display:flex;flex-flow:row nowrap;align-items:center;background-color:var(--file-background-color);padding:var(--file-padding,0);margin:var(--file-margin,0)}:host .item:hover{background-color:var(--file-background-color-hover,var(--neutral-fill-hover));border-radius:var(--file-border-radius,4px);cursor:pointer;--secondary-text-color:var(--secondary-text-hover-color)}:host .item:focus,:host .item:focus-visible{background-color:var(--file-background-color-focus,var(--neutral-fill-hover));border-radius:var(--file-border-radius,4px)}:host .item__file-type-icon{height:var(--file-type-icon-height,28px);display:flex;align-items:center;justify-content:center}:host .item__file-type-icon img{height:var(--file-type-icon-height,28px)}:host .item__details{padding-inline-start:var(--file-padding-inline-start,14px)}:host .item__details .line1{font-size:var(--default-font-size);font-weight:var(--file-line1-font-weight,var(--default-font-weight,400));text-transform:var(--file-line1-text-transform,initial);line-height:20px;color:var(--file-line1-color,var(--neutral-foreground-rest))}:host .item__details .line2{color:var(--file-line2-color,var(--secondary-text-color));font-size:var(--file-line2-font-size,var(--last-modified-font-size,12px));font-weight:var(--file-line2-font-weight,var(--default-font-weight,400));text-transform:var(--file-line2-text-transform,initial);line-height:16px}:host .item__details .line3{color:var(--file-line3-color,var(--secondary-text-color));font-size:var(--file-line3-font-size,var(--size-font-size,12px));font-weight:var(--file-line3-font-weight,var(--default-font-weight,400));text-transform:var(--file-line3-text-transform,initial);line-height:16px}[dir=rtl] .item{direction:rtl}[dir=rtl] .item__details{direction:rtl}\n`];","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nconst fileTypeMap: Record<string, string> = {\n  PowerPoint: 'pptx',\n  Word: 'docx',\n  Excel: 'xlsx',\n  Pdf: 'pdf',\n  OneNote: 'onetoc',\n  OneNotePage: 'one',\n  InfoPath: 'xsn',\n  Visio: 'vstx',\n  Publisher: 'pub',\n  Project: 'mpp',\n  Access: 'accdb',\n  Mail: 'email',\n  Csv: 'csv',\n  Archive: 'archive',\n  Xps: 'vector',\n  Audio: 'audio',\n  Video: 'video',\n  Image: 'photo',\n  Web: 'html',\n  Text: 'txt',\n  Xml: 'xml',\n  Story: 'genericfile',\n  ExternalContent: 'genericfile',\n  Folder: 'folder',\n  Spsite: 'spo',\n  Other: 'genericfile'\n};\n\nconst baseUri = 'https://spoprod-a.akamaihd.net/files/fabric-cdn-prod_20201008.001/assets/item-types';\n\n/**\n * Available icon sizes\n */\nexport type IconSize = 16 | 20 | 24 | 32 | 40 | 48 | 64 | 96;\n\n/**\n * Helper to provide fluent icon image urls\n *\n * @param type\n * @param size\n * @param extension\n * @returns\n */\nexport const getFileTypeIconUri = (type: string, size: IconSize, extension: 'png' | 'svg') => {\n  const fileType: string = fileTypeMap[type] || 'genericfile';\n  return `${baseUri}/${size.toString()}/${fileType}.${extension}`;\n};\n\n/**\n * Helper to provide fluent icon image urls with the correct size\n *\n * @param type\n * @param size\n * @param extension\n * @returns\n */\nexport const getFileTypeIconUriByExtension = (type: string, size: IconSize, extension: 'png' | 'svg') => {\n  const found = Object.keys(fileTypeMap).find(key => fileTypeMap[key] === type);\n  if (found) {\n    return `${baseUri}/${size.toString()}/${type}.${extension}`;\n  } else if (type === 'jpg' || type === 'png') {\n    type = 'photo';\n    return `${baseUri}/${size.toString()}/${type}.${extension}`;\n  } else {\n    return null;\n  }\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nexport const strings = {\n  modifiedSubtitle: 'Modified',\n  sizeSubtitle: 'Size'\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { DriveItem } from '@microsoft/microsoft-graph-types';\nimport { html, TemplateResult } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport { styles } from './mgt-file-css';\nimport { IGraph, MgtTemplatedComponent, Providers, ProviderState } from '@microsoft/mgt-element';\nimport {\n  getDriveItemById,\n  getDriveItemByPath,\n  getDriveItemByQuery,\n  getGroupDriveItemById,\n  getGroupDriveItemByPath,\n  getListDriveItemById,\n  getMyDriveItemById,\n  getMyDriveItemByPath,\n  getMyInsightsDriveItemById,\n  getSiteDriveItemById,\n  getSiteDriveItemByPath,\n  getUserDriveItemById,\n  getUserDriveItemByPath,\n  getUserInsightsDriveItemById\n} from '../../graph/graph.files';\nimport { formatBytes, getRelativeDisplayDate } from '../../utils/Utils';\nimport { OfficeGraphInsightString, ViewType } from '../../graph/types';\nimport { getFileTypeIconUriByExtension } from '../../styles/fluent-icons';\nimport { getSvg, SvgIcon } from '../../utils/SvgHelper';\nimport { strings } from './strings';\nimport { registerComponent } from '@microsoft/mgt-element';\n\nexport const registerMgtFileComponent = () => registerComponent('file', MgtFile);\n\n/**\n * The File component is used to represent an individual file/folder from OneDrive or SharePoint by displaying information such as the file/folder name, an icon indicating the file type, and other properties such as the author, last modified date, or other details selected by the developer.\n *\n * @export\n * @class MgtFile\n * @extends {MgtTemplatedComponent}\n *\n * @cssprop --file-type-icon-height - {Length} file type icon height. Default value is 28px.\n * @cssprop --file-border - {String} file item border style. Default value is \"1px solid transparent\".\n * @cssprop --file-border-radius - {String} the border radius of the file component. Default value is 4px.\n * @cssprop --file-box-shadow - {String} the box-shadow of the component. Default value is none.\n * @cssprop --file-background-color - {Color} the background-color of the component.\n * @cssprop --file-background-color-focus - {Color} the background-color of the component on focus.\n * @cssprop --file-background-color-hover - {Color} the background-color of the component on hover.\n * @cssprop --file-padding - {String} the padding around the file component. Default value is 0px.\n * @cssprop --file-padding-inline-start - {Length} the padding between file icon and file details. Default value is 14px.\n * @cssprop --file-margin - {String} the margin around the file component. Default value is 0px.\n * @cssprop --file-line1-font-size - {Length} the first line text font size. Default value is 12px.\n * @cssprop --file-line1-font-weight - {Length} the first line text font weight. Default value is 400.\n * @cssprop --file-line1-color - {Color} the first line text color.\n * @cssprop --file-line1-text-transform - {String} the first line text text transform. Default value is initial.\n * @cssprop --file-line2-font-size - {Length} the second line text font size. Default value is 12px.\n * @cssprop --file-line2-font-weight - {Length} the second line text font weight. Default value is 400.\n * @cssprop --file-line2-color - {Color} the second line text color.\n * @cssprop --file-line2-text-transform - {String} the second line text text transform. Default value is initial.\n * @cssprop --file-line3-font-size - {Length} the third line text font size. Default value is 12px.\n * @cssprop --file-line3-font-weight - {Length} the third line text font weight. Default value is 400.\n * @cssprop --file-line3-color - {Color} the third line text color.\n * @cssprop --file-line3-text-transform - {String} the third line text text transform. Default value is 400.\n */\nexport class MgtFile extends MgtTemplatedComponent {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n  protected get strings() {\n    return strings;\n  }\n\n  /**\n   * allows developer to provide query for a file\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'file-query'\n  })\n  public get fileQuery(): string {\n    return this._fileQuery;\n  }\n  public set fileQuery(value: string) {\n    if (value === this._fileQuery) {\n      return;\n    }\n\n    this._fileQuery = value;\n    void this.requestStateUpdate();\n  }\n\n  /**\n   * allows developer to provide site id for a file\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'site-id'\n  })\n  public get siteId(): string {\n    return this._siteId;\n  }\n  public set siteId(value: string) {\n    if (value === this._siteId) {\n      return;\n    }\n\n    this._siteId = value;\n    void this.requestStateUpdate();\n  }\n\n  /**\n   * allows developer to provide drive id for a file\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'drive-id'\n  })\n  public get driveId(): string {\n    return this._driveId;\n  }\n  public set driveId(value: string) {\n    if (value === this._driveId) {\n      return;\n    }\n\n    this._driveId = value;\n    void this.requestStateUpdate();\n  }\n\n  /**\n   * allows developer to provide group id for a file\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'group-id'\n  })\n  public get groupId(): string {\n    return this._groupId;\n  }\n  public set groupId(value: string) {\n    if (value === this._groupId) {\n      return;\n    }\n\n    this._groupId = value;\n    void this.requestStateUpdate();\n  }\n\n  /**\n   * allows developer to provide list id for a file\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'list-id'\n  })\n  public get listId(): string {\n    return this._listId;\n  }\n  public set listId(value: string) {\n    if (value === this._listId) {\n      return;\n    }\n\n    this._listId = value;\n    void this.requestStateUpdate();\n  }\n\n  /**\n   * allows developer to provide user id for a file\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'user-id'\n  })\n  public get userId(): string {\n    return this._userId;\n  }\n  public set userId(value: string) {\n    if (value === this._userId) {\n      return;\n    }\n\n    this._userId = value;\n    void this.requestStateUpdate();\n  }\n\n  /**\n   * allows developer to provide item id for a file\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'item-id'\n  })\n  public get itemId(): string {\n    return this._itemId;\n  }\n  public set itemId(value: string) {\n    if (value === this._itemId) {\n      return;\n    }\n\n    this._itemId = value;\n    void this.requestStateUpdate();\n  }\n\n  /**\n   * allows developer to provide item path for a file\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'item-path'\n  })\n  public get itemPath(): string {\n    return this._itemPath;\n  }\n  public set itemPath(value: string) {\n    if (value === this._itemPath) {\n      return;\n    }\n\n    this._itemPath = value;\n    void this.requestStateUpdate();\n  }\n\n  /**\n   * allows developer to provide insight type for a file\n   * can be trending, used, or shared\n   *\n   * @type {OfficeGraphInsightString}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'insight-type'\n  })\n  public get insightType(): OfficeGraphInsightString {\n    return this._insightType;\n  }\n  public set insightType(value: OfficeGraphInsightString) {\n    if (value === this._insightType) {\n      return;\n    }\n\n    this._insightType = value;\n    void this.requestStateUpdate();\n  }\n\n  /**\n   * allows developer to provide insight id for a file\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'insight-id'\n  })\n  public get insightId(): string {\n    return this._insightId;\n  }\n  public set insightId(value: string) {\n    if (value === this._insightId) {\n      return;\n    }\n\n    this._insightId = value;\n    void this.requestStateUpdate();\n  }\n\n  /**\n   * allows developer to provide DriveItem object\n   *\n   * @type {MicrosoftGraph.DriveItem}\n   * @memberof MgtFile\n   */\n  @property({\n    type: Object\n  })\n  public get fileDetails(): DriveItem {\n    return this._fileDetails;\n  }\n  public set fileDetails(value: DriveItem) {\n    if (value === this._fileDetails) {\n      return;\n    }\n\n    this._fileDetails = value;\n    void this.requestStateUpdate();\n  }\n\n  /**\n   * allows developer to provide file type icon url\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'file-icon'\n  })\n  public get fileIcon(): string {\n    return this._fileIcon;\n  }\n  public set fileIcon(value: string) {\n    if (value === this._fileIcon) {\n      return;\n    }\n\n    this._fileIcon = value;\n    void this.requestStateUpdate();\n  }\n\n  /**\n   * object containing Graph details on item\n   *\n   * @type {MicrosoftGraph.DriveItem}\n   * @memberof MgtFile\n   */\n  @property({ type: Object })\n  public get driveItem(): DriveItem {\n    return this._driveItem;\n  }\n  public set driveItem(value: DriveItem) {\n    if (value === this._driveItem) {\n      return;\n    }\n\n    this._driveItem = value;\n    void this.requestStateUpdate();\n  }\n\n  /**\n   * Sets the property of the file to use for the first line of text.\n   * Default is file name\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({ attribute: 'line1-property' }) public get line1Property(): string {\n    return this._line1Property;\n  }\n  public set line1Property(value: string) {\n    if (value === this._line1Property) {\n      return;\n    }\n\n    this._line1Property = value;\n    void this.requestStateUpdate();\n  }\n\n  /**\n   * Sets the property of the file to use for the second line of text.\n   * Default is last modified date time\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({ attribute: 'line2-property' }) public get line2Property(): string {\n    return this._line2Property;\n  }\n  public set line2Property(value: string) {\n    if (value === this._line2Property) {\n      return;\n    }\n\n    this._line2Property = value;\n    void this.requestStateUpdate();\n  }\n\n  /**\n   * Sets the property of the file to use for the second line of text.\n   * Default is file size\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({ attribute: 'line3-property' }) public get line3Property(): string {\n    return this._line3Property;\n  }\n  public set line3Property(value: string) {\n    if (value === this._line3Property) {\n      return;\n    }\n\n    this._line3Property = value;\n    void this.requestStateUpdate();\n  }\n\n  /**\n   * Sets what data to be rendered (file icon only, oneLine, twoLines threeLines).\n   * Default is 'threeLines'.\n   *\n   * @type {ViewType}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'view',\n    converter: value => {\n      if (!value || value.length === 0) {\n        return ViewType.threelines;\n      }\n\n      value = value.toLowerCase();\n\n      if (typeof ViewType[value] === 'undefined') {\n        return ViewType.threelines;\n      } else {\n        return ViewType[value] as ViewType;\n      }\n    }\n  })\n  public get view(): ViewType {\n    return this._view;\n  }\n  public set view(value: ViewType) {\n    if (value === this._view) {\n      return;\n    }\n\n    this._view = value;\n    void this.requestStateUpdate();\n  }\n\n  /**\n   * Get the scopes required for file\n   *\n   * @static\n   * @return {*}  {string[]}\n   * @memberof MgtFile\n   */\n  public static get requiredScopes(): string[] {\n    return [...new Set(['files.read', 'files.read.all', 'sites.read.all'])];\n  }\n\n  @state() private _driveItem: DriveItem;\n  @state() private _view: ViewType;\n  @state() private _line1Property: string;\n  @state() private _line2Property: string;\n  @state() private _line3Property: string;\n  @state() private _graph: IGraph;\n  @state() private _fileQuery: string;\n  @state() private _siteId: string;\n  @state() private _itemId: string;\n  @state() private _driveId: string;\n  @state() private _itemPath: string;\n  @state() private _listId: string;\n  @state() private _groupId: string;\n  @state() private _userId: string;\n  @state() private _insightType: OfficeGraphInsightString;\n  @state() private _insightId: string;\n  @state() private _fileDetails: DriveItem;\n  @state() private _fileIcon: string;\n  @state() private _getFromMyDrive = false;\n  @state() private _propertyList: string[];\n  @state() private _currentPropertyList: string;\n\n  constructor() {\n    super();\n    this._line1Property = 'name';\n    this._line2Property = 'lastModifiedDateTime';\n    this._line3Property = 'size';\n    this._view = ViewType.threelines;\n  }\n\n  public render() {\n    if (!this.driveItem && this.isLoadingState) {\n      return this.renderLoading();\n    }\n\n    if (!this.driveItem) {\n      return this.renderNoData();\n    }\n\n    const file = this.driveItem;\n    let fileTemplate: TemplateResult;\n\n    fileTemplate = this.renderTemplate('default', { file });\n    if (!fileTemplate) {\n      const fileDetailsTemplate: TemplateResult = this.renderDetails(file);\n      const fileTypeIconTemplate: TemplateResult = this.renderFileTypeIcon();\n\n      fileTemplate = html`\n        <div class=\"item\">\n          ${fileTypeIconTemplate} ${fileDetailsTemplate}\n        </div>`;\n    }\n\n    return fileTemplate;\n  }\n\n  /**\n   * Render the loading state\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtFile\n   */\n  protected renderLoading(): TemplateResult {\n    return this.renderTemplate('loading', null) || html``;\n  }\n\n  /**\n   * Render the state when no data is available\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtFile\n   */\n  protected renderNoData(): TemplateResult {\n    return this.renderTemplate('no-data', null) || html``;\n  }\n\n  /**\n   * Render the file type icon\n   *\n   * @protected\n   * @param {string} [iconSrc]\n   * @memberof MgtFile\n   */\n  protected renderFileTypeIcon(): TemplateResult {\n    if (!this.fileIcon && !this.driveItem.name) {\n      return html``;\n    }\n\n    let fileIconSrc;\n\n    if (this.fileIcon) {\n      fileIconSrc = this.fileIcon;\n    } else {\n      // get file type extension from file name\n      const re = /(?:\\.([^.]+))?$/;\n      const fileType =\n        this.driveItem.package === undefined && this.driveItem.folder === undefined\n          ? re.exec(this.driveItem.name)[1]\n            ? re.exec(this.driveItem.name)[1].toLowerCase()\n            : this.driveItem.size\n            ? 'null'\n            : 'folder'\n          : this.driveItem.package !== undefined\n          ? this.driveItem.package.type === 'oneNote'\n            ? 'onetoc'\n            : 'folder'\n          : 'folder';\n      fileIconSrc = getFileTypeIconUriByExtension(fileType, 48, 'svg');\n    }\n\n    return html`\n      <div class=\"item__file-type-icon\">\n        ${\n          fileIconSrc\n            ? html`\n              <img src=${fileIconSrc} alt=\"File icon\" />\n            `\n            : html`\n              ${getSvg(SvgIcon.File)}\n            `\n        }\n      </div>\n    `;\n  }\n\n  /**\n   * Render the file details\n   *\n   * @protected\n   * @param {MicrosoftGraph.DriveItem} [driveItem]\n   * @memberof MgtFile\n   */\n  protected renderDetails(driveItem: DriveItem): TemplateResult {\n    if (!driveItem || this.view === ViewType.image) {\n      return html``;\n    }\n\n    const details: TemplateResult[] = [];\n    let text = '';\n\n    if (this.view > ViewType.image) {\n      text = this.getTextFromProperty(driveItem, this.line1Property);\n      if (text) {\n        details.push(html`\n          <div class=\"line1\" aria-label=\"${text}\">${text}</div>\n        `);\n      }\n    }\n\n    if (this.view > ViewType.oneline) {\n      text = this.getTextFromProperty(driveItem, this.line2Property);\n      if (text) {\n        details.push(html`\n          <div class=\"line2\" aria-label=\"${text}\">${text}</div>\n        `);\n      }\n    }\n\n    if (this.view > ViewType.twolines) {\n      text = this.getTextFromProperty(driveItem, this.line3Property);\n      if (text) {\n        details.push(html`\n          <div class=\"line3\" aria-label=\"${text}\">${text}</div>\n        `);\n      }\n    }\n\n    return html`\n      <div class=\"item__details\">\n        ${details}\n      </div>\n    `;\n  }\n\n  /**\n   * load state into the component.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtFile\n   */\n  protected async loadState() {\n    if (this.fileDetails) {\n      this._driveItem = this.fileDetails;\n      return;\n    }\n\n    const provider = Providers.globalProvider;\n    if (!provider || provider.state === ProviderState.Loading) {\n      return;\n    }\n\n    if (provider.state === ProviderState.SignedOut) {\n      this._driveItem = null;\n      return;\n    }\n\n    this._graph = provider.graph.forComponent(this);\n    let driveItem: DriveItem;\n\n    // evaluate to true when only item-id or item-path is provided\n    this._getFromMyDrive = !this.driveId && !this.siteId && !this.groupId && !this.listId && !this.userId;\n\n    if (\n      // return null when a combination of provided properties are required\n      (this.driveId && !this.itemId && !this.itemPath) ||\n      (this.siteId && !this.itemId && !this.itemPath) ||\n      (this.groupId && !this.itemId && !this.itemPath) ||\n      (this.listId && !this.siteId && !this.itemId) ||\n      (this.insightType && !this.insightId) ||\n      (this.userId && !this.itemId && !this.itemPath && !this.insightType && !this.insightId)\n    ) {\n      driveItem = null;\n    } else if (this.fileQuery) {\n      driveItem = await getDriveItemByQuery(this._graph, this.fileQuery);\n    } else if (this.itemId && this._getFromMyDrive) {\n      driveItem = await getMyDriveItemById(this._graph, this.itemId);\n    } else if (this.itemPath && this._getFromMyDrive) {\n      driveItem = await getMyDriveItemByPath(this._graph, this.itemPath);\n    } else if (this.userId) {\n      if (this.itemId) {\n        driveItem = await getUserDriveItemById(this._graph, this.userId, this.itemId);\n      } else if (this.itemPath) {\n        driveItem = await getUserDriveItemByPath(this._graph, this.userId, this.itemPath);\n      } else if (this.insightType && this.insightId) {\n        driveItem = await getUserInsightsDriveItemById(this._graph, this.userId, this.insightType, this.insightId);\n      }\n    } else if (this.driveId) {\n      if (this.itemId) {\n        driveItem = await getDriveItemById(this._graph, this.driveId, this.itemId);\n      } else if (this.itemPath) {\n        driveItem = await getDriveItemByPath(this._graph, this.driveId, this.itemPath);\n      }\n    } else if (this.siteId && !this.listId) {\n      if (this.itemId) {\n        driveItem = await getSiteDriveItemById(this._graph, this.siteId, this.itemId);\n      } else if (this.itemPath) {\n        driveItem = await getSiteDriveItemByPath(this._graph, this.siteId, this.itemPath);\n      }\n    } else if (this.listId) {\n      driveItem = await getListDriveItemById(this._graph, this.siteId, this.listId, this.itemId);\n    } else if (this.groupId) {\n      if (this.itemId) {\n        driveItem = await getGroupDriveItemById(this._graph, this.groupId, this.itemId);\n      } else if (this.itemPath) {\n        driveItem = await getGroupDriveItemByPath(this._graph, this.groupId, this.itemPath);\n      }\n    } else if (this.insightType && !this.userId) {\n      driveItem = await getMyInsightsDriveItemById(this._graph, this.insightType, this.insightId);\n    }\n\n    this._driveItem = driveItem;\n  }\n\n  private getTextFromProperty(driveItem: DriveItem, properties: string): string {\n    if (!properties || properties.length === 0) {\n      return null;\n    }\n\n    this._propertyList = properties.trim().split(',');\n    let text = '';\n    let i = 0;\n\n    while (!text && i < this._propertyList.length) {\n      this._currentPropertyList = this._propertyList[i].trim();\n      switch (this._currentPropertyList) {\n        case 'size': {\n          // convert size to kb, mb, gb\n          let size = '0';\n          if (driveItem.size) {\n            size = formatBytes(driveItem.size);\n          }\n          text = `${this.strings.sizeSubtitle}: ${size}`;\n          break;\n        }\n        case 'lastModifiedDateTime': {\n          // convert date time\n          let relativeDateString: string;\n          let lastModifiedString: string;\n          if (driveItem.lastModifiedDateTime) {\n            const lastModifiedDateTime = new Date(driveItem.lastModifiedDateTime);\n            relativeDateString = getRelativeDisplayDate(lastModifiedDateTime);\n            lastModifiedString = `${this.strings.modifiedSubtitle} ${relativeDateString}`;\n          } else {\n            lastModifiedString = '';\n          }\n          text = lastModifiedString;\n          break;\n        }\n        default:\n          text = driveItem[this._currentPropertyList] as string;\n      }\n      i++;\n    }\n\n    return text;\n  }\n}\n"],"names":["styles","css","_templateObject","_taggedTemplateLiteral","fileTypeMap","PowerPoint","Word","Excel","Pdf","OneNote","OneNotePage","InfoPath","Visio","Publisher","Project","Access","Mail","Csv","Archive","Xps","Audio","Video","Image","Web","Text","Xml","Story","ExternalContent","Folder","Spsite","Other","baseUri","strings","modifiedSubtitle","sizeSubtitle","registerMgtFileComponent","registerComponent","MgtFile","_MgtTemplatedComponen","_inherits","_super","_createSuper","_this","_classCallCheck","call","_getFromMyDrive","_line1Property","_line2Property","_line3Property","_view","ViewType","threelines","_createClass","key","get","this","_fileQuery","set","value","requestStateUpdate","_siteId","_driveId","_groupId","_listId","_userId","_itemId","_itemPath","_insightType","_insightId","_fileDetails","_fileIcon","_driveItem","driveItem","isLoadingState","renderLoading","renderNoData","fileTemplate","file","renderTemplate","fileDetailsTemplate","renderDetails","fileTypeIconTemplate","renderFileTypeIcon","html","_templateObject2","_templateObject3","fileIcon","name","_templateObject4","fileIconSrc","type","size","extension","re","fileType","undefined","package","folder","exec","toLowerCase","Object","keys","find","concat","toString","_templateObject5","_templateObject6","_templateObject7","getSvg","SvgIcon","File","view","image","_templateObject8","details","text","getTextFromProperty","line1Property","push","_templateObject9","oneline","line2Property","_templateObject10","twolines","line3Property","_templateObject11","_templateObject12","fileDetails","_context","next","abrupt","provider","Providers","globalProvider","state","ProviderState","Loading","SignedOut","_graph","graph","forComponent","driveId","siteId","groupId","listId","userId","itemId","itemPath","insightType","insightId","fileQuery","getDriveItemByQuery","sent","getMyDriveItemById","getMyDriveItemByPath","getUserDriveItemById","getUserDriveItemByPath","getUserInsightsDriveItemById","getDriveItemById","getDriveItemByPath","getSiteDriveItemById","getSiteDriveItemByPath","getListDriveItemById","getGroupDriveItemById","getGroupDriveItemByPath","getMyInsightsDriveItemById","stop","_callee","properties","length","_propertyList","trim","split","i","_currentPropertyList","formatBytes","relativeDateString","lastModifiedString","lastModifiedDateTime","Date","getRelativeDisplayDate","_toConsumableArray","Set","MgtTemplatedComponent","__decorate","property","attribute","converter"],"sourceRoot":""}