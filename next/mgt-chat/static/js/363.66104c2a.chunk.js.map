{"version":3,"file":"static/js/363.66104c2a.chunk.js","mappings":"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","sources":["components/PageHeader.tsx","../../../packages/mgt-react/src/generated/search-results.ts","pages/Search/AllResults.tsx","pages/Search/PeopleResults.tsx","pages/Search/ExternalItemsResults.tsx","../../../packages/mgt-react/src/generated/file.ts","pages/Search/FilesResults.tsx","pages/SearchPage.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Divider, makeStyles } from '@fluentui/react-components';\n\nexport interface IPageHeaderProps {\n  title: string;\n  description: string;\n}\n\nconst useStyles = makeStyles({\n  divider: {\n    alignItems: 'self-start',\n    paddingTop: '20px',\n    marginBottom: '20px'\n  }\n});\n\nexport const PageHeader: React.FunctionComponent<IPageHeaderProps> = props => {\n  const styles = useStyles();\n  return (\n    <div>\n      <h1>{props.title}</h1>\n      <div>{props.description}</div>\n      <Divider className={styles.divider} />\n    </div>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/consistent-type-definitions */\nimport { DataChangedDetail } from '@microsoft/mgt-components/dist/es6/exports';\nimport { registerMgtSearchResultsComponent } from '@microsoft/mgt-components/dist/es6/components/components';\nimport { TemplateContext,ComponentMediaQuery,TemplateRenderedData } from '@microsoft/mgt-element';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraph from '@microsoft/microsoft-graph-types';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraphBeta from '@microsoft/microsoft-graph-types-beta';\nimport {wrapMgt} from '../Mgt';\n\nexport type SearchResultsProps = {\n\tqueryString?: string;\n\tqueryTemplate?: string;\n\tentityTypes?: string[];\n\tscopes?: string[];\n\tcontentSources?: string[];\n\tversion?: string;\n\tfrom?: number;\n\tsize?: number;\n\tpagingMax?: number;\n\tfetchThumbnail?: boolean;\n\tfields?: string[];\n\tenableTopResults?: boolean;\n\tcacheEnabled?: boolean;\n\tcacheInvalidationPeriod?: number;\n\tcurrentPage?: number;\n\ttemplateContext?: TemplateContext;\n\tmediaQuery?: ComponentMediaQuery;\n\tdataChange?: (e: CustomEvent<DataChangedDetail>) => void;\n\ttemplateRendered?: (e: CustomEvent<TemplateRenderedData>) => void;\n}\n\nexport const SearchResults = wrapMgt<SearchResultsProps>('search-results', registerMgtSearchResultsComponent);\n\n","import * as React from 'react';\nimport { IResultsProps } from './IResultsProps';\nimport { MgtTemplateProps, SearchResults } from '@microsoft/mgt-react';\n\nexport const AllResults: React.FunctionComponent<IResultsProps> = (props: IResultsProps) => {\n  return (\n    <>\n      {props.searchTerm && (\n        <>\n          {props.searchTerm !== '*' && (\n            <SearchResults\n              entityTypes={['bookmark']}\n              queryString={props.searchTerm}\n              version=\"beta\"\n              size={1}\n              scopes={['Bookmark.Read.All']}\n            >\n              <NoDataTemplate template=\"no-data\"></NoDataTemplate>\n            </SearchResults>\n          )}\n          <SearchResults\n            entityTypes={['driveItem', 'listItem', 'site']}\n            queryString={props.searchTerm}\n            scopes={['Files.Read.All', 'Sites.Read.All']}\n            fetchThumbnail={true}\n          ></SearchResults>\n        </>\n      )}\n    </>\n  );\n};\n\nconst NoDataTemplate = (props: MgtTemplateProps) => {\n  return <></>;\n};\n","import { SearchResults } from '@microsoft/mgt-react';\nimport * as React from 'react';\nimport { IResultsProps } from './IResultsProps';\n\nexport const PeopleResults: React.FunctionComponent<IResultsProps> = (props: IResultsProps) => {\n  return (\n    <>\n      <SearchResults entityTypes={['people']} size={20} queryString={props.searchTerm} version={'beta'}></SearchResults>\n    </>\n  );\n};\n","import { SearchResults } from '@microsoft/mgt-react';\nimport * as React from 'react';\nimport { IResultsProps } from './IResultsProps';\n\nexport const ExternalItemsResults: React.FunctionComponent<IResultsProps> = (props: IResultsProps) => {\n  return (\n    <>\n      {props.searchTerm && (\n        <SearchResults\n          entityTypes={['externalItem']}\n          contentSources={['/external/connections/contosoBlogPosts']}\n          queryString={props.searchTerm}\n          scopes={['ExternalItem.Read.All']}\n          version=\"beta\"\n        ></SearchResults>\n      )}\n    </>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/consistent-type-definitions */\nimport { OfficeGraphInsightString,ViewType } from '@microsoft/mgt-components/dist/es6/exports';\nimport { registerMgtFileComponent } from '@microsoft/mgt-components/dist/es6/components/components';\nimport { TemplateContext,ComponentMediaQuery,TemplateRenderedData } from '@microsoft/mgt-element';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraph from '@microsoft/microsoft-graph-types';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraphBeta from '@microsoft/microsoft-graph-types-beta';\nimport {wrapMgt} from '../Mgt';\n\nexport type FileProps = {\n\tfileQuery?: string;\n\tsiteId?: string;\n\tdriveId?: string;\n\tgroupId?: string;\n\tlistId?: string;\n\tuserId?: string;\n\titemId?: string;\n\titemPath?: string;\n\tinsightType?: OfficeGraphInsightString;\n\tinsightId?: string;\n\tfileDetails?: MicrosoftGraph.DriveItem;\n\tfileIcon?: string;\n\tdriveItem?: MicrosoftGraph.DriveItem;\n\tline1Property?: string;\n\tline2Property?: string;\n\tline3Property?: string;\n\tview?: ViewType;\n\ttemplateContext?: TemplateContext;\n\tmediaQuery?: ComponentMediaQuery;\n\ttemplateRendered?: (e: CustomEvent<TemplateRenderedData>) => void;\n}\n\nexport const File = wrapMgt<FileProps>('file', registerMgtFileComponent);\n\n","import { SearchResults } from '@microsoft/mgt-react';\nimport * as React from 'react';\nimport { IResultsProps } from './IResultsProps';\nimport { MgtTemplateProps, Person, File, PersonCardInteraction, ViewType } from '@microsoft/mgt-react';\nimport {\n  DataGrid,\n  DataGridBody,\n  DataGridCell,\n  DataGridHeader,\n  DataGridHeaderCell,\n  DataGridRow,\n  SkeletonItem,\n  TableCellLayout,\n  TableColumnDefinition,\n  createTableColumn,\n  makeStyles,\n  shorthands,\n  tokens\n} from '@fluentui/react-components';\nimport { SlideSearchRegular } from '@fluentui/react-icons';\n\nconst useStyles = makeStyles({\n  container: {\n    ...shorthands.gap('16px'),\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  },\n  card: {\n    width: '300px',\n    height: 'fit-content',\n    maxWidth: '100%'\n  },\n  caption: {\n    color: tokens.colorNeutralForeground3\n  },\n  noDataSearchTerm: {\n    fontWeight: tokens.fontWeightSemibold\n  },\n  emptyContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n    height: 'calc(100vh - 300px)'\n  },\n  fileContainer: {\n    display: 'flex'\n  },\n  fileTitle: {\n    paddingLeft: '10px',\n    alignSelf: 'center'\n  },\n  noDataMessage: {\n    paddingLeft: '10px'\n  },\n  noDataIcon: {\n    fontSize: '128px'\n  },\n  row: {\n    cursor: 'pointer'\n  }\n});\n\nconst pageSize = 30;\n\nexport const FilesResults: React.FunctionComponent<IResultsProps> = (props: IResultsProps) => {\n  return (\n    <>\n      {props.searchTerm && (\n        <SearchResults\n          entityTypes={['driveItem']}\n          queryString={props.searchTerm}\n          fetchThumbnail={true}\n          queryTemplate=\"({searchTerms}) ContentTypeId:0x0101*\"\n          version=\"beta\"\n          fields={['createdBy', 'lastModifiedDateTime', 'Title', 'DefaultEncodingURL']}\n          size={pageSize}\n          cacheEnabled={true}\n        >\n          <FileTemplate template=\"default\"></FileTemplate>\n          <FileTemplate template=\"loading\"></FileTemplate>\n          <FileNoDataTemplate template=\"no-data\"></FileNoDataTemplate>\n        </SearchResults>\n      )}\n    </>\n  );\n};\n\nconst getColumns = (shimmered: boolean, styles): TableColumnDefinition<any>[] => {\n  const columns: TableColumnDefinition<any>[] = [\n    createTableColumn<any>({\n      columnId: 'name',\n      renderHeaderCell: () => {\n        return 'Name';\n      },\n      renderCell: item => {\n        return (\n          <TableCellLayout>\n            {shimmered ? (\n              <SkeletonItem shape=\"rectangle\" style={{ width: '120px' }} />\n            ) : (\n              <div className={styles.fileContainer}>\n                <File fileDetails={item.resource} view={ViewType.image} />\n                <span className={styles.fileTitle}>{item.resource.listItem.fields.title}</span>\n              </div>\n            )}\n          </TableCellLayout>\n        );\n      }\n    }),\n    createTableColumn<any>({\n      columnId: 'modified',\n      renderHeaderCell: () => {\n        return 'Modified';\n      },\n      renderCell: item => {\n        return (\n          <TableCellLayout>\n            {shimmered ? (\n              <SkeletonItem shape=\"rectangle\" style={{ width: '120px' }} />\n            ) : (\n              getRelativeDisplayDate(new Date(item.resource.lastModifiedDateTime))\n            )}\n          </TableCellLayout>\n        );\n      }\n    }),\n    createTableColumn<any>({\n      columnId: 'owner',\n      renderHeaderCell: () => {\n        return 'Owner';\n      },\n      renderCell: item => {\n        return (\n          <TableCellLayout>\n            {shimmered ? (\n              <div\n                style={{\n                  display: 'grid',\n                  alignItems: 'center',\n                  position: 'relative',\n                  gridTemplateColumns: 'min-content 80%',\n                  gap: '10px'\n                }}\n              >\n                <SkeletonItem shape=\"circle\" size={32} />\n                <SkeletonItem style={{ width: '120px' }} />\n              </div>\n            ) : (\n              <Person\n                personQuery={item.resource.createdBy.user.email}\n                view={ViewType.oneline}\n                personCardInteraction={PersonCardInteraction.hover}\n              />\n            )}\n          </TableCellLayout>\n        );\n      }\n    })\n  ];\n\n  return columns;\n};\n\nconst FileTemplate = (props: MgtTemplateProps) => {\n  const styles = useStyles();\n  const [driveItems] = React.useState<any>(props.dataContext.value?.[0]?.hitsContainers[0]?.hits);\n\n  const onRowClick = (item: any) => {\n    const url = new URL(item.resource.listItem.fields.defaultEncodingURL);\n    url.searchParams.append('Web', '1');\n    window.open(url.toString(), '_blank');\n  };\n\n  return (\n    <div>\n      <DataGrid\n        columns={getColumns(props.template === 'loading', styles)}\n        items={props.template === 'loading' ? [...Array<number>(pageSize)] : driveItems}\n      >\n        <DataGridHeader>\n          <DataGridRow>\n            {({ renderHeaderCell }) => <DataGridHeaderCell>{renderHeaderCell()}</DataGridHeaderCell>}\n          </DataGridRow>\n        </DataGridHeader>\n        <DataGridBody<any>>\n          {({ item, rowId }) => (\n            <DataGridRow<any> key={rowId} className={styles.row} onClick={() => onRowClick(item)}>\n              {({ renderCell }) => <DataGridCell>{renderCell(item)}</DataGridCell>}\n            </DataGridRow>\n          )}\n        </DataGridBody>\n      </DataGrid>\n    </div>\n  );\n};\n\nconst FileNoDataTemplate = (props: MgtTemplateProps) => {\n  const styles = useStyles();\n  const [searchTerms] = React.useState<string[]>(props.dataContext.value[0]?.searchTerms);\n\n  return (\n    <div className={styles.emptyContainer}>\n      <div>\n        <SlideSearchRegular className={styles.noDataIcon} />\n      </div>\n      <div className={styles.noDataMessage}>\n        We couldn't find any results for <span className={styles.noDataSearchTerm}>{searchTerms.join(' ')}</span>\n      </div>\n    </div>\n  );\n};\n\nconst getRelativeDisplayDate = (date: Date): string => {\n  const now = new Date();\n\n  // Today -> 5:23 PM\n  const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n  if (date >= today) {\n    return date.toLocaleString('default', {\n      hour: 'numeric',\n      minute: 'numeric'\n    });\n  }\n\n  // This week -> Sun 3:04 PM\n  const sunday = new Date(today);\n  sunday.setDate(now.getDate() - now.getDay());\n  if (date >= sunday) {\n    return date.toLocaleString('default', {\n      hour: 'numeric',\n      minute: 'numeric',\n      weekday: 'short'\n    });\n  }\n\n  // Last two week -> Sun 8/2\n  const lastTwoWeeks = new Date(sunday);\n  lastTwoWeeks.setDate(sunday.getDate() - 7);\n  if (date >= lastTwoWeeks) {\n    return date.toLocaleString('default', {\n      day: 'numeric',\n      month: 'numeric',\n      weekday: 'short'\n    });\n  }\n\n  // More than two weeks ago -> 8/1/2020\n  return date.toLocaleString('default', {\n    day: 'numeric',\n    month: 'numeric',\n    year: 'numeric'\n  });\n};\n","import * as React from 'react';\nimport { PageHeader } from '../components/PageHeader';\nimport { AllResults, PeopleResults } from './Search';\nimport {\n  SelectTabData,\n  SelectTabEvent,\n  Tab,\n  TabList,\n  TabValue,\n  makeStyles,\n  shorthands\n} from '@fluentui/react-components';\nimport { useAppContext } from '../AppContext';\nimport { ExternalItemsResults } from './Search/ExternalItemsResults';\nimport { FilesResults } from './Search/FilesResults';\n\nconst useStyles = makeStyles({\n  panels: {\n    ...shorthands.padding('10px')\n  },\n  container: {\n    maxWidth: '1028px',\n    width: '100%'\n  }\n});\n\nconst SearchPage: React.FunctionComponent = () => {\n  const styles = useStyles();\n  const appContext = useAppContext();\n  const [query] = React.useState(new URLSearchParams(window.location.search).get('q'));\n\n  const [selectedTab, setSelectedTab] = React.useState<TabValue>('allResults');\n\n  const onTabSelect = (event: SelectTabEvent, data: SelectTabData) => {\n    setSelectedTab(data.value);\n  };\n\n  return (\n    <>\n      <PageHeader\n        title={'Search'}\n        description={'Use this Search Center to test Microsot Graph Toolkit search components capabilities'}\n      ></PageHeader>\n\n      <div className={styles.container}>\n        <TabList selectedValue={selectedTab} onTabSelect={onTabSelect}>\n          <Tab value=\"allResults\">All Results</Tab>\n          <Tab value=\"driveItems\">Files</Tab>\n          <Tab value=\"externalItems\">External Items</Tab>\n          <Tab value=\"people\">People</Tab>\n        </TabList>\n        <div className={styles.panels}>\n          {selectedTab === 'allResults' && <AllResults searchTerm={query ?? appContext.state.searchTerm}></AllResults>}\n          {selectedTab === 'driveItems' && (\n            <FilesResults searchTerm={query ?? appContext.state.searchTerm}></FilesResults>\n          )}\n          {selectedTab === 'externalItems' && (\n            <ExternalItemsResults searchTerm={query ?? appContext.state.searchTerm}></ExternalItemsResults>\n          )}\n          {selectedTab === 'people' && (\n            <PeopleResults searchTerm={query ?? appContext.state.searchTerm}></PeopleResults>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default SearchPage;\n"],"names":["useStyles","makeStyles","divider","alignItems","paddingTop","marginBottom","PageHeader","props","styles","_jsxs","children","_jsx","title","description","Divider","className","SearchResults","wrapMgt","registerMgtSearchResultsComponent","AllResults","_Fragment","searchTerm","entityTypes","queryString","version","size","scopes","NoDataTemplate","template","fetchThumbnail","PeopleResults","ExternalItemsResults","contentSources","File","registerMgtFileComponent","container","_objectSpread","shorthands","gap","display","flexDirection","flexWrap","card","width","height","maxWidth","caption","color","tokens","colorNeutralForeground3","noDataSearchTerm","fontWeight","fontWeightSemibold","emptyContainer","justifyContent","fileContainer","fileTitle","paddingLeft","alignSelf","noDataMessage","noDataIcon","fontSize","row","cursor","FilesResults","queryTemplate","fields","cacheEnabled","FileTemplate","FileNoDataTemplate","getColumns","shimmered","createTableColumn","columnId","renderHeaderCell","renderCell","item","TableCellLayout","SkeletonItem","shape","style","fileDetails","resource","view","ViewType","image","listItem","getRelativeDisplayDate","Date","lastModifiedDateTime","position","gridTemplateColumns","Person","personQuery","createdBy","user","email","oneline","personCardInteraction","PersonCardInteraction","hover","_props$dataContext$va","_props$dataContext$va2","_props$dataContext$va3","_React$useState","React","dataContext","value","hitsContainers","hits","driveItems","_slicedToArray","DataGrid","columns","items","_toConsumableArray","Array","DataGridHeader","DataGridRow","_ref","DataGridHeaderCell","DataGridBody","_ref2","rowId","onClick","url","URL","defaultEncodingURL","searchParams","append","window","open","toString","onRowClick","_ref3","DataGridCell","_props$dataContext$va4","_React$useState3","searchTerms","SlideSearchRegular","join","date","now","today","getFullYear","getMonth","getDate","toLocaleString","hour","minute","sunday","setDate","getDay","weekday","lastTwoWeeks","day","month","year","panels","padding","appContext","useAppContext","URLSearchParams","location","search","get","query","_React$useState4","selectedTab","setSelectedTab","TabList","selectedValue","onTabSelect","event","data","Tab","state"],"sourceRoot":""}